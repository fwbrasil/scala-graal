begin_compilation
  name " HotSpotCompilation-5456[java.lang.AbstractStringBuilder.append(int)]"
  method "HotSpotCompilation-5456[java.lang.AbstractStringBuilder.append(int)]"
  date 1526687583299
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid a540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a542 v554 v572 v564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/AbstractStringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?71 ?55 ?178 v962 v38 ?31 ?219 v247 v963 j644 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 v8 i12 ?71 v45 ?55 ?219 ?31 i102 ?42 i945 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 1]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v411 #falseSuccessor: v409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67091
stableDimension: 0
stamp: i32 [-67091] ⇊00000000fffef9ed ⇈00000000fffef9ed
stampKind: i32
value: int[-67091|0xfffffffffffef9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i946 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i946 v339 v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 35]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: a947 
=== Usages ===
i28 i236 
=== Predecessor ===
v409 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a947 v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a947 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
=== Succesors ===
next: v11 
=== Usages ===
v295 a294 v964 v974 a1005 
=== Predecessor ===
i946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a947 
=== Succesors ===
=== Usages ===
i949 i951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
value: a947 
=== Succesors ===
=== Usages ===
v425 v416 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a947  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i475 v933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@239698761
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@239698761]
=== Inputs ===
=== Succesors ===
=== Usages ===
a542 a542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 i185 i204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 i580 i53 i67 v196 v75 i151 v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v965 v961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 v284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 i41 i58 a604 v200 i103 v167 v187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i7 
=== Succesors ===
=== Usages ===
v11 v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
stamp: void
trueSuccessorProbability: 0.01581399293628727
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
a947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v415 #falseSuccessor: v413  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71691
stableDimension: 0
stamp: i32 [-71691] ⇊00000000fffee7f5 ⇈00000000fffee7f5
stampKind: i32
value: int[-71691|0xfffffffffffee7f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 671
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$171/333421669@94108b0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 20]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v61 ?59 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v57 
values: i7 i67 
=== Succesors ===
=== Usages ===
?59 v961 i204 i67 v264 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v57 values: i7 i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.536552945143885
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v56 
=== Succesors ===
next: v421 
=== Usages ===
i58 v63 v68 v420 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v56 #next: v421  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?71 
values: i12 i58 
=== Succesors ===
=== Usages ===
v403 v418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?71 values: i12 i58  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i263 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i58 y: i263  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v417 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i948 
=== Usages ===
i948 
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i58 
=== Succesors ===
=== Usages ===
i948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v417 
address: v961 
=== Succesors ===
next: v66 
=== Usages ===
v61 
=== Predecessor ===
v417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v417 address: v961 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i12 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i948 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
trueSuccessorProbability: 0.605764191946218
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i948 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582660942104327422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?59 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: i32
=== Inputs ===
x: i58 
y: i16 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v57 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v57 
=== Succesors ===
next: i949 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v57 #next: i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i949 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: v78 
=== Usages ===
i74 i254 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 25]
stamp: i32
=== Inputs ===
x: i58 
y: i125 
=== Succesors ===
=== Usages ===
i233 i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
stamp: i32
=== Inputs ===
x: i204 
y: i946 
=== Succesors ===
=== Usages ===
i221 i222 i74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i946  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i28 
y: i949 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i28 y: i949  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i16 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i74 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9516592072936898
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
i949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v76 #falseSuccessor: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B74" 
    xhandlers
    flags 
    probability 4579829086309151151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a294 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a947 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a947  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4560190131061579018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v57 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v57 #next: v418  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 265
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v424 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75787
stableDimension: 0
stamp: i32 [-75787] ⇊00000000fffed7f5 ⇈00000000fffed7f5
stampKind: i32
value: int[-75787|0xfffffffffffed7f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i541 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-75787 - -67091] ⇊00000000fffec1e5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v537 
values: i539 i545 i548 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i539 i545 i548  <|@  <|@
f <@~|@floating>@ <|@
tid a542 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v537 
values: a540 a546 a546 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: a540 a546 a546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v544 v547 
=== Succesors ===
next: v543 
=== Usages ===
i541 a542 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v544 v547 #next: v543  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 667
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i541 
speculation: a542 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i541 speculation: a542  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B101" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v40 
values: i7 i53 
=== Succesors ===
=== Usages ===
?42 v965 i53 v284 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v40 values: i7 i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.536552945143885
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v39 
=== Succesors ===
next: v430 
=== Usages ===
i41 v47 v52 v429 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v39 #next: v430  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?55 
values: i2 i41 
=== Succesors ===
=== Usages ===
v402 v427 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?55 values: i2 i41  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i41 
y: i263 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i41 y: i263  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v284 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v284 #trueSuccessor: v426 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i950 
=== Usages ===
i950 
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i950  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i41 
=== Succesors ===
=== Usages ===
i950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v426 
address: v965 
=== Succesors ===
next: v50 
=== Usages ===
v45 
=== Predecessor ===
v426 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v426 address: v965 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i950 
y: i2 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i950 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: i32
=== Inputs ===
x: i41 
y: i16 
=== Succesors ===
=== Usages ===
i233 i236 i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
trueSuccessorProbability: 0.605764191946218
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
i950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609489405307958459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?42 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?42 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607039979014627203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: i951 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: i951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: v243 
=== Usages ===
i239 i254 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
stamp: i32
=== Inputs ===
x: i53 
y: i946 
=== Succesors ===
=== Usages ===
i239 i222 i221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i946  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i236 
y: i951 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i236 y: i951  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i16 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i239 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9516592072936898
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v241 #falseSuccessor: v242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606611449514728016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid a1005 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a947 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a947  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587017293034181421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v217 
values: i28 i236 
=== Succesors ===
=== Usages ===
i186 i222 i384 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i28 i236  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v217 
values: i949 i951 
=== Succesors ===
=== Usages ===
i516 i184 v494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i949 i951  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v217 
values: i204 i53 
=== Succesors ===
=== Usages ===
?219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i204 i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 
=== Succesors ===
next: v434 
=== Usages ===
i221 i254 i233 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 #next: v434  <|@  <|@
tid ?219 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - i233 
=== Succesors ===
=== Usages ===
v572 a604 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - - i233  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i254 
y: i16 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i254 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i184 
y: i125 
=== Succesors ===
=== Usages ===
i186 i384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i184 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i185 
y: i221 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i185 y: i221  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i186 
y: i7 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i186 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i384 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v187 
trueValue: i221 
falseValue: i185 
=== Succesors ===
=== Usages ===
j655 i199 v196 v589 v494 i516 a604 v631 i580 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v187 trueValue: i221 falseValue: i185  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i384 
y: i16 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i384 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v433 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76819
stableDimension: 0
stamp: i32 [-76819] ⇊00000000fffed3ed ⇈00000000fffed3ed
stampKind: i32
value: int[-76819|0xfffffffffffed3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B28" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i198 
y: i384 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i198 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i199 
y: i7 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i199 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v437 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -77075
stableDimension: 0
stamp: i32 [-77075] ⇊00000000fffed2ed ⇈00000000fffed2ed
stampKind: i32
value: int[-77075|0xfffffffffffed2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i570 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-77075 - -76819] ⇊00000000fffed2ed ⇈00000000fffed3ed
valueDescription: i32
=== Inputs ===
merge: v567 
values: i569 i574 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v567 values: i569 i574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v568 v573 
=== Succesors ===
next: v572 
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v568 v573 #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?219 
actionAndReason: i570 
speculation: a540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?219 actionAndReason: i570 speculation: a540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j583 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j583 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j628 
=== Usages ===
v976 v977 
=== Predecessor ===
v435 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j628  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j583 
index: - 
=== Succesors ===
=== Usages ===
j628 v630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j583 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: j629 
=== Usages ===
j587 v978 v979 a603 v984 v980 v981 v982 v983 
=== Predecessor ===
j583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: j629  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j583 
index: - 
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j583 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
=== Succesors ===
next: v592 
=== Usages ===
v593 
=== Predecessor ===
j628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid i588 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i384 
y: i588 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i384 y: i588  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 v666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
j629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v591 #falseSuccessor: v590  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586430799225139703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i384 
y: i16 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i384 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i612 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i580 
y: i611 
=== Succesors ===
=== Usages ===
i582 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i611  <|@  <|@
f <@~|@floating>@ <|@
tid i581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i612 
y: i581 
=== Succesors ===
=== Usages ===
j586 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i612 y: i581  <|@  <|@
f <@~|@floating>@ <|@
tid j586 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i582 
=== Succesors ===
=== Usages ===
j587 v980 v981 v982 v983 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i582  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i64
=== Inputs ===
x: j586 
y: j628 
=== Succesors ===
=== Usages ===
v593 v630 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j586 y: j628  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j629 
y: j587 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j629 y: j587  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v597 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v598 #falseSuccessor: v597  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4556661195726562914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586368099443246250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
value: j587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v976 value: j587 stateAfter: - lastLocationAccess: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v980 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v980 #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v981 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v981 #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v982 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v982 #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v983 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v983 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: i384 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: i384 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: j579 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: j579 stateAfter: - lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: v654 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: v654 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j628 
=== Succesors ===
next: v605 
=== Usages ===
a608 
=== Predecessor ===
v602 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j628 #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
a603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4572223336099767628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
v590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4572724934354915250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v594 v596 
=== Succesors ===
next: a604 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v594 v596 #next: a604  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a604 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?219 
arguments: v578 i384 i7 
=== Succesors ===
next: v607 
=== Usages ===
a608 
=== Predecessor ===
v595 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?219 arguments: v578 i384 i7 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
a604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v606 
values: a603 a604 
=== Succesors ===
=== Usages ===
v986 a523 v975 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: a603 a604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v605 v607 
=== Succesors ===
next: v796 
=== Usages ===
a608 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v605 v607 #next: v796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v669 
=== Usages ===
j797 j799 
=== Predecessor ===
v606 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i384 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v494 
trueValue: i254 
falseValue: i384 
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v494 trueValue: i254 falseValue: i384  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
j861 v986 j660 v666 v793 j843 j849 j853 j857 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j579 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j656 y: j579  <|@  <|@
f <@~|@floating>@ <|@
tid j860 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j861 j912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j879 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j857 j909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j825 j885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j853 j906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j634 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j891 j833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j848 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j849 j903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j897 j841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j842 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j843 j898 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j886 v899 j826 j834 v844 j892 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v667 #falseSuccessor: v668  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B53" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v667 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a608 
index: - 
=== Succesors ===
=== Usages ===
j799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a608 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v796 
address: v975 
=== Succesors ===
=== Usages ===
v987 v989 v991 v993 v995 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v796 address: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a947 
=== Succesors ===
=== Usages ===
j797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a947  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v796 
address: v974 
=== Succesors ===
=== Usages ===
v988 v990 v992 v994 v996 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v796 address: v974  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j656 
y: j842 
=== Succesors ===
=== Usages ===
v844 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j842  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j843 
y: j615 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j843 y: j615  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v670 #falseSuccessor: v671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v682  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B100" 
    successors "B40" "B100" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v674 
values: j615 j841 
=== Succesors ===
=== Usages ===
v996 j841 v995 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v674 values: j615 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v673 
=== Succesors ===
next: v952 
=== Usages ===
v952 v678 v679 j834 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v673 #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j834 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v674 
address: v996 
=== Succesors ===
next: v930 
=== Usages ===
v930 
=== Predecessor ===
v674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v674 address: v996 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j834 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
value: v952 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v995 value: v952 stateAfter: - lastLocationAccess: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j834 
y: j269 
=== Succesors ===
=== Usages ===
j826 j834 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j834 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j843 
y: j841 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j843 y: j841  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v678 #falseSuccessor: v680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v674 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v674 #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v683 
values: j615 j841 
=== Succesors ===
=== Usages ===
v994 j833 j817 v850 v993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v683 values: j615 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v682 v684 
=== Succesors ===
next: v706 
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v682 v684 #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j656 
y: j848 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j848  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j849 
y: j826 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j849 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v704 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v705 #falseSuccessor: v704  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
v953 
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j826 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v704 
address: v994 
=== Succesors ===
next: v928 
=== Usages ===
v928 
=== Predecessor ===
v704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v704 address: v994 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j826 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: v953 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: v953 stateAfter: - lastLocationAccess: - #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j826 
y: j634 
=== Succesors ===
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j826 y: j634  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j817 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v694 
values: j833 j826 
=== Succesors ===
=== Usages ===
v992 j825 j809 v854 v991 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v694 values: j833 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v693 v709 
=== Succesors ===
next: v712 
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v693 v709 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j656 
y: j852 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j853 
y: j817 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j853 y: j817  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v854 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v854 #trueSuccessor: v711 #falseSuccessor: v710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
v954 
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j817 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v710 
address: v992 
=== Succesors ===
next: v926 
=== Usages ===
v926 
=== Predecessor ===
v710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v710 address: v992 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j817 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: v954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: v954 stateAfter: - lastLocationAccess: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j817 
y: j824 
=== Succesors ===
=== Usages ===
j809 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j817 y: j824  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v698 
values: j825 j817 
=== Succesors ===
=== Usages ===
v990 j816 j800 v858 v989 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v698 values: j825 j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v715 
=== Succesors ===
next: v718 
=== Usages ===
j809 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v715 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j656 
y: j856 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j856  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j857 
y: j809 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j857 y: j809  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v717 #falseSuccessor: v716  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
v955 
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j809 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v716 
address: v990 
=== Succesors ===
next: v924 
=== Usages ===
v924 
=== Predecessor ===
v716 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v716 address: v990 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j809 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: v955 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: v955 stateAfter: - lastLocationAccess: - #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j809 
y: j802 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j809 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v701 
values: j816 j809 
=== Succesors ===
=== Usages ===
v988 v862 v987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v701 values: j816 j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v721 
=== Succesors ===
next: v724 
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v721 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid j861 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j656 
y: j860 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j860  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j861 
y: j800 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j861 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v862 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v862 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i956 
=== Usages ===
i956 
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i956  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j800 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v722 
address: v988 
=== Succesors ===
next: v922 
=== Usages ===
v922 
=== Predecessor ===
v722 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v722 address: v988 #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j800 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
value: i956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
i956 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v987 value: i956 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B35" "B52" "B51" 
    successors "B54" "B72" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v703 v727 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v703 v727 #next: v865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v734 
=== Usages ===
j867 
=== Predecessor ===
v687 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i384 
=== Succesors ===
=== Usages ===
j660 v793 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j655 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j656 y: j655  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v793 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v793 #trueSuccessor: v733 #falseSuccessor: v732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a608 
index: j656 
=== Succesors ===
=== Usages ===
j867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a608 index: j656  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v865 
address: v986 
=== Succesors ===
=== Usages ===
v997 v998 v999 v1000 v1001 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v865 address: v986  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j655 
y: j656 
=== Succesors ===
=== Usages ===
j912 j898 j903 j906 j909 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j655 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid j898 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j660 
y: j842 
=== Succesors ===
=== Usages ===
v899 v901 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j842  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j898 
y: j615 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j898 y: j615  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v899 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v899 #trueSuccessor: v735 #falseSuccessor: v736  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
v735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B71" 
    successors "B58" "B71" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j892 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v739 
values: j615 j897 
=== Succesors ===
=== Usages ===
v1001 j897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v739 values: j615 j897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v738 
=== Succesors ===
next: v940 
=== Usages ===
j892 v742 v743 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v738 #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j892 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: v941 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: v941 stateAfter: - lastLocationAccess: - #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid j897 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j892 
y: j269 
=== Succesors ===
=== Usages ===
j886 j892 v901 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j892 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j898 
y: j897 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j898 y: j897  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v742 #falseSuccessor: v744  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v739 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v739 #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j886 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v747 
values: j615 j897 
=== Succesors ===
=== Usages ===
v1000 j891 j880 v904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v747 values: j615 j897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v746 v748 
=== Succesors ===
next: v769 
=== Usages ===
j886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v746 v748 #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid j903 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j660 
y: j848 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j848  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j903 
y: j886 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j903 y: j886  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v904 
=== Succesors ===
trueSuccessor: v768 
falseSuccessor: v767 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v904 #trueSuccessor: v768 #falseSuccessor: v767  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j886 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j886  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: v944 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: v944 stateAfter: - lastLocationAccess: - #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid j891 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j886 
y: j634 
=== Succesors ===
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j886 y: j634  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v758 
values: j891 j886 
=== Succesors ===
=== Usages ===
v999 j885 j874 v907 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v758 values: j891 j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v757 v772 
=== Succesors ===
next: v775 
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v757 v772 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j660 
y: j852 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j906 
y: j880 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j906 y: j880  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v907 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v773 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v907 #trueSuccessor: v774 #falseSuccessor: v773  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j880 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: v943 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: v943 stateAfter: - lastLocationAccess: - #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid j885 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j880 
y: j824 
=== Succesors ===
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j880 y: j824  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j874 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v761 
values: j885 j880 
=== Succesors ===
=== Usages ===
v998 j879 j868 v910 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v761 values: j885 j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v778 
=== Succesors ===
next: v781 
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v778 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j660 
y: j856 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j856  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j909 
y: j874 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j909 y: j874  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v780 #falseSuccessor: v779  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j874 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j874  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: v942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: v942 stateAfter: - lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid j879 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j874 
y: j802 
=== Succesors ===
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j874 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v764 
values: j879 j874 
=== Succesors ===
=== Usages ===
v997 v913 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v764 values: j879 j874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v763 v784 
=== Succesors ===
next: v787 
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v763 v784 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid j912 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j660 
y: j860 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j860  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j912 
y: j868 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j912 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v913 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v785 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v913 #trueSuccessor: v786 #falseSuccessor: v785  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j868 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
value: i473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v997 value: i473 stateAfter: - lastLocationAccess: - #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v739 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B73" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B70" "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v766 v790 
=== Succesors ===
next: a523 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v766 v790 #next: a523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a608 
=== Succesors ===
next: v303 
=== Usages ===
a211 a302 
=== Predecessor ===
v751 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a608 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: Compress
stamp: n! -
=== Inputs ===
value: a523 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: a302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j644 
=== Usages ===
=== Predecessor ===
a523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: a302 stateAfter: - lastLocationAccess: - #next: j644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v650 
=== Usages ===
j646 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j644 
y: i645 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j644 y: i645  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j646 
index: j649 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j646 index: j649  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: i651 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
j644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: i651 stateAfter: - lastLocationAccess: - #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B10" "B73" "B21" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v90 
values: a294 a523 a1005 
=== Succesors ===
=== Usages ===
?138 v1004 ?144 ?109 ?158 v967 v970 v971 v973 v968 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v90 values: a294 a523 a1005  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v90 
values: i28 i221 i236 
=== Succesors ===
=== Usages ===
?31 ?178 v328 v339 i108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v90 values: i28 i221 i236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v92 v244 
=== Succesors ===
next: v1004 
=== Usages ===
a211 i222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v92 v244 #next: v1004  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i222 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a211 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a211 #next: v96  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i222 
=== Succesors ===
=== Usages ===
?158 ?109 ?138 ?144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.02370877285335382
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4582490809926041600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$171/333421669@94108b0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 20]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606968869158841856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v100 
values: i2 i945 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: i2 i945  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v100 
values: i7 i97 
=== Succesors ===
=== Usages ===
v167 ?109 ?144 ?158 ?138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: i7 i97  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v100 
values: i473 i474 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: i473 i474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v99 v101 
=== Succesors ===
next: i957 
=== Usages ===
i102 i103 i475 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v99 v101 #next: i957  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
i957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
=== Succesors ===
next: v105 
=== Usages ===
v354 v367 v319 v330 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v970 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i175 i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
i957 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B95" 
    successors "B79" "B92" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607283772895746248
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v106 
values: i102 i207 
=== Succesors ===
=== Usages ===
?109 v111 i142 i213 i128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i102 i207  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v106 
values: i222 i175 
=== Succesors ===
=== Usages ===
?109 i143 i130 i175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i222 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.022505130143644
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v105 
=== Succesors ===
next: v117 
=== Usages ===
i107 i108 v112 v139 v470 v460 v465 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v105 #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i110 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.9779902031978241
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v112 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B88" 
    successors "B81" "B90" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v141 
values: i107 i148 
=== Succesors ===
=== Usages ===
?144 i146 i153 ?158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v141 values: i107 i148  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v141 
values: i108 i154 
=== Succesors ===
=== Usages ===
?144 i154 i408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v141 values: i108 i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2956111519798075
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v140 
=== Succesors ===
next: v447 
=== Usages ===
i142 i143 v161 v164 v451 v446 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v140 #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$146/798809698@44222a75
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i142 
y: i145 
=== Succesors ===
=== Usages ===
i148 v160 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i142 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i146 
y: i147 
=== Succesors ===
=== Usages ===
i142 i150 i151 ?158 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i146 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i148 
y: i149 
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i148 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i148 
y: i16 
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i148 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i150 
y: i151 
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i151  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i142 
y: i152 
=== Succesors ===
=== Usages ===
v966 ?158 v305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i142 y: i152  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i153 
y: i304 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i153 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v446 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v443 #falseSuccessor: v446  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B89" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
i958 
=== Predecessor ===
v447 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i143 
y: i129 
=== Succesors ===
=== Usages ===
i143 v967 ?158 v319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i143 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i957 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i154 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v448 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B88" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: i958 
=== Usages ===
v327 
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i958  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a155 
index: i153 
=== Succesors ===
=== Usages ===
i958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a155 index: i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v443 
address: v966 
=== Succesors ===
next: v327 
=== Usages ===
v327 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v443 address: v966 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i154 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v448 
address: v967 
value: i958 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
i958 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v448 address: v967 value: i958 stateAfter: - lastLocationAccess: - #next: v166  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i142 - a211 i148 i153 i154 i103 
=== Succesors ===
=== Usages ===
v405 v454 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i142 - a211 i148 i153 i154 i103  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
x: i146 
y: i159 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i146 y: i159  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.43561384476528986
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v161 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v141 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v141 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i7 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i103 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.9762910671381908
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606968867717613816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: i222 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:677) [bci: 61]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i143 
y: i174 
=== Succesors ===
=== Usages ===
v968 v330 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i143 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i408 
y: i957 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i408 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v453 #falseSuccessor: v455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
v338 
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i408 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v453 
address: v968 
value: i475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v453 address: v968 value: i475 stateAfter: - lastLocationAccess: - #next: v339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: i222 stateAfter: - lastLocationAccess: - #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:677) [bci: 61]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 331
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?158 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608513733073920232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?158 
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?158 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
loopBegin: v141 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v141 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v141 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81947
stableDimension: 0
stamp: i32 [-81947] ⇊00000000fffebfe5 ⇈00000000fffebfe5
stampKind: i32
value: int[-81947|0xfffffffffffebfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v141 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v141 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78363
stableDimension: 0
stamp: i32 [-78363] ⇊00000000fffecde5 ⇈00000000fffecde5
stampKind: i32
value: int[-78363|0xfffffffffffecde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i562 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-81947 - -78363] ⇊00000000fffe8de5 ⇈00000000fffeffe5
valueDescription: i32
=== Inputs ===
merge: v559 
values: i561 i566 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v559 values: i561 i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v565 
=== Succesors ===
next: v564 
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v565 #next: v564  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i142 - a211 - - i143 i103 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i142 - a211 - - i143 i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?144 
actionAndReason: i562 
speculation: a540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?144 actionAndReason: i562 speculation: a540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$172/1247663720@32252e3b
stamp: i32
=== Inputs ===
x: i107 
y: i205 
=== Succesors ===
=== Usages ===
i207 i1003 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i107 y: i205  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i213 
y: i122 
=== Succesors ===
=== Usages ===
?138 i107 i121 ?138 i126 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i213 y: i122  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i207 
y: i120 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i207 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i1002 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i213 
y: i1002 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i213 y: i1002  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i121 
y: i1003 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i121 y: i1003  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i207 
y: i125 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i207 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i124 
y: i126 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i124 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i107 
y: i127 
=== Succesors ===
=== Usages ===
v972 ?138 v341 v969 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i340 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i128 y: i340  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v457 #falseSuccessor: v460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
i960 i959 
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i108 
y: i129 
=== Succesors ===
=== Usages ===
v971 v354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i108 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i957 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v462 #falseSuccessor: v465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
v362 
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i108 
y: i174 
=== Succesors ===
=== Usages ===
i108 v973 ?138 v367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i108 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i957 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i175 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v367 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v367 #trueSuccessor: v467 #falseSuccessor: v470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: i959 
=== Usages ===
v375 
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i959  <|@  <|@
f <@~|@floating>@ <|@
tid a131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a131 
index: i128 
=== Succesors ===
=== Usages ===
i959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: i128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i959 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v457 
address: v969 
=== Succesors ===
next: v362 
=== Usages ===
v362 
=== Predecessor ===
v467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v457 address: v969 #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i130 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v462 
address: v971 
value: i959 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i960 
=== Usages ===
=== Predecessor ===
i959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v462 address: v971 value: i959 stateAfter: - lastLocationAccess: - #next: i960  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a135 
index: i128 
=== Succesors ===
=== Usages ===
i960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: i128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v457 
address: v972 
=== Succesors ===
next: v375 
=== Usages ===
v375 
=== Predecessor ===
v362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v457 address: v972 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i175 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v467 
address: v973 
value: i960 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
i960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v467 address: v973 value: i960 stateAfter: - lastLocationAccess: - #next: v404  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i207 - a211 i207 i128 i175 i103 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i207 - a211 i207 i128 i175 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?138 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
loopBegin: v106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94235
stableDimension: 0
stamp: i32 [-94235] ⇊00000000fffe8fe5 ⇈00000000fffe8fe5
stampKind: i32
value: int[-94235|0xfffffffffffe8fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid i556 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90907
stableDimension: 0
stamp: i32 [-90907] ⇊00000000fffe9ce5 ⇈00000000fffe9ce5
stampKind: i32
value: int[-90907|0xfffffffffffe9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -87579
stableDimension: 0
stamp: i32 [-87579] ⇊00000000fffea9e5 ⇈00000000fffea9e5
stampKind: i32
value: int[-87579|0xfffffffffffea9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-94235 - -87579] ⇊00000000fffe88e5 ⇈00000000fffebfe5
valueDescription: i32
=== Inputs ===
merge: v549 
values: i551 i556 i558 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i551 i556 i558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v550 v555 v557 
=== Succesors ===
next: v554 
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v550 v555 v557 #next: v554  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i107 - a211 - - i108 i103 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i107 - a211 - - i108 i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
actionAndReason: i552 
speculation: a540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?109 actionAndReason: i552 speculation: a540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v674 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 285
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?42  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid a540 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a542 v554 v572 v564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/AbstractStringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?71 ?55 ?178 v962 v38 ?31 ?219 v247 v963 j644 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 v8 i12 ?71 v45 ?55 ?219 ?31 i102 ?42 i945 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[-2147483648|0xffffffff80000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 1]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v411 #falseSuccessor: v409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55ee8deb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i539 <|@
result int[-67091|0xfffffffffffef9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67091
stableDimension: 0
stamp: i32 [-67091] ⇊00000000fffef9ed ⇈00000000fffef9ed
stampKind: i32
value: int[-67091|0xfffffffffffef9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67091|0xfffffffffffef9ed], Object[null]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i946 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i946 v339 v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 35]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: a947 
=== Usages ===
i28 i236 
=== Predecessor ===
v409 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a947 v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a947 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
=== Succesors ===
next: v11 
=== Usages ===
v295 a294 v964 v974 a1005 
=== Predecessor ===
i946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a947 
=== Succesors ===
=== Usages ===
i949 i951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
value: a947 
=== Succesors ===
=== Usages ===
v425 v416 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a947  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i475 v933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@239698761
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@239698761]
=== Inputs ===
=== Succesors ===
=== Usages ===
a542 a542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 i185 i204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 24]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 i580 i53 i67 v196 v75 i151 v240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a43 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v965 v961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 v284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 i41 i58 a604 v200 i103 v167 v187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i7 
=== Succesors ===
=== Usages ===
v11 v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 16]
stamp: void
trueSuccessorProbability: 0.01581399293628727
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
a947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01581399293628727 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v415 #falseSuccessor: v413  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i545 <|@
result int[-71691|0xfffffffffffee7f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71691
stableDimension: 0
stamp: i32 [-71691] ⇊00000000fffee7f5 ⇈00000000fffee7f5
stampKind: i32
value: int[-71691|0xfffffffffffee7f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71691|0xfffffffffffee7f5], v4|QWORD[.]] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 671
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$171/333421669@94108b0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 20]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v61 ?59 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i58 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v57 
values: i7 i67 
=== Succesors ===
=== Usages ===
?59 v961 i204 i67 v264 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v57 values: i7 i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.536552945143885
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v56 
=== Succesors ===
next: v421 
=== Usages ===
i58 v63 v68 v420 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v56 #next: v421  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?71 
values: i12 i58 
=== Succesors ===
=== Usages ===
v403 v418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?71 values: i12 i58  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i263 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i58 y: i263  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v417 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: i948 
=== Usages ===
i948 
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v5|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i58 
=== Succesors ===
=== Usages ===
i948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i948 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v417 
address: v961 
=== Succesors ===
next: v66 
=== Usages ===
v61 
=== Predecessor ===
v417 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v417 address: v961 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i12 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i948 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
trueSuccessorProbability: 0.605764191946218
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i948 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: [v5|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582660942104327422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?59 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: i32
=== Inputs ===
x: i58 
y: i16 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v57 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v6|DWORD v7|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 21] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v57 
=== Succesors ===
next: i949 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v57 #next: i949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i949 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: v78 
=== Usages ===
i74 i254 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 25]
stamp: i32
=== Inputs ===
x: i58 
y: i125 
=== Succesors ===
=== Usages ===
i233 i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i58 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
stamp: i32
=== Inputs ===
x: i204 
y: i946 
=== Succesors ===
=== Usages ===
i221 i222 i74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i946  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i28 
y: i949 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i28 y: i949  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i16 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i74 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9516592072936898
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
i949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v76 #falseSuccessor: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B74" 
    xhandlers
    flags 
    probability 4579829086309151151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a294 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a947 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a947  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.], v11|DWORD] destination: B10 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4560190131061579018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD, v9|DWORD, v10|DWORD] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v57 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v57 #next: v418  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 265
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -67867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v6|DWORD v7|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v424 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
result int[-75787|0xfffffffffffed7f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75787
stableDimension: 0
stamp: i32 [-75787] ⇊00000000fffed7f5 ⇈00000000fffed7f5
stampKind: i32
value: int[-75787|0xfffffffffffed7f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75787|0xfffffffffffed7f5], v4|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i541 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-75787 - -67091] ⇊00000000fffec1e5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v537 
values: i539 i545 i548 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: i539 i545 i548  <|@  <|@
f <@~|@floating>@ <|@
tid a542 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v537 
values: a540 a546 a546 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v537 values: a540 a546 a546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v544 v547 
=== Succesors ===
next: v543 
=== Usages ===
i541 a542 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v544 v547 #next: v543  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 667
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i541 
speculation: a542 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i541 speculation: a542  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 30
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B101" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i41 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v40 
values: i7 i53 
=== Succesors ===
=== Usages ===
?42 v965 i53 v284 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v40 values: i7 i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.536552945143885
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v39 
=== Succesors ===
next: v430 
=== Usages ===
i41 v47 v52 v429 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v39 #next: v430  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?55 
values: i2 i41 
=== Succesors ===
=== Usages ===
v402 v427 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?55 values: i2 i41  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i41 
y: i263 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i41 y: i263  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v284 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v284 #trueSuccessor: v426 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i950 
=== Usages ===
i950 
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i950  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v5|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i41 
=== Succesors ===
=== Usages ===
i950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i950 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v426 
address: v965 
=== Succesors ===
next: v50 
=== Usages ===
v45 
=== Predecessor ===
v426 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v426 address: v965 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i950 
y: i2 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i950 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: i32
=== Inputs ===
x: i41 
y: i16 
=== Succesors ===
=== Usages ===
i233 i236 i41 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
trueSuccessorProbability: 0.605764191946218
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
i950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v5|QWORD[.] + v16|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609489405307958459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?42 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?42 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
loopBegin: v40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v16|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607039979014627203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: i951 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: i951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i951 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: v243 
=== Usages ===
i239 i254 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:673) [bci: 39]
stamp: i32
=== Inputs ===
x: i53 
y: i946 
=== Succesors ===
=== Usages ===
i239 i222 i221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i946  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i236 
y: i951 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i236 y: i951  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i16 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i239 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9516592072936898
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v241 
falseSuccessor: v242 
=== Usages ===
=== Predecessor ===
i951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v241 #falseSuccessor: v242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v17|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606611449514728016
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid a1005 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a947 
=== Succesors ===
=== Usages ===
a211 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a947  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.], v19|DWORD] destination: B21 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587017293034181421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v18|DWORD, v17|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i221 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v217 
values: i28 i236 
=== Succesors ===
=== Usages ===
i186 i222 i384 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i28 i236  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v217 
values: i949 i951 
=== Succesors ===
=== Usages ===
i516 i184 v494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i949 i951  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v217 
values: i204 i53 
=== Succesors ===
=== Usages ===
?219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v217 values: i204 i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 
=== Succesors ===
next: v434 
=== Usages ===
i221 i254 i233 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 #next: v434  <|@  <|@
tid ?219 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 672
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i2 - - i233 
=== Succesors ===
=== Usages ===
v572 a604 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - - i233  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i254 
y: i16 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i254 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i184 
y: i125 
=== Succesors ===
=== Usages ===
i186 i384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i184 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i185 
y: i221 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i185 y: i221  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i186 
y: i7 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i186 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i384 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v187 
trueValue: i221 
falseValue: i185 
=== Succesors ===
=== Usages ===
j655 i199 v196 v589 v494 i516 a604 v631 i580 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v187 trueValue: i221 falseValue: i185  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i384 
y: i16 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i384 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v433 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA [v25|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: v26|DWORD, ~trueValue: v22|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid i569 <|@
result int[-76819|0xfffffffffffed3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -76819
stableDimension: 0
stamp: i32 [-76819] ⇊00000000fffed3ed ⇈00000000fffed3ed
stampKind: i32
value: int[-76819|0xfffffffffffed3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-76819|0xfffffffffffed3ed]] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B28" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32
=== Inputs ===
x: i198 
y: i384 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i198 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i199 
y: i7 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i199 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v437 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v29|DWORD, ~y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
result int[-77075|0xfffffffffffed2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -77075
stableDimension: 0
stamp: i32 [-77075] ⇊00000000fffed2ed ⇈00000000fffed2ed
stampKind: i32
value: int[-77075|0xfffffffffffed2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77075|0xfffffffffffed2ed]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i570 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-77075 - -76819] ⇊00000000fffed2ed ⇈00000000fffed3ed
valueDescription: i32
=== Inputs ===
merge: v567 
values: i569 i574 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v567 values: i569 i574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v568 v573 
=== Succesors ===
next: v572 
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v568 v573 #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?219 
actionAndReason: i570 
speculation: a540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?219 actionAndReason: i570 speculation: a540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: v24|DWORD 
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: j583 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j583 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j628 
=== Usages ===
v976 v977 
=== Predecessor ===
v435 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j628  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j583 
index: - 
=== Succesors ===
=== Usages ===
j628 v630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j583 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j628 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: j629 
=== Usages ===
j587 v978 v979 a603 v984 v980 v981 v982 v983 
=== Predecessor ===
j583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: j629  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j583 
index: - 
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j583 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j629 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
=== Succesors ===
next: v592 
=== Usages ===
v593 
=== Predecessor ===
j628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 #next: v592  <|@  <|@
f <@~|@floating>@ <|@
tid i588 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i384 
y: i588 
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i384 y: i588  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 v666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
j629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v591 #falseSuccessor: v590  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586430799225139703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i384 
y: i16 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i384 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i612 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i580 
y: i611 
=== Succesors ===
=== Usages ===
i582 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i580 y: i611  <|@  <|@
f <@~|@floating>@ <|@
tid i581 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i582 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i612 
y: i581 
=== Succesors ===
=== Usages ===
j586 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i612 y: i581  <|@  <|@
f <@~|@floating>@ <|@
tid j586 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i582 
=== Succesors ===
=== Usages ===
j587 v980 v981 v982 v983 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i582  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i64
=== Inputs ===
x: j586 
y: j628 
=== Succesors ===
=== Usages ===
v593 v630 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j586 y: j628  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j629 
y: j587 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j629 y: j587  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v597 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v598 #falseSuccessor: v597  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v34|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = AND v35|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = ADD (x: v37|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4556661195726562914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586368099443246250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
value: j587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v976 value: j587 stateAfter: - lastLocationAccess: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v37|QWORD + v32|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v980 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v980 #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v37|QWORD + v32|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v981 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v981 #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v37|QWORD + v32|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v982 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v982 #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v37|QWORD + v32|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j586 
index: j628 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j586 index: j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
address: v983 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v983 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v32|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: i384 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: i384 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v32|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: j579 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: j579 stateAfter: - lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v32|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j628 
index: - 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j628 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: v654 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: v654 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j628 
=== Succesors ===
next: v605 
=== Usages ===
a608 
=== Predecessor ===
v602 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j628 #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
a603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4572223336099767628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
v590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4572724934354915250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v594 v596 
=== Succesors ===
next: a604 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v594 v596 #next: a604  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a604 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?219 
arguments: v578 i384 i7 
=== Succesors ===
next: v607 
=== Usages ===
a608 
=== Predecessor ===
v595 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?219 arguments: v578 i384 i7 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
a604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: v24|DWORD 
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:33] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a608 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v606 
values: a603 a604 
=== Succesors ===
=== Usages ===
v986 a523 v975 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: a603 a604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v605 v607 
=== Succesors ===
next: v796 
=== Usages ===
a608 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v605 v607 #next: v796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v669 
=== Usages ===
j797 j799 
=== Predecessor ===
v606 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i384 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v494 
trueValue: i254 
falseValue: i384 
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v494 trueValue: i254 falseValue: i384  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
j861 v986 j660 v666 v793 j843 j849 j853 j857 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j579 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j656 y: j579  <|@  <|@
f <@~|@floating>@ <|@
tid j860 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j861 j912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 j879 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j857 j909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j824 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j825 j885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j853 j906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j634 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j891 j833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j848 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j849 j903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j897 j841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j842 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j843 j898 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j886 v899 j826 j834 v844 j892 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v668 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v667 #falseSuccessor: v668  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v23|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v44|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B53" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v667 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [v42|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a608 
index: - 
=== Succesors ===
=== Usages ===
j799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a608 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v796 
address: v975 
=== Succesors ===
=== Usages ===
v987 v989 v991 v993 v995 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v796 address: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a947 
=== Succesors ===
=== Usages ===
j797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a947  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v796 
address: v974 
=== Succesors ===
=== Usages ===
v988 v990 v992 v994 v996 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v796 address: v974  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j656 
y: j842 
=== Succesors ===
=== Usages ===
v844 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j842  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j843 
y: j615 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j843 y: j615  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v670 
falseSuccessor: v671 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v670 #falseSuccessor: v671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LEA [v42|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v682  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B100" 
    successors "B40" "B100" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j834 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v674 
values: j615 j841 
=== Succesors ===
=== Usages ===
v996 j841 v995 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v674 values: j615 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v673 
=== Succesors ===
next: v952 
=== Usages ===
v952 v678 v679 j834 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v673 #next: v952  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v46|QWORD[*] + v48|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j834 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v952 <|@
result v49|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v674 
address: v996 
=== Succesors ===
next: v930 
=== Usages ===
v930 
=== Predecessor ===
v674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v674 address: v996 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v45|QWORD[.] + v48|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j834 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
value: v952 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v952 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v995 value: v952 stateAfter: - lastLocationAccess: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j834 
y: j269 
=== Succesors ===
=== Usages ===
j826 j834 v846 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j834 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j843 
y: j841 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j843 y: j841  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v678 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v678 #falseSuccessor: v680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V256_WORD = H [v46|QWORD[*] + v48|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v48|QWORD * 2], input: v49|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v674 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v674 #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j826 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v683 
values: j615 j841 
=== Succesors ===
=== Usages ===
v994 j833 j817 v850 v993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v683 values: j615 j841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v682 v684 
=== Succesors ===
next: v706 
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v682 v684 #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j656 
y: j848 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j848  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j849 
y: j826 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j849 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v705 
falseSuccessor: v704 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v705 #falseSuccessor: v704  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v44|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v953 
=== Usages ===
v953 
=== Predecessor ===
v706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v953  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v46|QWORD[*] + v51|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j826 
=== Succesors ===
=== Usages ===
v953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v953 <|@
result v53|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v704 
address: v994 
=== Succesors ===
next: v928 
=== Usages ===
v928 
=== Predecessor ===
v704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v704 address: v994 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v45|QWORD[.] + v51|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j826 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: v953 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: v953 stateAfter: - lastLocationAccess: - #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j826 
y: j634 
=== Succesors ===
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j826 y: j634  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|V128_WORD = H [v46|QWORD[*] + v51|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v51|QWORD * 2], input: v53|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j817 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v694 
values: j833 j826 
=== Succesors ===
=== Usages ===
v992 j825 j809 v854 v991 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v694 values: j833 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v693 v709 
=== Succesors ===
next: v712 
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v693 v709 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid j853 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j656 
y: j852 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j853 
y: j817 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j853 y: j817  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v854 
=== Succesors ===
trueSuccessor: v711 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v854 #trueSuccessor: v711 #falseSuccessor: v710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v44|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v715 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v715  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
v954 
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v46|QWORD[*] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j817 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
result v57|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v710 
address: v992 
=== Succesors ===
next: v926 
=== Usages ===
v926 
=== Predecessor ===
v710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v710 address: v992 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v45|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j817 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: v954 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: v954 stateAfter: - lastLocationAccess: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j817 
y: j824 
=== Succesors ===
=== Usages ===
j809 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j817 y: j824  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v926 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V64_WORD = H [v46|QWORD[*] + v55|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v55|QWORD * 2], input: v57|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j809 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v698 
values: j825 j817 
=== Succesors ===
=== Usages ===
v990 j816 j800 v858 v989 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v698 values: j825 j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v715 
=== Succesors ===
next: v718 
=== Usages ===
j809 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v715 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j656 
y: j856 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j856  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j857 
y: j809 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j857 y: j809  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v717 #falseSuccessor: v716  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v44|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
v955 
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v46|QWORD[*] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j809 
=== Succesors ===
=== Usages ===
v955 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
result v61|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v716 
address: v990 
=== Succesors ===
next: v924 
=== Usages ===
v924 
=== Predecessor ===
v716 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v716 address: v990 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v45|QWORD[.] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j809 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: v955 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: v955 stateAfter: - lastLocationAccess: - #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j809 
y: j802 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j809 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V32_WORD = H [v46|QWORD[*] + v59|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v59|QWORD * 2], input: v61|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j800 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v701 
values: j816 j809 
=== Succesors ===
=== Usages ===
v988 v862 v987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v701 values: j816 j809  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v721 
=== Succesors ===
next: v724 
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v721 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid j861 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j656 
y: j860 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j656 y: j860  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j861 
y: j800 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j861 y: j800  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v862 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v862 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = DEC v44|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i956 
=== Usages ===
i956 
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i956  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v46|QWORD[*] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j797 
index: j800 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i956 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v722 
address: v988 
=== Succesors ===
next: v922 
=== Usages ===
v922 
=== Predecessor ===
v722 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v722 address: v988 #next: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v45|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j799 
index: j800 
=== Succesors ===
=== Usages ===
v922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
value: i956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
i956 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v987 value: i956 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSX [v46|QWORD[*] + v63|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + v63|QWORD * 2], y: v65|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B35" "B52" "B51" 
    successors "B54" "B72" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v703 v727 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v703 v727 #next: v865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v734 
=== Usages ===
j867 
=== Predecessor ===
v687 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid j655 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i384 
=== Succesors ===
=== Usages ===
j660 v793 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j655 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j656 y: j655  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v793 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v793 #trueSuccessor: v733 #falseSuccessor: v732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v42|QWORD[.] + v44|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a608 
index: j656 
=== Succesors ===
=== Usages ===
j867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a608 index: j656  <|@  <|@
f <@~|@floating>@ <|@
tid j867 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v865 
address: v986 
=== Succesors ===
=== Usages ===
v997 v998 v999 v1000 v1001 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v865 address: v986  <|@  <|@
f <@~|@floating>@ <|@
tid j660 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j655 
y: j656 
=== Succesors ===
=== Usages ===
j912 j898 j903 j906 j909 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j655 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid j898 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j660 
y: j842 
=== Succesors ===
=== Usages ===
v899 v901 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j842  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j898 
y: j615 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j898 y: j615  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v899 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v899 #trueSuccessor: v735 #falseSuccessor: v736  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v42|QWORD[.] + v44|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
v735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result v70|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B71" 
    successors "B58" "B71" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j892 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v739 
values: j615 j897 
=== Succesors ===
=== Usages ===
v1001 j897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v739 values: j615 j897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v738 
=== Succesors ===
next: v940 
=== Usages ===
j892 v742 v743 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v738 #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v67|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j892 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: v941 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: v941 stateAfter: - lastLocationAccess: - #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid j897 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j892 
y: j269 
=== Succesors ===
=== Usages ===
j886 j892 v901 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j892 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j898 
y: j897 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j898 y: j897  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v742 #falseSuccessor: v744  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v71|QWORD * 2], input: v70|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v739 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v739 #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j886 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v747 
values: j615 j897 
=== Succesors ===
=== Usages ===
v1000 j891 j880 v904 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v747 values: j615 j897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v746 v748 
=== Succesors ===
next: v769 
=== Usages ===
j886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v746 v748 #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid j903 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j660 
y: j848 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j848  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j903 
y: j886 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j903 y: j886  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v904 
=== Succesors ===
trueSuccessor: v768 
falseSuccessor: v767 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v904 #trueSuccessor: v768 #falseSuccessor: v767  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v68|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v67|QWORD[.] + v73|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j886 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j886  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result v75|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: v944 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: v944 stateAfter: - lastLocationAccess: - #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid j891 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j886 
y: j634 
=== Succesors ===
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j886 y: j634  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v73|QWORD * 2], input: v75|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v73|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j880 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v758 
values: j891 j886 
=== Succesors ===
=== Usages ===
v999 j885 j874 v907 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v758 values: j891 j886  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v757 v772 
=== Succesors ===
next: v775 
=== Usages ===
j880 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v757 v772 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid j906 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j660 
y: j852 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j852  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j906 
y: j880 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j906 y: j880  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v907 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v773 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v907 #trueSuccessor: v774 #falseSuccessor: v773  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v68|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v778  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v67|QWORD[.] + v77|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j880 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j880  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result v79|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: v943 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: v943 stateAfter: - lastLocationAccess: - #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid j885 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j880 
y: j824 
=== Succesors ===
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j880 y: j824  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v937 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v77|QWORD * 2], input: v79|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j874 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v761 
values: j885 j880 
=== Succesors ===
=== Usages ===
v998 j879 j868 v910 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v761 values: j885 j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v760 v778 
=== Succesors ===
next: v781 
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v760 v778 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j660 
y: j856 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j856  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j909 
y: j874 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j909 y: j874  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v780 #falseSuccessor: v779  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v68|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v67|QWORD[.] + v81|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j874 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j874  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result v83|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: v942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: v942 stateAfter: - lastLocationAccess: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid j879 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j874 
y: j802 
=== Succesors ===
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j874 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
v935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v81|QWORD * 2], input: v83|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j868 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v764 
values: j879 j874 
=== Succesors ===
=== Usages ===
v997 v913 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v764 values: j879 j874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v763 v784 
=== Succesors ===
next: v787 
=== Usages ===
j868 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v763 v784 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid j912 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j660 
y: j860 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j860  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j912 
y: j868 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j912 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v913 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v785 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v913 #trueSuccessor: v786 #falseSuccessor: v785  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = DEC v68|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v67|QWORD[.] + v85|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j867 
index: j868 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j867 index: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
value: i473 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v997 value: i473 stateAfter: - lastLocationAccess: - #next: v766  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + v85|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v739 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B71 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B73" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B70" "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v766 v790 
=== Succesors ===
next: a523 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v766 v790 #next: a523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a523 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a608 
=== Succesors ===
next: v303 
=== Usages ===
a211 a302 
=== Predecessor ===
v751 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a608 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
result v87|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
op: Compress
stamp: n! -
=== Inputs ===
value: a523 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: a302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j644 
=== Usages ===
=== Predecessor ===
a523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: a302 stateAfter: - lastLocationAccess: - #next: j644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j644 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v650 
=== Usages ===
j646 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i645 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
result v88|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j644 
y: i645 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j644 y: i645  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v88|QWORD[*] + v89|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j646 
index: j649 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j646 index: j649  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: i651 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
j644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: i651 stateAfter: - lastLocationAccess: - #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = COMPRESSPOINTER (input: v42|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v87|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v88|QWORD[*] + v89|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.], v22|DWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B10" "B73" "B21" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a211 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v90 
values: a294 a523 a1005 
=== Succesors ===
=== Usages ===
?138 v1004 ?144 ?109 ?158 v967 v970 v971 v973 v968 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v90 values: a294 a523 a1005  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v90 
values: i28 i221 i236 
=== Succesors ===
=== Usages ===
?31 ?178 v328 v339 i108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v90 values: i28 i221 i236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v92 v244 
=== Succesors ===
next: v1004 
=== Usages ===
a211 i222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v92 v244 #next: v1004  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:674) [bci: 43]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i222 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a211 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a211 #next: v96  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i222 
=== Succesors ===
=== Usages ===
?158 ?109 ?138 ?144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:438) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.02370877285335382
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.], v91|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: v0|QWORD[.] v1|DWORD - v91|DWORD 
>@ <|@ instruction NULLCHECK [v90|QWORD[.]] state [bci:46] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02370877285335382 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4582490809926041600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result int[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$171/333421669@94108b0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 20]
stamp: i32
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, int[45|0x2d], short[45|0x2d]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606968869158841856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, int[0|0x0], short[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v100 
values: i2 i945 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: i2 i945  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v100 
values: i7 i97 
=== Succesors ===
=== Usages ===
v167 ?109 ?144 ?158 ?138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: i7 i97  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v100 
values: i473 i474 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: i473 i474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v99 v101 
=== Succesors ===
next: i957 
=== Usages ===
i102 i103 i475 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v99 v101 #next: i957  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [v90|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
i957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i957 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
=== Succesors ===
next: v105 
=== Usages ===
v354 v367 v319 v330 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v970 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i175 i408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
i957 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v90|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|DWORD, v91|DWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B95" 
    successors "B79" "B92" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607283772895746248
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v106 
values: i102 i207 
=== Succesors ===
=== Usages ===
?109 v111 i142 i213 i128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i102 i207  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v106 
values: i222 i175 
=== Succesors ===
=== Usages ===
?109 i143 i130 i175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i222 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.022505130143644
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v105 
=== Succesors ===
next: v117 
=== Usages ===
i107 i108 v112 v139 v470 v460 v465 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v105 #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i110 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i107 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.9779902031978241
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v112 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD, v98|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result int[-524288|0xfffffffffff80000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a155 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result int[52429|0xcccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result int[19|0x13] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v98|DWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B88" 
    successors "B81" "B90" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i142 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v141 
values: i107 i148 
=== Succesors ===
=== Usages ===
?144 i146 i153 ?158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v141 values: i107 i148  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v141 
values: i108 i154 
=== Succesors ===
=== Usages ===
?144 i154 i408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v141 values: i108 i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2956111519798075
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v140 
=== Succesors ===
next: v447 
=== Usages ===
i142 i143 v161 v164 v451 v446 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v140 #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$146/798809698@44222a75
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i142 
y: i145 
=== Succesors ===
=== Usages ===
i148 v160 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i142 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i146 
y: i147 
=== Succesors ===
=== Usages ===
i142 i150 i151 ?158 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i146 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i148 
y: i149 
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i148 y: i149  <|@  <|@
f <@~|@floating>@ <|@
tid i151 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i148 
y: i16 
=== Succesors ===
=== Usages ===
i152 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i148 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i150 
y: i151 
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i151  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i142 
y: i152 
=== Succesors ===
=== Usages ===
v966 ?158 v305 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i142 y: i152  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i153 
y: i304 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i153 y: i304  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v446 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v443 #falseSuccessor: v446  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD, v101|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = IMUL v100|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHR v102|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SHL v103|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v104|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SUB (x: v100|DWORD, ~y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B89" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
i958 
=== Predecessor ===
v447 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i143 
y: i129 
=== Succesors ===
=== Usages ===
i143 v967 ?158 v319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i143 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i957 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i154 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v448 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = DEC v101|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B88" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: i958 
=== Usages ===
v327 
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i958  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v99|QWORD[.] + v107|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a155 
index: i153 
=== Succesors ===
=== Usages ===
i958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a155 index: i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i958 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v443 
address: v966 
=== Succesors ===
next: v327 
=== Usages ===
v327 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v443 address: v966 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v90|QWORD[.] + v108|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i154 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v448 
address: v967 
value: i958 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
i958 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v448 address: v967 value: i958 stateAfter: - lastLocationAccess: - #next: v166  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i142 - a211 i148 i153 i154 i103 
=== Succesors ===
=== Usages ===
v405 v454 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i142 - a211 i148 i153 i154 i103  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
x: i146 
y: i159 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i146 y: i159  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.43561384476528986
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v161 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVSX [v99|QWORD[.] + v107|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v108|DWORD * 2 + 16], y: v109|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v102|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v141 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v141 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i7 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i103 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 0.9762910671381908
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606968867717613816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: i222 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:677) [bci: 61]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i143 
y: i174 
=== Succesors ===
=== Usages ===
v968 v330 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i143 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i408 
y: i957 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i408 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v453 #falseSuccessor: v455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA [v101|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v338 
=== Usages ===
v338 
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v90|QWORD[.] + v110|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i408 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v453 
address: v968 
value: i475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v453 address: v968 value: i475 stateAfter: - lastLocationAccess: - #next: v339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:676) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: i222 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: i222 stateAfter: - lastLocationAccess: - #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:677) [bci: 61]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v110|DWORD * 2 + 16], y: v95|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 331
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?158 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -84763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v100|DWORD - v90|QWORD[.] v103|DWORD v107|DWORD v108|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction DEOPT info [bci:107, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608513733073920232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?158 
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?158 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
loopBegin: v141 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v100|DWORD - v90|QWORD[.] v103|DWORD v107|DWORD v108|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v108|DWORD] destination: B88 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v141 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v141 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
result int[-81947|0xfffffffffffebfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81947
stableDimension: 0
stamp: i32 [-81947] ⇊00000000fffebfe5 ⇈00000000fffebfe5
stampKind: i32
value: int[-81947|0xfffffffffffebfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81947|0xfffffffffffebfe5]] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v141 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v141 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid i561 <|@
result int[-78363|0xfffffffffffecde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78363
stableDimension: 0
stamp: i32 [-78363] ⇊00000000fffecde5 ⇈00000000fffecde5
stampKind: i32
value: int[-78363|0xfffffffffffecde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78363|0xfffffffffffecde5]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i562 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-81947 - -78363] ⇊00000000fffe8de5 ⇈00000000fffeffe5
valueDescription: i32
=== Inputs ===
merge: v559 
values: i561 i566 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v559 values: i561 i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v560 v565 
=== Succesors ===
next: v564 
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v560 v565 #next: v564  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i142 - a211 - - i143 i103 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i142 - a211 - - i143 i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?144 
actionAndReason: i562 
speculation: a540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?144 actionAndReason: i562 speculation: a540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v100|DWORD - v90|QWORD[.] - - v101|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction DEOPT info [bci:75, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$172/1247663720@32252e3b
stamp: i32
=== Inputs ===
x: i107 
y: i205 
=== Succesors ===
=== Usages ===
i207 i1003 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i107 y: i205  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i213 
y: i122 
=== Succesors ===
=== Usages ===
?138 i107 i121 ?138 i126 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i213 y: i122  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i207 
y: i120 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i207 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid i1002 <|@
result int[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i213 
y: i1002 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i213 y: i1002  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i121 
y: i1003 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i121 y: i1003  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i207 
y: i125 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i207 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i124 
y: i126 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i124 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i107 
y: i127 
=== Succesors ===
=== Usages ===
v972 ?138 v341 v969 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i340 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i128 y: i340  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v457 #falseSuccessor: v460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SAR v113|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SHL v114|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v113|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v115|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v114|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = ADD (x: v117|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v97|DWORD, ~y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v120|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
i960 i959 
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i108 
y: i129 
=== Succesors ===
=== Usages ===
v971 v354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i108 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i130 
y: i957 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i130 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v354 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v354 #trueSuccessor: v462 #falseSuccessor: v465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = DEC v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
v362 
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: i32
=== Inputs ===
x: i108 
y: i174 
=== Succesors ===
=== Usages ===
i108 v973 ?138 v367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i108 y: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i957 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i175 y: i957  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v367 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v367 #trueSuccessor: v467 #falseSuccessor: v470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = LEA [v98|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: i959 
=== Usages ===
v375 
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i959  <|@  <|@
f <@~|@floating>@ <|@
tid a131 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v123|QWORD[.] + v120|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a131 
index: i128 
=== Succesors ===
=== Usages ===
i959 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: i128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i959 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v457 
address: v969 
=== Succesors ===
next: v362 
=== Usages ===
v362 
=== Predecessor ===
v467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v457 address: v969 #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [v90|QWORD[.] + v121|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i130 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v462 
address: v971 
value: i959 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i960 
=== Usages ===
=== Predecessor ===
i959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v462 address: v971 value: i959 stateAfter: - lastLocationAccess: - #next: i960  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v125|QWORD[.] + v120|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a135 
index: i128 
=== Succesors ===
=== Usages ===
i960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: i128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i960 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v457 
address: v972 
=== Succesors ===
next: v375 
=== Usages ===
v375 
=== Predecessor ===
v362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v457 address: v972 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v90|QWORD[.] + v122|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a211 
index: i175 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v467 
address: v973 
value: i960 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
i960 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v467 address: v973 value: i960 stateAfter: - lastLocationAccess: - #next: v404  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i207 - a211 i207 i128 i175 i103 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i207 - a211 i207 i128 i175 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?138 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
loopBegin: v106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVSX [v123|QWORD[.] + v120|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v121|DWORD * 2 + 16], y: v124|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVSX [v125|QWORD[.] + v120|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v122|DWORD * 2 + 16], y: v126|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v114|DWORD - v90|QWORD[.] v114|DWORD v120|DWORD v122|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|DWORD, v122|DWORD] destination: B95 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
result int[-94235|0xfffffffffffe8fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94235
stableDimension: 0
stamp: i32 [-94235] ⇊00000000fffe8fe5 ⇈00000000fffe8fe5
stampKind: i32
value: int[-94235|0xfffffffffffe8fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94235|0xfffffffffffe8fe5]] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid i556 <|@
result int[-90907|0xfffffffffffe9ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90907
stableDimension: 0
stamp: i32 [-90907] ⇊00000000fffe9ce5 ⇈00000000fffe9ce5
stampKind: i32
value: int[-90907|0xfffffffffffe9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90907|0xfffffffffffe9ce5]] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result int[-87579|0xfffffffffffea9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -87579
stableDimension: 0
stamp: i32 [-87579] ⇊00000000fffea9e5 ⇈00000000fffea9e5
stampKind: i32
value: int[-87579|0xfffffffffffea9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87579|0xfffffffffffea9e5]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i552 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-94235 - -87579] ⇊00000000fffe88e5 ⇈00000000fffebfe5
valueDescription: i32
=== Inputs ===
merge: v549 
values: i551 i556 i558 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i551 i556 i558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v550 v555 v557 
=== Succesors ===
next: v554 
=== Usages ===
i552 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v550 v555 v557 #next: v554  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: i107 - a211 - - i108 i103 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: i107 - a211 - - i108 i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
actionAndReason: i552 
speculation: a540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?109 actionAndReason: i552 speculation: a540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v97|DWORD - v90|QWORD[.] - - v98|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction DEOPT info [bci:17, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v674 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B100 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v40 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v40 #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 285
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?42 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?42  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v16|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 30] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55ee8deb slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01581399293628727 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v5|QWORD[.] + v16|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609489405307958459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v16|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 30] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B101" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607039979014627203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v17|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606611449514728016
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.], v19|DWORD] destination: B21 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B10" "B73" "B21" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.], v91|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: v0|QWORD[.] v1|DWORD - v91|DWORD 
>@ <|@ instruction NULLCHECK [v90|QWORD[.]] state [bci:46] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02370877285335382 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606968869158841856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD, int[0|0x0], short[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v90|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v93|DWORD, v91|DWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v97|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SAR v113|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SHL v114|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v113|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = ADD (x: v115|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SHL v114|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = ADD (x: v117|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v97|DWORD, ~y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v120|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = DEC v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = LEA [v98|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVSX [v123|QWORD[.] + v120|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v121|DWORD * 2 + 16], y: v124|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVSX [v125|QWORD[.] + v120|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v122|DWORD * 2 + 16], y: v126|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v114|DWORD - v90|QWORD[.] v114|DWORD v120|DWORD v122|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|DWORD, v122|DWORD] destination: B95 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B95" 
    successors "B79" "B92" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607283772895746248
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD, v98|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v98|DWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B89" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = DEC v101|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B88" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVSX [v99|QWORD[.] + v107|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v108|DWORD * 2 + 16], y: v109|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v102|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608513733073920232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v100|DWORD - v90|QWORD[.] v103|DWORD v107|DWORD v108|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD, v108|DWORD] destination: B88 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B88" 
    successors "B81" "B90" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD, v101|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = IMUL v100|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = SHR v102|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SHL v103|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = SHL v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v104|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = SUB (x: v100|DWORD, ~y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v107|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606968867717613816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587017293034181421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v18|DWORD, v17|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHL v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA [v25|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: v26|DWORD, ~trueValue: v22|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B28" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v29|DWORD, ~y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586430799225139703
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v34|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = AND v35|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = ADD (x: v37|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586368099443246250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v23|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v44|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LEA [v42|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v44|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|V128_WORD = H [v46|QWORD[*] + v51|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v51|QWORD * 2], input: v53|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v44|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V64_WORD = H [v46|QWORD[*] + v55|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v55|QWORD * 2], input: v57|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v44|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V32_WORD = H [v46|QWORD[*] + v59|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v59|QWORD * 2], input: v61|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = DEC v44|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVSX [v46|QWORD[*] + v63|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[.] + v63|QWORD * 2], y: v65|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B35" "B52" "B51" 
    successors "B54" "B72" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B73" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B70" "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD[.] = COMPRESSPOINTER (input: v42|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v87|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v88|QWORD[*] + v89|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.], v22|DWORD] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B53" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v42|QWORD[.] + v44|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SUB (x: v66|QWORD, ~y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v68|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v68|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v73|QWORD * 2], input: v75|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v73|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v68|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v77|QWORD * 2], input: v79|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v77|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v68|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v81|QWORD * 2], input: v83|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = DEC v68|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + v85|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA [v101|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v90|QWORD[.] + v110|DWORD * 2 + 16], y: v95|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4582490809926041600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, int[45|0x2d], short[45|0x2d]] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = NEG v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: [v5|QWORD[.] + v7|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582660942104327422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v6|DWORD v7|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 21] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v7|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B74" 
    xhandlers
    flags 
    probability 4579829086309151151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.], v11|DWORD] destination: B10 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B71 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B71" 
    successors "B58" "B71" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.] + v71|QWORD * 2], input: v70|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B100 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B100" 
    successors "B40" "B100" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|V256_WORD = H [v46|QWORD[*] + v48|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v45|QWORD[.] + v48|QWORD * 2], input: v49|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4572223336099767628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4572724934354915250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: v24|DWORD 
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:33] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4560190131061579018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD, v9|DWORD, v10|DWORD] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4556661195726562914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75787|0xfffffffffffed7f5], v128|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94235|0xfffffffffffe8fe5]] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v97|DWORD - v90|QWORD[.] - - v98|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction DEOPT info [bci:17, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-87579|0xfffffffffffea9e5]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78363|0xfffffffffffecde5]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v100|DWORD - v90|QWORD[.] - - v101|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction DEOPT info [bci:75, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-76819|0xfffffffffffed3ed]] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: v24|DWORD 
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67091|0xfffffffffffef9ed], Object[null]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -84763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v100|DWORD - v90|QWORD[.] v103|DWORD v107|DWORD v108|DWORD v94|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: v0|QWORD[.] - - v91|DWORD 
>@ <|@ instruction DEOPT info [bci:107, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90907|0xfffffffffffe9ce5]] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77075|0xfffffffffffed2ed]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -72987 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v1|DWORD v16|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -67867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v6|DWORD v7|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: v0|QWORD[.] v1|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71691|0xfffffffffffee7f5], v129|QWORD[.]] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81947|0xfffffffffffebfe5]] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ldc           #50         // -2147483648
     3: if_icmpne     15
     6: aload_0       
     7: ldc           #51         // "-2147483648"
     9: invokevirtual #18         // append:(java.lang.String)java.lang.AbstractStringBuilder
    12: pop           
    13: aload_0       
    14: areturn       
    15: iload_1       
    16: ifge          29
    19: iload_1       
    20: ineg          
    21: invokestatic  #35         // java.lang.Integer.stringSize:(int)int
    24: iconst_1      
    25: iadd          
    26: goto          33
    29: iload_1       
    30: invokestatic  #35         // java.lang.Integer.stringSize:(int)int
    33: istore_2      
    34: aload_0       
    35: getfield      #2          // count:int
    38: iload_2       
    39: iadd          
    40: istore_3      
    41: aload_0       
    42: iload_3       
    43: invokespecial #3          // ensureCapacityInternal:(int)void
    46: iload_1       
    47: iload_3       
    48: aload_0       
    49: getfield      #1          // value:char[]
    52: invokestatic  #36         // java.lang.Integer.getChars:(int, int, char[])void
    55: aload_0       
    56: iload_3       
    57: putfield      #2          // count:int
    60: aload_0       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55ee8deb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP r14|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   32  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.01581399293628727 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  172  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction CMP (x: r14|DWORD, y: [rcx|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609489405307958459
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rcx:0, r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 30] <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B101" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction CMP r11|DWORD y: 10 size: DWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607039979014627203
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rax|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606611449514728016
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B10" "B73" "B21" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: r13|QWORD[.] r14|DWORD - rsi|DWORD 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:46] <|@ <|@
      nr  702  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.02370877285335382 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606968869158841856
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  724  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  730  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  732  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  876  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  882  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  884  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  888  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rdi|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr  900  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rbp|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  908  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  916  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [r10|QWORD[.] + rdi|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  920  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  922  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rax|DWORD - r10|QWORD[.] rax|DWORD rdx|DWORD rbp|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: r13|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 52] <|@ <|@
      nr  928  <|@ instruction rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B95" 
    successors "B79" "B92" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607283772895746248
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  740  <|@ instruction CMP r9|DWORD y: 65536 size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B89" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr  772  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B88" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction r9|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  784  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  786  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608513733073920232
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [rax:0, r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:40|DWORD - r10|QWORD[.] rdi|DWORD r14|DWORD rbp|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: r13|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 52] <|@ <|@
      nr  836  <|@ instruction rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B88 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B88" 
    successors "B81" "B90" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD <|@ <|@
      nr  754  <|@ instruction rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  756  <|@ instruction rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr  758  <|@ instruction r14|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction CMP r14|DWORD y: 36 size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606968867717613816
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587017293034181421
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rax|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  222  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B28" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" "B32" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  272  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4586430799225139703
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r9|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  284  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  286  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586368099443246250
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  322  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  376  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  380  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r9|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  400  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  450  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  452  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  460  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  472  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  474  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  498  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  508  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B35" "B52" "B51" 
    successors "B54" "B72" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B73" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B70" "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr  680  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  682  <|@ instruction r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  684  <|@ instruction r10|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  686  <|@ instruction MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  688  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B53" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B35 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  540  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  588  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  590  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  598  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  612  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  614  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  624  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  636  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  638  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  640  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  806  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV (x: [r10|QWORD[.] + rax|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr  814  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4582490809926041600
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r14|DWORD = NEG r14|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction rcx|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  714  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r11|DWORD = NEG r14|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: r11|DWORD, y: [rcx|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582660942104327422
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rcx:0, r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r11|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 21] <|@ <|@
      nr   82  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP r8|DWORD y: 10 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr   92  <|@ instruction r11|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B74" 
    xhandlers
    flags 
    probability 4579829086309151151
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B10 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  554  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B57" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B71 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B71" 
    successors "B58" "B71" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  560  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  562  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580882203232878328
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B100 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B100" 
    successors "B40" "B100" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  420  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4572223336099767628
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 4572724934354915250
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  358  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  366  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: stack:32|DWORD 
locals: stack:48|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:33] <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4560190131061579018
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4556661195726562914
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761] <|@ <|@
      nr  142  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-75787|0xfffffffffffed7f5] <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  152  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 0]
locals: rdx|QWORD[.] r14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r8|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr  938  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  960  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: r9|DWORD - r10|QWORD[.] - - rbx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rdx|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:17, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: int[-78363|0xfffffffffffecde5] <|@ <|@
      nr  856  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: stack:40|DWORD - r10|QWORD[.] - - rbx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rdx|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:75, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-76819|0xfffffffffffed3ed] <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: r11|DWORD 
locals: rdx|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed] <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction MOV [r15|QWORD + 668] y: -84763 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r9|DWORD - r10|QWORD[.] rdi|DWORD r14|DWORD rbp|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rdx|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:107, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  252  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction MOV [r15|QWORD + 668] y: -72987 size: DWORD <|@ <|@
      nr  978  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: stack:28|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: rdx|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 668] y: -67867 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r11|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: rdx|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761] <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[-71691|0xfffffffffffee7f5] <|@ <|@
      nr   54  <|@ instruction r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction r8|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  846  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ldc           #50         // -2147483648
     3: if_icmpne     15
     6: aload_0       
     7: ldc           #51         // "-2147483648"
     9: invokevirtual #18         // append:(java.lang.String)java.lang.AbstractStringBuilder
    12: pop           
    13: aload_0       
    14: areturn       
    15: iload_1       
    16: ifge          29
    19: iload_1       
    20: ineg          
    21: invokestatic  #35         // java.lang.Integer.stringSize:(int)int
    24: iconst_1      
    25: iadd          
    26: goto          33
    29: iload_1       
    30: invokestatic  #35         // java.lang.Integer.stringSize:(int)int
    33: istore_2      
    34: aload_0       
    35: getfield      #2          // count:int
    38: iload_2       
    39: iadd          
    40: istore_3      
    41: aload_0       
    42: iload_3       
    43: invokespecial #3          // ensureCapacityInternal:(int)void
    46: iload_1       
    47: iload_3       
    48: aload_0       
    49: getfield      #1          // value:char[]
    52: invokestatic  #36         // java.lang.Integer.getChars:(int, int, char[])void
    55: aload_0       
    56: iload_3       
    57: putfield      #2          // count:int
    60: aload_0       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55ee8deb slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction CMP r14|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   32  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.01581399293628727 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607039979014627202
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  172  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction CMP (x: r14|DWORD, y: [rcx|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609489405307958459
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ st <@st|@reference-map: [rcx:0, r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 30] <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B101" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612803901735010878
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction CMP r11|DWORD y: 10 size: DWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607039979014627203
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rax|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B74" 
    xhandlers
    flags 
    probability 4606611449514728016
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B10" "B73" "B21" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46]
locals: r13|QWORD[.] r14|DWORD - rsi|DWORD 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:46] <|@ <|@
      nr  702  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.02370877285335382 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4606968869158841856
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  722  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  724  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  732  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  872  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  876  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  880  <|@ instruction rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  882  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  884  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  888  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rdi|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr  900  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rbp|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  908  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4582143883535069667
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  916  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [r10|QWORD[.] + rdi|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  920  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  922  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rax|DWORD - r10|QWORD[.] rax|DWORD rdx|DWORD rbp|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: r13|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 52] <|@ <|@
      nr  928  <|@ instruction rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B95 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B95" 
    successors "B79" "B92" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4607283772895746248
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  734  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction CMP r9|DWORD y: 65536 size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B89" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  770  <|@ instruction rbp|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr  772  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B88" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction r9|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  782  <|@ instruction MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr  784  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  786  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4608513733073920232
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [rax:0, r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:40|DWORD - r10|QWORD[.] rdi|DWORD r14|DWORD rbp|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: r13|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 52] <|@ <|@
      nr  836  <|@ instruction rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r9|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B88 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B88" 
    successors "B81" "B90" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4612351675564339316
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD <|@ <|@
      nr  754  <|@ instruction rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  756  <|@ instruction rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD <|@ <|@
      nr  758  <|@ instruction r14|DWORD = SHL rdi|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction r14|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction CMP r14|DWORD y: 36 size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 4606968867717613816
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587017293034181421
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rax|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  222  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B28" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" "B33" 
    xhandlers
    flags 
    probability 4587127463468400289
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  272  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" "B31" 
    xhandlers
    flags 
    probability 4586430799225139703
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r9|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr  284  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr  286  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B33 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4586368099443246250
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  318  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  322  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  324  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B53" "B36" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  376  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  380  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  382  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B53 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B39" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r9|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction r8|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  400  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B41 falseDestination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B44" "B43" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  450  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  452  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  460  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  472  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  474  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  498  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  500  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B53" "B52" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  508  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B34" "B52" "B50" 
    successors "B54" "B73" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B53" "B70" "B68" 
    successors "B74" 
    xhandlers
    flags 
    probability 4587127463468400288
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr  680  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  682  <|@ instruction r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  684  <|@ instruction r10|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  686  <|@ instruction MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  688  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  540  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B55 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B55" "B57" 
    successors "B62" "B61" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  588  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  590  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  592  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B59" 
    successors "B65" "B64" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  598  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  612  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  614  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  616  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B68" "B67" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  622  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  624  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  636  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  638  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  640  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" "B65" 
    successors "B73" "B70" 
    xhandlers
    flags 
    probability 4582623863841029792
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  648  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B73 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580882203232878328
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B70 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD <|@ <|@
      nr  806  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4582490856045338880
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction MOV (x: [r10|QWORD[.] + rax|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr  814  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4582490809926041600
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r14|DWORD = NEG r14|DWORD size: DWORD <|@ <|@
      nr  710  <|@ instruction rcx|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r11|DWORD = NEG r14|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: r11|DWORD, y: [rcx|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582660942104327422
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rcx:0, r10:0, r13:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r11|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: r13|QWORD[.] r14|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 21] <|@ <|@
      nr   82  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B12" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585941717949989471
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP r8|DWORD y: 10 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4580215294540910528
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr   92  <|@ instruction r11|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction rsi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B74" 
    xhandlers
    flags 
    probability 4579829086309151151
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B10 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573616664586288800
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  554  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B57" 
    successors "B59" "B57" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  560  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  562  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B59 falseDestination: B57 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B39" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582623863841029792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  418  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  420  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B41 falseDestination: B39 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4572724934354915250
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  358  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  366  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [stack:0, stack:8]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: stack:32|DWORD 
locals: stack:48|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:33] <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B23" 
    xhandlers
    flags 
    probability 4560190131061579018
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761] <|@ <|@
      nr  142  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-75787|0xfffffffffffed7f5] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B14" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  152  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 0]
locals: rdx|QWORD[.] r14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r8|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: r9|DWORD - r10|QWORD[.] - - rbx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rdx|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:17, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r8|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: int[-78363|0xfffffffffffecde5] <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  856  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: stack:40|DWORD - r10|QWORD[.] - - rbx|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rdx|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:75, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-76819|0xfffffffffffed3ed] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33]
stack: r11|DWORD 
locals: rdx|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:33] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed] <|@ <|@
      nr   20  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction MOV [r15|QWORD + 668] y: -84763 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r9|DWORD - r10|QWORD[.] rdi|DWORD r14|DWORD rbp|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52]
locals: rdx|QWORD[.] - - rsi|DWORD 
>@ <|@ instruction DEOPT info [bci:107, 52] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed] <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction MOV [r15|QWORD + 668] y: -72987 size: DWORD <|@ <|@
      nr  978  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: stack:28|DWORD r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30]
locals: rdx|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 30] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 668] y: -67867 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r11|DWORD r8|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21]
locals: rdx|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761] <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE input: int[-71691|0xfffffffffffee7f5] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction r8|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ldc           #50         // -2147483648
     3: if_icmpne     15
     6: aload_0       
     7: ldc           #51         // "-2147483648"
     9: invokevirtual #18         // append:(java.lang.String)java.lang.AbstractStringBuilder
    12: pop           
    13: aload_0       
    14: areturn       
    15: iload_1       
    16: ifge          29
    19: iload_1       
    20: ineg          
    21: invokestatic  #35         // java.lang.Integer.stringSize:(int)int
    24: iconst_1      
    25: iadd          
    26: goto          33
    29: iload_1       
    30: invokestatic  #35         // java.lang.Integer.stringSize:(int)int
    33: istore_2      
    34: aload_0       
    35: getfield      #2          // count:int
    38: iload_2       
    39: iadd          
    40: istore_3      
    41: aload_0       
    42: iload_3       
    43: invokespecial #3          // ensureCapacityInternal:(int)void
    46: iload_1       
    47: iload_3       
    48: aload_0       
    49: getfield      #1          // value:char[]
    52: invokestatic  #36         // java.lang.Integer.getChars:(int, int, char[])void
    55: aload_0       
    56: iload_3       
    57: putfield      #2          // count:int
    60: aload_0       
    61: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24181fe000000800f84eb050000418b750c458b551048b9addeaddeaddeadde4585f60f8c2f0400004585d20f842a05000041bb00000000e9280000000f1f80000000000f1f8000000000458bc341ffc0463b7499100f8e14000000850500000000458bd84183fb0a72e0e9d4050000428b0cd50c0000004103f08bc62bc183f8010f8d5601000049c1e2034185024585f60f8cad030000b90000000041bb00000000418bc6458b420c8bdee98500000066660f1f840000000000418bc1ba1f85eb51f7ea8bc2c1f8058bf8c1e70683e2e003fa8bd0c1e20203fa418bd12bd783fa640f83bf0400008bfbffcf443bc70f863b0500008d6bfe443bc50f868904000049b9addeaddeaddeadde450fbf4c51106645894c7a1049b9addeaddeaddeadde450fbf4c51106645894c6a108505000000008bdd448bc84181f9000001000f8d75ffffff48b8addeaddeaddeaddee93b000000660f1f4400008bebffcd443bc50f863c05000044894c2408460fbf4c70106645894c6a10f7c20000f8ff0f84360000008505000000008bdd448bcf4169d1cdcc00008bfac1ef138befc1e503448bf741d1e64103ee458bf1442bf54183fe2472a5e9f50300004585db0f85550200004189750c498bc5488b6c24204883c428850500000000c5f877c344894424108bc1d1e08d40028bd02bd685d20f4cc683f8010f8cd6030000baf7ffff7f2bd085d20f8c31040000498b57604d8b5f7081f8ffffff000f83f6020000448bc841d1e1458d49174183e1f84d63c9498bd94803da493bdb0f87d602000049895f60410f188411c0000000410f18841100010000410f18841140010000410f1884118001000089420c48c70201000000c74208addeadde8974240c448954240844897424144c892c24448be8448bf1488bc2453bee458bd5450f4fd64d63d24983fa010f8c9e000000448b4c24084c8d58104e8d04cd100000004d8d4af04d85c948c7c1000000000f8d2c0200004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63dd4d3bda0f8f39000000488b14244c8bd049c1ea03448952104c8bea49c1ed0949ba00c024080100000047886415008b74240c4c8bd0448b7424144c8beae9fffcffff4e8d4450104d2bda4d8d53f04d85d20f8d2401000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f45ffffff6647892448e93bffffff8d43fe443bc00f86ec0100006641894c42104189750c498bc5488b6c24204883c428850500000000c5f877c341f7deb92d00000041bb2d000000e94bfcffff4585d20f8423020000458bde41f7db41b800000000e91d000000660f1f840000000000463b5c81100f8e1400000085050000000041ffc04183f80a72e6e9ca010000428b0cd50c000000458d4002458bd84403de418bf32bf183fe010f8d9500000049c1e203418bf3e9c6fbffffc5f9efc049c7c10000000066660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e9bafeffff660f1f440000660f1f440000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe9bafdffff8974240c448954240844897424144c892c2448baaddeaddeaddeadde488bf28bd0448bc9b900000000448be8458bf1e80000000090e944fdffff4489442410418bf3e987fcffff4489742414498bd549baaddeaddeaddeadde4d8bda41baf5d7feff4589979c0200004d899fa8020000e8000000009041b8e58ffeff498bd54589879c0200004d89a7a8020000e8000000009041b8e5a9feffebe141b8e5cdfeff44894c2408498bd54589879c0200004d89a7a8020000e8000000009041baedd3feff448b5c24104489742414498bd54589979c0200004d89a7a8020000e8000000009049bb000000000000000041baedf9feff498bd5e966ffffff448b4c2408498bd541c7879c020000e5b4feff4d89a7a8020000e8000000009041b8e59cfeffe955ffffff41baedd2feffeb944489742414498bd541c7879c020000e5e2feff4d89a7a8020000e800000000904489742414498bd541c7879c020000e5f6feff4d89a7a8020000e800000000904489742414498bd549baaddeaddeaddeadde4d8bda41baf5e7feffe9d3feffff41b8e5bffeffe907ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55ee8deb slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 CMP r14|DWORD y: -2147483648 size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 26 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 28 r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 75 30 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 75 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 85 32 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 88 34 BRANCH trueDestinationProbability: 0.01581399293628727 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13  <||@
  Comment 94 block B13 null  <||@
  Comment 94 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 130 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 97 132 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16  <||@
  Comment 103 block B16 null  <||@
  Comment 103 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 160 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 109 162 JUMP ~[] destination: B16 -> B17  <||@
  Comment 114 block B18 loop 1 depth 1 header:40|LoopBegin  <||@
  Comment 114 170 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 172 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 134 174 CMP (x: r14|DWORD, y: [rcx|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 139 176 BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 145 block B19 loop 1 depth 1 header:40|LoopBegin  <||@
  Comment 145 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 180 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 30]  <||@
  Comment 145 [rcx:0, r10:0, r13:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r14|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 145 {infopoint: SAFEPOINT}  <||@
  Comment 145 11  <||@
  Comment 151 182 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 154 184 JUMP ~[] destination: B19 -> B17  <||@
  Comment 154 block B17 loop 1 depth 1 header:40|LoopBegin  <||@
  Comment 154 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 154 166 CMP r11|DWORD y: 10 size: DWORD  <||@
  Comment 158 168 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B101  <||@
  Comment 165 block B20 null  <||@
  Comment 165 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 188 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 173 190 rsi|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 176 192 rax|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 180 194 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 183 196 BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 189 block B21 null  <||@
  Comment 189 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 200 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3  <||@
  Comment 193 202 JUMP ~[] destination: B21 -> B74  <||@
  Comment 193 block B74 null  <||@
  Comment 193 698 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 193 700 NULLCHECK [r10|QWORD[.]] state [bci:46]  <||@
  Comment 193 [r10:0, r13:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |rsi|DWORD   <||@
  Comment 193 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 196 702 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 199 704 BRANCH trueDestinationProbability: 0.02370877285335382 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 205 block B76 null  <||@
  Comment 205 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 720 rcx|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 210 722 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 216 726 JUMP ~[] destination: B76 -> B77  <||@
  Comment 216 block B77 null  <||@
  Comment 216 728 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 216 724 rax|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 219 730 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 223 732 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 225 736 JUMP ~[] destination: B77 -> B78  <||@
  Comment 230 block B92 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 230 870 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 872 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 243 874 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 248 876 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 250 878 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 255 880 rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 260 882 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 263 884 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 265 886 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 270 888 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 272 890 rdx|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 277 892 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 280 894 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98  <||@
  Comment 286 block B93 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 286 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 898 rdi|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 290 900 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 293 902 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97  <||@
  Comment 299 block B94 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 299 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 906 rbp|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 302 908 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 305 910 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 311 block B95 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 311 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 914 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 311 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 321 916 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 327 918 MOV (x: [r10|QWORD[.] + rdi|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 333 920 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 333 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 343 922 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 349 924 MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 355 926 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 52]  <||@
  Comment 355 [r10:0, r13:0]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4          |5          |6         
     locals:  |rax|DWORD  |-  |r10|QWORD[.]  |rax|DWORD  |rdx|DWORD  |rbp|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |r13|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 355 {infopoint: SAFEPOINT}  <||@
  Comment 355 11  <||@
  Comment 361 928 rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 363 932 JUMP ~[] destination: B95 -> B78  <||@
  Comment 363 block B78 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 363 738 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 363 734 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 366 740 CMP r9|DWORD y: 65536 size: DWORD  <||@
  Comment 373 742 BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B92  <||@
  Comment 379 block B79 null  <||@
  Comment 379 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 746 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 379 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 389 748 JUMP ~[] destination: B79 -> B80  <||@
  Comment 394 block B81 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 394 768 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 770 rbp|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 404 772 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 407 774 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B89  <||@
  Comment 413 block B82 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 413 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 778 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 418 780 r9|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 424 782 MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 430 784 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 436 786 BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B88  <||@
  Comment 442 block B88 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 442 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 834 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 52]  <||@
  Comment 442 [rax:0, r10:0, r13:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2             |3          |4          |5          |6         
     locals:  |stack:40|DWORD  |-  |r10|QWORD[.]  |rdi|DWORD  |r14|DWORD  |rbp|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |r13|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 442 {infopoint: SAFEPOINT}  <||@
  Comment 442 11  <||@
  Comment 448 836 rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 450 838 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 453 840 JUMP ~[] destination: B88 -> B80  <||@
  Comment 453 block B80 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 453 750 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 453 752 rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD  <||@
  Comment 460 754 rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 465 756 rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 470 758 r14|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 476 760 rbp|DWORD = ADD (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 479 762 r14|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 485 764 CMP r14|DWORD y: 36 size: DWORD  <||@
  Comment 489 766 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B90  <||@
  Comment 496 block B83 null  <||@
  Comment 496 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 496 790 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 499 792 BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 505 block B84 null  <||@
  Comment 505 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 796 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 509 798 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 512 800 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 521 12  <||@
  Comment 531 block B22 null  <||@
  Comment 531 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 206 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 536 208 JUMP ~[] destination: B22 -> B23  <||@
  Comment 536 block B23 null  <||@
  Comment 536 210 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 536 212 rax|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 540 214 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 543 216 rdx|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 547 218 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 549 220 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: <  <||@
  Comment 552 222 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 555 224 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 561 block B25 null  <||@
  Comment 561 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 240 rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 566 242 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 568 244 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 570 246 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 576 block B28 null  <||@
  Comment 576 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 270 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 580 272 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 584 274 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 590 276 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B33  <||@
  Comment 596 block B29 null  <||@
  Comment 596 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 596 280 r9|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 602 282 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 606 284 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 610 286 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 613 288 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 619 290 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 622 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B33 falseDestination: B29 -> B31  <||@
  Comment 628 block B31 null  <||@
  Comment 628 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 308 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 632 310 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 641 312 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 650 314 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 659 316 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 668 318 MOV (x: [rdx|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 671 320 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 678 322 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 678 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 685 324 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 685 326 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 689 328 stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 694 330 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 699 332 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 703 334 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 706 336 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 709 338 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 712 340 JUMP ~[] destination: B31 -> B34  <||@
  Comment 712 block B34 null  <||@
  Comment 712 374 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 712 376 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 715 378 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 722 380 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 725 382 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 729 384 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B53 falseDestination: B34 -> B36  <||@
  Comment 735 block B36 null  <||@
  Comment 735 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 392 r9|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 740 394 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 744 396 r8|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 752 398 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 756 400 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 759 406 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 766 402 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B41 falseDestination: B36 -> B39  <||@
  Comment 772 block B41 null  <||@
  Comment 772 432 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 434 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 776 436 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 779 438 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 785 block B43 null  <||@
  Comment 785 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 446 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 791 448 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 797 450 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 801 452 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 804 454 JUMP ~[] destination: B43 -> B44  <||@
  Comment 804 block B44 null  <||@
  Comment 804 456 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 804 458 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 808 460 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 811 462 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 817 block B46 null  <||@
  Comment 817 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 470 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 823 472 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 829 474 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 833 476 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 836 478 JUMP ~[] destination: B46 -> B47  <||@
  Comment 836 block B47 null  <||@
  Comment 836 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 836 482 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 840 484 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 843 486 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 849 block B49 null  <||@
  Comment 849 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 494 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 855 496 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 861 498 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 865 500 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 868 502 JUMP ~[] destination: B49 -> B50  <||@
  Comment 868 block B50 null  <||@
  Comment 868 504 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 868 506 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 874 508 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 877 510 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 883 block B52 null  <||@
  Comment 883 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 883 518 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 888 520 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 893 522 JUMP ~[] destination: B52 -> B53  <||@
  Comment 893 block B53 null  <||@
  Comment 893 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 893 526 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 896 528 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 899 530 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B73  <||@
  Comment 905 block B73 null  <||@
  Comment 905 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 672 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 909 678 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3  <||@
  Comment 916 680 MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 920 682 r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 927 684 r10|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 937 686 MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 942 688 rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 946 690 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 949 692 r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 954 694 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 957 696 JUMP ~[] destination: B73 -> B74  <||@
  Comment 962 block B54 null  <||@
  Comment 962 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 534 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 967 536 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 970 538 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 974 540 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 977 542 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 983 block B55 null  <||@
  Comment 983 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 546 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 990 548 JUMP ~[] destination: B55 -> B59  <||@
  Comment 990 block B59 null  <||@
  Comment 990 572 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 990 574 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 994 576 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 997 578 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1003 block B61 null  <||@
  Comment 1003 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 586 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1007 588 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1013 590 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1017 592 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1020 594 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1020 block B62 null  <||@
  Comment 1020 596 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1020 598 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1024 600 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1027 602 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1033 block B64 null  <||@
  Comment 1033 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 610 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1037 612 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1043 614 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1047 616 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1050 618 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1050 block B65 null  <||@
  Comment 1050 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1050 622 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1054 624 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1057 626 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67  <||@
  Comment 1063 block B67 null  <||@
  Comment 1063 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1063 634 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1067 636 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1073 638 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1077 640 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1080 642 JUMP ~[] destination: B67 -> B68  <||@
  Comment 1080 block B68 null  <||@
  Comment 1080 644 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1080 646 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1083 648 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1086 650 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B73 falseDestination: B68 -> B70  <||@
  Comment 1092 block B70 null  <||@
  Comment 1092 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1092 660 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1097 664 JUMP ~[] destination: B70 -> B73  <||@
  Comment 1102 block B85 null  <||@
  Comment 1102 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 804 rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 1105 806 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1108 808 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 1114 block B86 null  <||@
  Comment 1114 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1114 812 MOV (x: [r10|QWORD[.] + rax|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 1120 814 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1124 816 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1127 818 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1136 12  <||@
  Comment 1146 block B75 null  <||@
  Comment 1146 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 708 r14|DWORD = NEG r14|DWORD size: DWORD  <||@
  Comment 1149 710 rcx|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 1154 712 r11|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1160 716 JUMP ~[] destination: B75 -> B77  <||@
  Comment 1165 block B3 null  <||@
  Comment 1165 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1165 38 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1168 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 1174 block B5 null  <||@
  Comment 1174 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1174 60 r11|DWORD = NEG r14|DWORD size: DWORD  <||@
  Comment 1180 62 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1186 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 1191 block B7 loop 0 depth 1 header:57|LoopBegin  <||@
  Comment 1191 72 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1200 74 CMP (x: r11|DWORD, y: [rcx|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 1205 76 BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 1211 block B8 loop 0 depth 1 header:57|LoopBegin  <||@
  Comment 1211 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1211 80 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 21]  <||@
  Comment 1211 [rcx:0, r10:0, r13:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1        
     locals:  |r11|DWORD  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 1211 {infopoint: SAFEPOINT}  <||@
  Comment 1211 11  <||@
  Comment 1217 82 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 1220 84 JUMP ~[] destination: B8 -> B6  <||@
  Comment 1220 block B6 loop 0 depth 1 header:57|LoopBegin  <||@
  Comment 1220 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1220 68 CMP r8|DWORD y: 10 size: DWORD  <||@
  Comment 1224 70 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12  <||@
  Comment 1231 block B9 null  <||@
  Comment 1231 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1231 88 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1239 90 r8|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 1243 92 r11|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1249 94 rsi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1254 96 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1257 98 BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 1263 block B10 null  <||@
  Comment 1263 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1263 102 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3  <||@
  Comment 1267 104 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1270 106 JUMP ~[] destination: B10 -> B74  <||@
  Comment 1275 block B56 null  <||@
  Comment 1275 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1275 552 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1279 554 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1286 556 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1286 block B57 loop 3 depth 1 header:739|LoopBegin  <||@
  Comment 1286 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1296 560 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1302 562 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1306 564 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1309 566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B59 falseDestination: B57 -> B57  <||@
  Comment 1316 block B39 loop 2 depth 1 header:674|LoopBegin  <||@
  Comment 1316 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 418 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1334 420 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1340 422 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1344 424 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1347 426 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B41 falseDestination: B39 -> B39  <||@
  Comment 1354 block B33 null  <||@
  Comment 1354 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 344 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1358 346 stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1363 348 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1368 350 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 356 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1372 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1382 358 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1385 360 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1387 362 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1390 364 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1395 366 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1398 368 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1401 370 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:33]  <||@
  Comment 1401 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1406 [stack:0, stack:8]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33, duringCall: false, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |stack:32|DWORD     |                |   |    <||@
  Comment 1407 372 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1412 block B11 null  <||@
  Comment 1412 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1412 110 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1417 112 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1420 114 JUMP ~[] destination: B11 -> B23  <||@
  Comment 1425 block B14 null  <||@
  Comment 1425 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1425 136 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1430 138 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1433 140 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761]  <||@
  Comment 1433 {Object[d.a@239698761]}  <||@
  Comment 1443 142 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1446 144 r10|DWORD = MOVE input: int[-75787|0xfffffffffffed7f5]  <||@
  Comment 1452 148 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1452 block B15 null  <||@
  Comment 1452 150 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1452 152 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1459 154 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1466 156 DEOPT info [bci:0]  <||@
  Comment 1466 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1471 [rdx:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rdx|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 1472 block B96 null  <||@
  Comment 1472 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 936 r8|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5]  <||@
  Comment 1478 940 JUMP ~[] destination: B96 -> B99  <||@
  Comment 1478 block B99 null  <||@
  Comment 1478 958 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1478 954 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 960 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 1488 962 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1495 964 DEOPT info [bci:17, 52]  <||@
  Comment 1495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1500 [rdx:0, r10:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r9|DWORD  |-  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rdx|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 1501 block B98 null  <||@
  Comment 1501 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 952 r8|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5]  <||@
  Comment 1507 956 JUMP ~[] destination: B98 -> B99  <||@
  Comment 1509 block B90 null  <||@
  Comment 1509 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 854 r8|DWORD = MOVE input: int[-78363|0xfffffffffffecde5]  <||@
  Comment 1515 860 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1515 block B91 null  <||@
  Comment 1515 862 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1515 856 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1520 858 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1523 864 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 1530 866 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1537 868 DEOPT info [bci:75, 52]  <||@
  Comment 1537 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1542 [rdx:0, r10:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0               |1  |2             |3  |4  |5          |6         
     locals:  |stack:40|DWORD  |-  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rdx|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 1543 block B24 null  <||@
  Comment 1543 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1543 228 r10|DWORD = MOVE input: int[-76819|0xfffffffffffed3ed]  <||@
  Comment 1549 236 JUMP ~[] destination: B24 -> B27  <||@
  Comment 1549 block B27 null  <||@
  Comment 1549 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1549 230 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1554 232 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1559 234 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1562 262 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1569 264 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1576 266 DEOPT info [bci:33]  <||@
  Comment 1576 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1581 [rdx:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33, duringCall: false, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rdx|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |r11|DWORD     |                |   |    <||@
  Comment 1582 block B1 null  <||@
  Comment 1582 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1582 16 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1592 18 r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed]  <||@
  Comment 1598 20 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1601 22 JUMP ~[] destination: B1 -> B15  <||@
  Comment 1606 block B87 null  <||@
  Comment 1606 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1606 822 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1611 824 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1614 826 MOV [r15|QWORD + 668] y: -84763 size: DWORD  <||@
  Comment 1625 828 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1632 830 DEOPT info [bci:107, 52]  <||@
  Comment 1632 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1637 [rdx:0, r10:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0         |1  |2             |3          |4          |5          |6         
     locals:  |r9|DWORD  |-  |r10|QWORD[.]  |rdi|DWORD  |r14|DWORD  |rbp|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rdx|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 1638 block B97 null  <||@
  Comment 1638 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 944 r8|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5]  <||@
  Comment 1644 948 JUMP ~[] destination: B97 -> B99  <||@
  Comment 1649 block B26 null  <||@
  Comment 1649 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1649 250 r10|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed]  <||@
  Comment 1655 258 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1657 block B101 null  <||@
  Comment 1657 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 972 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1662 974 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1665 976 MOV [r15|QWORD + 668] y: -72987 size: DWORD  <||@
  Comment 1676 978 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1683 980 DEOPT info [bci:2, 30]  <||@
  Comment 1683 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1688 [rdx:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0               |1         
     locals:  |stack:28|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rdx|QWORD[.]  |stack:28|DWORD  |-  |-   <||@
  Comment 1689 block B12 null  <||@
  Comment 1689 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1689 118 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1694 120 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1697 122 MOV [r15|QWORD + 668] y: -67867 size: DWORD  <||@
  Comment 1708 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1715 126 DEOPT info [bci:2, 21]  <||@
  Comment 1715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1720 [rdx:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1        
     locals:  |r11|DWORD  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rdx|QWORD[.]  |stack:28|DWORD  |-  |-   <||@
  Comment 1721 block B4 null  <||@
  Comment 1721 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1721 44 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1726 46 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 48 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761]  <||@
  Comment 1729 {Object[d.a@239698761]}  <||@
  Comment 1739 50 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1742 52 r10|DWORD = MOVE input: int[-71691|0xfffffffffffee7f5]  <||@
  Comment 1748 56 JUMP ~[] destination: B4 -> B15  <||@
  Comment 1753 block B89 null  <||@
  Comment 1753 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1753 844 r8|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5]  <||@
  Comment 1759 850 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1764 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1764 4  <||@
  Comment 1770 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1770 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5456[java.lang.AbstractStringBuilder.append(int)]"
  method "HotSpotCompilation-5456[java.lang.AbstractStringBuilder.append(int)]"
  date 1526687583826
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1198d0b40 448b560849c1e203493bc20f850f4313ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24181fe000000800f84eb050000418b750c458b551048b9c86d03c0060000004585f60f8c2f0400004585d20f842a05000041bb00000000e9280000000f1f80000000000f1f8000000000458bc341ffc0463b7499100f8e1400000085052fb460f0458bd84183fb0a72e0e9d4050000428b0cd50c0000004103f08bc62bc183f8010f8d5601000049c1e2034185024585f60f8cad030000b90000000041bb00000000418bc6458b420c8bdee98500000066660f1f840000000000418bc1ba1f85eb51f7ea8bc2c1f8058bf8c1e70683e2e003fa8bd0c1e20203fa418bd12bd783fa640f83bf0400008bfbffcf443bc70f863b0500008d6bfe443bc50f868904000049b9006e03c006000000450fbf4c51106645894c7a1049b9d86e03c006000000450fbf4c51106645894c6a1085055db360f08bdd448bc84181f9000001000f8d75ffffff48b8b06f03c006000000e93b000000660f1f4400008bebffcd443bc50f863c05000044894c2408460fbf4c70106645894c6a10f7c20000f8ff0f8436000000850506b360f08bdd448bcf4169d1cdcc00008bfac1ef138befc1e503448bf741d1e64103ee458bf1442bf54183fe2472a5e9f50300004585db0f85550200004189750c498bc5488b6c24204883c4288505b7b260f0c5f877c344894424108bc1d1e08d40028bd02bd685d20f4cc683f8010f8cd6030000baf7ffff7f2bd085d20f8c31040000498b57604d8b5f7081f8ffffff000f83f6020000448bc841d1e1458d49174183e1f84d63c9498bd94803da493bdb0f87d602000049895f60410f188411c0000000410f18841100010000410f18841140010000410f1884118001000089420c48c70201000000c74208410000f88974240c448954240844897424144c892c24448be8448bf1488bc2453bee458bd5450f4fd64d63d24983fa010f8c9e000000448b4c24084c8d58104e8d04cd100000004d8d4af04d85c948c7c1000000000f8d2c0200004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63dd4d3bda0f8f39000000488b14244c8bd049c1ea03448952104c8bea49c1ed0949ba00c024080100000047886415008b74240c4c8bd0448b7424144c8beae9fffcffff4e8d4450104d2bda4d8d53f04d85d20f8d2401000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f45ffffff6647892448e93bffffff8d43fe443bc00f86ec0100006641894c42104189750c498bc5488b6c24204883c428850550b060f0c5f877c341f7deb92d00000041bb2d000000e94bfcffff4585d20f8423020000458bde41f7db41b800000000e91d000000660f1f840000000000463b5c81100f8e14000000850505b060f041ffc04183f80a72e6e9ca010000428b0cd50c000000458d4002458bd84403de418bf32bf183fe010f8d9500000049c1e203418bf3e9c6fbffffc5f9efc049c7c10000000066660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e9bafeffff660f1f440000660f1f440000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe9bafdffff8974240c448954240844897424144c892c2448ba080200c007000000488bf28bd0448bc9b900000000448be8458bf1e8e23189ff90e944fdffff4489442410418bf3e987fcffff4489742414498bd549ba88533771070000004d8bda41baf5d7feff4589979c0200004d899fa8020000e8ff5413ff9041b8e58ffeff498bd54589879c0200004d89a7a8020000e8e25413ff9041b8e5a9feffebe141b8e5cdfeff44894c2408498bd54589879c0200004d89a7a8020000e8b85413ff9041baedd3feff448b5c24104489742414498bd54589979c0200004d89a7a8020000e8915413ff9049bb000000000000000041baedf9feff498bd5e966ffffff448b4c2408498bd541c7879c020000e5b4feff4d89a7a8020000e8595413ff9041b8e59cfeffe955ffffff41baedd2feffeb944489742414498bd541c7879c020000e5e2feff4d89a7a8020000e8265413ff904489742414498bd541c7879c020000e5f6feff4d89a7a8020000e8065413ff904489742414498bd549ba88533771070000004d8bda41baf5e7feffe9d3feffff41b8e5bffeffe907ffffffe877e552ff90e8d15213ff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55ee8deb slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 CMP r14|DWORD y: -2147483648 size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 26 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 28 r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 75 30 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 75 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 85 32 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 88 34 BRANCH trueDestinationProbability: 0.01581399293628727 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B13  <||@
  Comment 94 block B13 null  <||@
  Comment 94 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 130 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 97 132 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B16  <||@
  Comment 103 block B16 null  <||@
  Comment 103 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 160 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 109 162 JUMP ~[] destination: B16 -> B17  <||@
  Comment 114 block B18 loop 1 depth 1 header:40|LoopBegin  <||@
  Comment 114 170 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 172 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 134 174 CMP (x: r14|DWORD, y: [rcx|QWORD[.] + r11|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 139 176 BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 145 block B19 loop 1 depth 1 header:40|LoopBegin  <||@
  Comment 145 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 180 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 30]  <||@
  Comment 145 [rcx:0, r10:0, r13:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r14|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 145 {infopoint: SAFEPOINT}  <||@
  Comment 145 11  <||@
  Comment 151 182 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 154 184 JUMP ~[] destination: B19 -> B17  <||@
  Comment 154 block B17 loop 1 depth 1 header:40|LoopBegin  <||@
  Comment 154 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 154 166 CMP r11|DWORD y: 10 size: DWORD  <||@
  Comment 158 168 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B101  <||@
  Comment 165 block B20 null  <||@
  Comment 165 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 188 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 173 190 rsi|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 176 192 rax|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 180 194 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 183 196 BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 189 block B21 null  <||@
  Comment 189 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 200 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3  <||@
  Comment 193 202 JUMP ~[] destination: B21 -> B74  <||@
  Comment 193 block B74 null  <||@
  Comment 193 698 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 193 700 NULLCHECK [r10|QWORD[.]] state [bci:46]  <||@
  Comment 193 [r10:0, r13:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 46, duringCall: false, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |rsi|DWORD   <||@
  Comment 193 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 196 702 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 199 704 BRANCH trueDestinationProbability: 0.02370877285335382 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 205 block B76 null  <||@
  Comment 205 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 720 rcx|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 210 722 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 216 726 JUMP ~[] destination: B76 -> B77  <||@
  Comment 216 block B77 null  <||@
  Comment 216 728 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 216 724 rax|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 219 730 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 223 732 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 225 736 JUMP ~[] destination: B77 -> B78  <||@
  Comment 230 block B92 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 230 870 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 872 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 243 874 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 248 876 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 250 878 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 255 880 rdi|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 260 882 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 263 884 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 265 886 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 270 888 rdi|DWORD = ADD (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 272 890 rdx|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 277 892 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 280 894 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98  <||@
  Comment 286 block B93 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 286 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 898 rdi|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 290 900 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 293 902 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97  <||@
  Comment 299 block B94 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 299 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 906 rbp|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 302 908 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 305 910 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 311 block B95 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 311 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 914 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 311 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 321 916 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 327 918 MOV (x: [r10|QWORD[.] + rdi|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 333 920 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 333 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 343 922 r9|DWORD = MOVSX [r9|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 349 924 MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 355 926 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 52]  <||@
  Comment 355 [r10:0, r13:0]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4          |5          |6         
     locals:  |rax|DWORD  |-  |r10|QWORD[.]  |rax|DWORD  |rdx|DWORD  |rbp|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |r13|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 355 {infopoint: SAFEPOINT}  <||@
  Comment 355 11  <||@
  Comment 361 928 rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 363 932 JUMP ~[] destination: B95 -> B78  <||@
  Comment 363 block B78 loop 4 depth 1 header:106|LoopBegin  <||@
  Comment 363 738 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 363 734 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 366 740 CMP r9|DWORD y: 65536 size: DWORD  <||@
  Comment 373 742 BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B92  <||@
  Comment 379 block B79 null  <||@
  Comment 379 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 746 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 379 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 389 748 JUMP ~[] destination: B79 -> B80  <||@
  Comment 394 block B81 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 394 768 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 770 rbp|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 404 772 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 407 774 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B89  <||@
  Comment 413 block B82 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 413 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 778 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 418 780 r9|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 424 782 MOV (x: [r10|QWORD[.] + rbp|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 430 784 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 436 786 BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B88  <||@
  Comment 442 block B88 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 442 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 834 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 52]  <||@
  Comment 442 [rax:0, r10:0, r13:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2             |3          |4          |5          |6         
     locals:  |stack:40|DWORD  |-  |r10|QWORD[.]  |rdi|DWORD  |r14|DWORD  |rbp|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |r13|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 442 {infopoint: SAFEPOINT}  <||@
  Comment 442 11  <||@
  Comment 448 836 rbx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 450 838 r9|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 453 840 JUMP ~[] destination: B88 -> B80  <||@
  Comment 453 block B80 loop 5 depth 1 header:141|LoopBegin  <||@
  Comment 453 750 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 453 752 rdx|DWORD = IMUL r9|DWORD y: 52429 size: DWORD  <||@
  Comment 460 754 rdi|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 465 756 rbp|DWORD = SHL rdi|DWORD y: 3 size: DWORD  <||@
  Comment 470 758 r14|DWORD = SHL rdi|DWORD size: DWORD  <||@
  Comment 476 760 rbp|DWORD = ADD (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 479 762 r14|DWORD = SUB (x: r9|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 485 764 CMP r14|DWORD y: 36 size: DWORD  <||@
  Comment 489 766 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B80 -> B81 falseDestination: B80 -> B90  <||@
  Comment 496 block B83 null  <||@
  Comment 496 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 496 790 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 499 792 BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 505 block B84 null  <||@
  Comment 505 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 796 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 509 798 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 512 800 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 521 12  <||@
  Comment 531 block B22 null  <||@
  Comment 531 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 206 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 536 208 JUMP ~[] destination: B22 -> B23  <||@
  Comment 536 block B23 null  <||@
  Comment 536 210 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 536 212 rax|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 540 214 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 543 216 rdx|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 547 218 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 549 220 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: <  <||@
  Comment 552 222 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 555 224 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 561 block B25 null  <||@
  Comment 561 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 240 rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 566 242 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 568 244 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 570 246 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 576 block B28 null  <||@
  Comment 576 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 270 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 580 272 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 584 274 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 590 276 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B33  <||@
  Comment 596 block B29 null  <||@
  Comment 596 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 596 280 r9|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 602 282 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 606 284 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 610 286 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 613 288 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 619 290 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 622 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B33 falseDestination: B29 -> B31  <||@
  Comment 628 block B31 null  <||@
  Comment 628 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 308 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 632 310 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 641 312 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 650 314 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 659 316 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 668 318 MOV (x: [rdx|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 671 320 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 678 322 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 678 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 685 324 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 685 326 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 689 328 stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 694 330 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 699 332 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 703 334 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 706 336 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 709 338 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 712 340 JUMP ~[] destination: B31 -> B34  <||@
  Comment 712 block B34 null  <||@
  Comment 712 374 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 712 376 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 715 378 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 722 380 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 725 382 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 729 384 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B34 -> B53 falseDestination: B34 -> B36  <||@
  Comment 735 block B36 null  <||@
  Comment 735 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 392 r9|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 740 394 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 744 396 r8|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 752 398 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 756 400 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 759 406 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 766 402 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B41 falseDestination: B36 -> B39  <||@
  Comment 772 block B41 null  <||@
  Comment 772 432 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 434 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 776 436 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 779 438 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 785 block B43 null  <||@
  Comment 785 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 446 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 791 448 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 797 450 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 801 452 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 804 454 JUMP ~[] destination: B43 -> B44  <||@
  Comment 804 block B44 null  <||@
  Comment 804 456 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 804 458 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 808 460 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 811 462 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 817 block B46 null  <||@
  Comment 817 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 470 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 823 472 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 829 474 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 833 476 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 836 478 JUMP ~[] destination: B46 -> B47  <||@
  Comment 836 block B47 null  <||@
  Comment 836 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 836 482 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 840 484 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 843 486 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 849 block B49 null  <||@
  Comment 849 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 494 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 855 496 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 861 498 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 865 500 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 868 502 JUMP ~[] destination: B49 -> B50  <||@
  Comment 868 block B50 null  <||@
  Comment 868 504 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 868 506 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 874 508 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 877 510 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 883 block B52 null  <||@
  Comment 883 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 883 518 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 888 520 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 893 522 JUMP ~[] destination: B52 -> B53  <||@
  Comment 893 block B53 null  <||@
  Comment 893 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 893 526 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 896 528 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 899 530 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B73  <||@
  Comment 905 block B73 null  <||@
  Comment 905 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 672 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 909 678 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3  <||@
  Comment 916 680 MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 920 682 r13|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 927 684 r10|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 937 686 MOVB (x: [r13|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 942 688 rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 946 690 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 949 692 r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 954 694 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 957 696 JUMP ~[] destination: B73 -> B74  <||@
  Comment 962 block B54 null  <||@
  Comment 962 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 534 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 967 536 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 970 538 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 974 540 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 977 542 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 983 block B55 null  <||@
  Comment 983 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 546 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 990 548 JUMP ~[] destination: B55 -> B59  <||@
  Comment 990 block B59 null  <||@
  Comment 990 572 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 990 574 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 994 576 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 997 578 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1003 block B61 null  <||@
  Comment 1003 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 586 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1007 588 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1013 590 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1017 592 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1020 594 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1020 block B62 null  <||@
  Comment 1020 596 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1020 598 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1024 600 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1027 602 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1033 block B64 null  <||@
  Comment 1033 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 610 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1037 612 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1043 614 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1047 616 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1050 618 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1050 block B65 null  <||@
  Comment 1050 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1050 622 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1054 624 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1057 626 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B68 falseDestination: B65 -> B67  <||@
  Comment 1063 block B67 null  <||@
  Comment 1063 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1063 634 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1067 636 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1073 638 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1077 640 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1080 642 JUMP ~[] destination: B67 -> B68  <||@
  Comment 1080 block B68 null  <||@
  Comment 1080 644 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1080 646 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1083 648 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1086 650 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B68 -> B73 falseDestination: B68 -> B70  <||@
  Comment 1092 block B70 null  <||@
  Comment 1092 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1092 660 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1097 664 JUMP ~[] destination: B70 -> B73  <||@
  Comment 1102 block B85 null  <||@
  Comment 1102 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 804 rax|DWORD = LEA [rbx|DWORD - 2] size: DWORD  <||@
  Comment 1105 806 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1108 808 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87  <||@
  Comment 1114 block B86 null  <||@
  Comment 1114 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1114 812 MOV (x: [r10|QWORD[.] + rax|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 1120 814 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1124 816 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1127 818 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1136 12  <||@
  Comment 1146 block B75 null  <||@
  Comment 1146 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 708 r14|DWORD = NEG r14|DWORD size: DWORD  <||@
  Comment 1149 710 rcx|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 1154 712 r11|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1160 716 JUMP ~[] destination: B75 -> B77  <||@
  Comment 1165 block B3 null  <||@
  Comment 1165 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1165 38 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1168 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 1174 block B5 null  <||@
  Comment 1174 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1174 60 r11|DWORD = NEG r14|DWORD size: DWORD  <||@
  Comment 1180 62 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1186 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 1191 block B7 loop 0 depth 1 header:57|LoopBegin  <||@
  Comment 1191 72 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1200 74 CMP (x: r11|DWORD, y: [rcx|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 1205 76 BRANCH trueDestinationProbability: 0.605764191946218 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 1211 block B8 loop 0 depth 1 header:57|LoopBegin  <||@
  Comment 1211 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1211 80 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 21]  <||@
  Comment 1211 [rcx:0, r10:0, r13:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1        
     locals:  |r11|DWORD  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1          |2  |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 1211 {infopoint: SAFEPOINT}  <||@
  Comment 1211 11  <||@
  Comment 1217 82 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 1220 84 JUMP ~[] destination: B8 -> B6  <||@
  Comment 1220 block B6 loop 0 depth 1 header:57|LoopBegin  <||@
  Comment 1220 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1220 68 CMP r8|DWORD y: 10 size: DWORD  <||@
  Comment 1224 70 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B12  <||@
  Comment 1231 block B9 null  <||@
  Comment 1231 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1231 88 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1239 90 r8|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 1243 92 r11|DWORD = ADD (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1249 94 rsi|DWORD = SUB (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1254 96 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1257 98 BRANCH trueDestinationProbability: 0.9516592072936898 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 1263 block B10 null  <||@
  Comment 1263 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1263 102 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68155d30 encoding: base: 0 shift: 3  <||@
  Comment 1267 104 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1270 106 JUMP ~[] destination: B10 -> B74  <||@
  Comment 1275 block B56 null  <||@
  Comment 1275 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1275 552 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1279 554 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1286 556 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1286 block B57 loop 3 depth 1 header:739|LoopBegin  <||@
  Comment 1286 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1296 560 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1302 562 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1306 564 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1309 566 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B57 -> B59 falseDestination: B57 -> B57  <||@
  Comment 1316 block B39 loop 2 depth 1 header:674|LoopBegin  <||@
  Comment 1316 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1328 418 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1334 420 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1340 422 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1344 424 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1347 426 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B41 falseDestination: B39 -> B39  <||@
  Comment 1354 block B33 null  <||@
  Comment 1354 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 344 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1358 346 stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1363 348 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1368 350 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 356 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1372 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1382 358 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1385 360 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1387 362 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1390 364 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1395 366 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1398 368 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1401 370 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:33]  <||@
  Comment 1401 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1406 [stack:0, stack:8]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33, duringCall: false, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |stack:32|DWORD     |                |   |    <||@
  Comment 1407 372 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1412 block B11 null  <||@
  Comment 1412 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1412 110 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1417 112 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1420 114 JUMP ~[] destination: B11 -> B23  <||@
  Comment 1425 block B14 null  <||@
  Comment 1425 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1425 136 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1430 138 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1433 140 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761]  <||@
  Comment 1433 {Object[d.a@239698761]}  <||@
  Comment 1443 142 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1446 144 r10|DWORD = MOVE input: int[-75787|0xfffffffffffed7f5]  <||@
  Comment 1452 148 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1452 block B15 null  <||@
  Comment 1452 150 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1452 152 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1459 154 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1466 156 DEOPT info [bci:0]  <||@
  Comment 1466 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1471 [rdx:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:667) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3 
     locals:  |rdx|QWORD[.]  |r14|DWORD  |-  |-   <||@
  Comment 1472 block B96 null  <||@
  Comment 1472 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 936 r8|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5]  <||@
  Comment 1478 940 JUMP ~[] destination: B96 -> B99  <||@
  Comment 1478 block B99 null  <||@
  Comment 1478 958 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1478 954 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 960 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 1488 962 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1495 964 DEOPT info [bci:17, 52]  <||@
  Comment 1495 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1500 [rdx:0, r10:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r9|DWORD  |-  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rdx|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 1501 block B98 null  <||@
  Comment 1501 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 952 r8|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5]  <||@
  Comment 1507 956 JUMP ~[] destination: B98 -> B99  <||@
  Comment 1509 block B90 null  <||@
  Comment 1509 852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 854 r8|DWORD = MOVE input: int[-78363|0xfffffffffffecde5]  <||@
  Comment 1515 860 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1515 block B91 null  <||@
  Comment 1515 862 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1515 856 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1520 858 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1523 864 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 1530 866 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1537 868 DEOPT info [bci:75, 52]  <||@
  Comment 1537 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1542 [rdx:0, r10:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0               |1  |2             |3  |4  |5          |6         
     locals:  |stack:40|DWORD  |-  |r10|QWORD[.]  |-  |-  |rbx|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rdx|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 1543 block B24 null  <||@
  Comment 1543 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1543 228 r10|DWORD = MOVE input: int[-76819|0xfffffffffffed3ed]  <||@
  Comment 1549 236 JUMP ~[] destination: B24 -> B27  <||@
  Comment 1549 block B27 null  <||@
  Comment 1549 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1549 230 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1554 232 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1559 234 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1562 262 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1569 264 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1576 266 DEOPT info [bci:33]  <||@
  Comment 1576 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1581 [rdx:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 33, duringCall: false, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rdx|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |r11|DWORD     |                |   |    <||@
  Comment 1582 block B1 null  <||@
  Comment 1582 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1582 16 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1592 18 r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed]  <||@
  Comment 1598 20 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1601 22 JUMP ~[] destination: B1 -> B15  <||@
  Comment 1606 block B87 null  <||@
  Comment 1606 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1606 822 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1611 824 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1614 826 MOV [r15|QWORD + 668] y: -84763 size: DWORD  <||@
  Comment 1625 828 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1632 830 DEOPT info [bci:107, 52]  <||@
  Comment 1632 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1637 [rdx:0, r10:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0         |1  |2             |3          |4          |5          |6         
     locals:  |r9|DWORD  |-  |r10|QWORD[.]  |rdi|DWORD  |r14|DWORD  |rbp|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:675) [bci: 52, duringCall: true, rethrow: false]
              |0             |1  |2  |3         
     locals:  |rdx|QWORD[.]  |-  |-  |rsi|DWORD   <||@
  Comment 1638 block B97 null  <||@
  Comment 1638 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 944 r8|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5]  <||@
  Comment 1644 948 JUMP ~[] destination: B97 -> B99  <||@
  Comment 1649 block B26 null  <||@
  Comment 1649 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1649 250 r10|DWORD = MOVE input: int[-77075|0xfffffffffffed2ed]  <||@
  Comment 1655 258 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1657 block B101 null  <||@
  Comment 1657 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1657 972 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1662 974 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1665 976 MOV [r15|QWORD + 668] y: -72987 size: DWORD  <||@
  Comment 1676 978 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1683 980 DEOPT info [bci:2, 30]  <||@
  Comment 1683 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1688 [rdx:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0               |1         
     locals:  |stack:28|DWORD  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:672) [bci: 30, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rdx|QWORD[.]  |stack:28|DWORD  |-  |-   <||@
  Comment 1689 block B12 null  <||@
  Comment 1689 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1689 118 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1694 120 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1697 122 MOV [r15|QWORD + 668] y: -67867 size: DWORD  <||@
  Comment 1708 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1715 126 DEOPT info [bci:2, 21]  <||@
  Comment 1715 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1720 [rdx:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1        
     locals:  |r11|DWORD  |r8|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:671) [bci: 21, duringCall: true, rethrow: false]
              |0             |1               |2  |3 
     locals:  |rdx|QWORD[.]  |stack:28|DWORD  |-  |-   <||@
  Comment 1721 block B4 null  <||@
  Comment 1721 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1721 44 stack:28|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1726 46 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1729 48 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@239698761]  <||@
  Comment 1729 {Object[d.a@239698761]}  <||@
  Comment 1739 50 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1742 52 r10|DWORD = MOVE input: int[-71691|0xfffffffffffee7f5]  <||@
  Comment 1748 56 JUMP ~[] destination: B4 -> B15  <||@
  Comment 1753 block B89 null  <||@
  Comment 1753 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1753 844 r8|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5]  <||@
  Comment 1759 850 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1764 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1764 4  <||@
  Comment 1770 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1770 5  <||@
  HexCodeFile>>> <|@
end_nmethod
