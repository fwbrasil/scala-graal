begin_compilation
  name " HotSpotCompilation-5432[java.util.Formatter$FixedString.print(Object, Locale)]"
  method "HotSpotCompilation-5432[java.util.Formatter$FixedString.print(Object, Locale)]"
  date 1526687593595
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a887 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a887  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FixedString;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v904 v906 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
=== Succesors ===
next: a888 
=== Usages ===
v905 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v904 #next: a888  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v466 a888 v889 a891 v946 i893 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a887 
=== Succesors ===
=== Usages ===
a888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v905 
=== Succesors ===
next: v889 
=== Usages ===
a181 v915 v909 v910 a949 
=== Predecessor ===
a887 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v905 #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v915 
=== Succesors ===
next: a890 
=== Usages ===
v592 v590 
=== Predecessor ===
a888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v915 #next: a890  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
=== Succesors ===
next: v46 
=== Usages ===
a185 v907 a948 
=== Predecessor ===
v889 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v906 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v889 
y: v589 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v889 y: v589  <|@  <|@
f <@~|@floating>@ <|@
tid a463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 v484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.5971828283749392
=== Inputs ===
condition: v590 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
a890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v590 #trueSuccessor: v42 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603554164271959286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a891 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a891  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a890 
=== Succesors ===
=== Usages ===
a891 a896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v907 
=== Succesors ===
next: v946 
=== Usages ===
a190 v946 v908 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v907 #next: v946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a891 
=== Succesors ===
next: a892 
=== Usages ===
=== Predecessor ===
a891 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a891 #next: a892  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
a892 v253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
=== Succesors ===
next: i893 
=== Usages ===
a200 v913 v911 a947 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v910 #next: i893  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v911 
=== Succesors ===
next: i894 
=== Usages ===
i101 i440 i232 v418 
=== Predecessor ===
a892 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v911 #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a891 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
=== Succesors ===
next: i895 
=== Usages ===
i83 j505 v315 i289 i94 i232 ?117 j886 
=== Predecessor ===
i893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v908 #next: i895  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
i895 v249 i903 v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v106 
=== Usages ===
i83 j501 v214 v233 
=== Predecessor ===
i894 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i894 
y: i895 
=== Succesors ===
=== Usages ===
v250 i101 v249 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i894 y: i895  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i83 
y: i893 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i83 y: i893  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 i509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i102 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a533 v404 v214 v271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.951758698754197
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
i895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v104 #falseSuccessor: v105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603294676979014854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i87 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i895 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61025
stableDimension: 0
stamp: i32 [-61025] ⇊00000000ffff119f ⇈00000000ffff119f
stampKind: i32
value: int[-61025|0xffffffffffff119f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i464 i464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v219 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573202927668868150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603243482404677470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i893 
y: i894 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i893 y: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i895 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i232 y: i895  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v236 #falseSuccessor: v234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573137398613716299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4603192799776083459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid a190 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a190 
=== Succesors ===
next: j500 
=== Usages ===
v916 
=== Predecessor ===
v234 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a190 #next: j500  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a892 
=== Succesors ===
=== Usages ===
j500 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a200 
=== Succesors ===
next: v506 
=== Usages ===
v917 
=== Predecessor ===
j495 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a200 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j501 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i895 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i895  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j500 
index: j501 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: j501  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i894 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v916 v917 j505 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
j500 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v916 v917 j505 #next: v249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: i83 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: i83 stateAfter: - lastLocationAccess: - #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i109 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i109  <|@  <|@
f <@~|@floating>@ <|@
tid a949 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
op: Uncompress
stamp: a -
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
?117 ?62 ?110 ?51 ?399 ?98 v250 j571 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a888  <|@  <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1ba88ef1
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a949 i83 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a949 i83  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?51 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
?51 ?117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?54 
values: a949 a185 
=== Succesors ===
=== Usages ===
?62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?54 values: a949 a185  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?51 
values: a949 - 
=== Succesors ===
=== Usages ===
?66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?51 values: a949 -  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: - - 
=== Succesors ===
=== Usages ===
?75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: - -  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: - - 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: - -  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?75 
values: a949 - 
=== Succesors ===
=== Usages ===
?117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?75 values: a949 -  <|@  <|@
tid ?117 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a949 a185 i894 
=== Succesors ===
=== Usages ===
?110 ?114 ?399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a949 a185 i894  <|@  <|@
f <@~|@floating>@ <|@
tid a947 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a892 
=== Succesors ===
=== Usages ===
?399 ?110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a892  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?117 
values: - - a949 a947 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?117 values: - - a949 a947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v250 
stateDuring: ?399 
=== Succesors ===
next: a896 
=== Usages ===
?110 v559 i289 j594 a533 i440 i509 v518 v418 v404 
=== Predecessor ===
v105 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v250 stateDuring: ?399 #next: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v907 
=== Succesors ===
next: i897 
=== Usages ===
a256 v912 
=== Predecessor ===
i109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v907 #next: i897  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?117 
values: - - a949 a947 i109 
=== Succesors ===
=== Usages ===
v484 a533 i897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?117 values: - - a949 a947 i109  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a896 
=== Succesors ===
=== Usages ===
i897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?110 
guard: - 
address: v912 
=== Succesors ===
next: v354 
=== Usages ===
v315 
=== Predecessor ===
a896 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?110 guard: - address: v912 #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i897 
y: i894 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i897 y: i894  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
i897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v353 #falseSuccessor: v351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67091
stableDimension: 0
stamp: i32 [-67091] ⇊00000000fffef9ed ⇈00000000fffef9ed
stampKind: i32
value: int[-67091|0xfffffffffffef9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i87 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v409 #falseSuccessor: v405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid i488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106593
stableDimension: 0
stamp: i32 [-106593] ⇊00000000fffe5f9f ⇈00000000fffe5f9f
stampKind: i32
value: int[-106593|0xfffffffffffe5f9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106593 - -66059] ⇊00000000fffe5985 ⇈00000000fffeffff
valueDescription: i32
=== Inputs ===
merge: v479 
values: i486 i488 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v479 values: i486 i488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v485 v487 
=== Succesors ===
next: v484 
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v485 v487 #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?110 
actionAndReason: i482 
speculation: a463 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?110 actionAndReason: i482 speculation: a463  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j556 
=== Usages ===
v918 v919 
=== Predecessor ===
v405 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j556  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
j556 v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
=== Succesors ===
next: j557 
=== Usages ===
j516 v920 v921 a532 v926 v922 v923 v924 v925 
=== Predecessor ===
j512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v918 #next: j557  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
=== Succesors ===
next: v521 
=== Usages ===
v522 
=== Predecessor ===
j556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i517 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i109 y: i517  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 v605 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
j557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v520 #falseSuccessor: v519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583130455445223564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i109 
y: i102 
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i109 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i509 
y: i540 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i509 y: i540  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i511 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i541 
y: i510 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i541 y: i510  <|@  <|@
f <@~|@floating>@ <|@
tid j515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i511 
=== Succesors ===
=== Usages ===
j516 v922 v923 v924 v925 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i511  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
x: j515 
y: j556 
=== Succesors ===
=== Usages ===
v522 v558 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j515 y: j556  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j557 
y: j516 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j557 y: j516  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v526 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v527 #falseSuccessor: v526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4553418493427752726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4583055723104855568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
value: j516 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v918 value: j516 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v922 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v922 #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v923 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v923 #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v924 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v924 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v925 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v925 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v920 
value: i109 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v920 value: i109 stateAfter: - lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
value: j508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v921 value: j508 stateAfter: - lastLocationAccess: - #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
value: v593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v926 value: v593 stateAfter: - lastLocationAccess: - #next: v531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a532 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j556 
=== Succesors ===
next: v534 
=== Usages ===
a537 
=== Predecessor ===
v531 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j556 #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
a532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4568789297225689894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4569387155948633865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v523 v525 
=== Succesors ===
next: a533 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v523 v525 #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?110 
arguments: v507 i109 i87 
=== Succesors ===
next: v536 
=== Usages ===
a537 
=== Predecessor ===
v524 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?110 arguments: v507 i109 i87 #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
a533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v535 
values: a532 a533 
=== Succesors ===
=== Usages ===
v930 a446 v914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v535 values: a532 a533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v534 v536 
=== Succesors ===
next: v736 
=== Usages ===
a537 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v534 v536 #next: v736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v608 
=== Usages ===
j737 j739 
=== Predecessor ===
v535 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i893 
y: i109 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i893 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v418 
trueValue: i893 
falseValue: i109 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v418 trueValue: i893 falseValue: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i440 
=== Succesors ===
=== Usages ===
j801 v930 j599 v605 v733 j783 j789 j793 j797 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j508 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j508  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 j852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 j819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j797 j849 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j765 j825 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j793 j846 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j831 j773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j788 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j789 j843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j837 j781 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j783 j838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j826 v839 j766 j774 v784 j832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v606 #falseSuccessor: v607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B37" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a537 
index: - 
=== Succesors ===
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a537 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v736 
address: v914 
=== Succesors ===
=== Usages ===
v931 v933 v935 v937 v939 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v736 address: v914  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v736 
address: v913 
=== Succesors ===
=== Usages ===
v932 v934 v936 v938 v940 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v736 address: v913  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j595 
y: j782 
=== Succesors ===
=== Usages ===
v784 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j782  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j783 
y: j496 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j783 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v784 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v784 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B63" 
    successors "B24" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v613 
values: j496 j781 
=== Succesors ===
=== Usages ===
v940 j781 v939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v613 values: j496 j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v612 
=== Succesors ===
next: v898 
=== Usages ===
v898 v617 v618 j774 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v612 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j774 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v613 
address: v940 
=== Succesors ===
next: v870 
=== Usages ===
v870 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v940 #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j774 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v939 
value: v898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v939 value: v898 stateAfter: - lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j774 
y: j172 
=== Succesors ===
=== Usages ===
j766 j774 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j774 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j783 
y: j781 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j783 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v619 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v617 #falseSuccessor: v619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v613 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v613 #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v622 
values: j496 j781 
=== Succesors ===
=== Usages ===
v938 j773 j757 v790 v937 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v622 values: j496 j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v621 v623 
=== Succesors ===
next: v646 
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v621 v623 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j595 
y: j788 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j788  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j789 
y: j766 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j789 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v790 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v790 #trueSuccessor: v645 #falseSuccessor: v644  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
v899 
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j766 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v644 
address: v938 
=== Succesors ===
next: v868 
=== Usages ===
v868 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v644 address: v938 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j766 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: v899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: v899 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j773 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j766 
y: j491 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j766 y: j491  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v633 
values: j773 j766 
=== Succesors ===
=== Usages ===
v936 j765 j749 v794 v935 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v633 values: j773 j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v649 
=== Succesors ===
next: v652 
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v649 #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j595 
y: j792 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j792  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j793 
y: j757 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j793 y: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v794 
=== Succesors ===
trueSuccessor: v651 
falseSuccessor: v650 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v794 #trueSuccessor: v651 #falseSuccessor: v650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v655  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
v900 
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j757 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v650 
address: v936 
=== Succesors ===
next: v866 
=== Usages ===
v866 
=== Predecessor ===
v650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v650 address: v936 #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j757 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
value: v900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v935 value: v900 stateAfter: - lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j757 
y: j764 
=== Succesors ===
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j757 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j749 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v637 
values: j765 j757 
=== Succesors ===
=== Usages ===
v934 j756 j740 v798 v933 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v637 values: j765 j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v636 v655 
=== Succesors ===
next: v658 
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v636 v655 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j595 
y: j796 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j796  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j797 
y: j749 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j797 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
v901 
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j749 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v656 
address: v934 
=== Succesors ===
next: v864 
=== Usages ===
v864 
=== Predecessor ===
v656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v656 address: v934 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j749 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
value: v901 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v933 value: v901 stateAfter: - lastLocationAccess: - #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j749 
y: j742 
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j742  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v864 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j740 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v641 
values: j756 j749 
=== Succesors ===
=== Usages ===
v932 v802 v931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v641 values: j756 j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v640 v661 
=== Succesors ===
next: v664 
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v640 v661 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j595 
y: j800 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j740 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j801 y: j740  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v662 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v663 #falseSuccessor: v662  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i902 
=== Usages ===
i902 
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j740 
=== Succesors ===
=== Usages ===
i902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i902 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v662 
address: v932 
=== Succesors ===
next: v862 
=== Usages ===
v862 
=== Predecessor ===
v662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v662 address: v932 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j740 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
value: i902 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
i902 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v931 value: i902 stateAfter: - lastLocationAccess: - #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B19" "B36" "B35" 
    successors "B38" "B56" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v625 v643 v667 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v625 v643 v667 #next: v805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v674 
=== Usages ===
j807 
=== Predecessor ===
v626 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i109 
=== Succesors ===
=== Usages ===
j599 v733 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i109  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j594 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j594  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v673 #falseSuccessor: v672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a537 
index: j595 
=== Succesors ===
=== Usages ===
j807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a537 index: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v805 
address: v930 
=== Succesors ===
=== Usages ===
v941 v942 v943 v944 v945 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v805 address: v930  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j594 
y: j595 
=== Succesors ===
=== Usages ===
j852 j838 j843 j846 j849 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j594 y: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j599 
y: j782 
=== Succesors ===
=== Usages ===
v839 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j782  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j496 
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j838 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v839 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v676 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v839 #trueSuccessor: v675 #falseSuccessor: v676  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B55" 
    successors "B42" "B55" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v679 
values: j496 j837 
=== Succesors ===
=== Usages ===
v945 j837 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v679 values: j496 j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v678 
=== Succesors ===
next: v880 
=== Usages ===
j832 v682 v683 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v678 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j832 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: v881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: v881 stateAfter: - lastLocationAccess: - #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j832 
y: j172 
=== Succesors ===
=== Usages ===
j826 j832 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j832 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j837 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j838 y: j837  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v682 #falseSuccessor: v684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v679 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v679 #next: v688  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v687 
values: j496 j837 
=== Succesors ===
=== Usages ===
v944 j831 j820 v844 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: j496 j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v688 
=== Succesors ===
next: v709 
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v688 #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j599 
y: j788 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j788  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j843 
y: j826 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j843 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v708 #falseSuccessor: v707  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j826 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
value: v885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 value: v885 stateAfter: - lastLocationAccess: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j826 
y: j491 
=== Succesors ===
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j826 y: j491  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j820 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v698 
values: j831 j826 
=== Succesors ===
=== Usages ===
v943 j825 j814 v847 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v698 values: j831 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v712 
=== Succesors ===
next: v715 
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v712 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j846 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j599 
y: j792 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j792  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j846 
y: j820 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j846 y: j820  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v847 
=== Succesors ===
trueSuccessor: v714 
falseSuccessor: v713 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v847 #trueSuccessor: v714 #falseSuccessor: v713  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j820 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
value: v884 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v943 value: v884 stateAfter: - lastLocationAccess: - #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j820 
y: j764 
=== Succesors ===
=== Usages ===
j814 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j820 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v701 
values: j825 j820 
=== Succesors ===
=== Usages ===
v942 j819 j808 v850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v701 values: j825 j820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v718 
=== Succesors ===
next: v721 
=== Usages ===
j814 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v718 #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j599 
y: j796 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j796  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j849 
y: j814 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j849 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v720 #falseSuccessor: v719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j814 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: v883 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: v883 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j814 
y: j742 
=== Succesors ===
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j814 y: j742  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v875 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j808 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v704 
values: j819 j814 
=== Succesors ===
=== Usages ===
v941 v853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: j819 j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v703 v724 
=== Succesors ===
next: v727 
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v703 v724 #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j599 
y: j800 
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j852 
y: j808 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j852 y: j808  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v726 #falseSuccessor: v725  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j808 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j808  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: i882 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: i882 stateAfter: - lastLocationAccess: - #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v679 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B57" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B54" "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v690 v706 v730 
=== Succesors ===
next: a446 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v690 v706 v730 #next: a446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a537 
=== Succesors ===
next: v253 
=== Usages ===
j583 a252 
=== Predecessor ===
v691 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a537 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid a252 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Compress
stamp: n! -
=== Inputs ===
value: a446 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
value: a252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j571 
=== Usages ===
=== Predecessor ===
a446 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v910 value: a252 stateAfter: - lastLocationAccess: - #next: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a949 
=== Succesors ===
next: v577 
=== Usages ===
j573 
=== Predecessor ===
v253 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a949 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j571 
y: i572 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j571 y: i572  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j573 
index: j576 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: j576  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
value: i578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
=== Predecessor ===
j571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v927 value: i578 stateAfter: - lastLocationAccess: - #next: i903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v277 
=== Usages ===
j584 i94 v271 v290 
=== Predecessor ===
v577 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i903 
y: i87 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i903 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
i903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v276 #falseSuccessor: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553949923403702922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4583877778848903527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i109 
y: i894 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i109 y: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i289 
y: i903 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i289 y: i903  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v293 #falseSuccessor: v291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553896780406107903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 4558426951532275908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v292 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v292 #next: v295  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?117 
values: - - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?117 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4583795573274498731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j581 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j581  <|@  <|@
f <@~|@floating>@ <|@
tid a256 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a896 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a256 
=== Succesors ===
next: j583 
=== Usages ===
v928 
=== Predecessor ===
v291 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a256 #next: j583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a446 
=== Succesors ===
next: v588 
=== Usages ===
v929 
=== Predecessor ===
j581 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a446 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j581 
index: - 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j581 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i903 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i903  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j583 
index: j584 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j583 index: j584  <|@  <|@
f <@~|@floating>@ <|@
tid j886 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i894 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v928 v929 j886 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
j583 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v928 v929 j886 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i894 
y: i903 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i894 y: i903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: i94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: i94 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v613 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v889 
y: v591 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v889 y: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v592 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v592 #trueSuccessor: v355 #falseSuccessor: v357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a29 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a29  <|@  <|@
f <@~|@floating>@ <|@
tid a181 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
op: Uncompress
stamp: a -
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a888  <|@  <|@
f <@~|@floating>@ <|@
tid a948 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
returnStamp: a# Ljava/io/PrintStream;
signature: [Ljdk.vm.ci.meta.JavaType;@3aa17269
stamp: void
targetMethod: HotSpotMethod<PrintStream.append(CharSequence)>
=== Inputs ===
arguments: a181 a948 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a181 a948  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?398 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
tid ?398 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?32 
values: - - 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?32 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a29 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
polymorphic: false
stamp: a# Ljava/io/PrintStream;
targetMethod: Direct#PrintStream.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v308 
stateDuring: ?398 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v308 stateDuring: ?398 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a29 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78643
stableDimension: 0
stamp: i32 [-78643] ⇊00000000fffecccd ⇈00000000fffecccd
stampKind: i32
value: int[-78643|0xfffffffffffecccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 4577673762768662720
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-78643 - -45323] ⇊00000000fffe0085
valueDescription: i32
=== Inputs ===
merge: v460 
values: i474 i478 i478 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v460 values: i474 i478 i478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v473 v477 v489 
=== Succesors ===
next: v466 
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v473 v477 v489 #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i464 
speculation: a463 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i464 speculation: a463  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a887 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a887  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FixedString;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v904 v906 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a887 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v904 
=== Succesors ===
next: a888 
=== Usages ===
v905 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v904 #next: a888  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v466 a888 v889 a891 v946 i893 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a887 
=== Succesors ===
=== Usages ===
a888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v905 
=== Succesors ===
next: v889 
=== Usages ===
a181 v915 v909 v910 a949 
=== Predecessor ===
a887 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v905 #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
result [v2|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v915 
=== Succesors ===
next: a890 
=== Usages ===
v592 v590 
=== Predecessor ===
a888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v915 #next: a890  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a890 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v906 
=== Succesors ===
next: v46 
=== Usages ===
a185 v907 a948 
=== Predecessor ===
v889 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v906 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v889 
y: v589 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v889 y: v589  <|@  <|@
f <@~|@floating>@ <|@
tid a463 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 v484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.5971828283749392
=== Inputs ===
condition: v590 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
a890 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v590 #trueSuccessor: v42 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ac09bc1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5971828283749392 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603554164271959286
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a891 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a891  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a890 
=== Succesors ===
=== Usages ===
a891 a896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a891 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v907 
=== Succesors ===
next: v946 
=== Usages ===
a190 v946 v908 
=== Predecessor ===
v42 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v907 #next: v946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a891 
=== Succesors ===
next: a892 
=== Usages ===
=== Predecessor ===
a891 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a891 #next: a892  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
a892 v253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a892 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
=== Succesors ===
next: i893 
=== Usages ===
a200 v913 v911 a947 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v910 #next: i893  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
i893 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i893 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v911 
=== Succesors ===
next: i894 
=== Usages ===
i101 i440 i232 v418 
=== Predecessor ===
a892 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v911 #next: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v908 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a891 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i894 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v908 
=== Succesors ===
next: i895 
=== Usages ===
i83 j505 v315 i289 i94 i232 ?117 j886 
=== Predecessor ===
i893 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v908 #next: i895  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a888 
=== Succesors ===
=== Usages ===
i895 v249 i903 v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v106 
=== Usages ===
i83 j501 v214 v233 
=== Predecessor ===
i894 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i894 
y: i895 
=== Succesors ===
=== Usages ===
v250 i101 v249 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i894 y: i895  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i83 
y: i893 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i83 y: i893  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 i509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i102 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a533 v404 v214 v271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.951758698754197
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
i895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v104 #falseSuccessor: v105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[.] = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v10|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.951758698754197 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603294676979014854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i87 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i895 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result int[-61025|0xffffffffffff119f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -61025
stableDimension: 0
stamp: i32 [-61025] ⇊00000000ffff119f ⇈00000000ffff119f
stampKind: i32
value: int[-61025|0xffffffffffff119f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i464 i464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v219 #falseSuccessor: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573202927668868150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61025|0xffffffffffff119f]] destination: B3 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603243482404677470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i893 
y: i894 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i893 y: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i895 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i232 y: i895  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v236 #falseSuccessor: v234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v7|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573137398613716299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61025|0xffffffffffff119f]] destination: B5 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4603192799776083459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid a190 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a891 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
result v14|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a190 
=== Succesors ===
next: j500 
=== Usages ===
v916 
=== Predecessor ===
v234 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a190 #next: j500  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a892 
=== Succesors ===
=== Usages ===
j500 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j500 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a200 
=== Succesors ===
next: v506 
=== Usages ===
v917 
=== Predecessor ===
j495 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a200 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
result [v14|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j501 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i895 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i895  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
result [v16|QWORD[*] + v17|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j500 
index: j501 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j500 index: j501  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i894 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v916 v917 j505 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
j500 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v916 v917 j505 #next: v249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: i83 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: i83 stateAfter: - lastLocationAccess: - #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v16|QWORD[*] + v17|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i109 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i109  <|@  <|@
f <@~|@floating>@ <|@
tid a949 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
op: Uncompress
stamp: a -
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
?117 ?62 ?110 ?51 ?399 ?98 v250 j571 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a888  <|@  <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1ba88ef1
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a949 i83 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a949 i83  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?51 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
?51 ?117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
tid ?51 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?54 
values: a949 a185 
=== Succesors ===
=== Usages ===
?62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?54 values: a949 a185  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?51 
values: a949 - 
=== Succesors ===
=== Usages ===
?66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?51 values: a949 -  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: - - 
=== Succesors ===
=== Usages ===
?75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: - -  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: - - 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: - -  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?75 
values: a949 - 
=== Succesors ===
=== Usages ===
?117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?75 values: a949 -  <|@  <|@
tid ?117 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a949 a185 i894 
=== Succesors ===
=== Usages ===
?110 ?114 ?399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a949 a185 i894  <|@  <|@
f <@~|@floating>@ <|@
tid a947 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a892 
=== Succesors ===
=== Usages ===
?399 ?110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a892  <|@  <|@
tid ?399 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?117 
values: - - a949 a947 
=== Succesors ===
=== Usages ===
i109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?117 values: - - a949 a947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i109 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v250 
stateDuring: ?399 
=== Succesors ===
next: a896 
=== Usages ===
?110 v559 i289 j594 a533 i440 i509 v518 v418 v404 
=== Predecessor ===
v105 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v250 stateDuring: ?399 #next: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a896 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v907 
=== Succesors ===
next: i897 
=== Usages ===
a256 v912 
=== Predecessor ===
i109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v907 #next: i897  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?117 
values: - - a949 a947 i109 
=== Succesors ===
=== Usages ===
v484 a533 i897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?117 values: - - a949 a947 i109  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result [v23|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a896 
=== Succesors ===
=== Usages ===
i897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i897 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?110 
guard: - 
address: v912 
=== Succesors ===
next: v354 
=== Usages ===
v315 
=== Predecessor ===
a896 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?110 guard: - address: v912 #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i897 
y: i894 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i897 y: i894  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
i897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v353 #falseSuccessor: v351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v19|QWORD[.] v21|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v19|QWORD[.] v21|QWORD[.] v22|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction CMP (x: v8|DWORD, y: [v23|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result int[-67091|0xfffffffffffef9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67091
stableDimension: 0
stamp: i32 [-67091] ⇊00000000fffef9ed ⇈00000000fffef9ed
stampKind: i32
value: int[-67091|0xfffffffffffef9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67091|0xfffffffffffef9ed]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i87 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v409 #falseSuccessor: v405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid i488 <|@
result int[-106593|0xfffffffffffe5f9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106593
stableDimension: 0
stamp: i32 [-106593] ⇊00000000fffe5f9f ⇈00000000fffe5f9f
stampKind: i32
value: int[-106593|0xfffffffffffe5f9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106593|0xfffffffffffe5f9f]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i482 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106593 - -66059] ⇊00000000fffe5985 ⇈00000000fffeffff
valueDescription: i32
=== Inputs ===
merge: v479 
values: i486 i488 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v479 values: i486 i488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v485 v487 
=== Succesors ===
next: v484 
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v485 v487 #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?110 
actionAndReason: i482 
speculation: a463 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?110 actionAndReason: i482 speculation: a463  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v19|QWORD[.] v21|QWORD[.] v22|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j556 
=== Usages ===
v918 v919 
=== Predecessor ===
v405 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j556  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
j556 v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j556 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
=== Succesors ===
next: j557 
=== Usages ===
j516 v920 v921 a532 v926 v922 v923 v924 v925 
=== Predecessor ===
j512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v918 #next: j557  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j557 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v919 
=== Succesors ===
next: v521 
=== Usages ===
v522 
=== Predecessor ===
j556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v919 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i517 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i109 y: i517  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 v605 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
j557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v520 #falseSuccessor: v519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583130455445223564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i109 
y: i102 
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i109 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i541 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i509 
y: i540 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i509 y: i540  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i511 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i541 
y: i510 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i541 y: i510  <|@  <|@
f <@~|@floating>@ <|@
tid j515 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i511 
=== Succesors ===
=== Usages ===
j516 v922 v923 v924 v925 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i511  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
x: j515 
y: j556 
=== Succesors ===
=== Usages ===
v522 v558 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j515 y: j556  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j557 
y: j516 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j557 y: j516  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v527 
falseSuccessor: v526 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v527 #falseSuccessor: v526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v27|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND v28|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v30|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4553418493427752726
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4583055723104855568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v918 
value: j516 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v918 value: j516 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
result [v30|QWORD + v25|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v922 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v922 #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result [v30|QWORD + v25|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v923 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v923 #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
result [v30|QWORD + v25|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v924 
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v924 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
result [v30|QWORD + v25|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j515 
index: j556 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
address: v925 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v925 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
result [v25|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v920 
value: i109 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v920 value: i109 stateAfter: - lastLocationAccess: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
result [v25|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v921 
value: j508 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v921 value: j508 stateAfter: - lastLocationAccess: - #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
result [v25|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
value: v593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v926 value: v593 stateAfter: - lastLocationAccess: - #next: v531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a532 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a532 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j556 
=== Succesors ===
next: v534 
=== Usages ===
a537 
=== Predecessor ===
v531 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j556 #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
a532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4568789297225689894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4569387155948633865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v523 v525 
=== Succesors ===
next: a533 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v523 v525 #next: a533  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a533 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?110 
arguments: v507 i109 i87 
=== Succesors ===
next: v536 
=== Usages ===
a537 
=== Predecessor ===
v524 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?110 arguments: v507 i109 i87 #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
a533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v19|QWORD[.] v21|QWORD[.] v22|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a537 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v535 
values: a532 a533 
=== Succesors ===
=== Usages ===
v930 a446 v914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v535 values: a532 a533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v534 v536 
=== Succesors ===
next: v736 
=== Usages ===
a537 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v534 v536 #next: v736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v608 
=== Usages ===
j737 j739 
=== Predecessor ===
v535 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i893 
y: i109 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i893 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid i440 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v418 
trueValue: i893 
falseValue: i109 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v418 trueValue: i893 falseValue: i109  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i440 
=== Succesors ===
=== Usages ===
j801 v930 j599 v605 v733 j783 j789 j793 j797 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j508 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j508  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 j852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j742 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j756 j819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j796 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j797 j849 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j765 j825 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j793 j846 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j831 j773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j788 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j789 j843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j837 j781 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j783 j838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j826 v839 j766 j774 v784 j832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v606 #falseSuccessor: v607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: v22|DWORD, ~trueValue: v7|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v37|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B37" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
result [v35|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a537 
index: - 
=== Succesors ===
=== Usages ===
j739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a537 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v736 
address: v914 
=== Succesors ===
=== Usages ===
v931 v933 v935 v937 v939 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v736 address: v914  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
result [v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a892 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a892  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v736 
address: v913 
=== Succesors ===
=== Usages ===
v932 v934 v936 v938 v940 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v736 address: v913  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j595 
y: j782 
=== Succesors ===
=== Usages ===
v784 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j782  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j783 
y: j496 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j783 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v784 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v784 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v35|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = LEA [v6|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B63" 
    successors "B24" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j774 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v613 
values: j496 j781 
=== Succesors ===
=== Usages ===
v940 j781 v939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v613 values: j496 j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v612 
=== Succesors ===
next: v898 
=== Usages ===
v898 v617 v618 j774 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v612 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
result [v39|QWORD[*] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j774 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
result v42|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v613 
address: v940 
=== Succesors ===
next: v870 
=== Usages ===
v870 
=== Predecessor ===
v613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v940 #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
result [v38|QWORD[.] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j774 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v939 
value: v898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v939 value: v898 stateAfter: - lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid j781 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j774 
y: j172 
=== Succesors ===
=== Usages ===
j766 j774 v786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j774 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j783 
y: j781 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j783 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v619 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v617 #falseSuccessor: v619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V256_WORD = H [v39|QWORD[*] + v41|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v41|QWORD * 2], input: v42|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v41|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v613 
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v613 #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j766 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v622 
values: j496 j781 
=== Succesors ===
=== Usages ===
v938 j773 j757 v790 v937 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v622 values: j496 j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v621 v623 
=== Succesors ===
next: v646 
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v621 v623 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid j789 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j595 
y: j788 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j788  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j789 
y: j766 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j789 y: j766  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v790 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v790 #trueSuccessor: v645 #falseSuccessor: v644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
v899 
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
result [v39|QWORD[*] + v44|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j766 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
result v46|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v644 
address: v938 
=== Succesors ===
next: v868 
=== Usages ===
v868 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v644 address: v938 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
result [v38|QWORD[.] + v44|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j766 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: v899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: v899 stateAfter: - lastLocationAccess: - #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid j773 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j766 
y: j491 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j766 y: j491  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
v868 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|V128_WORD = H [v39|QWORD[*] + v44|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v44|QWORD * 2], input: v46|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v44|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j757 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v633 
values: j773 j766 
=== Succesors ===
=== Usages ===
v936 j765 j749 v794 v935 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v633 values: j773 j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v649 
=== Succesors ===
next: v652 
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v649 #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j595 
y: j792 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j792  <|@  <|@
f <@~|@floating>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j793 
y: j757 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j793 y: j757  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v794 
=== Succesors ===
trueSuccessor: v651 
falseSuccessor: v650 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v794 #trueSuccessor: v651 #falseSuccessor: v650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v37|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v655  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
v900 
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
result [v39|QWORD[*] + v48|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j757 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
result v50|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v650 
address: v936 
=== Succesors ===
next: v866 
=== Usages ===
v866 
=== Predecessor ===
v650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v650 address: v936 #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
result [v38|QWORD[.] + v48|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j757 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
value: v900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v935 value: v900 stateAfter: - lastLocationAccess: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid j765 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j757 
y: j764 
=== Succesors ===
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j757 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v866 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V64_WORD = H [v39|QWORD[*] + v48|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v48|QWORD * 2], input: v50|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v48|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j749 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v637 
values: j765 j757 
=== Succesors ===
=== Usages ===
v934 j756 j740 v798 v933 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v637 values: j765 j757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v636 v655 
=== Succesors ===
next: v658 
=== Usages ===
j749 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v636 v655 #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j595 
y: j796 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j796  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j797 
y: j749 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j797 y: j749  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v656 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v657 #falseSuccessor: v656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v37|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v661  <|@  <|@
f <@*|@fixed>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
v901 
=== Predecessor ===
v658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
result [v39|QWORD[*] + v52|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j749 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
result v54|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v656 
address: v934 
=== Succesors ===
next: v864 
=== Usages ===
v864 
=== Predecessor ===
v656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v656 address: v934 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result [v38|QWORD[.] + v52|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j749 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
value: v901 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v933 value: v901 stateAfter: - lastLocationAccess: - #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid j756 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j749 
y: j742 
=== Succesors ===
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j749 y: j742  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v864 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V32_WORD = H [v39|QWORD[*] + v52|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v52|QWORD * 2], input: v54|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j740 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v641 
values: j756 j749 
=== Succesors ===
=== Usages ===
v932 v802 v931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v641 values: j756 j749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v640 v661 
=== Succesors ===
next: v664 
=== Usages ===
j740 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v640 v661 #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j595 
y: j800 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j595 y: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j740 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j801 y: j740  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v802 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v662 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v802 #trueSuccessor: v663 #falseSuccessor: v662  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC v37|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i902 
=== Usages ===
i902 
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i902  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
result [v39|QWORD[*] + v56|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j737 
index: j740 
=== Succesors ===
=== Usages ===
i902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i902 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v662 
address: v932 
=== Succesors ===
next: v862 
=== Usages ===
v862 
=== Predecessor ===
v662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v662 address: v932 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
result [v38|QWORD[.] + v56|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j739 
index: j740 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j739 index: j740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v931 
value: i902 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
i902 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v931 value: i902 stateAfter: - lastLocationAccess: - #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVSX [v39|QWORD[*] + v56|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v56|QWORD * 2], y: v58|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B19" "B36" "B35" 
    successors "B38" "B56" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v625 v643 v667 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v625 v643 v667 #next: v805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v674 
=== Usages ===
j807 
=== Predecessor ===
v626 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j594 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i109 
=== Succesors ===
=== Usages ===
j599 v733 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i109  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j595 
y: j594 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j595 y: j594  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v673 #falseSuccessor: v672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
result [v35|QWORD[.] + v37|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a537 
index: j595 
=== Succesors ===
=== Usages ===
j807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a537 index: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j807 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v805 
address: v930 
=== Succesors ===
=== Usages ===
v941 v942 v943 v944 v945 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v805 address: v930  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j594 
y: j595 
=== Succesors ===
=== Usages ===
j852 j838 j843 j846 j849 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j594 y: j595  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j599 
y: j782 
=== Succesors ===
=== Usages ===
v839 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j782  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j496 
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j838 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v839 
=== Succesors ===
trueSuccessor: v675 
falseSuccessor: v676 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v839 #trueSuccessor: v675 #falseSuccessor: v676  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v35|QWORD[.] + v37|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SUB (x: v59|QWORD, ~y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
result v63|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
v676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B55" 
    successors "B42" "B55" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j832 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v679 
values: j496 j837 
=== Succesors ===
=== Usages ===
v945 j837 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v679 values: j496 j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v678 
=== Succesors ===
next: v880 
=== Usages ===
j832 v682 v683 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v678 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
result [v60|QWORD[.] + v64|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j832 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: v881 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: v881 stateAfter: - lastLocationAccess: - #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j832 
y: j172 
=== Succesors ===
=== Usages ===
j826 j832 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j832 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j837 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j838 y: j837  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v841 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v841 #trueSuccessor: v682 #falseSuccessor: v684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v64|QWORD * 2], input: v63|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v64|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v679 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v679 #next: v688  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j826 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v687 
values: j496 j837 
=== Succesors ===
=== Usages ===
v944 j831 j820 v844 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: j496 j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v688 
=== Succesors ===
next: v709 
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v688 #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid j843 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j599 
y: j788 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j788  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j843 
y: j826 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j843 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v708 #falseSuccessor: v707  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result [v60|QWORD[.] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j826 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j826  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
result v68|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
value: v885 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 value: v885 stateAfter: - lastLocationAccess: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j826 
y: j491 
=== Succesors ===
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j826 y: j491  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v66|QWORD * 2], input: v68|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j820 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v698 
values: j831 j826 
=== Succesors ===
=== Usages ===
v943 j825 j814 v847 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v698 values: j831 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v712 
=== Succesors ===
next: v715 
=== Usages ===
j820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v712 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j846 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j599 
y: j792 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j792  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j846 
y: j820 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j846 y: j820  <|@  <|@
f <@*|@fixed>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v847 
=== Succesors ===
trueSuccessor: v714 
falseSuccessor: v713 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v847 #trueSuccessor: v714 #falseSuccessor: v713  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v61|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result [v60|QWORD[.] + v70|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j820 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j820  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
result v72|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
value: v884 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v943 value: v884 stateAfter: - lastLocationAccess: - #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j820 
y: j764 
=== Succesors ===
=== Usages ===
j814 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j820 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v70|QWORD * 2], input: v72|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v70|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j814 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v701 
values: j825 j820 
=== Succesors ===
=== Usages ===
v942 j819 j808 v850 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v701 values: j825 j820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v718 
=== Succesors ===
next: v721 
=== Usages ===
j814 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v718 #next: v721  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j599 
y: j796 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j796  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j849 
y: j814 
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j849 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v850 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v850 #trueSuccessor: v720 #falseSuccessor: v719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v61|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result [v60|QWORD[.] + v74|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j814 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j814  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result v76|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: v883 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: v883 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j814 
y: j742 
=== Succesors ===
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j814 y: j742  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v875 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v74|QWORD * 2], input: v76|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j808 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v704 
values: j819 j814 
=== Succesors ===
=== Usages ===
v941 v853 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: j819 j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v703 v724 
=== Succesors ===
next: v727 
=== Usages ===
j808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v703 v724 #next: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j599 
y: j800 
=== Succesors ===
=== Usages ===
v853 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j599 y: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j852 
y: j808 
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j852 y: j808  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v725 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v726 #falseSuccessor: v725  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = DEC v61|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result [v60|QWORD[.] + v78|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j807 
index: j808 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j807 index: j808  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: i882 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v725 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: i882 stateAfter: - lastLocationAccess: - #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v78|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v679 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B55 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B57" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v691 
=== Predecessor ===
v672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B54" "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v690 v706 v730 
=== Succesors ===
next: a446 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v690 v706 v730 #next: a446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a446 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a537 
=== Succesors ===
next: v253 
=== Usages ===
j583 a252 
=== Predecessor ===
v691 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a537 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid a252 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Compress
stamp: n! -
=== Inputs ===
value: a446 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v910 
value: a252 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j571 
=== Usages ===
=== Predecessor ===
a446 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v910 value: a252 stateAfter: - lastLocationAccess: - #next: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j571 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a949 
=== Succesors ===
next: v577 
=== Usages ===
j573 
=== Predecessor ===
v253 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a949 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i572 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
result v81|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j571 
y: i572 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j571 y: i572  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result [v81|QWORD[*] + v82|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j573 
index: j576 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: j576  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
value: i578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i903 
=== Usages ===
=== Predecessor ===
j571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v927 value: i578 stateAfter: - lastLocationAccess: - #next: i903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i903 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
=== Succesors ===
next: v277 
=== Usages ===
j584 i94 v271 v290 
=== Predecessor ===
v577 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v909 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i903 
y: i87 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i903 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
i903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v276 #falseSuccessor: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = SHR v19|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v81|QWORD[*] + v82|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553949923403702922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4583877778848903527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i109 
y: i894 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i109 y: i894  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i289 
y: i903 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i289 y: i903  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v293 #falseSuccessor: v291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v22|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553896780406107903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 4558426951532275908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v292 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v292 #next: v295  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?117 
values: - - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?117 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?114 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -75617 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4583795573274498731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j581 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j581  <|@  <|@
f <@~|@floating>@ <|@
tid a256 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a896 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j581 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a256 
=== Succesors ===
next: j583 
=== Usages ===
v928 
=== Predecessor ===
v291 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a256 #next: j583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j583 <|@
result v87|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i64
=== Inputs ===
object: a446 
=== Succesors ===
next: v588 
=== Usages ===
v929 
=== Predecessor ===
j581 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a446 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
result [v86|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j581 
index: - 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j581 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i903 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i903  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
result [v87|QWORD[*] + v88|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j583 
index: j584 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j583 index: j584  <|@  <|@
f <@~|@floating>@ <|@
tid j886 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i894 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v928 v929 j886 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
j583 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v928 v929 j886 #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: i32
=== Inputs ===
x: i894 
y: i903 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i894 y: i903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v909 
value: i94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v909 value: i94 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVSXD v83|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v86|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v87|QWORD[*] + v88|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = ADD (x: v8|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 12], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v613 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B63 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v889 
y: v591 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v889 y: v591  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v592 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v592 #trueSuccessor: v355 #falseSuccessor: v357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a29 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a29  <|@  <|@
f <@~|@floating>@ <|@
tid a181 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
op: Uncompress
stamp: a -
=== Inputs ===
value: a888 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a888  <|@  <|@
f <@~|@floating>@ <|@
tid a948 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a890 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a890  <|@  <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
returnStamp: a# Ljava/io/PrintStream;
signature: [Ljdk.vm.ci.meta.JavaType;@3aa17269
stamp: void
targetMethod: HotSpotMethod<PrintStream.append(CharSequence)>
=== Inputs ===
arguments: a181 a948 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a181 a948  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?398 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
tid ?398 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?32 
values: - - 
=== Succesors ===
=== Usages ===
a29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?32 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a29 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
polymorphic: false
stamp: a# Ljava/io/PrintStream;
targetMethod: Direct#PrintStream.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v308 
stateDuring: ?398 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v308 stateDuring: ?398 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a29 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.append(CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:2, 11] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
result int[-78643|0xfffffffffffecccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78643
stableDimension: 0
stamp: i32 [-78643] ⇊00000000fffecccd ⇈00000000fffecccd
stampKind: i32
value: int[-78643|0xfffffffffffecccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78643|0xfffffffffffecccd]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 4577673762768662720
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i464 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-78643 - -45323] ⇊00000000fffe0085
valueDescription: i32
=== Inputs ===
merge: v460 
values: i474 i478 i478 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v460 values: i474 i478 i478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v473 v477 v489 
=== Succesors ===
next: v466 
=== Usages ===
i464 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v473 v477 v489 #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i464 
speculation: a463 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i464 speculation: a463  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ac09bc1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5971828283749392 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603554164271959286
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[.] = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = ADD (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v10|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.951758698754197 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603294676979014854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603243482404677470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v7|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4603192799776083459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v16|QWORD[*] + v17|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.append(CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:2, 11] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v19|QWORD[.] v21|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v19|QWORD[.] v21|QWORD[.] v22|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction CMP (x: v8|DWORD, y: [v23|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583130455445223564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHL v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA [v27|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND v28|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v30|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4583055723104855568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: v22|DWORD, ~trueValue: v7|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v37|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = LEA [v35|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = LEA [v6|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v37|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|V128_WORD = H [v39|QWORD[*] + v44|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v44|QWORD * 2], input: v46|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v44|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v37|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V64_WORD = H [v39|QWORD[*] + v48|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v48|QWORD * 2], input: v50|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v48|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v37|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V32_WORD = H [v39|QWORD[*] + v52|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v52|QWORD * 2], input: v54|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = DEC v37|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVSX [v39|QWORD[*] + v56|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v56|QWORD * 2], y: v58|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B19" "B36" "B35" 
    successors "B38" "B56" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B57" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B54" "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = COMPRESSPOINTER (input: v35|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = SHR v19|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v81|QWORD[*] + v82|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4583877778848903527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v22|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4583795573274498731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVSXD v83|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v86|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v87|QWORD[*] + v88|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = ADD (x: v8|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 12], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B37" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = LEA [v35|QWORD[.] + v37|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SUB (x: v59|QWORD, ~y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v61|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v61|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v66|QWORD * 2], input: v68|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v61|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v70|QWORD * 2], input: v72|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v70|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v61|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v74|QWORD * 2], input: v76|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v74|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = DEC v61|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v78|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573202927668868150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61025|0xffffffffffff119f]] destination: B3 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 4577673762768662720
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573137398613716299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-61025|0xffffffffffff119f]] destination: B5 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B55 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B55" 
    successors "B42" "B55" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v60|QWORD[.] + v64|QWORD * 2], input: v63|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v64|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B63 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B63" 
    successors "B24" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V256_WORD = H [v39|QWORD[*] + v41|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v38|QWORD[.] + v41|QWORD * 2], input: v42|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v41|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4568789297225689894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4569387155948633865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v19|QWORD[.] v21|QWORD[.] v22|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553949923403702922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 4558426951532275908
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -75617 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553896780406107903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4553418493427752726
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67091|0xfffffffffffef9ed]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v19|QWORD[.] v21|QWORD[.] v22|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v19|QWORD[.] v20|QWORD[.] v8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v19|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v19|QWORD[.] v20|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78643|0xfffffffffffecccd]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106593|0xfffffffffffe5f9f]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:java.util.Formatter
     4: invokestatic  #3          // java.util.Formatter.access$000:(java.util.Formatter)java.lang.Appendable
     7: aload_0       
     8: getfield      #2          // s:java.lang.String
    11: invokeinterface#4, 2       // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    16: pop           
    17: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ac09bc1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.5971828283749392 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603554164271959286
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, stack:52]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r8:0, r10:0, stack:52]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:52]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rax|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.951758698754197 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603294676979014854
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603243482404677470
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4603192799776083459
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   92  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  656  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.append(CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:2, 11] <|@ <|@
      nr  664  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:56|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction stack:72|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:64|QWORD[.] stack:56|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:64|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:16, stack:24, stack:32, stack:52]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:56|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] rcx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:64|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583130455445223564
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  194  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4583055723104855568
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  214  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  264  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  336  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  338  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  360  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  362  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  364  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  384  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  386  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B19" "B36" "B35" 
    successors "B38" "B56" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B57" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B54" "B53" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  578  <|@ instruction rdx|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  580  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  582  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  584  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4583877778848903527
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4583795573274498731
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r10|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  626  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = ADD (x: stack:32|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r8|DWORD[.] * 8 + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B37" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B19 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  476  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  500  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  502  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  524  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  528  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573202927668868150
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 4577673762768662720
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  674  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573137398613716299
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B5 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  442  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B55 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B55" 
    successors "B42" "B55" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  448  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  450  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577381316811719797
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B63 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B63" 
    successors "B24" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  308  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  310  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4568789297225689894
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4569387155948633865
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:56|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:64|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr  258  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553949923403702922
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 4558426951532275908
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 668] y: -75617 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rdi:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:48|QWORD[.] stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4553896780406107903
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4553418493427752726
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed] <|@ <|@
      nr  142  <|@ instruction rbp|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rax:0, rbp:0, rdi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdi|QWORD[.] rbp|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] rax|QWORD[.] rcx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] rax|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction rdx|DWORD = MOVE input: int[-78643|0xfffffffffffecccd] <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE input: int[-106593|0xfffffffffffe5f9f] <|@ <|@
      nr  160  <|@ instruction rbp|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:java.util.Formatter
     4: invokestatic  #3          // java.util.Formatter.access$000:(java.util.Formatter)java.lang.Appendable
     7: aload_0       
     8: getfield      #2          // s:java.lang.String
    11: invokeinterface#4, 2       // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    16: pop           
    17: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ac09bc1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.5971828283749392 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4603554164271959286
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, stack:52]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r8:0, r10:0, stack:52]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:52]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rax|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.951758698754197 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603294676979014854
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4603243482404677470
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4603192799776083459
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction rdx|QWORD = MOV rcx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   90  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   92  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4600928128974022164
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  656  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  658  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.append(CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:2, 11] <|@ <|@
      nr  664  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:56|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction stack:72|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:64|QWORD[.] stack:56|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:64|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr  126  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:16, stack:24, stack:32, stack:52]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:56|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] rcx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:64|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B12" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" "B17" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  180  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" "B15" 
    xhandlers
    flags 
    probability 4583130455445223564
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr  192  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  194  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  196  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  198  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B17 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4583055723104855568
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  214  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B37" "B20" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B37 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B23" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  286  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B25 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  336  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  338  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  340  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  360  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  362  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  364  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B34" "B33" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  372  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  384  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  386  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B31" 
    successors "B37" "B36" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B18" "B36" "B34" 
    successors "B38" "B57" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B37" "B54" "B52" 
    successors "B61" "B59" 
    xhandlers
    flags 
    probability 4583960814782645745
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  578  <|@ instruction rdx|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  580  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  582  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  584  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B61 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4583877778848903527
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4583795573274498731
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r10|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  626  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = ADD (x: stack:32|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r8|DWORD[.] * 8 + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B46" "B45" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  476  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  480  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B48" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  500  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  502  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  504  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B46" 
    successors "B52" "B51" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  524  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  528  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4579457215155275249
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B57 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4577381316811719797
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573202927668868150
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B3" "B5" 
    successors 
    xhandlers
    flags 
    probability 4577673762768662720
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  674  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573137398613716299
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B5 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4570450015900534257
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  442  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  448  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  450  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B43 falseDestination: B41 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" 
    successors "B25" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4579457215155275249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  306  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  308  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  310  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B25 falseDestination: B23 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4569387155948633865
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:56|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:64|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors 
    xhandlers
    flags 
    probability 4558426951532275908
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction MOV [r15|QWORD + 668] y: -75617 size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  610  <|@ st <@st|@reference-map: [rdi:0, stack:32]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:48|QWORD[.] stack:32|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] stack:48|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbp|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rax:0, rbp:0, rdi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdi|QWORD[.] rbp|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] rax|QWORD[.] rcx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] rax|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction rdx|DWORD = MOVE input: int[-78643|0xfffffffffffecccd] <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction r10|DWORD = MOVE input: int[-106593|0xfffffffffffe5f9f] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #0          // this$0:java.util.Formatter
     4: invokestatic  #3          // java.util.Formatter.access$000:(java.util.Formatter)java.lang.Appendable
     7: aload_0       
     8: getfield      #2          // s:java.lang.String
    11: invokeinterface#4, 2       // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    16: pop           
    17: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24408b7e10448b14fd10000000468b1cd508000000448b460c4181fbaddeadde0f859e0000004489542434428b3cc50c000000418504fc468b1cd510000000468b0cdd0c0000008b0cfd0c000000894c2430428b14d50c0000008bd903da8bc3412bc183f8010f8d8e00000085d20f8c5b030000442bc9413bd10f8f68030000895c242c48c1e70349c1e3034863f28bd1488d7f10498d747310e80000000090448b5424348b5c242c42891cd50c000000488b6c24404883c448850500000000c5f877c34181fbaddeadde0f85d403000049c1e20349c1e003498bf2498bd06690e80000000090488b6c24404883c448850500000000c5f877c344894c242c418bfa48c1e703418bc048c1e003418beb48c1e503488bf78bd3488944242048896c241848897c241044895c240c44894424080f1f8000000000e80000000090448be8448b442408468b34c50c0000008b4c2430423b0cf50c0000000f871b0300004585ed0f8c45030000498b7760498b57704181fdffffff000f83bd020000458bd541d1e2458d52174183e2f84d63d24d8bda4c03de4c3bda0f879d0200004d895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044896e0c48c70601000000c74608addeadde488bc64489742408448bf1448b4c242c453be9418bfd410f4ff94863ff4883ff010f8c9e000000448b5c240c488d70104a8d14dd100000004c8d57f04d85d249c7c3000000000f8dfd0100004c8d57f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d57fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d57fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda4c8bd749ffca4d3bda0f8f0a000000420fbf145a664289145e4963f5483bf70f8f99000000488b7c2410448b542434488bf048c1ee03428934d510000000488bf748c1ee0948ba00c024080100000044882416468b1cd50c0000004585db0f8c7b010000452bee453bdd0f8f6f010000448b542408418bfa48c1e7034963f3418bd6488d7f10488d74701044895c240ce800000000908b4c2430034c240c448b44243442890cc50c000000488b6c24404883c448850500000000c5f877c3488d547810482bf7488d7ef04885ff0f8d9700000049c7c200000000488d7ef84c3bd70f8f11000000c5f9efc0c4a17a7f0452498d7a084c8bd7488d7efc4c3bd70f8f11000000c5f9efc0c4a1f97e0452498d7a044c8bd7488d7efe4c3bd70f8f11000000c5f9efc0c4a1797e0452498d7a024c8bd748ffce4c3bd60f8fe5feffff6646892452e9dbfeffffba9f11ffff4189979c0200004d89a7a8020000e80000000090ba9f11ffffebe5c5f9efc049c7c2000000000f1f840000000000c4a17e7f04524d8d52104c3bd77ef1e949ffffff660f1f440000660f1f440000c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe9e9fdffff448974240848beaddeaddeaddeadde418bd5448bd1b900000000458bf2e80000000090e980fdffff41c7879c0200009fd8feff4d89a7a8020000e8000000009041baedf9feff488b6c2418488b442420488b7c24104589979c0200004d89a7a8020000e80000000090bacdccfeffe925ffffff41ba9f5ffeffebcbe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ac09bc1 slotKind: QWORD  <||@
  Comment 48 6 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 8 r10|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 10 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 59 [rsi:0, r10:0]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 12 r8|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 14 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 71 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 78 16 BRANCH trueDestinationProbability: 0.5971828283749392 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B64  <||@
  Comment 84 block B1 null  <||@
  Comment 84 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 20 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 89 22 rdi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 89 [rsi:0, r8:0, r10:0, stack:52]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 24 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:0]  <||@
  Comment 97 [rsi:0, rdi:0, r8:0, r10:0, stack:52]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 26 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 109 28 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 109 [rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:52]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 30 rcx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 124 32 stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 128 34 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 136 36 rbx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 140 38 rax|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 145 40 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 148 42 BRANCH trueDestinationProbability: 0.951758698754197 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 154 block B2 null  <||@
  Comment 154 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 46 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 156 48 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 162 block B4 null  <||@
  Comment 162 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 58 r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 165 60 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 168 62 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 174 block B6 null  <||@
  Comment 174 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 72 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 178 74 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 182 76 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 182 78 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 186 80 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 186 82 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 189 84 rdx|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 191 86 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 195 88 rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 200 90 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 200 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 206 92 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 211 94 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 215 96 MOV (x: [r10|DWORD[.] * 8 + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 223 98 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 232 12  <||@
  Comment 242 block B64 null  <||@
  Comment 242 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 648 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}  <||@
  Comment 242 {meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}}  <||@
  Comment 249 650 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 255 block B65 null  <||@
  Comment 255 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 654 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 259 656 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 263 658 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 266 660 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 269 662 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.append(CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:2, 11]  <||@
  Comment 269 9  <||@
  Comment 271 {HotSpotMethod<PrintStream.append(CharSequence)>}  <||@
  Comment 276 []at java.io.PrintStream.append(PrintStream.java:57) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 277 664 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 286 12  <||@
  Comment 296 block B7 null  <||@
  Comment 296 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 102 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 301 104 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 308 106 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 315 108 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 322 110 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 325 112 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 327 114 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 332 116 stack:56|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 337 118 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 342 120 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 347 122 stack:72|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 352 124 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 352 9  <||@
  Comment 359 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 364 [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:64|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 365 126 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 368 128 r8|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 373 130 r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 381 132 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 385 134 CMP (x: rcx|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 385 [r14:0, stack:12, stack:16, stack:24, stack:32, stack:52]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:56|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2         
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rcx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 385 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 393 136 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 399 block B9 null  <||@
  Comment 399 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 152 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 402 154 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B12  <||@
  Comment 408 block B12 null  <||@
  Comment 408 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 178 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 412 180 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 416 182 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 423 184 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17  <||@
  Comment 429 block B13 null  <||@
  Comment 429 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 188 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 435 190 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 439 192 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 443 194 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 446 196 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 452 198 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 455 200 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B17 falseDestination: B13 -> B15  <||@
  Comment 461 block B15 null  <||@
  Comment 461 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 210 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 465 212 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 474 214 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 483 216 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 492 218 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 501 220 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 505 222 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 512 224 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 512 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 519 226 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 519 228 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 522 230 stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 527 232 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 530 236 JUMP ~[] destination: B15 -> B18  <||@
  Comment 530 block B18 null  <||@
  Comment 530 262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 530 234 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 535 264 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 538 266 rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 545 268 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 548 270 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 552 272 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B37 falseDestination: B18 -> B20  <||@
  Comment 558 block B20 null  <||@
  Comment 558 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 280 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 563 282 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 567 284 rdx|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 575 286 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 579 288 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 582 294 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 589 290 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B25 falseDestination: B20 -> B23  <||@
  Comment 595 block B25 null  <||@
  Comment 595 320 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 595 322 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 599 324 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 602 326 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 608 block B27 null  <||@
  Comment 608 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 608 334 xmm0|V128_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 614 336 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 620 338 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 624 340 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 627 342 JUMP ~[] destination: B27 -> B28  <||@
  Comment 627 block B28 null  <||@
  Comment 627 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 627 346 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 631 348 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 634 350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 640 block B30 null  <||@
  Comment 640 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 358 xmm0|V64_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 646 360 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 652 362 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 656 364 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 659 366 JUMP ~[] destination: B30 -> B31  <||@
  Comment 659 block B31 null  <||@
  Comment 659 368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 659 370 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 663 372 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 666 374 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 672 block B33 null  <||@
  Comment 672 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 382 xmm0|V32_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 678 384 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 684 386 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 688 388 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 691 390 JUMP ~[] destination: B33 -> B34  <||@
  Comment 691 block B34 null  <||@
  Comment 691 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 691 394 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 697 396 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 700 398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 706 block B36 null  <||@
  Comment 706 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 406 rdx|DWORD = MOVSX [rdx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 711 408 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 716 410 JUMP ~[] destination: B36 -> B37  <||@
  Comment 716 block B37 null  <||@
  Comment 716 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 716 414 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 719 416 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 722 418 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B57  <||@
  Comment 728 block B57 null  <||@
  Comment 728 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 564 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 733 566 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 738 572 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 745 574 MOV (x: [r10|DWORD[.] * 8 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 753 576 rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 760 578 rdx|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 770 580 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 774 582 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 782 584 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 785 586 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B61 falseDestination: B57 -> B59  <||@
  Comment 791 block B59 null  <||@
  Comment 791 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 791 594 r13|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 794 596 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 797 598 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B62  <||@
  Comment 803 block B62 null  <||@
  Comment 803 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 614 r10|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 808 616 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 815 618 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 815 620 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 815 622 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 818 624 rdx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 821 626 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 825 628 rsi|QWORD = LEA [rax|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 830 630 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 835 632 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 835 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 841 634 rcx|DWORD = ADD (x: stack:32|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 849 636 r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 854 638 MOV (x: [r8|DWORD[.] * 8 + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 862 640 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 871 12  <||@
  Comment 881 block B38 null  <||@
  Comment 881 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 422 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 886 424 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 889 426 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 893 428 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 896 430 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 902 block B39 null  <||@
  Comment 902 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 434 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 909 436 JUMP ~[] destination: B39 -> B43  <||@
  Comment 909 block B43 null  <||@
  Comment 909 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 909 462 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 913 464 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 916 466 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 922 block B45 null  <||@
  Comment 922 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 474 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 926 476 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 932 478 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 936 480 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 939 482 JUMP ~[] destination: B45 -> B46  <||@
  Comment 939 block B46 null  <||@
  Comment 939 484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 939 486 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 943 488 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 946 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 952 block B48 null  <||@
  Comment 952 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 498 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 956 500 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 962 502 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 966 504 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 969 506 JUMP ~[] destination: B48 -> B49  <||@
  Comment 969 block B49 null  <||@
  Comment 969 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 969 510 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 973 512 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 976 514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 982 block B51 null  <||@
  Comment 982 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 522 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 986 524 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 992 526 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 996 528 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 999 530 JUMP ~[] destination: B51 -> B52  <||@
  Comment 999 block B52 null  <||@
  Comment 999 532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 999 534 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1002 536 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1005 538 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B57 falseDestination: B52 -> B54  <||@
  Comment 1011 block B54 null  <||@
  Comment 1011 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 550 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1016 556 JUMP ~[] destination: B54 -> B57  <||@
  Comment 1021 block B3 null  <||@
  Comment 1021 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 52 rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f]  <||@
  Comment 1026 54 JUMP ~[] destination: B3 -> B67  <||@
  Comment 1026 block B67 null  <||@
  Comment 1026 672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1026 674 MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD  <||@
  Comment 1033 676 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1040 678 DEOPT info [bci:0]  <||@
  Comment 1040 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1045 [rsi:0]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1046 block B5 null  <||@
  Comment 1046 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 66 rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f]  <||@
  Comment 1051 68 JUMP ~[] destination: B5 -> B67  <||@
  Comment 1053 block B40 null  <||@
  Comment 1053 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 440 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1057 442 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1064 444 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1064 block B41 loop 1 depth 1 header:679|LoopBegin  <||@
  Comment 1064 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1072 448 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1078 450 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1082 452 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1085 454 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B43 falseDestination: B41 -> B41  <||@
  Comment 1092 block B23 loop 0 depth 1 header:613|LoopBegin  <||@
  Comment 1092 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 306 xmm0|V256_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1110 308 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1116 310 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1120 312 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1123 314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B25 falseDestination: B23 -> B23  <||@
  Comment 1130 block B17 null  <||@
  Comment 1130 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 240 stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1135 246 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1135 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1145 248 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1148 250 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1151 252 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1156 254 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1159 256 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 1159 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1164 [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:56|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2         
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |r14|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1165 260 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1170 block B61 null  <||@
  Comment 1170 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 606 MOV [r15|QWORD + 668] y: -75617 size: DWORD  <||@
  Comment 1181 608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1188 610 DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 1188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1193 [rdi:0, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2              
     locals:  |rdi|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdi|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1194 block B8 null  <||@
  Comment 1194 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 140 r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed]  <||@
  Comment 1200 148 JUMP ~[] destination: B8 -> B11  <||@
  Comment 1200 block B11 null  <||@
  Comment 1200 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1200 142 rbp|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 144 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1210 146 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1215 170 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1222 172 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1229 174 DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 1229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1234 [rax:0, rbp:0, rdi:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rdi|QWORD[.]  |rbp|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdi|QWORD[.]  |rax|QWORD[.]  |rcx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdi|QWORD[.]  |rax|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1235 block B66 null  <||@
  Comment 1235 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1235 668 rdx|DWORD = MOVE input: int[-78643|0xfffffffffffecccd]  <||@
  Comment 1240 670 JUMP ~[] destination: B66 -> B67  <||@
  Comment 1245 block B10 null  <||@
  Comment 1245 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1245 158 r10|DWORD = MOVE input: int[-106593|0xfffffffffffe5f9f]  <||@
  Comment 1251 166 JUMP ~[] destination: B10 -> B11  <||@
  Comment 1253 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1253 4  <||@
  Comment 1259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1259 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5432[java.util.Formatter$FixedString.print(Object, Locale)]"
  method "HotSpotCompilation-5432[java.util.Formatter$FixedString.print(Object, Locale)]"
  date 1526687594081
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119991c60 448b560849c1e203493bc20f85ef3107ff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24408b7e10448b14fd10000000468b1cd508000000448b460c4181fb4b1b00f80f859e0000004489542434428b3cc50c000000418504fc468b1cd510000000468b0cdd0c0000008b0cfd0c000000894c2430428b14d50c0000008bd903da8bc3412bc183f8010f8d8e00000085d20f8c5b030000442bc9413bd10f8f68030000895c242c48c1e70349c1e3034863f28bd1488d7f10498d747310e8130008ff90448b5424348b5c242c42891cd50c000000488b6c24404883c4488505b8a254f0c5f877c34181fb254f00f80f85d403000049c1e20349c1e003498bf2498bd06690e82c3307ff90488b6c24404883c448850582a254f0c5f877c344894c242c418bfa48c1e703418bc048c1e003418beb48c1e503488bf78bd3488944242048896c241848897c241044895c240c44894424080f1f8000000000e8d43207ff90448be8448b442408468b34c50c0000008b4c2430423b0cf50c0000000f871b0300004585ed0f8c45030000498b7760498b57704181fdffffff000f83bd020000458bd541d1e2458d52174183e2f84d63d24d8bda4c03de4c3bda0f879d0200004d895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044896e0c48c70601000000c74608410000f8488bc64489742408448bf1448b4c242c453be9418bfd410f4ff94863ff4883ff010f8c9e000000448b5c240c488d70104a8d14dd100000004c8d57f04d85d249c7c3000000000f8dfd0100004c8d57f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d57fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d57fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda4c8bd749ffca4d3bda0f8f0a000000420fbf145a664289145e4963f5483bf70f8f99000000488b7c2410448b542434488bf048c1ee03428934d510000000488bf748c1ee0948ba00c024080100000044882416468b1cd50c0000004585db0f8c7b010000452bee453bdd0f8f6f010000448b542408418bfa48c1e7034963f3418bd6488d7f10488d74701044895c240ce898fd07ff908b4c2430034c240c448b44243442890cc50c000000488b6c24404883c448850539a054f0c5f877c3488d547810482bf7488d7ef04885ff0f8d9700000049c7c200000000488d7ef84c3bd70f8f11000000c5f9efc0c4a17a7f0452498d7a084c8bd7488d7efc4c3bd70f8f11000000c5f9efc0c4a1f97e0452498d7a044c8bd7488d7efe4c3bd70f8f11000000c5f9efc0c4a1797e0452498d7a024c8bd748ffce4c3bd60f8fe5feffff6646892452e9dbfeffffba9f11ffff4189979c0200004d89a7a8020000e8894507ff90ba9f11ffffebe5c5f9efc049c7c2000000000f1f840000000000c4a17e7f04524d8d52104c3bd77ef1e949ffffff660f1f440000660f1f440000c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe9e9fdffff448974240848be080200c007000000418bd5448bd1b900000000458bf2e8b4217dff90e980fdffff41c7879c0200009fd8feff4d89a7a8020000e8f54407ff9041baedf9feff488b6c2418488b442420488b7c24104589979c0200004d89a7a8020000e8cc4407ff90bacdccfeffe925ffffff41ba9f5ffeffebcbe856d646ff90e8b04307ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1ac09bc1 slotKind: QWORD  <||@
  Comment 48 6 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 51 8 r10|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 10 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 59 [rsi:0, r10:0]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 12 r8|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 14 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 71 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 78 16 BRANCH trueDestinationProbability: 0.5971828283749392 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B64  <||@
  Comment 84 block B1 null  <||@
  Comment 84 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 20 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 89 22 rdi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 89 [rsi:0, r8:0, r10:0, stack:52]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 97 24 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:0]  <||@
  Comment 97 [rsi:0, rdi:0, r8:0, r10:0, stack:52]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 26 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 109 28 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 109 [rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:52]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 109 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 30 rcx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 124 32 stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 128 34 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 136 36 rbx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 140 38 rax|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 145 40 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 148 42 BRANCH trueDestinationProbability: 0.951758698754197 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 154 block B2 null  <||@
  Comment 154 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 46 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 156 48 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 162 block B4 null  <||@
  Comment 162 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 58 r9|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 165 60 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 168 62 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 174 block B6 null  <||@
  Comment 174 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 72 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 178 74 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 182 76 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 182 78 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 186 80 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 186 82 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 189 84 rdx|QWORD = MOV rcx|DWORD size: DWORD  <||@
  Comment 191 86 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 195 88 rsi|QWORD = LEA [r11|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 200 90 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 200 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 206 92 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 211 94 rbx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 215 96 MOV (x: [r10|DWORD[.] * 8 + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 223 98 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 232 12  <||@
  Comment 242 block B64 null  <||@
  Comment 242 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 648 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}  <||@
  Comment 242 {meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}}  <||@
  Comment 249 650 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 255 block B65 null  <||@
  Comment 255 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 255 654 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 259 656 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 263 658 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 266 660 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 269 662 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.append(CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:2, 11]  <||@
  Comment 269 9  <||@
  Comment 271 {HotSpotMethod<PrintStream.append(CharSequence)>}  <||@
  Comment 276 []at java.io.PrintStream.append(PrintStream.java:57) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 277 664 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 286 12  <||@
  Comment 296 block B7 null  <||@
  Comment 296 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 102 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 301 104 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 308 106 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 315 108 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 322 110 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 325 112 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 327 114 stack:48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 332 116 stack:56|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 337 118 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 342 120 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 347 122 stack:72|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 352 124 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 352 9  <||@
  Comment 359 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 364 [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:64|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 365 126 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 368 128 r8|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 373 130 r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 381 132 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 385 134 CMP (x: rcx|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 385 [r14:0, stack:12, stack:16, stack:24, stack:32, stack:52]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:56|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2         
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |rcx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 385 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 393 136 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 399 block B9 null  <||@
  Comment 399 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 152 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 402 154 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B12  <||@
  Comment 408 block B12 null  <||@
  Comment 408 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 178 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 412 180 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 416 182 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 423 184 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B12 -> B13 falseDestination: B12 -> B17  <||@
  Comment 429 block B13 null  <||@
  Comment 429 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 188 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 435 190 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 439 192 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 443 194 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 446 196 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 452 198 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 455 200 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B17 falseDestination: B13 -> B15  <||@
  Comment 461 block B15 null  <||@
  Comment 461 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 210 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 465 212 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 474 214 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 483 216 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 492 218 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 501 220 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 505 222 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 512 224 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 512 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 519 226 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 519 228 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 522 230 stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 527 232 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 530 236 JUMP ~[] destination: B15 -> B18  <||@
  Comment 530 block B18 null  <||@
  Comment 530 262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 530 234 r9|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 535 264 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 538 266 rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 545 268 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 548 270 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 552 272 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B18 -> B37 falseDestination: B18 -> B20  <||@
  Comment 558 block B20 null  <||@
  Comment 558 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 280 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 563 282 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 567 284 rdx|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 575 286 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 579 288 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 582 294 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 589 290 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B20 -> B25 falseDestination: B20 -> B23  <||@
  Comment 595 block B25 null  <||@
  Comment 595 320 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 595 322 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 599 324 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 602 326 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 608 block B27 null  <||@
  Comment 608 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 608 334 xmm0|V128_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 614 336 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 620 338 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 624 340 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 627 342 JUMP ~[] destination: B27 -> B28  <||@
  Comment 627 block B28 null  <||@
  Comment 627 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 627 346 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 631 348 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 634 350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 640 block B30 null  <||@
  Comment 640 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 358 xmm0|V64_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 646 360 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 652 362 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 656 364 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 659 366 JUMP ~[] destination: B30 -> B31  <||@
  Comment 659 block B31 null  <||@
  Comment 659 368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 659 370 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 663 372 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 666 374 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 672 block B33 null  <||@
  Comment 672 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 382 xmm0|V32_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 678 384 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 684 386 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 688 388 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 691 390 JUMP ~[] destination: B33 -> B34  <||@
  Comment 691 block B34 null  <||@
  Comment 691 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 691 394 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 697 396 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 700 398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 706 block B36 null  <||@
  Comment 706 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 406 rdx|DWORD = MOVSX [rdx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 711 408 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 716 410 JUMP ~[] destination: B36 -> B37  <||@
  Comment 716 block B37 null  <||@
  Comment 716 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 716 414 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 719 416 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 722 418 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B57  <||@
  Comment 728 block B57 null  <||@
  Comment 728 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 564 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 733 566 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 738 572 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 745 574 MOV (x: [r10|DWORD[.] * 8 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 753 576 rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 760 578 rdx|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 770 580 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 774 582 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 782 584 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 785 586 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B57 -> B61 falseDestination: B57 -> B59  <||@
  Comment 791 block B59 null  <||@
  Comment 791 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 791 594 r13|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 794 596 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 797 598 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B62  <||@
  Comment 803 block B62 null  <||@
  Comment 803 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 614 r10|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 808 616 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16d94aea encoding: base: 0 shift: 3  <||@
  Comment 815 618 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 815 620 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 815 622 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 818 624 rdx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 821 626 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 825 628 rsi|QWORD = LEA [rax|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 830 630 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 835 632 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 835 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 841 634 rcx|DWORD = ADD (x: stack:32|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 849 636 r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 854 638 MOV (x: [r8|DWORD[.] * 8 + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 862 640 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 871 12  <||@
  Comment 881 block B38 null  <||@
  Comment 881 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 422 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 886 424 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 889 426 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 893 428 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 896 430 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 902 block B39 null  <||@
  Comment 902 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 434 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 909 436 JUMP ~[] destination: B39 -> B43  <||@
  Comment 909 block B43 null  <||@
  Comment 909 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 909 462 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 913 464 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 916 466 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 922 block B45 null  <||@
  Comment 922 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 474 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 926 476 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 932 478 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 936 480 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 939 482 JUMP ~[] destination: B45 -> B46  <||@
  Comment 939 block B46 null  <||@
  Comment 939 484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 939 486 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 943 488 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 946 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 952 block B48 null  <||@
  Comment 952 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 498 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 956 500 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 962 502 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 966 504 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 969 506 JUMP ~[] destination: B48 -> B49  <||@
  Comment 969 block B49 null  <||@
  Comment 969 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 969 510 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 973 512 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 976 514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 982 block B51 null  <||@
  Comment 982 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 522 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 986 524 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 992 526 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 996 528 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 999 530 JUMP ~[] destination: B51 -> B52  <||@
  Comment 999 block B52 null  <||@
  Comment 999 532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 999 534 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1002 536 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1005 538 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B57 falseDestination: B52 -> B54  <||@
  Comment 1011 block B54 null  <||@
  Comment 1011 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 550 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1016 556 JUMP ~[] destination: B54 -> B57  <||@
  Comment 1021 block B3 null  <||@
  Comment 1021 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 52 rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f]  <||@
  Comment 1026 54 JUMP ~[] destination: B3 -> B67  <||@
  Comment 1026 block B67 null  <||@
  Comment 1026 672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1026 674 MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD  <||@
  Comment 1033 676 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1040 678 DEOPT info [bci:0]  <||@
  Comment 1040 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1045 [rsi:0]at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1046 block B5 null  <||@
  Comment 1046 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 66 rdx|DWORD = MOVE input: int[-61025|0xffffffffffff119f]  <||@
  Comment 1051 68 JUMP ~[] destination: B5 -> B67  <||@
  Comment 1053 block B40 null  <||@
  Comment 1053 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 440 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1057 442 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1064 444 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1064 block B41 loop 1 depth 1 header:679|LoopBegin  <||@
  Comment 1064 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1072 448 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1078 450 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1082 452 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1085 454 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B43 falseDestination: B41 -> B41  <||@
  Comment 1092 block B23 loop 0 depth 1 header:613|LoopBegin  <||@
  Comment 1092 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 306 xmm0|V256_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1110 308 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1116 310 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1120 312 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1123 314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B25 falseDestination: B23 -> B23  <||@
  Comment 1130 block B17 null  <||@
  Comment 1130 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1130 240 stack:72|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1135 246 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1135 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1145 248 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1148 250 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1151 252 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1156 254 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1159 256 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 1159 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1164 [stack:8, stack:12, stack:16, stack:24, stack:32, stack:52]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:56|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2         
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |r14|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1165 260 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1170 block B61 null  <||@
  Comment 1170 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1170 606 MOV [r15|QWORD + 668] y: -75617 size: DWORD  <||@
  Comment 1181 608 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1188 610 DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 1188 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1193 [rdi:0, stack:32]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2              
     locals:  |rdi|QWORD[.]  |stack:48|QWORD[.]  |stack:32|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rdi|QWORD[.]  |stack:48|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1194 block B8 null  <||@
  Comment 1194 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 140 r10|DWORD = MOVE input: int[-67091|0xfffffffffffef9ed]  <||@
  Comment 1200 148 JUMP ~[] destination: B8 -> B11  <||@
  Comment 1200 block B11 null  <||@
  Comment 1200 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1200 142 rbp|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 144 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1210 146 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1215 170 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1222 172 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1229 174 DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11]  <||@
  Comment 1229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1234 [rax:0, rbp:0, rdi:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rdi|QWORD[.]  |rbp|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdi|QWORD[.]  |rax|QWORD[.]  |rcx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdi|QWORD[.]  |rax|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1235 block B66 null  <||@
  Comment 1235 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1235 668 rdx|DWORD = MOVE input: int[-78643|0xfffffffffffecccd]  <||@
  Comment 1240 670 JUMP ~[] destination: B66 -> B67  <||@
  Comment 1245 block B10 null  <||@
  Comment 1245 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1245 158 r10|DWORD = MOVE input: int[-106593|0xfffffffffffe5f9f]  <||@
  Comment 1251 166 JUMP ~[] destination: B10 -> B11  <||@
  Comment 1253 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1253 4  <||@
  Comment 1259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1259 5  <||@
  HexCodeFile>>> <|@
end_nmethod
