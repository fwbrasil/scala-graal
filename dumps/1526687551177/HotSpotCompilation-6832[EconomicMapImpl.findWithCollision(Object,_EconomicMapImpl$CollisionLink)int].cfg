begin_compilation
  name " HotSpotCompilation-6832[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)]"
  method "HotSpotCompilation-6832[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)]"
  date 1526687567959
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1347 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 v569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 v1955 ?78 ?611 v1958 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1708 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1711 v1765 v1741 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1695 ?9 ?78 ?611 v1215 v1004 v45 ?139 ?1694 v1991 ?1696 v133 v1960 ?1697 ?194 v1165 v1967 ?1700 ?1699 v1971 ?336 ?354 v1974 v1174 v1980 v1976 ?1698 v1147 ?300 ?1701 v1156 ?318 ?1693 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v1344 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v1346 #falseSuccessor: v1344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 288
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1708 a3 - - - - - 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1708 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1002
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
reason: NullCheckException
speculation: Object[d.a@1110971169]
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 ?611 v1098 i1099 i193 v389 v894 v1084 i1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 v1862 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i1099 i88 i1915 i1916 i394 i1085 i1911 i1912 i1913 i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1917 a1950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B111" "B11" 
    successors "B4" "B122" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a8 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
valueDescription: a -
=== Inputs ===
merge: v7 
values: a3 a1237 a987 
=== Succesors ===
=== Usages ===
?9 v1954 v2020 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: a3 a1237 a987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 55.405766793409114
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v6 
=== Succesors ===
next: v2020 
=== Usages ===
a8 v22 v32 v41 v552 v563 v1490 v1475 v1480 v1361 v1366 v1505 v1427 v1381 v1386 v1485 v1445 v1439 v1433 v1415 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v6 #next: v2020  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 290
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - a8 - - 
=== Succesors ===
=== Usages ===
v1335 v1711 v2020 i1918 v2021 v2022 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - a8 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a8 
=== Succesors ===
next: a1917 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a8 #next: a1917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1955 
=== Succesors ===
next: i1918 
=== Usages ===
a957 v1956 
=== Predecessor ===
v2020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1955 #next: i1918  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1917 
=== Succesors ===
=== Usages ===
i1918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1918 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?9 
guard: - 
address: v1956 
=== Succesors ===
next: i1919 
=== Usages ===
v963 v989 
=== Predecessor ===
a1917 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?9 guard: - address: v1956 #next: i1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a8 
index: - 
=== Succesors ===
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a8 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1919 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:291) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1954 
=== Succesors ===
next: v1362 
=== Usages ===
i13 ?611 v42 ?78 
=== Predecessor ===
i1918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1954 #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1919 
y: i12 
=== Succesors ===
=== Usages ===
v1957 i88 v963 i1916 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1919 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i1918 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i1918  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v963 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
i1919 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v963 #trueSuccessor: v1358 #falseSuccessor: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1920 
=== Usages ===
a1920 
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1920  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1917 
=== Succesors ===
=== Usages ===
v1959 v1957 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1917  <|@  <|@
f <@~|@floating>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a957 
index: i13 
=== Succesors ===
=== Usages ===
a1920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a957 index: i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1920 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1358 
address: v1957 
=== Succesors ===
next: v48 
=== Usages ===
a973 v1009 v1969 v1972 v1975 v1978 v1981 v1992 v2022 v2023 
=== Predecessor ===
v1358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1358 address: v1957 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid a973 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1920 
=== Succesors ===
=== Usages ===
v1218 v45 v1004 ?139 ?1701 ?318 ?1696 ?1697 ?194 ?336 ?1700 ?1702 ?1699 v1171 ?1695 v1180 ?354 ?1694 v1162 ?1698 ?1693 ?300 v1153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1920  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a973 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a973  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.1293384951096047
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
a1920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B117" 
    xhandlers
    flags 
    probability 4619754328058095579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v46 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631985947064566367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1921 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1921 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1958 
=== Succesors ===
next: v54 
=== Usages ===
v1990 v1253 v1255 v1257 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1958 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1921 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1921  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9234138966083788
=== Inputs ===
condition: v1253 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a1921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1253 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid i1916 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i13 
y: i12 
=== Succesors ===
=== Usages ===
v989 v1959 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1916 
y: i1918 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1916 y: i1918  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v989 
=== Succesors ===
trueSuccessor: v1363 
falseSuccessor: v1366 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v989 #trueSuccessor: v1363 #falseSuccessor: v1366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1922 
=== Usages ===
a1922 
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1922  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a957 
index: i1916 
=== Succesors ===
=== Usages ===
a1922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a957 index: i1916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1922 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1363 
address: v1959 
=== Succesors ===
next: v1516 
=== Usages ===
a987 v999 v1989 
=== Predecessor ===
v1363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1363 address: v1959 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a1922 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v999 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
a1922 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v999 #trueSuccessor: v1515 #falseSuccessor: v1514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4616701359836752930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2005 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4630839076395035048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1923  <|@  <|@
f <@~|@floating>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1922 
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1989 
=== Succesors ===
next: v2011 
=== Usages ===
v1857 
=== Predecessor ===
v1514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1989 #next: v2011  <|@  <|@
f <@~|@floating>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1923 
y: v1856 
=== Succesors ===
=== Usages ===
v2011 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1923 y: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9924019993156828
=== Inputs ===
condition: v1857 
=== Succesors ===
trueSuccessor: v2009 
falseSuccessor: v2008 
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1857 #trueSuccessor: v2009 #falseSuccessor: v2008  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4630796206506642053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v2009 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?9 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid a987 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1922 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4599158965632209227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2012 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2012  <|@  <|@
f <@*|@fixed>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2005 
=== Predecessor ===
v2008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1524 v2012 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1524 v2012 #next: v563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v2005 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 61]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1716 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1716  <|@  <|@
f <@~|@floating>@ <|@
tid i1717 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250907
stableDimension: 0
stamp: i32 [-250907] ⇊00000000fffc2be5 ⇈00000000fffc2be5
stampKind: i32
value: int[-250907|0xfffffffffffc2be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615501666693788468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1921 
y: a1256 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1921 y: a1256  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i1919 - - - - 
=== Succesors ===
=== Usages ===
?1692 ?163 ?142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i1919 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7926698339558881
=== Inputs ===
condition: v1257 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1257 #trueSuccessor: v64 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613776835646610786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i68  <|@  <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@37ab3de
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a973 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a973  <|@  <|@
tid ?1692 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?78 
values: - - - 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?78 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1004 
stateDuring: ?1692 
=== Succesors ===
next: v896 
=== Usages ===
v894 
=== Predecessor ===
v64 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1004 stateDuring: ?1692 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i18 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i68 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.989469325851564
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v895 
falseSuccessor: v897 
=== Usages ===
=== Predecessor ===
i68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v895 #falseSuccessor: v897  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613707391991600354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B117" 
    xhandlers
    flags 
    probability 4584546009249759201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@*|@fixed>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605074543733987145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a1254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1921 
y: a1254 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1921 y: a1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.006689798866198148
=== Inputs ===
condition: v1255 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1255 #trueSuccessor: v59 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572557873818984767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605028388642851975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1921 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1990 
=== Succesors ===
next: v110 
=== Usages ===
v1861 v1859 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1990 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1924 
y: v1858 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1924 y: v1858  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1920 
=== Succesors ===
=== Usages ===
v1632 v1572 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1920  <|@  <|@
f <@~|@floating>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1925 v1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9974996975440577
=== Inputs ===
condition: v1859 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1859 #trueSuccessor: v103 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1925 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1991 
=== Succesors ===
next: v1926 
=== Usages ===
v1984 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1991 #next: v1926  <|@  <|@
f <@~|@floating>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1925 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1984 
=== Succesors ===
next: v1884 
=== Usages ===
v1556 
=== Predecessor ===
v1925 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1984 #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1556 v1576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1926 
y: v1548 
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1926 y: v1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1556 
=== Succesors ===
trueSuccessor: v1883 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1556 #trueSuccessor: v1883 #falseSuccessor: v1381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1572 
=== Usages ===
=== Predecessor ===
v1884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1009 
=== Succesors ===
trueSuccessor: v1571 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1009 #trueSuccessor: v1571 #falseSuccessor: v1570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590133247944804849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1791  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1789 
=== Predecessor ===
v1571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1927 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1927  <|@  <|@
f <@~|@floating>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1920 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1992 
=== Succesors ===
next: v1928 
=== Usages ===
v1985 
=== Predecessor ===
v1570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1992 #next: v1928  <|@  <|@
f <@~|@floating>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1927 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1985 
=== Succesors ===
next: v1892 
=== Usages ===
v1576 
=== Predecessor ===
v1927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1985 #next: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1928 
y: v1548 
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1928 y: v1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1576 
=== Succesors ===
trueSuccessor: v1891 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1928 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1576 #trueSuccessor: v1891 #falseSuccessor: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1800 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1789 
=== Predecessor ===
v1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1791 v1800 
=== Succesors ===
next: a1929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1791 v1800 #next: a1929  <|@  <|@
f <@~|@floating>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1960 
=== Succesors ===
next: v2021 
=== Usages ===
?1694 v2021 v1961 ?1696 ?1697 ?194 ?1695 ?336 ?300 ?1699 ?1700 ?1701 ?1698 ?354 ?318 ?1693 
=== Predecessor ===
v1789 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1960 #next: v2021  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a1929 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
a1929 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a1929 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1929 
=== Succesors ===
=== Usages ===
a1930 a1941 a1942 a1943 a1944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1929  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?78 
values: - - - 
=== Succesors ===
=== Usages ===
?139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?78 values: - - -  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<Graph$1.equals(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: Graph.java
sourceLine: 145
stackSize: 0
=== Inputs ===
outerFrameState: ?142 
values: - a2 a973 
=== Succesors ===
=== Usages ===
?418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?142 values: - a2 a973  <|@  <|@
tid ?418 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Node.valueEquals(Node)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Node.java
sourceLine: 1304
stackSize: 0
=== Inputs ===
outerFrameState: ?139 
values: - - 
=== Succesors ===
=== Usages ===
?194 ?1699 ?354 ?300 ?336 ?318 ?1698 ?1701 ?1697 ?1700 ?1693 ?1694 ?1695 ?1696 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?139 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v2021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" "B86" "B79" "B76" "B74" "B70" "B66" "B62" "B56" "B49" "B42" 
    successors "B30" "B92" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607336236950756760
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v192 
values: i18 i394 i1914 i1915 i1911 i1911 i1911 i1911 i1911 i1911 i1912 i1913 
=== Succesors ===
=== Usages ===
?194 v201 v1966 ?354 v1134 v1174 v1968 ?1698 v1970 v1180 ?1699 v1979 v1973 i394 v1171 v1039 ?336 ?1697 v1977 v1147 ?300 v1153 ?1701 v1156 ?318 v1162 ?1700 v1165 ?1693 ?1694 ?1695 ?1696 i1911 i1912 i1913 i1914 i1915 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: i18 i394 i1914 i1915 i1911 i1911 i1911 i1911 i1911 i1911 i1912 i1913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.362608117099135
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 11
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v191 
=== Succesors ===
next: a1930 
=== Usages ===
i193 v203 v235 v253 v271 v289 v307 v325 v343 v361 v377 v382 v390 v395 v406 v407 v408 v409 v410 v411 v412 v413 v414 v415 v1474 v1444 v1438 v1432 v1414 v1426 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v191 #next: a1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: a1931 
=== Usages ===
a1020 v1964 v1962 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: a1931  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 659
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
v1336 v1337 v1341 v1340 v1339 v1338 v1741 a1931 i1932 i1934 v1936 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1930 
=== Succesors ===
=== Usages ===
a1931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1931 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1962 
=== Succesors ===
next: i1932 
=== Usages ===
a1024 v1963 
=== Predecessor ===
a1930 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1962 #next: i1932  <|@  <|@
f <@~|@floating>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1931 
=== Succesors ===
=== Usages ===
i1932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1932 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1963 
=== Succesors ===
next: v205 
=== Usages ===
v201 v1134 
=== Predecessor ===
a1931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1963 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1932 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i1932  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
i1932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 38]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1933 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1933  <|@  <|@
f <@~|@floating>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1930 
=== Succesors ===
=== Usages ===
a1933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1964 
=== Succesors ===
next: i1934 
=== Usages ===
a1033 v1965 
=== Predecessor ===
v202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1964 #next: i1934  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1933 
=== Succesors ===
=== Usages ===
i1934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1934 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1965 
=== Succesors ===
next: v1416 
=== Usages ===
v1039 
=== Predecessor ===
a1933 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1965 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1934 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i1934  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1411 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
i1934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1411 #falseSuccessor: v1414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1935 
=== Usages ===
a1935 
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1935  <|@  <|@
f <@~|@floating>@ <|@
tid a1033 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a1933 
=== Succesors ===
=== Usages ===
v1966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1933  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1033 
index: i193 
=== Succesors ===
=== Usages ===
a1935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1033 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1935 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1411 
address: v1966 
=== Succesors ===
next: v1936 
=== Usages ===
v1986 v1278 v1264 v1266 v1268 v1270 v1272 v1274 v1276 
=== Predecessor ===
v1411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1411 address: v1966 #next: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1935 
=== Succesors ===
=== Usages ===
v1936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1986 
=== Succesors ===
next: v219 
=== Usages ===
v216 
=== Predecessor ===
a1935 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1986 #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: v1936 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1932 
=== Succesors ===
=== Usages ===
v1446 v1428 v1476 v1434 v1440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i1932  <|@  <|@
f <@~|@floating>@ <|@
tid a1024 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a1931 
=== Succesors ===
=== Usages ===
v1973 v1977 v1979 v1968 v1970 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 53]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v218 
=== Usages ===
=== Predecessor ===
v1936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v217 #falseSuccessor: v218  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 56]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a1263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1263 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v222 #falseSuccessor: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 64]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1423 
falseSuccessor: v1426 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1423 #falseSuccessor: v1426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1937 
=== Usages ===
j1937 
=== Predecessor ===
v1428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1937  <|@  <|@
f <@~|@floating>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1423 
address: v1968 
=== Succesors ===
next: i1060 
=== Usages ===
v1969 v1967 
=== Predecessor ===
v1423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1423 address: v1968 #next: i1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1937 
=== Succesors ===
=== Usages ===
i1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 70]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1967 
=== Succesors ===
next: i1071 
=== Usages ===
v233 
=== Predecessor ===
j1937 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1967 #next: i1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1937 
index: a1920 
=== Succesors ===
=== Usages ===
i1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1937 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1969 
=== Succesors ===
next: v237 
=== Usages ===
v233 
=== Predecessor ===
i1060 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1969 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1060 
y: i1071 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1060 y: i1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i1071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v234 #falseSuccessor: v235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 95]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:666) [bci: 93]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1427 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1750 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1750  <|@  <|@
f <@~|@floating>@ <|@
tid i1751 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272155
stableDimension: 0
stamp: i32 [-272155] ⇊00000000fffbd8e5 ⇈00000000fffbd8e5
stampKind: i32
value: int[-272155|0xfffffffffffbd8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 98]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid a1265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1265 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1266 
=== Succesors ===
trueSuccessor: v240 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1266 #trueSuccessor: v240 #falseSuccessor: v241  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 106]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1434  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1429 
falseSuccessor: v1432 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1429 #falseSuccessor: v1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1938 
=== Usages ===
j1938 
=== Predecessor ===
v1434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1938  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1938 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1429 
address: v1970 
=== Succesors ===
next: i1082 
=== Usages ===
v1971 v1972 
=== Predecessor ===
v1429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1429 address: v1970 #next: i1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1938 
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1082 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1971 
=== Succesors ===
next: i1096 
=== Usages ===
i1083 
=== Predecessor ===
j1938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1971 #next: i1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1938 
index: a1920 
=== Succesors ===
=== Usages ===
i1096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1938 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1972 
=== Succesors ===
next: v255 
=== Usages ===
i1097 
=== Predecessor ===
i1082 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1972 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i1083 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1082 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1083 
y: i18 
=== Succesors ===
=== Usages ===
i1085 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1083 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1084 
trueValue: i18 
falseValue: i12 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1084 trueValue: i18 falseValue: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i1097 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1096 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1097 
y: i18 
=== Succesors ===
=== Usages ===
i1099 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1097 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1098 
trueValue: i18 
falseValue: i12 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1098 trueValue: i18 falseValue: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i1099 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1085 y: i1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
i1096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v252 #falseSuccessor: v253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 137]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i1913 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 10
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:672) [bci: 135]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v659  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1433 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1432 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1752  <|@  <|@
f <@~|@floating>@ <|@
tid i1753 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274971
stableDimension: 0
stamp: i32 [-274971] ⇊00000000fffbcde5 ⇈00000000fffbcde5
stampKind: i32
value: int[-274971|0xfffffffffffbcde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B53" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 140]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1267 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v258 #falseSuccessor: v259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 148]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1440  <|@  <|@
f <@*|@fixed>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1435 
falseSuccessor: v1438 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1435 #falseSuccessor: v1438  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1939 
=== Usages ===
j1939 
=== Predecessor ===
v1440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1939  <|@  <|@
f <@~|@floating>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1435 
address: v1973 
=== Succesors ===
next: j1110 
=== Usages ===
v1974 v1975 
=== Predecessor ===
v1435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1435 address: v1973 #next: j1110  <|@  <|@
f <@~|@floating>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1939 
=== Succesors ===
=== Usages ===
j1110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1974 
=== Succesors ===
next: j1121 
=== Usages ===
v269 
=== Predecessor ===
j1939 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1974 #next: j1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1939 
index: a1920 
=== Succesors ===
=== Usages ===
j1121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1939 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1975 
=== Succesors ===
next: v273 
=== Usages ===
v269 
=== Predecessor ===
j1110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1975 #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1110 
y: j1121 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1110 y: j1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
j1121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 180]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1340 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i1912 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:678) [bci: 178]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1439 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1754 
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid i1755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282139
stableDimension: 0
stamp: i32 [-282139] ⇊00000000fffbb1e5 ⇈00000000fffbb1e5
stampKind: i32
value: int[-282139|0xfffffffffffbb1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 183]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid a1269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1269 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1269  <|@  <|@
f <@~|@floating>@ <|@
tid i1911 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 i193 i193 i193 i193 i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v276 #falseSuccessor: v277  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 191]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1441 
falseSuccessor: v1444 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1441 #falseSuccessor: v1444  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1940 
=== Usages ===
j1940 
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1940  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1940 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1441 
address: v1977 
=== Succesors ===
next: f1132 
=== Usages ===
v1978 v1976 
=== Predecessor ===
v1441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1441 address: v1977 #next: f1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1940 
=== Succesors ===
=== Usages ===
f1132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f1132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getFloat(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1976 
=== Succesors ===
next: f1143 
=== Usages ===
v287 
=== Predecessor ===
j1940 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1976 #next: f1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1940 
index: a1920 
=== Succesors ===
=== Usages ===
f1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1940 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f1143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getFloat(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1978 
=== Succesors ===
next: v291 
=== Usages ===
v287 
=== Predecessor ===
f1132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1978 #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f1132 
y: f1143 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: f1132 y: f1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
f1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 223]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:684) [bci: 221]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1756 
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1756  <|@  <|@
f <@~|@floating>@ <|@
tid i1757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290587
stableDimension: 0
stamp: i32 [-290587] ⇊00000000fffb90e5 ⇈00000000fffb90e5
stampKind: i32
value: int[-290587|0xfffffffffffb90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 226]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid a1271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1271 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1271  <|@  <|@
f <@~|@floating>@ <|@
tid a1020 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1930 
=== Succesors ===
=== Usages ===
v1174 v1165 v1156 v1147 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1930  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1272 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1272 #trueSuccessor: v294 #falseSuccessor: v295  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 234]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: d299 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d299  <|@  <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@15750d8c
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
d299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1694 <|@
d <@d|@=== Debug Properties ===
bci: 240
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
d299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d299 <|@
d <@d|@=== Debug Properties ===
bci: 240
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1147 
stateDuring: ?1694 
=== Succesors ===
next: a1941 
=== Usages ===
?300 ?1696 v305 
=== Predecessor ===
v294 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1147 stateDuring: ?1694 #next: a1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1941 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2016 
=== Usages ===
a1149 v2016 
=== Predecessor ===
d299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2016  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 243
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 2
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - d299 - 
=== Succesors ===
=== Usages ===
v2016 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - d299 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?300 
object: a1941 
=== Succesors ===
next: d303 
=== Usages ===
=== Predecessor ===
a1941 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?300 object: a1941 #next: d303  <|@  <|@
f <@~|@floating>@ <|@
tid a1149 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1941 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1941  <|@  <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@17d6b518
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1149 a973 i193 
=== Succesors ===
=== Usages ===
d303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1149 a973 i193  <|@  <|@
tid ?1696 <|@
d <@d|@=== Debug Properties ===
bci: 251
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 688
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - d299 - - - 
=== Succesors ===
=== Usages ===
d303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - d299 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d303 <|@
d <@d|@=== Debug Properties ===
bci: 251
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1153 
stateDuring: ?1696 
=== Succesors ===
next: v309 
=== Usages ===
v305 
=== Predecessor ===
v2016 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1153 stateDuring: ?1696 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d299 
y: d303 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: d299 y: d303  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
d303 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v306 #falseSuccessor: v307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 266]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:690) [bci: 264]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 269]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid a1273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1273 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1274 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1274 #trueSuccessor: v312 #falseSuccessor: v313  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 277]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i317 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i317  <|@  <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@3c14b8b8
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1695 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
bci: 283
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1156 
stateDuring: ?1695 
=== Succesors ===
next: a1942 
=== Usages ===
?318 ?1698 v323 
=== Predecessor ===
v312 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1156 stateDuring: ?1695 #next: a1942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2017 
=== Usages ===
a1158 v2017 
=== Predecessor ===
i317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2017  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 286
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 1
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - i317 
=== Succesors ===
=== Usages ===
v2017 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - i317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?318 
object: a1942 
=== Succesors ===
next: i321 
=== Usages ===
=== Predecessor ===
a1942 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?318 object: a1942 #next: i321  <|@  <|@
f <@~|@floating>@ <|@
tid a1158 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1942 
=== Succesors ===
=== Usages ===
v1162 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1942  <|@  <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@6a2618a7
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1158 a973 i193 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1158 a973 i193  <|@  <|@
tid ?1698 <|@
d <@d|@=== Debug Properties ===
bci: 294
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 694
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - i317 - - - 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - i317 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i321 <|@
d <@d|@=== Debug Properties ===
bci: 294
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1162 
stateDuring: ?1698 
=== Succesors ===
next: v327 
=== Usages ===
v323 
=== Predecessor ===
v2017 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1162 stateDuring: ?1698 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i317 
y: i321 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i317 y: i321  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
i321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 308]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 6
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:696) [bci: 306]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v785  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B72" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 311]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid a1275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1275 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1275  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1276 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1276 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 319]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i335 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i335  <|@  <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@57827102
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1697 <|@
d <@d|@=== Debug Properties ===
bci: 325
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
bci: 325
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1165 
stateDuring: ?1697 
=== Succesors ===
next: a1943 
=== Usages ===
?336 ?1700 v341 
=== Predecessor ===
v330 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1165 stateDuring: ?1697 #next: a1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2018 
=== Usages ===
a1167 v2018 
=== Predecessor ===
i335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2018  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 328
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - i335 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - i335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?336 
object: a1943 
=== Succesors ===
next: i339 
=== Usages ===
=== Predecessor ===
a1943 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?336 object: a1943 #next: i339  <|@  <|@
f <@~|@floating>@ <|@
tid a1167 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1943 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1943  <|@  <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@755e709f
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1167 a973 i193 
=== Succesors ===
=== Usages ===
i339 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1167 a973 i193  <|@  <|@
tid ?1700 <|@
d <@d|@=== Debug Properties ===
bci: 336
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - i335 - - - 
=== Succesors ===
=== Usages ===
i339 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - i335 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
bci: 336
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1171 
stateDuring: ?1700 
=== Succesors ===
next: v345 
=== Usages ===
v341 
=== Predecessor ===
v2018 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1171 stateDuring: ?1700 #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i335 
y: i339 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i335 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
i339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 350]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:702) [bci: 348]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 353]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid a1277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1277 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1277  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1278 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1278 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 361]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i353 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i353  <|@  <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@6c16c7f4
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1699 <|@
d <@d|@=== Debug Properties ===
bci: 367
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
bci: 367
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1174 
stateDuring: ?1699 
=== Succesors ===
next: a1944 
=== Usages ===
?354 ?1701 v359 
=== Predecessor ===
v348 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1174 stateDuring: ?1699 #next: a1944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1944 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2019 
=== Usages ===
a1176 v2019 
=== Predecessor ===
i353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2019  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 370
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 1
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - i353 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - i353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?354 
object: a1944 
=== Succesors ===
next: i357 
=== Usages ===
=== Predecessor ===
a1944 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?354 object: a1944 #next: i357  <|@  <|@
f <@~|@floating>@ <|@
tid a1176 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1944 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1944  <|@  <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@362f09f1
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1176 a973 i193 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1176 a973 i193  <|@  <|@
tid ?1701 <|@
d <@d|@=== Debug Properties ===
bci: 378
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 706
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - i353 - - - 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - i353 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
bci: 378
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1180 
stateDuring: ?1701 
=== Succesors ===
next: v363 
=== Usages ===
v359 
=== Predecessor ===
v2019 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1180 stateDuring: ?1701 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i353 
y: i357 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i353 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v361 
=== Usages ===
=== Predecessor ===
i357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v360 #falseSuccessor: v361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557796641049681304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:710) [bci: 392]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557796641049681304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:708) [bci: 390]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:711) [bci: 395]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B78" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 429]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1471 
falseSuccessor: v1474 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1471 #falseSuccessor: v1474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1945 
=== Usages ===
j1945 
=== Predecessor ===
v1476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1945  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1945 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1471 
address: v1979 
=== Succesors ===
next: a1191 
=== Usages ===
v1980 v1981 
=== Predecessor ===
v1471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1471 address: v1979 #next: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1945 
=== Succesors ===
=== Usages ===
a1191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1980 
=== Succesors ===
next: a1203 
=== Usages ===
a1192 v1288 v1289 
=== Predecessor ===
j1945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1980 #next: a1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1945 
index: a1920 
=== Succesors ===
=== Usages ===
a1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1945 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1981 
=== Succesors ===
next: v375 
=== Usages ===
a1204 v1289 v1291 
=== Predecessor ===
a1191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1981 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1191 
y: a1203 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1191 y: a1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1289 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
a1203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1289 #trueSuccessor: v374 #falseSuccessor: v373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i1915 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 458]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1191 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v377 #falseSuccessor: v379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v641  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 463]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1203 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1291 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1291 #trueSuccessor: v382 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 468]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i387 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i387  <|@  <|@
f <@~|@floating>@ <|@
tid a1192 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1191 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid a1204 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1203 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1203  <|@  <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@72617457
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepEquals0(Object, Object)>
=== Inputs ===
arguments: a1192 a1204 
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1192 a1204  <|@  <|@
tid ?1693 <|@
d <@d|@=== Debug Properties ===
bci: 472
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 718
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
bci: 472
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodeClass.deepEquals0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1205 
stateDuring: ?1693 
=== Succesors ===
next: v393 
=== Usages ===
v389 
=== Predecessor ===
v384 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1205 stateDuring: ?1693 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i18 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i387 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v390 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:719) [bci: 478]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid i1914 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid i1759 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302875
stableDimension: 0
stamp: i32 [-302875] ⇊00000000fffb60e5 ⇈00000000fffb60e5
stampKind: i32
value: int[-302875|0xfffffffffffb60e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1415 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1746  <|@  <|@
f <@~|@floating>@ <|@
tid i1747 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266267
stableDimension: 0
stamp: i32 [-266267] ⇊00000000fffbefe5 ⇈00000000fffbefe5
stampKind: i32
value: int[-266267|0xfffffffffffbefe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B38" "B45" "B52" "B59" "B88" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1739 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-302875 - -261387] ⇊00000000fff800e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v1736 
values: i1747 i1751 i1753 i1755 i1757 i1759 
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1736 values: i1747 i1751 i1753 i1755 i1757 i1759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1746 v1750 v1752 v1754 v1756 v1758 
=== Succesors ===
next: v1741 
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1746 v1750 v1752 v1754 v1756 v1758 #next: v1741  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
actionAndReason: i1739 
speculation: a1708 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1736 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?194 actionAndReason: i1739 speculation: a1708  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B117" 
    xhandlers
    flags 
    probability 4602832637323386264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:727) [bci: 488]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1724 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1724  <|@  <|@
f <@~|@floating>@ <|@
tid i1725 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258851
stableDimension: 0
stamp: i32 [-258851] ⇊00000000fffc0cdd ⇈00000000fffc0cdd
stampKind: i32
value: int[-258851|0xfffffffffffc0cdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1722 
=== Usages ===
=== Predecessor ===
v1884 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid i1723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -257827
stableDimension: 0
stamp: i32 [-257827] ⇊00000000fffc10dd ⇈00000000fffc10dd
stampKind: i32
value: int[-257827|0xfffffffffffc10dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B96" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1924 
y: v1860 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1924 y: v1860  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1861 
=== Succesors ===
trueSuccessor: v1477 
falseSuccessor: v1480 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1861 #trueSuccessor: v1477 #falseSuccessor: v1480  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1991 
=== Succesors ===
next: v1947 
=== Usages ===
v1987 
=== Predecessor ===
v1477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1991 #next: v1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1946 
=== Succesors ===
=== Usages ===
v1947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1987 
=== Succesors ===
next: v1900 
=== Usages ===
v1617 
=== Predecessor ===
v1946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1987 #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 v1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1947 
y: v1609 
=== Succesors ===
=== Usages ===
v1900 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1947 y: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1617 
=== Succesors ===
trueSuccessor: v1899 
falseSuccessor: v1485 
=== Usages ===
=== Predecessor ===
v1947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1617 #trueSuccessor: v1899 #falseSuccessor: v1485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1632 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1632  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1009 
=== Succesors ===
trueSuccessor: v1631 
falseSuccessor: v1630 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1009 #trueSuccessor: v1631 #falseSuccessor: v1630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4551150518184139317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1920 
=== Succesors ===
=== Usages ===
v1948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2023 
=== Succesors ===
next: v1949 
=== Usages ===
v1988 
=== Predecessor ===
v1630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2023 #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1948 
=== Succesors ===
=== Usages ===
v1949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1988 
=== Succesors ===
next: v1908 
=== Usages ===
v1636 
=== Predecessor ===
v1948 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1988 #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1949 
y: v1609 
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1949 y: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1636 
=== Succesors ===
trueSuccessor: v1907 
falseSuccessor: v1490 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1636 #trueSuccessor: v1907 #falseSuccessor: v1490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1832 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1832  <|@  <|@
f <@*|@fixed>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1907 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1823 v1832 
=== Succesors ===
next: v2022 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1823 v1832 #next: v2022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a1920 
=== Succesors ===
next: a154 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a1920 #next: a154  <|@  <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@74bd380c
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?78 
values: - - - 
=== Succesors ===
=== Usages ===
?1703 ?1702 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?78 values: - - -  <|@  <|@
tid ?1702 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: - - - - a973 
=== Succesors ===
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1215 
stateDuring: ?1702 
=== Succesors ===
next: a157 
=== Usages ===
?1703 v168 v1221 v164 
=== Predecessor ===
v2022 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1215 stateDuring: ?1702 #next: a157  <|@  <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@2e4e6808
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a973 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a973  <|@  <|@
tid ?1703 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?163 
values: - - - - - a154 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - - a154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a157 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1218 
stateDuring: ?1703 
=== Succesors ===
next: v167 
=== Usages ===
v164 v1221 
=== Predecessor ===
a154 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1218 stateDuring: ?1703 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a154 
y: a157 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a154 y: a157  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7491612393921453
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
a157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 4564215302635251507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 17]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557438175535507011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 5]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.16129032258064516
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v170 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v169 #falseSuccessor: v170  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545307490125786452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 21]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556018409101425390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 9]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i173 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i173  <|@  <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@60e08cb1
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a154 a157 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a154 a157  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: - - - - - 
=== Succesors ===
=== Usages ===
?1704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - -  <|@  <|@
tid ?1704 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Objects.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Objects.java
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: - - 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1221 
stateDuring: ?1704 
=== Succesors ===
next: v25 
=== Usages ===
v19 
=== Predecessor ===
v170 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1221 stateDuring: ?1704 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i18 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.989469325851564
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
i173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v579  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4555940663393467547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B36" "B81" "B43" "B83" "B50" "B85" "B57" "B21" "B63" "B67" "B71" "B75" "B104" "B18" 
    successors "B108" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v610 v612 v641 v659 v677 v695 v713 v731 v749 v767 v785 v821 v839 v857 v898 
=== Succesors ===
next: a1950 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v610 v612 v641 v659 v677 v695 v713 v731 v749 v767 v785 v821 v839 v857 v898 #next: a1950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1955 
=== Succesors ===
next: i1951 
=== Usages ===
a1223 v1982 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1955 #next: i1951  <|@  <|@
tid ?611 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i1919 - - - - i18 
=== Succesors ===
=== Usages ===
v1334 v1765 i1951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i1919 - - - - i18  <|@  <|@
f <@~|@floating>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1950 
=== Succesors ===
=== Usages ===
i1951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1951 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?611 
guard: - 
address: v1982 
=== Succesors ===
next: v1506 
=== Usages ===
v1239 
=== Predecessor ===
a1950 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?611 guard: - address: v1982 #next: v1506  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i13 
y: i12 
=== Succesors ===
=== Usages ===
v1983 v1239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i1951 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1239 
=== Succesors ===
trueSuccessor: v1502 
falseSuccessor: v1505 
=== Usages ===
=== Predecessor ===
i1951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1239 #trueSuccessor: v1502 #falseSuccessor: v1505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1952 
=== Usages ===
a1952 
=== Predecessor ===
v1506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1952  <|@  <|@
f <@~|@floating>@ <|@
tid a1223 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1950 
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1950  <|@  <|@
f <@~|@floating>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1223 
index: i88 
=== Succesors ===
=== Usages ===
a1952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1223 index: i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1502 
address: v1983 
=== Succesors ===
next: v1651 
=== Usages ===
a1237 v1249 v1993 
=== Predecessor ===
v1502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1502 address: v1983 #next: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a1952 
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1952  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1249 
=== Succesors ===
trueSuccessor: v1650 
falseSuccessor: v1649 
=== Usages ===
=== Predecessor ===
a1952 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1249 #trueSuccessor: v1650 #falseSuccessor: v1649  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B113" 
    xhandlers
    flags 
    probability 4599337404786041164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613556426776669559
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1952 
=== Succesors ===
=== Usages ===
v1953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1993 
=== Succesors ===
next: v2000 
=== Usages ===
v1862 
=== Predecessor ===
v1649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1993 #next: v2000  <|@  <|@
f <@~|@floating>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1953 
y: v1856 
=== Succesors ===
=== Usages ===
v2000 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1953 y: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v2000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9924019993156828
=== Inputs ===
condition: v1862 
=== Succesors ===
trueSuccessor: v1998 
falseSuccessor: v1997 
=== Usages ===
=== Predecessor ===
v1953 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1862 #trueSuccessor: v1998 #falseSuccessor: v1997  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613507997059701113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
v2000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v1998 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?611 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a1237 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1952 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1952  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" 
    xhandlers
    flags 
    probability 4581856225180385028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2001 
=== Usages ===
=== Predecessor ===
v2000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1997 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" "B112" 
    successors "B114" 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1659 v2001 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1659 v2001 #next: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v1994 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 61]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1765 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1765  <|@  <|@
f <@~|@floating>@ <|@
tid i1767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314907
stableDimension: 0
stamp: i32 [-314907] ⇊00000000fffb31e5 ⇈00000000fffb31e5
stampKind: i32
value: int[-314907|0xfffffffffffb31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
actionAndReason: i1767 
speculation: a1708 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?611 actionAndReason: i1767 speculation: a1708  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 4526589751189279909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B5" "B92" "B102" "B19" 
    successors "B118" 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v581 v583 v607 v804 v899 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v581 v583 v607 v804 v899 #next: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 31]
stamp: void
=== Inputs ===
result: i1919 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i1919 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1732 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1732  <|@  <|@
f <@~|@floating>@ <|@
tid i1733 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310307
stableDimension: 0
stamp: i32 [-310307] ⇊00000000fffb43dd ⇈00000000fffb43dd
stampKind: i32
value: int[-310307|0xfffffffffffb43dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1730 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1730  <|@  <|@
f <@~|@floating>@ <|@
tid i1731 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -309539
stableDimension: 0
stamp: i32 [-309539] ⇊00000000fffb46dd ⇈00000000fffb46dd
stampKind: i32
value: int[-309539|0xfffffffffffb46dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308787
stableDimension: 0
stamp: i32 [-308787] ⇊00000000fffb49cd ⇈00000000fffb49cd
stampKind: i32
value: int[-308787|0xfffffffffffb49cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1714 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1714  <|@  <|@
f <@~|@floating>@ <|@
tid i1715 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246811
stableDimension: 0
stamp: i32 [-246811] ⇊00000000fffc3be5 ⇈00000000fffc3be5
stampKind: i32
value: int[-246811|0xfffffffffffc3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B15" "B94" "B93" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1709 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-311307 - -242955] ⇊00000000fff800c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v1705 
values: i1715 i1717 i1723 i1725 i1729 i1731 i1733 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1705 values: i1715 i1717 i1723 i1725 i1729 i1731 i1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1714 v1716 v1722 v1724 v1728 v1730 v1732 
=== Succesors ===
next: v1711 
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1714 v1716 v1722 v1724 v1728 v1730 v1732 #next: v1711  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
actionAndReason: i1709 
speculation: a1708 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1705 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?9 actionAndReason: i1709 speculation: a1708  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1347 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 v569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 v1955 ?78 ?611 v1958 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1708 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1711 v1765 v1741 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1695 ?9 ?78 ?611 v1215 v1004 v45 ?139 ?1694 v1991 ?1696 v133 v1960 ?1697 ?194 v1165 v1967 ?1700 ?1699 v1971 ?336 ?354 v1974 v1174 v1980 v1976 ?1698 v1147 ?300 ?1701 v1156 ?318 ?1693 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v1344 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v1346 #falseSuccessor: v1344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@94a9b9b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 288
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1708 a3 - - - - - 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1708 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1002
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
reason: NullCheckException
speculation: Object[d.a@1110971169]
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1110971169] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -256523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:288) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 ?611 v1098 i1099 i193 v389 v894 v1084 i1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1256 <|@
result NarrowOop[Equivalence$1@1531265431] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1856 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 v1862 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1958 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1921 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i1099 i88 i1915 i1916 i394 i1085 i1911 i1912 i1913 i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1955 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1917 a1950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B111" "B11" 
    successors "B4" "B122" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a8 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
valueDescription: a -
=== Inputs ===
merge: v7 
values: a3 a1237 a987 
=== Succesors ===
=== Usages ===
?9 v1954 v2020 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: a3 a1237 a987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 55.405766793409114
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v6 
=== Succesors ===
next: v2020 
=== Usages ===
a8 v22 v32 v41 v552 v563 v1490 v1475 v1480 v1361 v1366 v1505 v1427 v1381 v1386 v1485 v1445 v1439 v1433 v1415 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v6 #next: v2020  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 290
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - a8 - - 
=== Succesors ===
=== Usages ===
v1335 v1711 v2020 i1918 v2021 v2022 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - a8 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a8 
=== Succesors ===
next: a1917 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a8 #next: a1917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1917 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1955 
=== Succesors ===
next: i1918 
=== Usages ===
a957 v1956 
=== Predecessor ===
v2020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1955 #next: i1918  <|@  <|@
f <@~|@floating>@ <|@
tid v1956 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1917 
=== Succesors ===
=== Usages ===
i1918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1918 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?9 
guard: - 
address: v1956 
=== Succesors ===
next: i1919 
=== Usages ===
v963 v989 
=== Predecessor ===
a1917 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?9 guard: - address: v1956 #next: i1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1954 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a8 
index: - 
=== Succesors ===
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a8 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1919 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:291) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1954 
=== Succesors ===
next: v1362 
=== Usages ===
i13 ?611 v42 ?78 
=== Predecessor ===
i1918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1954 #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1919 
y: i12 
=== Succesors ===
=== Usages ===
v1957 i88 v963 i1916 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1919 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i1918 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i1918  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v963 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
i1919 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v963 #trueSuccessor: v1358 #falseSuccessor: v1361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1920 
=== Usages ===
a1920 
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1920  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1917 
=== Succesors ===
=== Usages ===
v1959 v1957 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1917  <|@  <|@
f <@~|@floating>@ <|@
tid v1957 <|@
result [v9|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a957 
index: i13 
=== Succesors ===
=== Usages ===
a1920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a957 index: i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1920 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1358 
address: v1957 
=== Succesors ===
next: v48 
=== Usages ===
a973 v1009 v1969 v1972 v1975 v1978 v1981 v1992 v2022 v2023 
=== Predecessor ===
v1358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1358 address: v1957 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid a973 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1920 
=== Succesors ===
=== Usages ===
v1218 v45 v1004 ?139 ?1701 ?318 ?1696 ?1697 ?194 ?336 ?1700 ?1702 ?1699 v1171 ?1695 v1180 ?354 ?1694 v1162 ?1698 ?1693 ?300 v1153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1920  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a973 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a973  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.1293384951096047
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
a1920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1293384951096047 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B117" 
    xhandlers
    flags 
    probability 4619754328058095579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v46 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631985947064566367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1921 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1921 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1958 
=== Succesors ===
next: v54 
=== Usages ===
v1990 v1253 v1255 v1257 
=== Predecessor ===
v47 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1958 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1921 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1921  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9234138966083788
=== Inputs ===
condition: v1253 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a1921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1253 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9234138966083788 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid i1916 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i13 
y: i12 
=== Succesors ===
=== Usages ===
v989 v1959 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1916 
y: i1918 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1916 y: i1918  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v989 
=== Succesors ===
trueSuccessor: v1363 
falseSuccessor: v1366 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v989 #trueSuccessor: v1363 #falseSuccessor: v1366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1922 
=== Usages ===
a1922 
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1922  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
result [v9|QWORD[.] + v13|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a957 
index: i1916 
=== Succesors ===
=== Usages ===
a1922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a957 index: i1916  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1922 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1363 
address: v1959 
=== Succesors ===
next: v1516 
=== Usages ===
a987 v999 v1989 
=== Predecessor ===
v1363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1363 address: v1959 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a1922 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v999 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1514 
=== Usages ===
=== Predecessor ===
a1922 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v999 #trueSuccessor: v1515 #falseSuccessor: v1514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v9|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4616701359836752930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1524 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2005 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4630839076395035048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1923  <|@  <|@
f <@~|@floating>@ <|@
tid v1989 <|@
result [v14|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1922 
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1989 
=== Succesors ===
next: v2011 
=== Usages ===
v1857 
=== Predecessor ===
v1514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1989 #next: v2011  <|@  <|@
f <@~|@floating>@ <|@
tid v1857 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1923 
y: v1856 
=== Succesors ===
=== Usages ===
v2011 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1923 y: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v2011 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9924019993156828
=== Inputs ===
condition: v1857 
=== Succesors ===
trueSuccessor: v2009 
falseSuccessor: v2008 
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1857 #trueSuccessor: v2009 #falseSuccessor: v2008  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4630796206506642053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v2009 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?9 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid a987 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1922 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B11 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4599158965632209227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2012 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2012  <|@  <|@
f <@*|@fixed>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2005 
=== Predecessor ===
v2008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1524 v2012 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1524 v2012 #next: v563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v2005 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 61]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1716 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1716  <|@  <|@
f <@~|@floating>@ <|@
tid i1717 <|@
result int[-250907|0xfffffffffffc2be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250907
stableDimension: 0
stamp: i32 [-250907] ⇊00000000fffc2be5 ⇈00000000fffc2be5
stampKind: i32
value: int[-250907|0xfffffffffffc2be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250907|0xfffffffffffc2be5]] destination: B15 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615501666693788468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1921 
y: a1256 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1921 y: a1256  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i1919 - - - - 
=== Succesors ===
=== Usages ===
?1692 ?163 ?142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i1919 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7926698339558881
=== Inputs ===
condition: v1257 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1257 #trueSuccessor: v64 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7926698339558881 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613776835646610786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i68  <|@  <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@37ab3de
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a973 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a973  <|@  <|@
tid ?1692 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?78 
values: - - - 
=== Succesors ===
=== Usages ===
i68 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?78 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i68 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1004 
stateDuring: ?1692 
=== Succesors ===
next: v896 
=== Usages ===
v894 
=== Predecessor ===
v64 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1004 stateDuring: ?1692 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i68 
y: i18 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i68 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.989469325851564
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v895 
falseSuccessor: v897 
=== Usages ===
=== Predecessor ===
i68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v895 #falseSuccessor: v897  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613707391991600354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B117" 
    xhandlers
    flags 
    probability 4584546009249759201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@*|@fixed>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605074543733987145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a1254 <|@
result NarrowOop[Equivalence$3@1032552445] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1921 
y: a1254 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1921 y: a1254  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.006689798866198148
=== Inputs ===
condition: v1255 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1255 #trueSuccessor: v59 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.006689798866198148 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572557873818984767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605028388642851975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid v1990 <|@
result [v12|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1921 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1924 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1990 
=== Succesors ===
next: v110 
=== Usages ===
v1861 v1859 
=== Predecessor ===
v65 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1990 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v1858 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1924 
y: v1858 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1924 y: v1858  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1920 
=== Succesors ===
=== Usages ===
v1632 v1572 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1920  <|@  <|@
f <@~|@floating>@ <|@
tid v1991 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1925 v1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9974996975440577
=== Inputs ===
condition: v1859 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v1924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1859 #trueSuccessor: v103 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9974996975440577 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=equals target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1925 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1925 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1991 
=== Succesors ===
next: v1926 
=== Usages ===
v1984 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1991 #next: v1926  <|@  <|@
f <@~|@floating>@ <|@
tid v1984 <|@
result [v18|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1925 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1926 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1984 
=== Succesors ===
next: v1884 
=== Usages ===
v1556 
=== Predecessor ===
v1925 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1984 #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1556 v1576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1926 
y: v1548 
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1926 y: v1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1556 
=== Succesors ===
trueSuccessor: v1883 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1556 #trueSuccessor: v1883 #falseSuccessor: v1381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [v18|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1572 
=== Usages ===
=== Predecessor ===
v1884 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1009 
=== Succesors ===
trueSuccessor: v1571 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1009 #trueSuccessor: v1571 #falseSuccessor: v1570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590133247944804849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1791  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1789 
=== Predecessor ===
v1571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1927 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1927  <|@  <|@
f <@~|@floating>@ <|@
tid v1992 <|@
result [v10|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1920 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1927 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1992 
=== Succesors ===
next: v1928 
=== Usages ===
v1985 
=== Predecessor ===
v1570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1992 #next: v1928  <|@  <|@
f <@~|@floating>@ <|@
tid v1985 <|@
result [v20|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1927 
=== Succesors ===
=== Usages ===
v1928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1928 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1985 
=== Succesors ===
next: v1892 
=== Usages ===
v1576 
=== Predecessor ===
v1927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1985 #next: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1928 
y: v1548 
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1928 y: v1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1892 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1576 
=== Succesors ===
trueSuccessor: v1891 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1928 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1576 #trueSuccessor: v1891 #falseSuccessor: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [v20|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1800 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1800  <|@  <|@
f <@*|@fixed>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1789 
=== Predecessor ===
v1891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1791 v1800 
=== Succesors ===
next: a1929 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1791 v1800 #next: a1929  <|@  <|@
f <@~|@floating>@ <|@
tid v1960 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1929 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1960 
=== Succesors ===
next: v2021 
=== Usages ===
?1694 v2021 v1961 ?1696 ?1697 ?194 ?1695 ?336 ?300 ?1699 ?1700 ?1701 ?1698 ?354 ?318 ?1693 
=== Predecessor ===
v1789 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1960 #next: v2021  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a1929 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
a1929 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a1929 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v1961 <|@
result [v21|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1929 
=== Succesors ===
=== Usages ===
a1930 a1941 a1942 a1943 a1944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1929  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?78 
values: - - - 
=== Succesors ===
=== Usages ===
?139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?78 values: - - -  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<Graph$1.equals(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: Graph.java
sourceLine: 145
stackSize: 0
=== Inputs ===
outerFrameState: ?142 
values: - a2 a973 
=== Succesors ===
=== Usages ===
?418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?142 values: - a2 a973  <|@  <|@
tid ?418 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Node.valueEquals(Node)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Node.java
sourceLine: 1304
stackSize: 0
=== Inputs ===
outerFrameState: ?139 
values: - - 
=== Succesors ===
=== Usages ===
?194 ?1699 ?354 ?300 ?336 ?318 ?1698 ?1701 ?1697 ?1700 ?1693 ?1694 ?1695 ?1696 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?139 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
v2021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v21|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" "B86" "B79" "B76" "B74" "B70" "B66" "B62" "B56" "B49" "B42" 
    successors "B30" "B92" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607336236950756760
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v192 
values: i18 i394 i1914 i1915 i1911 i1911 i1911 i1911 i1911 i1911 i1912 i1913 
=== Succesors ===
=== Usages ===
?194 v201 v1966 ?354 v1134 v1174 v1968 ?1698 v1970 v1180 ?1699 v1979 v1973 i394 v1171 v1039 ?336 ?1697 v1977 v1147 ?300 v1153 ?1701 v1156 ?318 v1162 ?1700 v1165 ?1693 ?1694 ?1695 ?1696 i1911 i1912 i1913 i1914 i1915 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v192 values: i18 i394 i1914 i1915 i1911 i1911 i1911 i1911 i1911 i1911 i1912 i1913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.362608117099135
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 11
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v191 
=== Succesors ===
next: a1930 
=== Usages ===
i193 v203 v235 v253 v271 v289 v307 v325 v343 v361 v377 v382 v390 v395 v406 v407 v408 v409 v410 v411 v412 v413 v414 v415 v1474 v1444 v1438 v1432 v1414 v1426 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v191 #next: a1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1930 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: a1931 
=== Usages ===
a1020 v1964 v1962 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: a1931  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 659
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
v1336 v1337 v1341 v1340 v1339 v1338 v1741 a1931 i1932 i1934 v1936 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1962 <|@
result [v23|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1930 
=== Succesors ===
=== Usages ===
a1931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1931 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1962 
=== Succesors ===
next: i1932 
=== Usages ===
a1024 v1963 
=== Predecessor ===
a1930 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1962 #next: i1932  <|@  <|@
f <@~|@floating>@ <|@
tid v1963 <|@
result [v24|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1931 
=== Succesors ===
=== Usages ===
i1932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1932 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1963 
=== Succesors ===
next: v205 
=== Usages ===
v201 v1134 
=== Predecessor ===
a1931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1963 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1932 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i1932  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 35]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
i1932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction v24|DWORD[.] = MOV [v23|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction v25|DWORD = MOV [v24|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 38]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1933 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1933  <|@  <|@
f <@~|@floating>@ <|@
tid v1964 <|@
result [v23|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1930 
=== Succesors ===
=== Usages ===
a1933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1933 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1964 
=== Succesors ===
next: i1934 
=== Usages ===
a1033 v1965 
=== Predecessor ===
v202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1964 #next: i1934  <|@  <|@
f <@~|@floating>@ <|@
tid v1965 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1933 
=== Succesors ===
=== Usages ===
i1934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1934 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1965 
=== Succesors ===
next: v1416 
=== Usages ===
v1039 
=== Predecessor ===
a1933 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1965 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1934 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i1934  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1411 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
i1934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1411 #falseSuccessor: v1414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v23|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction CMP (x: v22|DWORD, y: [v26|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1935 
=== Usages ===
a1935 
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1935  <|@  <|@
f <@~|@floating>@ <|@
tid a1033 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a1933 
=== Succesors ===
=== Usages ===
v1966 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1933  <|@  <|@
f <@~|@floating>@ <|@
tid v1966 <|@
result [v27|QWORD[.] + v22|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1033 
index: i193 
=== Succesors ===
=== Usages ===
a1935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1033 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1935 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1411 
address: v1966 
=== Succesors ===
next: v1936 
=== Usages ===
v1986 v1278 v1264 v1266 v1268 v1270 v1272 v1274 v1276 
=== Predecessor ===
v1411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1411 address: v1966 #next: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid v1986 <|@
result [v28|DWORD[.] * 8 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1935 
=== Succesors ===
=== Usages ===
v1936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1936 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?194 
guard: - 
address: v1986 
=== Succesors ===
next: v219 
=== Usages ===
v216 
=== Predecessor ===
a1935 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?194 guard: - address: v1986 #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 50]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: v1936 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i1932 
=== Succesors ===
=== Usages ===
v1446 v1428 v1476 v1434 v1440 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i1932  <|@  <|@
f <@~|@floating>@ <|@
tid a1024 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 32]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a1931 
=== Succesors ===
=== Usages ===
v1973 v1977 v1979 v1968 v1970 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:661) [bci: 53]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v218 
=== Usages ===
=== Predecessor ===
v1936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v217 #falseSuccessor: v218  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v27|QWORD[.] + v22|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction v29|QWORD = MOV [v28|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 56]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid a1263 <|@
result NarrowOop[Class:int] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1263 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:662) [bci: 61]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v222 #falseSuccessor: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 64]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1428 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1428  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1423 
falseSuccessor: v1426 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1423 #falseSuccessor: v1426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1937 
=== Usages ===
j1937 
=== Predecessor ===
v1428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1937  <|@  <|@
f <@~|@floating>@ <|@
tid v1968 <|@
result [v30|QWORD[.] + v22|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1937 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1423 
address: v1968 
=== Succesors ===
next: i1060 
=== Usages ===
v1969 v1967 
=== Predecessor ===
v1423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1423 address: v1968 #next: i1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1967 <|@
result [v1|QWORD[.] + v31|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1937 
=== Succesors ===
=== Usages ===
i1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1937  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1060 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:663) [bci: 70]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1967 
=== Succesors ===
next: i1071 
=== Usages ===
v233 
=== Predecessor ===
j1937 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1967 #next: i1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1969 <|@
result [v31|QWORD + v10|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1937 
index: a1920 
=== Succesors ===
=== Usages ===
i1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1937 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1071 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1969 
=== Succesors ===
next: v237 
=== Usages ===
v233 
=== Predecessor ===
i1060 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1969 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1060 
y: i1071 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1060 y: i1071  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:665) [bci: 90]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i1071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v234 #falseSuccessor: v235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v1|QWORD[.] + v31|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: [v31|QWORD + v10|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 95]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1336 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B35 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:666) [bci: 93]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1427 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:664) [bci: 81]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1750 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1750  <|@  <|@
f <@~|@floating>@ <|@
tid i1751 <|@
result int[-272155|0xfffffffffffbd8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272155
stableDimension: 0
stamp: i32 [-272155] ⇊00000000fffbd8e5 ⇈00000000fffbd8e5
stampKind: i32
value: int[-272155|0xfffffffffffbd8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272155|0xfffffffffffbd8e5]] destination: B38 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 98]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid a1265 <|@
result NarrowOop[Class:boolean] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1265 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:668) [bci: 103]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1266 
=== Succesors ===
trueSuccessor: v240 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1266 #trueSuccessor: v240 #falseSuccessor: v241  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 106]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1434  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1429 
falseSuccessor: v1432 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1429 #falseSuccessor: v1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1938 
=== Usages ===
j1938 
=== Predecessor ===
v1434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1938  <|@  <|@
f <@~|@floating>@ <|@
tid v1970 <|@
result [v30|QWORD[.] + v22|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1938 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1429 
address: v1970 
=== Succesors ===
next: i1082 
=== Usages ===
v1971 v1972 
=== Predecessor ===
v1429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1429 address: v1970 #next: i1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1971 <|@
result [v1|QWORD[.] + v34|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1938 
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1082 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1971 
=== Succesors ===
next: i1096 
=== Usages ===
i1083 
=== Predecessor ===
j1938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1971 #next: i1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
result [v34|QWORD + v10|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1938 
index: a1920 
=== Succesors ===
=== Usages ===
i1096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1938 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1096 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v1972 
=== Succesors ===
next: v255 
=== Usages ===
i1097 
=== Predecessor ===
i1082 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1972 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i1083 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1082 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1083 
y: i18 
=== Succesors ===
=== Usages ===
i1085 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1083 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i1085 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1084 
trueValue: i18 
falseValue: i12 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1084 trueValue: i18 falseValue: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i1097 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i1096 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1097 
y: i18 
=== Succesors ===
=== Usages ===
i1099 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1097 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i1099 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.Unsafe.getBoolean(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:670) [bci: 123]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1098 
trueValue: i18 
falseValue: i12 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1098 trueValue: i18 falseValue: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1085 
y: i1099 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1085 y: i1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:671) [bci: 132]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
i1096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v252 #falseSuccessor: v253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSXB [v1|QWORD[.] + v34|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v34|QWORD + v10|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 137]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i1913 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 10
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD] destination: B42 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:672) [bci: 135]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v659  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1433 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getBoolean(Fields.java:333) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:669) [bci: 112]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1432 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1752  <|@  <|@
f <@~|@floating>@ <|@
tid i1753 <|@
result int[-274971|0xfffffffffffbcde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274971
stableDimension: 0
stamp: i32 [-274971] ⇊00000000fffbcde5 ⇈00000000fffbcde5
stampKind: i32
value: int[-274971|0xfffffffffffbcde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274971|0xfffffffffffbcde5]] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B53" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 140]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
result NarrowOop[Class:long] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1267 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:674) [bci: 145]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v258 #falseSuccessor: v259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 148]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1440  <|@  <|@
f <@*|@fixed>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1435 
falseSuccessor: v1438 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1435 #falseSuccessor: v1438  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1939 
=== Usages ===
j1939 
=== Predecessor ===
v1440 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1939  <|@  <|@
f <@~|@floating>@ <|@
tid v1973 <|@
result [v30|QWORD[.] + v22|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1939 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1435 
address: v1973 
=== Succesors ===
next: j1110 
=== Usages ===
v1974 v1975 
=== Predecessor ===
v1435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1435 address: v1973 #next: j1110  <|@  <|@
f <@~|@floating>@ <|@
tid v1974 <|@
result [v1|QWORD[.] + v41|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1939 
=== Succesors ===
=== Usages ===
j1110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1110 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1974 
=== Succesors ===
next: j1121 
=== Usages ===
v269 
=== Predecessor ===
j1939 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1974 #next: j1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
result [v41|QWORD + v10|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1939 
index: a1920 
=== Succesors ===
=== Usages ===
j1121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1939 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1121 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:676) [bci: 165]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1975 
=== Succesors ===
next: v273 
=== Usages ===
v269 
=== Predecessor ===
j1110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1975 #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1110 
y: j1121 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1110 y: j1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677) [bci: 175]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
j1121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [v1|QWORD[.] + v41|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: [v41|QWORD + v10|DWORD[.] * 8]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 180]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1340 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i1912 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:678) [bci: 178]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1439 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675) [bci: 154]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1754 
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid i1755 <|@
result int[-282139|0xfffffffffffbb1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282139
stableDimension: 0
stamp: i32 [-282139] ⇊00000000fffbb1e5 ⇈00000000fffbb1e5
stampKind: i32
value: int[-282139|0xfffffffffffbb1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282139|0xfffffffffffbb1e5]] destination: B52 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 183]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid a1269 <|@
result NarrowOop[Class:float] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1269 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1269  <|@  <|@
f <@~|@floating>@ <|@
tid i1911 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 i193 i193 i193 i193 i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:680) [bci: 188]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v276 #falseSuccessor: v277  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 191]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1441 
falseSuccessor: v1444 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1441 #falseSuccessor: v1444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1940 
=== Usages ===
j1940 
=== Predecessor ===
v1446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1940  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
result [v30|QWORD[.] + v22|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1940 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1441 
address: v1977 
=== Succesors ===
next: f1132 
=== Usages ===
v1978 v1976 
=== Predecessor ===
v1441 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1441 address: v1977 #next: f1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1976 <|@
result [v1|QWORD[.] + v45|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1940 
=== Succesors ===
=== Usages ===
f1132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f1132 <|@
result v46|SINGLE <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getFloat(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:681) [bci: 197]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1976 
=== Succesors ===
next: f1143 
=== Usages ===
v287 
=== Predecessor ===
j1940 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1976 #next: f1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1978 <|@
result [v45|QWORD + v10|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1940 
index: a1920 
=== Succesors ===
=== Usages ===
f1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1940 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f1143 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getFloat(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1978 
=== Succesors ===
next: v291 
=== Usages ===
v287 
=== Predecessor ===
f1132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1978 #next: v291  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f1132 
y: f1143 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: f1132 y: f1143  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:683) [bci: 218]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
f1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|SINGLE = H [v1|QWORD[.] + v45|QWORD * 1] nZ: XMM oh: VMOVSS <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v46|SINGLE, y: [v45|QWORD + v10|DWORD[.] * 8]) size: PS <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 223]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B56 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:684) [bci: 221]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getFloat(Fields.java:363) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:682) [bci: 208]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1756 
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1756  <|@  <|@
f <@~|@floating>@ <|@
tid i1757 <|@
result int[-290587|0xfffffffffffb90e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290587
stableDimension: 0
stamp: i32 [-290587] ⇊00000000fffb90e5 ⇈00000000fffb90e5
stampKind: i32
value: int[-290587|0xfffffffffffb90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290587|0xfffffffffffb90e5]] destination: B59 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 226]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid a1271 <|@
result NarrowOop[Class:double] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1271 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1271  <|@  <|@
f <@~|@floating>@ <|@
tid a1020 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 29]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1930 
=== Succesors ===
=== Usages ===
v1174 v1165 v1156 v1147 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1930  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:686) [bci: 231]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1272 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v295 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1272 #trueSuccessor: v294 #falseSuccessor: v295  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 234]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: d299 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d299  <|@  <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@15750d8c
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
d299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1694 <|@
d <@d|@=== Debug Properties ===
bci: 240
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
d299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d299 <|@
result v48|DOUBLE <|@
d <@d|@=== Debug Properties ===
bci: 240
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1147 
stateDuring: ?1694 
=== Succesors ===
next: a1941 
=== Usages ===
?300 ?1696 v305 
=== Predecessor ===
v294 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1147 stateDuring: ?1694 #next: a1941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1941 <|@
result v49|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2016 
=== Usages ===
a1149 v2016 
=== Predecessor ===
d299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2016  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 243
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 687
stackSize: 2
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - d299 - 
=== Succesors ===
=== Usages ===
v2016 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - d299 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?300 
object: a1941 
=== Succesors ===
next: d303 
=== Usages ===
=== Predecessor ===
a1941 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?300 object: a1941 #next: d303  <|@  <|@
f <@~|@floating>@ <|@
tid a1149 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 246]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1941 
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1941  <|@  <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@17d6b518
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a1149 a973 i193 
=== Succesors ===
=== Usages ===
d303 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1149 a973 i193  <|@  <|@
tid ?1696 <|@
d <@d|@=== Debug Properties ===
bci: 251
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 688
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - d299 - - - 
=== Succesors ===
=== Usages ===
d303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - d299 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d303 <|@
result v51|DOUBLE <|@
d <@d|@=== Debug Properties ===
bci: 251
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1153 
stateDuring: ?1696 
=== Succesors ===
next: v309 
=== Usages ===
v305 
=== Predecessor ===
v2016 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1153 stateDuring: ?1696 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: d299 
y: d303 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.FloatEqualsNode>@ x: d299 y: d303  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689) [bci: 261]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
d303 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v306 #falseSuccessor: v307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: v48|DOUBLE - 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v49|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v48|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v51|DOUBLE, y: v48|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 266]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B62 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:690) [bci: 264]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 269]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid a1273 <|@
result NarrowOop[Class:short] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1273 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:692) [bci: 274]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1274 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v313 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1274 #trueSuccessor: v312 #falseSuccessor: v313  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 277]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i317 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i317  <|@  <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@3c14b8b8
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1695 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i317 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 283
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1156 
stateDuring: ?1695 
=== Succesors ===
next: a1942 
=== Usages ===
?318 ?1698 v323 
=== Predecessor ===
v312 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1156 stateDuring: ?1695 #next: a1942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1942 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2017 
=== Usages ===
a1158 v2017 
=== Predecessor ===
i317 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2017  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 286
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 693
stackSize: 1
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - i317 
=== Succesors ===
=== Usages ===
v2017 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - i317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?318 
object: a1942 
=== Succesors ===
next: i321 
=== Usages ===
=== Predecessor ===
a1942 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?318 object: a1942 #next: i321  <|@  <|@
f <@~|@floating>@ <|@
tid a1158 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 289]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1942 
=== Succesors ===
=== Usages ===
v1162 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1942  <|@  <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@6a2618a7
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a1158 a973 i193 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1158 a973 i193  <|@  <|@
tid ?1698 <|@
d <@d|@=== Debug Properties ===
bci: 294
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 694
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - i317 - - - 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - i317 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i321 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 294
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1162 
stateDuring: ?1698 
=== Succesors ===
next: v327 
=== Usages ===
v323 
=== Predecessor ===
v2017 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1162 stateDuring: ?1698 #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i317 
y: i321 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i317 y: i321  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:695) [bci: 303]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
i321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: v52|DWORD 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v52|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 308]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 6
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B66 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:696) [bci: 306]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v785  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B72" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 311]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid a1275 <|@
result NarrowOop[Class:char] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1276 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1275 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1275  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698) [bci: 316]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1276 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1276 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 319]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i335 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i335  <|@  <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@57827102
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1697 <|@
d <@d|@=== Debug Properties ===
bci: 325
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 325
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1165 
stateDuring: ?1697 
=== Succesors ===
next: a1943 
=== Usages ===
?336 ?1700 v341 
=== Predecessor ===
v330 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1165 stateDuring: ?1697 #next: a1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1943 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2018 
=== Usages ===
a1167 v2018 
=== Predecessor ===
i335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2018  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 328
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - i335 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - i335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?336 
object: a1943 
=== Succesors ===
next: i339 
=== Usages ===
=== Predecessor ===
a1943 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?336 object: a1943 #next: i339  <|@  <|@
f <@~|@floating>@ <|@
tid a1167 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 331]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1943 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1943  <|@  <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@755e709f
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a1167 a973 i193 
=== Succesors ===
=== Usages ===
i339 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1167 a973 i193  <|@  <|@
tid ?1700 <|@
d <@d|@=== Debug Properties ===
bci: 336
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - i335 - - - 
=== Succesors ===
=== Usages ===
i339 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - i335 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i339 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 336
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1171 
stateDuring: ?1700 
=== Succesors ===
next: v345 
=== Usages ===
v341 
=== Predecessor ===
v2018 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1171 stateDuring: ?1700 #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i335 
y: i339 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i335 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:701) [bci: 345]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
i339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: v56|DWORD 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v56|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 350]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B70 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:702) [bci: 348]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 353]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid a1277 <|@
result NarrowOop[Class:byte] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1935 
y: a1277 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1935 y: a1277  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:704) [bci: 358]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1278 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v349 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1278 #trueSuccessor: v348 #falseSuccessor: v349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 361]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i353 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i353  <|@  <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@6c16c7f4
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1020 a2 i193 
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1020 a2 i193  <|@  <|@
tid ?1699 <|@
d <@d|@=== Debug Properties ===
bci: 367
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i353 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i353 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 367
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1174 
stateDuring: ?1699 
=== Succesors ===
next: a1944 
=== Usages ===
?354 ?1701 v359 
=== Predecessor ===
v348 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1174 stateDuring: ?1699 #next: a1944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1944 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1961 
=== Succesors ===
next: v2019 
=== Usages ===
a1176 v2019 
=== Predecessor ===
i353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1961 #next: v2019  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 370
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: false
localsSize: 9
locksSize: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 705
stackSize: 1
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - i353 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - - i353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?354 
object: a1944 
=== Succesors ===
next: i357 
=== Usages ===
=== Predecessor ===
a1944 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?354 object: a1944 #next: i357  <|@  <|@
f <@~|@floating>@ <|@
tid a1176 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 373]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a1944 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1944  <|@  <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@362f09f1
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a1176 a973 i193 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1176 a973 i193  <|@  <|@
tid ?1701 <|@
d <@d|@=== Debug Properties ===
bci: 378
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 706
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - i353 - - - 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - i353 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 378
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1180 
stateDuring: ?1701 
=== Succesors ===
next: v363 
=== Usages ===
v359 
=== Predecessor ===
v2019 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1180 stateDuring: ?1701 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i353 
y: i357 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i353 y: i357  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:707) [bci: 387]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v361 
=== Usages ===
=== Predecessor ===
i357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v360 #falseSuccessor: v361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: v60|DWORD 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v61|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v60|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557796641049681304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:710) [bci: 392]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B74 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557796641049681304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:708) [bci: 390]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:711) [bci: 395]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B76 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B78" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 429]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1134 
=== Succesors ===
trueSuccessor: v1471 
falseSuccessor: v1474 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1134 #trueSuccessor: v1471 #falseSuccessor: v1474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1945 
=== Usages ===
j1945 
=== Predecessor ===
v1476 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1945  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
result [v30|QWORD[.] + v22|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a1024 
index: i193 
=== Succesors ===
=== Usages ===
j1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1024 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1945 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1471 
address: v1979 
=== Succesors ===
next: a1191 
=== Usages ===
v1980 v1981 
=== Predecessor ===
v1471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1471 address: v1979 #next: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid v1980 <|@
result [v1|QWORD[.] + v64|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: j1945 
=== Succesors ===
=== Usages ===
a1191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j1945  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1191 <|@
result v65|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1980 
=== Succesors ===
next: a1203 
=== Usages ===
a1192 v1288 v1289 
=== Predecessor ===
j1945 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1980 #next: a1203  <|@  <|@
f <@~|@floating>@ <|@
tid v1981 <|@
result [v64|QWORD + v10|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1945 
index: a1920 
=== Succesors ===
=== Usages ===
a1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1945 index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1203 <|@
result v66|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1981 
=== Succesors ===
next: v375 
=== Usages ===
a1204 v1289 v1291 
=== Predecessor ===
a1191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1981 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1191 
y: a1203 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1191 y: a1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:716) [bci: 455]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1289 
=== Succesors ===
trueSuccessor: v374 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
a1203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1289 #trueSuccessor: v374 #falseSuccessor: v373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = MOV [v1|QWORD[.] + v64|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = MOV [v64|QWORD + v10|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD[.], y: v65|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?194 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i1915 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1337 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD] destination: B79 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 458]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1191 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1191  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 460]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v379 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v377 #falseSuccessor: v379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v65|DWORD[.], y: v65|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v641  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 463]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a1203 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:717) [bci: 465]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1291 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1291 #trueSuccessor: v382 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v66|DWORD[.], y: v66|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:722) [bci: 480]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 468]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i387 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i387  <|@  <|@
f <@~|@floating>@ <|@
tid a1192 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1191 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1191  <|@  <|@
f <@~|@floating>@ <|@
tid a1204 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:715) [bci: 446]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1203 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1203  <|@  <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@72617457
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepEquals0(Object, Object)>
=== Inputs ===
arguments: a1192 a1204 
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1192 a1204  <|@  <|@
tid ?1693 <|@
d <@d|@=== Debug Properties ===
bci: 472
code: ResolvedJavaMethodBytecode<NodeClass.dataEquals(Node, Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 718
stackSize: 0
=== Inputs ===
outerFrameState: ?418 
values: a1929 a2 a973 i193 - - - - - 
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?418 values: a1929 a2 a973 i193 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i387 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 472
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#NodeClass.deepEquals0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1205 
stateDuring: ?1693 
=== Succesors ===
next: v393 
=== Usages ===
v389 
=== Predecessor ===
v384 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1205 stateDuring: ?1693 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i18 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i387 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 475]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v390 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:719) [bci: 478]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid i1914 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: i32
=== Inputs ===
x: i193 
y: i12 
=== Succesors ===
=== Usages ===
i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 482]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v192 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD] destination: B86 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1475 
=== Usages ===
=== Predecessor ===
v1476 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:714) [bci: 435]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid i1759 <|@
result int[-302875|0xfffffffffffb60e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302875
stableDimension: 0
stamp: i32 [-302875] ⇊00000000fffb60e5 ⇈00000000fffb60e5
stampKind: i32
value: int[-302875|0xfffffffffffb60e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302875|0xfffffffffffb60e5]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v1415 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v1415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:660) [bci: 43]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1746  <|@  <|@
f <@~|@floating>@ <|@
tid i1747 <|@
result int[-266267|0xfffffffffffbefe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266267
stableDimension: 0
stamp: i32 [-266267] ⇊00000000fffbefe5 ⇈00000000fffbefe5
stampKind: i32
value: int[-266267|0xfffffffffffbefe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1736 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266267|0xfffffffffffbefe5]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B38" "B45" "B52" "B59" "B88" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1739 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-302875 - -261387] ⇊00000000fff800e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v1736 
values: i1747 i1751 i1753 i1755 i1757 i1759 
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1736 values: i1747 i1751 i1753 i1755 i1757 i1759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1746 v1750 v1752 v1754 v1756 v1758 
=== Succesors ===
next: v1741 
=== Usages ===
i1739 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1746 v1750 v1752 v1754 v1756 v1758 #next: v1741  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?194 
actionAndReason: i1739 
speculation: a1708 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1736 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?194 actionAndReason: i1739 speculation: a1708  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B117" 
    xhandlers
    flags 
    probability 4602832637323386264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:727) [bci: 488]
at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v192 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v192 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1724 
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1724  <|@  <|@
f <@~|@floating>@ <|@
tid i1725 <|@
result int[-258851|0xfffffffffffc0cdd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -258851
stableDimension: 0
stamp: i32 [-258851] ⇊00000000fffc0cdd ⇈00000000fffc0cdd
stampKind: i32
value: int[-258851|0xfffffffffffc0cdd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258851|0xfffffffffffc0cdd]] destination: B93 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1722 
=== Usages ===
=== Predecessor ===
v1884 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid i1723 <|@
result int[-257827|0xfffffffffffc10dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -257827
stableDimension: 0
stamp: i32 [-257827] ⇊00000000fffc10dd ⇈00000000fffc10dd
stampKind: i32
value: int[-257827|0xfffffffffffc10dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-257827|0xfffffffffffc10dd]] destination: B94 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B96" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1860 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1924 
y: v1860 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1924 y: v1860  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1861 
=== Succesors ===
trueSuccessor: v1477 
falseSuccessor: v1480 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1861 #trueSuccessor: v1477 #falseSuccessor: v1480  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1946 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1991 
=== Succesors ===
next: v1947 
=== Usages ===
v1987 
=== Predecessor ===
v1477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1991 #next: v1947  <|@  <|@
f <@~|@floating>@ <|@
tid v1987 <|@
result [v73|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1946 
=== Succesors ===
=== Usages ===
v1947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1947 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1987 
=== Succesors ===
next: v1900 
=== Usages ===
v1617 
=== Predecessor ===
v1946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1987 #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid v1609 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rawvalue: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 v1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1947 
y: v1609 
=== Succesors ===
=== Usages ===
v1900 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1947 y: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1900 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1617 
=== Succesors ===
trueSuccessor: v1899 
falseSuccessor: v1485 
=== Usages ===
=== Predecessor ===
v1947 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1617 #trueSuccessor: v1899 #falseSuccessor: v1485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [v73|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1632 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1632  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1009 
=== Succesors ===
trueSuccessor: v1631 
falseSuccessor: v1630 
=== Usages ===
=== Predecessor ===
v1899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1009 #trueSuccessor: v1631 #falseSuccessor: v1630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4551150518184139317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1823 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1823  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@~|@floating>@ <|@
tid v2023 <|@
result [v10|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1920 
=== Succesors ===
=== Usages ===
v1948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1948 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2023 
=== Succesors ===
next: v1949 
=== Usages ===
v1988 
=== Predecessor ===
v1630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2023 #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid v1988 <|@
result [v75|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1948 
=== Succesors ===
=== Usages ===
v1949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1949 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1988 
=== Succesors ===
next: v1908 
=== Usages ===
v1636 
=== Predecessor ===
v1948 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1988 #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1949 
y: v1609 
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1949 y: v1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1908 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1636 
=== Succesors ===
trueSuccessor: v1907 
falseSuccessor: v1490 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1636 #trueSuccessor: v1907 #falseSuccessor: v1490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [v75|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1832 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1832  <|@  <|@
f <@*|@fixed>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
v1907 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1823 v1832 
=== Succesors ===
next: v2022 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1823 v1832 #next: v2022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a1920 
=== Succesors ===
next: a154 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a1920 #next: a154  <|@  <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@74bd380c
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?78 
values: - - - 
=== Succesors ===
=== Usages ===
?1703 ?1702 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?78 values: - - -  <|@  <|@
tid ?1702 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: - - - - a973 
=== Succesors ===
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a154 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1215 
stateDuring: ?1702 
=== Succesors ===
next: a157 
=== Usages ===
?1703 v168 v1221 v164 
=== Predecessor ===
v2022 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1215 stateDuring: ?1702 #next: a157  <|@  <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@2e4e6808
stamp: void
targetMethod: HotSpotMethod<Reference.get()>
=== Inputs ===
arguments: a973 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a973  <|@  <|@
tid ?1703 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 1
=== Inputs ===
outerFrameState: ?163 
values: - - - - - a154 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - - a154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a157 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#Reference.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1218 
stateDuring: ?1703 
=== Succesors ===
next: v167 
=== Usages ===
v164 v1221 
=== Predecessor ===
a154 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1218 stateDuring: ?1703 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a154 
y: a157 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a154 y: a157  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 2]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.7491612393921453
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
a157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: v76|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD[.], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7491612393921453 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 4564215302635251507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 17]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557438175535507011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 5]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 6]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
trueSuccessorProbability: 0.16129032258064516
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v170 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v169 #falseSuccessor: v170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD[.], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16129032258064516 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545307490125786452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 21]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556018409101425390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 9]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i173 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i173  <|@  <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@60e08cb1
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a154 a157 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a154 a157  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HotSpotGraalMBean$RefEquivalence.equals(Object, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: HotSpotGraalMBean.java
sourceLine: 351
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: - - - - - 
=== Succesors ===
=== Usages ===
?1704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - -  <|@  <|@
tid ?1704 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Objects.equals(Object, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Objects.java
sourceLine: 59
stackSize: 0
=== Inputs ===
outerFrameState: ?178 
values: - - 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?178 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i173 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.util.Objects.equals(Objects.java:59) [bci: 11]
at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1221 
stateDuring: ?1704 
=== Succesors ===
next: v25 
=== Usages ===
v19 
=== Predecessor ===
v170 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1221 stateDuring: ?1704 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i18 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stamp: void
trueSuccessorProbability: 0.989469325851564
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
i173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v579  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:11, 20, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4555940663393467547
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B36" "B81" "B43" "B83" "B50" "B85" "B57" "B21" "B63" "B67" "B71" "B75" "B104" "B18" 
    successors "B108" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v610 v612 v641 v659 v677 v695 v713 v731 v749 v767 v785 v821 v839 v857 v898 
=== Succesors ===
next: a1950 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v610 v612 v641 v659 v677 v695 v713 v731 v749 v767 v785 v821 v839 v857 v898 #next: a1950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1950 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1955 
=== Succesors ===
next: i1951 
=== Usages ===
a1223 v1982 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1955 #next: i1951  <|@  <|@
tid ?611 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 293
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i1919 - - - - i18 
=== Succesors ===
=== Usages ===
v1334 v1765 i1951 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i1919 - - - - i18  <|@  <|@
f <@~|@floating>@ <|@
tid v1982 <|@
result [v79|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1950 
=== Succesors ===
=== Usages ===
i1951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1951 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?611 
guard: - 
address: v1982 
=== Succesors ===
next: v1506 
=== Usages ===
v1239 
=== Predecessor ===
a1950 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?611 guard: - address: v1982 #next: v1506  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i13 
y: i12 
=== Succesors ===
=== Usages ===
v1983 v1239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i1951 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i1951  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1239 
=== Succesors ===
trueSuccessor: v1502 
falseSuccessor: v1505 
=== Usages ===
=== Predecessor ===
i1951 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1239 #trueSuccessor: v1502 #falseSuccessor: v1505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction CMP (x: v80|DWORD, y: [v79|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B107 -> B108 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1952 
=== Usages ===
a1952 
=== Predecessor ===
v1506 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1952  <|@  <|@
f <@~|@floating>@ <|@
tid a1223 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1950 
=== Succesors ===
=== Usages ===
v1983 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1950  <|@  <|@
f <@~|@floating>@ <|@
tid v1983 <|@
result [v81|QWORD[.] + v80|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1223 
index: i88 
=== Succesors ===
=== Usages ===
a1952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1223 index: i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1952 <|@
result v82|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1502 
address: v1983 
=== Succesors ===
next: v1651 
=== Usages ===
a1237 v1249 v1993 
=== Predecessor ===
v1502 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1502 address: v1983 #next: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:298) [bci: 52]
stamp: void
=== Inputs ===
value: a1952 
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1952  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1249 
=== Succesors ===
trueSuccessor: v1650 
falseSuccessor: v1649 
=== Usages ===
=== Predecessor ===
a1952 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1249 #trueSuccessor: v1650 #falseSuccessor: v1649  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v81|QWORD[.] + v80|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD[.], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B113" 
    xhandlers
    flags 
    probability 4599337404786041164
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613556426776669559
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v1993 <|@
result [v82|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1952 
=== Succesors ===
=== Usages ===
v1953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1952  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1953 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1993 
=== Succesors ===
next: v2000 
=== Usages ===
v1862 
=== Predecessor ===
v1649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1993 #next: v2000  <|@  <|@
f <@~|@floating>@ <|@
tid v1862 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1953 
y: v1856 
=== Succesors ===
=== Usages ===
v2000 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1953 y: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v2000 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9924019993156828
=== Inputs ===
condition: v1862 
=== Succesors ===
trueSuccessor: v1998 
falseSuccessor: v1997 
=== Usages ===
=== Predecessor ===
v1953 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1862 #trueSuccessor: v1998 #falseSuccessor: v1997  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v82|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613507997059701113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
v2000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v1998 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?611 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid a1237 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1952 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1952  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B111 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" 
    xhandlers
    flags 
    probability 4581856225180385028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2001 
=== Usages ===
=== Predecessor ===
v2000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1994 
=== Predecessor ===
v1997 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" "B112" 
    successors "B114" 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:297) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1659 v2001 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1659 v2001 #next: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 60]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v1994 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:300) [bci: 61]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:296) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1765 
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1765  <|@  <|@
f <@~|@floating>@ <|@
tid i1767 <|@
result int[-314907|0xfffffffffffb31e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314907
stableDimension: 0
stamp: i32 [-314907] ⇊00000000fffb31e5 ⇈00000000fffb31e5
stampKind: i32
value: int[-314907|0xfffffffffffb31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
actionAndReason: i1767 
speculation: a1708 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?611 actionAndReason: i1767 speculation: a1708  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -314907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 4526589751189279909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v581  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B5" "B92" "B102" "B19" 
    successors "B118" 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v581 v583 v607 v804 v899 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v581 v583 v607 v804 v899 #next: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:294) [bci: 31]
stamp: void
=== Inputs ===
result: i1919 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i1919 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:350) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1732 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1732  <|@  <|@
f <@~|@floating>@ <|@
tid i1733 <|@
result int[-310307|0xfffffffffffb43dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310307
stableDimension: 0
stamp: i32 [-310307] ⇊00000000fffb43dd ⇈00000000fffb43dd
stampKind: i32
value: int[-310307|0xfffffffffffb43dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310307|0xfffffffffffb43dd]] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:349) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1730 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1730  <|@  <|@
f <@~|@floating>@ <|@
tid i1731 <|@
result int[-309539|0xfffffffffffb46dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -309539
stableDimension: 0
stamp: i32 [-309539] ⇊00000000fffb46dd ⇈00000000fffb46dd
stampKind: i32
value: int[-309539|0xfffffffffffb46dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-309539|0xfffffffffffb46dd]] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; target_method=equals target_method_class=Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence; position=at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
result int[-308787|0xfffffffffffb49cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308787
stableDimension: 0
stamp: i32 [-308787] ⇊00000000fffb49cd ⇈00000000fffb49cd
stampKind: i32
value: int[-308787|0xfffffffffffb49cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308787|0xfffffffffffb49cd]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:292) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v1714 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v1714  <|@  <|@
f <@~|@floating>@ <|@
tid i1715 <|@
result int[-246811|0xfffffffffffc3be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246811
stableDimension: 0
stamp: i32 [-246811] ⇊00000000fffc3be5 ⇈00000000fffc3be5
stampKind: i32
value: int[-246811|0xfffffffffffc3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246811|0xfffffffffffc3be5]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B15" "B94" "B93" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1709 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-311307 - -242955] ⇊00000000fff800c5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v1705 
values: i1715 i1717 i1723 i1725 i1729 i1731 i1733 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1705 values: i1715 i1717 i1723 i1725 i1729 i1731 i1733  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1714 v1716 v1722 v1724 v1728 v1730 v1732 
=== Succesors ===
next: v1711 
=== Usages ===
i1709 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1714 v1716 v1722 v1724 v1728 v1730 v1732 #next: v1711  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
actionAndReason: i1709 
speculation: a1708 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1705 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?9 actionAndReason: i1709 speculation: a1708  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@94a9b9b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B111" "B11" 
    successors "B4" "B122" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [v4|QWORD[.]] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1293384951096047 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631985947064566367
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9234138966083788 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v9|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4630839076395035048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v14|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4630796206506642053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B11 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615501666693788468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7926698339558881 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613776835646610786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36, 24] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613707391991600354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B36" "B81" "B43" "B83" "B50" "B85" "B57" "B21" "B63" "B67" "B71" "B75" "B104" "B18" 
    successors "B108" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction CMP (x: v80|DWORD, y: [v79|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B107 -> B108 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v81|QWORD[.] + v80|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|DWORD[.], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613556426776669559
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v82|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613507997059701113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD[.]] destination: B111 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605074543733987145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.006689798866198148 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605028388642851975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9974996975440577 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [v18|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: [v20|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v21|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" "B86" "B79" "B76" "B74" "B70" "B66" "B62" "B56" "B49" "B42" 
    successors "B30" "B92" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607336236950756760
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction v24|DWORD[.] = MOV [v23|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction v25|DWORD = MOV [v24|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v23|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction CMP (x: v22|DWORD, y: [v26|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v27|QWORD[.] + v22|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction v29|QWORD = MOV [v28|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B78" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = MOV [v1|QWORD[.] + v64|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = MOV [v64|QWORD + v10|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD[.], y: v65|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v65|DWORD[.], y: v65|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v66|DWORD[.], y: v66|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD] destination: B86 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B53" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B72" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B76 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD] destination: B79 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v1|QWORD[.] + v31|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: [v31|QWORD + v10|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B35 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSXB [v1|QWORD[.] + v34|QWORD * 1] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZXB [v34|QWORD + v10|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD] destination: B42 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [v1|QWORD[.] + v41|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: [v41|QWORD + v10|DWORD[.] * 8]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [v30|QWORD[.] + v22|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|SINGLE = H [v1|QWORD[.] + v45|QWORD * 1] nZ: XMM oh: VMOVSS <|@ <|@
      nr   -1  <|@ instruction UCOMIS (x: v46|SINGLE, y: [v45|QWORD + v10|DWORD[.] * 8]) size: PS <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B56 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: v48|DOUBLE - 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v49|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v48|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v51|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction VUCOMISD (x: v51|DOUBLE, y: v48|DOUBLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B62 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: v52|DWORD 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v52|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B66 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: v56|DWORD 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v56|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B70 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: v60|DWORD 
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v61|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - v60|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557796641049681304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B74 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590133247944804849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575811039559163288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572557873818984767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571307439931792792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566803840304422296
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B96" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [v73|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [v75|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: v76|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD[.], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7491612393921453 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557438175535507011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD[.], y: v76|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16129032258064516 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556018409101425390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:11, 20, 46, 24] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4555940663393467547
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562300240677051800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557796641049681304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4551150518184139317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545307490125786452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B117" 
    xhandlers
    flags 
    probability 4619754328058095579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B5" "B92" "B102" "B19" 
    successors "B118" 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4616701359836752930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B117" 
    xhandlers
    flags 
    probability 4602832637323386264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B113" 
    xhandlers
    flags 
    probability 4599337404786041164
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" "B112" 
    successors "B114" 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4599158965632209227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B117" 
    xhandlers
    flags 
    probability 4584546009249759201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" 
    xhandlers
    flags 
    probability 4581856225180385028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 4564215302635251507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B102 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 4526589751189279909
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-258851|0xfffffffffffc0cdd]] destination: B93 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B15" "B94" "B93" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] - - - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250907|0xfffffffffffc2be5]] destination: B15 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246811|0xfffffffffffc3be5]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310307|0xfffffffffffb43dd]] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272155|0xfffffffffffbd8e5]] destination: B38 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B38" "B45" "B52" "B59" "B88" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: v21|DWORD[.] v1|QWORD[.] v11|QWORD[.] v22|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - v1|QWORD[.] v11|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -314907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] - v7|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-257827|0xfffffffffffc10dd]] destination: B94 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274971|0xfffffffffffbcde5]] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290587|0xfffffffffffb90e5]] destination: B59 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282139|0xfffffffffffbb1e5]] destination: B52 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1110971169] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -256523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:288) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266267|0xfffffffffffbefe5]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-309539|0xfffffffffffb46dd]] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308787|0xfffffffffffb49cd]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302875|0xfffffffffffb60e5]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokespecial #3          // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokespecial #37         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokespecial #37         // getRawValue:(int)java.lang.Object
    52: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@94a9b9b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B111" "B11" 
    successors "B4" "B122" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:3] <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.1293384951096047 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631985947064566367
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.9234138966083788 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4630839076395035048
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4630796206506642053
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:3] <|@ <|@
      nr  102  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615501666693788468
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.7926698339558881 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613776835646610786
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36, 24] <|@ <|@
      nr  146  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613707391991600354
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B18 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B36" "B81" "B43" "B83" "B50" "B85" "B57" "B21" "B63" "B67" "B71" "B75" "B104" "B18" 
    successors "B108" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1008  <|@ instruction rcx|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B107 -> B108 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr 1018  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613556426776669559
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1032  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613507997059701113
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27] <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction JUMP ~[] destination: B111 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605074543733987145
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.006689798866198148 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605028388642851975
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  182  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.9974996975440577 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  194  <|@ instruction CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  224  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" "B86" "B79" "B76" "B74" "B70" "B66" "B62" "B56" "B49" "B42" 
    successors "B30" "B92" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607336236950756760
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  234  <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  240  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rbp|QWORD = MOV [rax|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  262  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B78" "B87" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|QWORD * 1] size: DWORD <|@ <|@
      nr  776  <|@ instruction r8|DWORD[.] = MOV [r8|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction CMP (x: r8|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr  832  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B86 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B53" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  588  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B72" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  756  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B76 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  786  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B79 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rcx|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: rcx|DWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  300  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B35 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction rcx|DWORD = SETCC condition: != <|@ <|@
      nr  358  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = SETCC condition: != <|@ <|@
      nr  364  <|@ instruction CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  372  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  374  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B42 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: QWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  432  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  484  <|@ instruction xmm0|SINGLE = H [rdx|QWORD[.] + rsi|QWORD * 1] nZ: XMM oh: VMOVSS <|@ <|@
      nr  486  <|@ instruction UCOMIS (x: xmm0|SINGLE, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: PS <|@ <|@
      nr  488  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r11|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  494  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B56 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr  546  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: xmm0|DOUBLE - 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction stack:88|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr  562  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: stack:88|DOUBLE) <|@ <|@
      nr  564  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B62 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr  602  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  606  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:92|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr  618  <|@ instruction CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B66 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr  658  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:92|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr  674  <|@ instruction CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B70 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr  714  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:92|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr  730  <|@ instruction CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557796641049681304
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B74 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590133247944804849
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B36 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B43 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B83 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B50 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575811039559163288
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B57 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572557873818984767
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B21 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571307439931792792
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B63 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566803840304422296
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B67 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B96" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr  924  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  944  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  946  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12, 46, 24] <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: stack:64|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 46, 24] <|@ <|@
      nr  966  <|@ instruction CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.7491612393921453 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557438175535507011
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.16129032258064516 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556018409101425390
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:11, 20, 46, 24] <|@ <|@
      nr  994  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4555940663393467547
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562300240677051800
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B71 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557796641049681304
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B75 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4551150518184139317
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545307490125786452
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B117" 
    xhandlers
    flags 
    probability 4619754328058095579
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B5 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B5" "B92" "B102" "B19" 
    successors "B118" 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4616701359836752930
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B117" 
    xhandlers
    flags 
    probability 4602832637323386264
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B92 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B113" 
    xhandlers
    flags 
    probability 4599337404786041164
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B109 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B109" "B112" 
    successors "B114" 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1058  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4599158965632209227
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B117" 
    xhandlers
    flags 
    probability 4584546009249759201
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B19 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" 
    xhandlers
    flags 
    probability 4581856225180385028
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B117" 
    xhandlers
    flags 
    probability 4564215302635251507
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B102 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B117" 
    xhandlers
    flags 
    probability 4526589751189279909
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1074  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE input: int[-258851|0xfffffffffffc0cdd] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B93 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B15" "B94" "B93" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r11|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B15 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ instruction r11|DWORD = MOVE input: int[-246811|0xfffffffffffc3be5] <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction r11|DWORD = MOVE input: int[-310307|0xfffffffffffb43dd] <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction r10|DWORD = MOVE input: int[-272155|0xfffffffffffbd8e5] <|@ <|@
      nr  320  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B38 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B38" "B45" "B52" "B59" "B88" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [rdi:0, r11:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] stack:40|QWORD[.] rdi|QWORD[.] r8|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] rdi|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction MOV [r15|QWORD + 668] y: -314907 size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE input: int[-257827|0xfffffffffffc10dd] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B94 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-274971|0xfffffffffffbcde5] <|@ <|@
      nr  392  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5] <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  514  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B59 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r10|DWORD = MOVE input: int[-282139|0xfffffffffffbb1e5] <|@ <|@
      nr  452  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B52 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1110971169] <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 668] y: -256523 size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rcx:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:288) [bci: 0]
locals: stack:32|QWORD[.] Object[null] rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-266267|0xfffffffffffbefe5] <|@ <|@
      nr  878  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-309539|0xfffffffffffb46dd] <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r11|DWORD = MOVE input: int[-308787|0xfffffffffffb49cd] <|@ <|@
      nr 1102  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B88" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-302875|0xfffffffffffb60e5] <|@ <|@
      nr  862  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokespecial #3          // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokespecial #37         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokespecial #37         // getRawValue:(int)java.lang.Object
    52: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@94a9b9b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B111" "B11" 
    successors "B4" "B122" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r10|QWORD[.]] state [bci:3] <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4632994485768404826
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.1293384951096047 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631985947064566367
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.9234138966083788 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631465994071205676
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4630839076395035048
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4630796206506642053
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:3] <|@ <|@
      nr  102  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B11 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615501666693788468
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr  136  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.7926698339558881 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613776835646610786
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36, 24] <|@ <|@
      nr  146  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613707391991600354
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B18 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B36" "B81" "B43" "B83" "B50" "B85" "B57" "B20" "B63" "B67" "B71" "B75" "B104" "B18" 
    successors "B108" "B115" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1008  <|@ instruction rcx|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:27] <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B107 -> B108 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B114" "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614264649885186464
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr 1018  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1020  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B114 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613556426776669559
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1032  <|@ instruction BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613507997059701113
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27] <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction JUMP ~[] destination: B111 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B107" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605074543733987145
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.006689798866198148 condition: = trueDestination: B20 -> B107 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605028388642851975
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  182  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.9974996975440577 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  192  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  194  <|@ instruction CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604327650237121329
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B28 falseDestination: B26 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605011253647326319
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  224  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" "B86" "B79" "B76" "B74" "B70" "B66" "B62" "B56" "B49" "B42" 
    successors "B30" "B118" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4607336236950756760
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  234  <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  238  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  240  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B77" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4602832637323386264
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rbp|QWORD = MOV [rax|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  262  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B78" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction r8|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|QWORD * 1] size: DWORD <|@ <|@
      nr  776  <|@ instruction r8|DWORD[.] = MOV [r8|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction CMP (x: r8|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B86" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:472, 6, 40, 46, 24] <|@ <|@
      nr  832  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  846  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B86 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4598329037696015768
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" "B53" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B54" "B60" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  524  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  588  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B72" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" "B76" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  756  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B76 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  786  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  788  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B79 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rcx|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4593825438068645272
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: rcx|DWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  300  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B35 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589321838441274776
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVZXB rcx|DWORD size: DWORD <|@ <|@
      nr  354  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction rcx|DWORD = SETCC condition: != <|@ <|@
      nr  358  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = SETCC condition: != <|@ <|@
      nr  364  <|@ instruction CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  372  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  374  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B42 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4584818238813904280
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: QWORD <|@ <|@
      nr  424  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: QWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r10|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  432  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  434  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  472  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4580314639186533784
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  484  <|@ instruction xmm0|SINGLE = H [rdx|QWORD[.] + rsi|QWORD * 1] nZ: XMM oh: VMOVSS <|@ <|@
      nr  486  <|@ instruction UCOMIS (x: xmm0|SINGLE, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: PS <|@ <|@
      nr  488  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:64|QWORD[.] r11|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - rdx|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] rdx|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24] <|@ <|@
      nr  494  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B56 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4575811039559163288
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:240, 6, 40, 46, 24] <|@ <|@
      nr  546  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243]
stack: xmm0|DOUBLE - 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24] <|@ <|@
      nr  552  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  554  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction stack:88|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:88|DOUBLE - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:251, 6, 40, 46, 24] <|@ <|@
      nr  562  <|@ instruction VUCOMISD (x: xmm0|DOUBLE, y: stack:88|DOUBLE) <|@ <|@
      nr  564  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B62 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4571307439931792792
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:283, 6, 40, 46, 24] <|@ <|@
      nr  602  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  606  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24] <|@ <|@
      nr  608  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:92|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:294, 6, 40, 46, 24] <|@ <|@
      nr  618  <|@ instruction CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B66 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4566803840304422296
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:325, 6, 40, 46, 24] <|@ <|@
      nr  658  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24] <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:92|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:336, 6, 40, 46, 24] <|@ <|@
      nr  674  <|@ instruction CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B70 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4562300240677051800
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:367, 6, 40, 46, 24] <|@ <|@
      nr  714  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370]
stack: rax|DWORD 
locals: r11|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [stack:28, stack:32, stack:44, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:64|QWORD[.] stack:72|DWORD - stack:92|DWORD - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:378, 6, 40, 46, 24] <|@ <|@
      nr  730  <|@ instruction CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4557796641049681304
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B74 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B36 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589321838441274776
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B81 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B43 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584818238813904280
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B83 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B85 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580314639186533784
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B50 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575811039559163288
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B57 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571307439931792792
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B63 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566803840304422296
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B67 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B96" "B121" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  922  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>} <|@ <|@
      nr  924  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  926  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B101" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B97 -> B101 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B101" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565538628837164413
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  944  <|@ instruction CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  946  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B101 falseDestination: B99 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B97" "B99" 
    successors "B118" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566415940608078020
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:32|QWORD[.] rdx|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12]
locals: - - - - stack:64|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12, 46, 24] <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17]
stack: stack:64|QWORD[.] 
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 46, 24] <|@ <|@
      nr  966  <|@ instruction CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 0.7491612393921453 condition: = trueDestination: B101 -> B118 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557438175535507011
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.16129032258064516 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556018409101425390
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ st <@st|@reference-map: [stack:56, stack:64]
live-base-pointers: []
java.util.Objects.equals(Objects.java:59) [bci: 11]
locals: - - 
org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:11, 20, 46, 24] <|@ <|@
      nr  994  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4555940663393467547
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562300240677051800
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B71 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557796641049681304
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B75 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545307490125786452
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B104 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B118" 
    xhandlers
    flags 
    probability 4619754328058095579
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B5 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B105" "B5" "B29" "B101" "B17" 
    successors 
    xhandlers
    flags 
    probability 4620372836462396581
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors 
    xhandlers
    flags 
    probability 4617044318943896887
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B108" "B110" 
    successors 
    xhandlers
    flags 
    probability 4599724842521788732
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1056  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1058  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE input: int[-258851|0xfffffffffffc0cdd] <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B93 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B15" "B94" "B93" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r11|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B15 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ instruction r11|DWORD = MOVE input: int[-246811|0xfffffffffffc3be5] <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction r11|DWORD = MOVE input: int[-310307|0xfffffffffffb43dd] <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction r10|DWORD = MOVE input: int[-272155|0xfffffffffffbd8e5] <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B38 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B38" "B45" "B52" "B59" "B88" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [rdi:0, r11:0, stack:56, stack:64]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27]
locals: r11|DWORD[.] stack:40|QWORD[.] rdi|QWORD[.] r8|DWORD - - - - - 
org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6]
locals: - - 
org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40]
locals: - stack:40|QWORD[.] rdi|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:44|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27, 6, 40, 46, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction MOV [r15|QWORD + 668] y: -314907 size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] - r9|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE input: int[-257827|0xfffffffffffc10dd] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B94 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: int[-274971|0xfffffffffffbcde5] <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B59 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r10|DWORD = MOVE input: int[-282139|0xfffffffffffbb1e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B52 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1110971169] <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 668] y: -256523 size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rcx:0, stack:64]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:288) [bci: 0]
locals: stack:32|QWORD[.] Object[null] rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-266267|0xfffffffffffbefe5] <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-309539|0xfffffffffffb46dd] <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r11|DWORD = MOVE input: int[-308787|0xfffffffffffb49cd] <|@ <|@
      nr 1102  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-302875|0xfffffffffffb60e5] <|@ <|@
      nr  868  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_2       
     1: astore        5
     3: aload         5
     5: astore        6
     7: aload         6
     9: getfield      #39         // org.graalvm.collections.EconomicMapImpl$CollisionLink.next:int
    12: istore_3      
    13: aload_0       
    14: iload_3       
    15: invokespecial #3          // getKey:(int)java.lang.Object
    18: astore        4
    20: aload_0       
    21: aload_1       
    22: aload         4
    24: invokespecial #30         // compareKeys:(java.lang.Object, java.lang.Object)boolean
    27: ifeq          32
    30: iload_3       
    31: ireturn       
    32: aload_0       
    33: iload_3       
    34: invokespecial #37         // getRawValue:(int)java.lang.Object
    37: astore        7
    39: aload         7
    41: instanceof    #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    44: ifeq          60
    47: aload_0       
    48: iload_3       
    49: invokespecial #37         // getRawValue:(int)java.lang.Object
    52: checkcast     #45         // org.graalvm.collections.EconomicMapImpl$CollisionLink
    55: astore        5
    57: goto          62
    60: iconst_m1     
    61: ireturn       
    62: goto          3
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450488974244048895424384885d20f84e30700004c8bd166660f1f840000000000418502448b5e18468b04dd0c000000458b4a0c418bc9d1e1443bc10f863a07000049c1e303418b5c8b108bfb48c1e703483bfa0f84b40600008b462085c00f853a000000ffc1443bc10f8604070000458b5c8b104585db0f84ac06000042813cdd08000000addeadde0f859a06000085050000000049c1e3034d8bd3eb8281f8addeadde894c243044894c24340f8575000000488bf2488bd748b8ffffffffffffffff0f1f4000e8000000009085c00f853d060000488b7424408b56188b4c2430ffc13b0cd50c0000000f83c406000048c1e2038b548a1085d20f8441060000813cd508000000addeadde0f853006000085050000000048c1e2034c8bd2488b542438e9f8feffff81f8addeadde74aa895c242c48897c2420448b1cc5080000004181fbaddeadde0f85db040000488b542438448b5a0849b8addeaddeaddeadde4e3b04dd300000000f856706000085db0f8416000000448b1cdd080000004e3b04dd300000000f85cc050000448b5a2c44895c241c438504dc41ba00000000468b04dd10000000468b0cc50c000000428b0ccd0c000000413bca0f8e510500004489542418428b04c514000000443b14c50c0000000f833c06000048c1e003428b449010488b2cc54800000049c1e1034885ed0f846e000000413bca0f86360600004f8b44d110468b0c02458b04d8453bc10f84d40000004585c90f84b70300004585c00f84c203000049c1e10349c1e003498bf1498bd0660f1f440000e8000000009085c00f84aa030000448b54241841ffc2448b5c241c8b5c242c488b542438e938ffffff81f8addeadde0f849a00000081f8addeadde0f84ca00000081f8addeadde0f8412010000448b54241841ffc281f8addeadde0f843b01000049c1e00381f8addeadde0f846d01000081f8addeadde0f84db01000081f8addeadde0f843702000081f8addeadde0f8493020000850500000000448b5c241c8b5c242c488b542438e9b3feffff850500000000448b54241841ffc2448b5c241c8b5c242c488b542438e992feffff3b4c24180f8673040000448b5424188b5c242c488b5424384b8b74d1108b0c323b0cde0f859802000085050000000041ffc2448b5c241ce956feffff448b5424188b5c242c488b542438413bca0f867d0400004b8b74d1100fbe0c320fb6c985c90f95c10fb6c90fb634de85f6400f95c6400fb6f63bf10f855802000085050000000041ffc2448b5c241ce902feffff448b5424188b5c242c488b542438413bca0f86390400004b8b74d110488b0c32483b0cde0f853902000085050000000041ffc2448b5c241ce9c5fdffff448b5c24188b5c242c488b542438413bcb0f86f40300004b8b74d910c5fa100432c5f82e04de0f8a040200000f85fe010000850500000000448b5c241ce983fdffff4489542414448b5c2418488b542438498bf04c8bc2418bcb6690e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c2418c5fb11442408660f1f440000e80000000090c5f92e4424080f8a9c0100000f8596010000448b542414448b5c241c8b5c242c488b542438e909fdffff4489542414498bf0488b5424388b4c24180f1f8000000000e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442404e800000000903b4424040f8538010000448b542414448b5c241c8b5c242c488b542438e9a1fcffff4489542414498bf0488b5424388b4c24180f1f8000000000e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442404e800000000903b4424040f85a0010000448b542414448b5c241c8b5c242c488b542438e939fcffff4489542414498bf0488b5424388b4c24180f1f8000000000e80000000090448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442404e800000000903b4424040f8542010000448b542414448b5c241c8b5c242c488b542438e9d1fbffff488b742440e901fbffff488b742440e9f7faffff488b742440e9edfaffff488b742440e9e3faffff488b742440e9d9faffff488b742440e9cffaffff488b742440e9c5faffff488b742440e9bbfaffff488b742440e9b1faffff4181fbaddeadde0f85f8010000488b5424388b720849bbaddeaddeaddeadde4c3b1cf5300000000f85cd01000085db0f84150000008b34dd080000004c3b1cf5300000000f8510010000418504dc488bf248b8ffffffffffffffff666690e80000000090488b742420488944242048b8ffffffffffffffff660f1f440000e80000000090483b4424200f845a000000488b7424204885f60f843d000000488bd048b8ffffffffffffffff0f1f4000e8000000009085c00f852d000000488b742440e9ebf9ffff488b742440e9e1f9ffff488b742440e9d7f9ffff488b742440e9cdf9ffff44894c24348b442434488b6c24504883c458850500000000c5f877c3b8ffffffff488b6c24504883c458850500000000c5f877c3b8ffffffff488b6c24504883c458850500000000c5f877c341bbdd0cfcff45899f9c0200004d89a7a8020000e8000000009041bbe52bfcffebe441bbe53bfcffebdc41bbdd43fbffebd441bae5d8fbff448b442418448b5c241c488b7c24204589979c0200004d89a7a8020000e80000000090448b4c2434488b54243841c7879c020000e531fbff4d89a7a8020000e8000000009041bbdd10fcffeb8141bae5cdfbffebab41bae590fbffeba341bae5b1fbffeb9b49baaddeaddeaddeadde41c7879c020000f515fcff4d8997a8020000e8000000009041bae5effbffe96effffff41bbdd46fbffe931ffffff41bbcd49fbffe926ffffff41bae560fbffe94dffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@94a9b9b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 26 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 70 28 JUMP ~[] destination: B2 -> B3  <||@
  Comment 70 block B3 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 70 30 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 32 NULLCHECK [r10|QWORD[.]] state [bci:3]  <||@
  Comment 80 [rdx:0, rsi:0, r10:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 83 34 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 87 36 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 87 [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 38 r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 40 rcx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 104 42 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 107 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B122  <||@
  Comment 113 block B4 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 113 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 48 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 117 50 rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 122 52 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 128 54 CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 131 56 BRANCH trueDestinationProbability: 0.1293384951096047 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 137 block B6 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 137 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 66 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 140 68 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 142 70 BRANCH trueDestinationProbability: 0.9234138966083788 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B16  <||@
  Comment 148 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 150 76 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 78 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15  <||@
  Comment 159 block B8 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 159 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 82 r11|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 164 84 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 167 86 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B10  <||@
  Comment 173 block B10 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 173 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 94 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 173 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 185 96 BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B14  <||@
  Comment 191 block B11 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 191 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 100 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:3]  <||@
  Comment 191 [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 191 {infopoint: SAFEPOINT}  <||@
  Comment 191 11  <||@
  Comment 197 102 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 201 104 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 204 106 JUMP ~[] destination: B11 -> B3  <||@
  Comment 206 block B16 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 206 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 130 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 206 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 212 136 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 216 138 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 221 132 BRANCH trueDestinationProbability: 0.7926698339558881 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 227 block B17 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 227 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 140 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 230 142 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 233 144 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36, 24]  <||@
  Comment 233 7  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 252 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 253 146 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 255 148 BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B118  <||@
  Comment 261 block B18 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 261 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 152 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 266 154 JUMP ~[] destination: B18 -> B107  <||@
  Comment 266 block B107 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 266 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 1006 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 269 1008 rcx|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 275 1010 CMP (x: rcx|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:27]  <||@
  Comment 275 [rdx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 275 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 282 1012 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B107 -> B108 falseDestination: B107 -> B115  <||@
  Comment 288 block B108 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 288 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 288 1016 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 292 1018 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 296 1020 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 298 1022 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B114 falseDestination: B108 -> B110  <||@
  Comment 304 block B110 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 304 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 1030 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 304 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 315 1032 BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114  <||@
  Comment 321 block B111 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 321 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 321 1036 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27]  <||@
  Comment 321 [rdx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 321 {infopoint: SAFEPOINT}  <||@
  Comment 321 11  <||@
  Comment 327 1038 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 331 1040 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 334 1042 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 339 1044 JUMP ~[] destination: B111 -> B3  <||@
  Comment 344 block B20 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 344 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 166 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 344 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 350 168 BRANCH trueDestinationProbability: 0.006689798866198148 condition: = trueDestination: B20 -> B107 falseDestination: B20 -> B22  <||@
  Comment 352 block B22 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 352 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 176 stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 356 178 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 361 180 r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 369 182 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 369 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 376 184 BRANCH trueDestinationProbability: 0.9974996975440577 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B95  <||@
  Comment 382 block B23 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 382 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 188 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 387 190 r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 391 192 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 391 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 401 194 CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 409 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B94  <||@
  Comment 415 block B24 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 415 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 200 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 417 202 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B26  <||@
  Comment 423 block B26 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 423 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 210 r11|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 431 212 CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 439 214 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B28 falseDestination: B26 -> B93  <||@
  Comment 445 block B28 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 445 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 222 r11|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD  <||@
  Comment 449 224 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 454 226 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3]  <||@
  Comment 454 [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 454 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 458 228 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 464 230 JUMP ~[] destination: B28 -> B29  <||@
  Comment 464 block B29 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 464 232 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 464 234 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 472 236 r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 472 [rdx:0, rbx:0, r8:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 472 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 480 238 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 480 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 480 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 488 240 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 491 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B118  <||@
  Comment 497 block B30 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 497 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 246 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 502 248 rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 510 250 CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 510 [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 510 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 518 252 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B90  <||@
  Comment 524 block B31 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 524 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 256 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 528 258 rax|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 533 260 rbp|QWORD = MOV [rax|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 533 [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 533 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 541 262 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 545 264 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 548 266 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B77  <||@
  Comment 554 block B77 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 554 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 766 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 557 768 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B88  <||@
  Comment 563 block B78 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 563 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 772 r8|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 568 774 r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|QWORD * 1] size: DWORD  <||@
  Comment 572 776 r8|DWORD[.] = MOV [r8|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 576 778 CMP (x: r8|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 579 780 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 585 block B80 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 585 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 798 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 588 800 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 594 block B82 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 594 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 810 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 597 812 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 603 block B84 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 603 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 822 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 607 824 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 611 826 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 614 828 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 617 830 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:472, 6, 40, 46, 24]  <||@
  Comment 617 8  <||@
  Comment 623 {HotSpotMethod<NodeClass.deepEquals0(Object, Object)>}  <||@
  Comment 628 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 629 832 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 631 834 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 637 block B86 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 637 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 844 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 645 846 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 650 848 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 654 850 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 659 852 JUMP ~[] destination: B86 -> B29  <||@
  Comment 664 block B32 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 664 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 664 270 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 664 {NarrowOop[Class:int]}  <||@
  Comment 670 272 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B39  <||@
  Comment 676 block B39 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 676 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 676 330 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 676 {NarrowOop[Class:boolean]}  <||@
  Comment 682 332 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B46  <||@
  Comment 688 block B46 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 688 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 402 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 688 {NarrowOop[Class:long]}  <||@
  Comment 694 404 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B53  <||@
  Comment 700 block B53 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 700 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 462 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 708 464 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 708 {NarrowOop[Class:float]}  <||@
  Comment 714 466 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B60  <||@
  Comment 720 block B60 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 720 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 522 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 724 524 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 724 {NarrowOop[Class:double]}  <||@
  Comment 730 526 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B64  <||@
  Comment 736 block B64 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 736 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 586 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 736 {NarrowOop[Class:short]}  <||@
  Comment 742 588 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68  <||@
  Comment 748 block B68 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 748 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 642 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 748 {NarrowOop[Class:char]}  <||@
  Comment 754 644 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B72  <||@
  Comment 760 block B72 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 760 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 698 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 760 {NarrowOop[Class:byte]}  <||@
  Comment 766 700 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B76  <||@
  Comment 772 block B76 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 772 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 754 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 772 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 772 {infopoint: SAFEPOINT}  <||@
  Comment 772 11  <||@
  Comment 778 756 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 783 758 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 787 760 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 792 762 JUMP ~[] destination: B76 -> B29  <||@
  Comment 797 block B79 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 797 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 784 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 797 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 797 {infopoint: SAFEPOINT}  <||@
  Comment 797 11  <||@
  Comment 803 786 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 811 788 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 816 790 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 820 792 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 825 794 JUMP ~[] destination: B79 -> B29  <||@
  Comment 830 block B33 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 830 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 830 276 CMP (x: rcx|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 834 278 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B38  <||@
  Comment 840 block B34 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 840 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 282 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 845 284 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 849 286 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 854 288 rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 859 290 rcx|DWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 862 292 CMP (x: rcx|DWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD  <||@
  Comment 865 294 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 871 block B35 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 871 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 871 298 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 871 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 871 {infopoint: SAFEPOINT}  <||@
  Comment 871 11  <||@
  Comment 877 300 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 880 302 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 885 304 JUMP ~[] destination: B35 -> B29  <||@
  Comment 890 block B40 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 890 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 336 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 895 338 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 899 340 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 904 342 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 907 344 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B45  <||@
  Comment 913 block B41 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 913 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 348 rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 918 350 rcx|DWORD = MOVSXB [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 922 352 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 925 354 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 927 356 rcx|DWORD = SETCC condition: !=  <||@
  Comment 933 358 rsi|DWORD = MOVZXB [rsi|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 937 360 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 939 362 rsi|DWORD = SETCC condition: !=  <||@
  Comment 947 364 CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 949 366 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 955 block B42 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 955 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 955 370 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 955 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 955 {infopoint: SAFEPOINT}  <||@
  Comment 955 11  <||@
  Comment 961 372 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 964 374 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 969 376 JUMP ~[] destination: B42 -> B29  <||@
  Comment 974 block B47 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 974 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 408 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 979 410 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 983 412 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 988 414 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 991 416 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B52  <||@
  Comment 997 block B48 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 997 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 420 rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1002 422 rcx|QWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: QWORD  <||@
  Comment 1006 424 CMP (x: rcx|QWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: QWORD  <||@
  Comment 1010 426 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1016 block B49 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1016 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 430 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1016 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1016 {infopoint: SAFEPOINT}  <||@
  Comment 1016 11  <||@
  Comment 1022 432 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1025 434 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1030 436 JUMP ~[] destination: B49 -> B29  <||@
  Comment 1035 block B54 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1035 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1035 470 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1040 472 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1044 474 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 476 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1052 478 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B59  <||@
  Comment 1058 block B55 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1058 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1058 482 rsi|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1063 484 xmm0|SINGLE = H [rdx|QWORD[.] + rsi|QWORD * 1] nZ: XMM oh: VMOVSS  <||@
  Comment 1068 486 UCOMIS (x: xmm0|SINGLE, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: PS  <||@
  Comment 1073 488 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false  <||@
  Comment 1085 block B56 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1085 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 492 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1085 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r11|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1085 {infopoint: SAFEPOINT}  <||@
  Comment 1085 11  <||@
  Comment 1091 494 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1096 496 JUMP ~[] destination: B56 -> B29  <||@
  Comment 1101 block B61 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1101 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1101 530 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1106 532 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1111 534 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 536 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1119 538 r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1122 542 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1125 544 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:240, 6, 40, 46, 24]  <||@
  Comment 1125 9  <||@
  Comment 1127 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1132 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1133 546 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1138 548 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1146 550 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24]  <||@
  Comment 1146 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |xmm0|DOUBLE   |-                  |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1150 552 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1154 554 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 556 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1163 558 stack:88|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1169 560 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:251, 6, 40, 46, 24]  <||@
  Comment 1169 9  <||@
  Comment 1175 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1180 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5                |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DOUBLE  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1181 562 VUCOMISD (x: xmm0|DOUBLE, y: stack:88|DOUBLE)  <||@
  Comment 1187 564 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 unorderedIsTrue: false  <||@
  Comment 1199 block B62 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1199 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1199 568 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1204 570 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1209 572 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1213 574 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 576 JUMP ~[] destination: B62 -> B29  <||@
  Comment 1223 block B65 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1223 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1223 592 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1228 594 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1231 596 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1236 598 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1240 600 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:283, 6, 40, 46, 24]  <||@
  Comment 1240 9  <||@
  Comment 1247 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1252 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1253 602 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1258 604 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1266 606 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24]  <||@
  Comment 1266 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1270 608 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1274 610 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1279 612 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1283 614 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1287 616 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:294, 6, 40, 46, 24]  <||@
  Comment 1287 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1287 9  <||@
  Comment 1292 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:92|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1293 618 CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1297 620 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1303 block B66 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1303 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 624 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1308 626 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1313 628 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1317 630 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1322 632 JUMP ~[] destination: B66 -> B29  <||@
  Comment 1327 block B69 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1327 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1327 648 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1332 650 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 652 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1340 654 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1344 656 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:325, 6, 40, 46, 24]  <||@
  Comment 1344 9  <||@
  Comment 1351 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1356 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1357 658 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1362 660 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1370 662 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24]  <||@
  Comment 1370 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1370 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1374 664 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1378 666 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 668 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1387 670 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1391 672 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:336, 6, 40, 46, 24]  <||@
  Comment 1391 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1391 9  <||@
  Comment 1396 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:92|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1397 674 CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1401 676 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1407 block B70 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1407 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 680 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1412 682 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1417 684 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1421 686 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1426 688 JUMP ~[] destination: B70 -> B29  <||@
  Comment 1431 block B73 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1431 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 704 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1436 706 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 708 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1444 710 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1448 712 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:367, 6, 40, 46, 24]  <||@
  Comment 1448 9  <||@
  Comment 1455 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1460 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1461 714 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1466 716 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1474 718 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24]  <||@
  Comment 1474 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1474 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1478 720 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1482 722 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1487 724 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1491 726 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1495 728 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:378, 6, 40, 46, 24]  <||@
  Comment 1495 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1495 9  <||@
  Comment 1500 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:92|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1501 730 CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1505 732 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 1511 block B74 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1511 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 736 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1516 738 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1521 740 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1525 742 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1530 744 JUMP ~[] destination: B74 -> B29  <||@
  Comment 1535 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1535 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 308 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 310 JUMP ~[] destination: B36 -> B107  <||@
  Comment 1545 block B81 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1545 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1545 804 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1550 806 JUMP ~[] destination: B81 -> B107  <||@
  Comment 1555 block B43 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1555 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 380 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1560 382 JUMP ~[] destination: B43 -> B107  <||@
  Comment 1565 block B83 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1565 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1565 816 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 818 JUMP ~[] destination: B83 -> B107  <||@
  Comment 1575 block B85 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1575 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 838 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1580 840 JUMP ~[] destination: B85 -> B107  <||@
  Comment 1585 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1585 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1585 440 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1590 442 JUMP ~[] destination: B50 -> B107  <||@
  Comment 1595 block B57 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1595 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1595 500 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 502 JUMP ~[] destination: B57 -> B107  <||@
  Comment 1605 block B63 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1605 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 580 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 582 JUMP ~[] destination: B63 -> B107  <||@
  Comment 1615 block B67 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1615 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 636 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 638 JUMP ~[] destination: B67 -> B107  <||@
  Comment 1625 block B95 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1625 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 912 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}  <||@
  Comment 1625 {meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}}  <||@
  Comment 1632 914 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B121  <||@
  Comment 1638 block B96 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1638 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 918 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1643 920 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 1646 922 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}  <||@
  Comment 1646 {meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}}  <||@
  Comment 1656 924 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1664 926 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B120  <||@
  Comment 1670 block B97 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1670 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1670 932 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1672 934 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B97 -> B101 falseDestination: B97 -> B99  <||@
  Comment 1678 block B99 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1678 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 942 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1685 944 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1693 946 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B101 falseDestination: B99 -> B119  <||@
  Comment 1699 block B101 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1699 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1699 954 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1699 [rdx:0, r10:0, stack:32, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1699 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1703 956 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 958 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12, 46, 24]  <||@
  Comment 1706 7  <||@
  Comment 1719 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1724 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                 
     locals:  |-  |-  |-  |-  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1725 960 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1730 962 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1735 964 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 46, 24]  <||@
  Comment 1735 7  <||@
  Comment 1751 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1756 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1757 966 CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD  <||@
  Comment 1762 968 BRANCH trueDestinationProbability: 0.7491612393921453 condition: = trueDestination: B101 -> B118 falseDestination: B101 -> B103  <||@
  Comment 1768 block B103 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1768 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1768 976 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1773 978 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1776 980 BRANCH trueDestinationProbability: 0.16129032258064516 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1782 block B105 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1782 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1782 990 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1785 992 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:11, 20, 46, 24]  <||@
  Comment 1785 7  <||@
  Comment 1799 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1804 [stack:56, stack:64]at java.util.Objects.equals(Objects.java:59) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1805 994 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1807 996 BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B118  <||@
  Comment 1813 block B106 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1813 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1813 1000 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1818 1002 JUMP ~[] destination: B106 -> B107  <||@
  Comment 1823 block B71 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1823 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 692 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1828 694 JUMP ~[] destination: B71 -> B107  <||@
  Comment 1833 block B75 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1833 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1833 748 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 750 JUMP ~[] destination: B75 -> B107  <||@
  Comment 1843 block B104 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1843 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1843 984 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1848 986 JUMP ~[] destination: B104 -> B107  <||@
  Comment 1853 block B5 null  <||@
  Comment 1853 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1853 60 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1858 62 JUMP ~[] destination: B5 -> B118  <||@
  Comment 1858 block B118 null  <||@
  Comment 1858 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1858 1082 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1862 1084 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1871 12  <||@
  Comment 1881 block B14 null  <||@
  Comment 1881 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1881 118 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1886 120 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1895 12  <||@
  Comment 1905 block B114 null  <||@
  Comment 1905 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 1056 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1910 1058 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1919 12  <||@
  Comment 1929 block B93 null  <||@
  Comment 1929 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1929 900 r11|DWORD = MOVE input: int[-258851|0xfffffffffffc0cdd]  <||@
  Comment 1935 902 JUMP ~[] destination: B93 -> B123  <||@
  Comment 1935 block B123 null  <||@
  Comment 1935 1110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1935 1112 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1942 1114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1949 1116 DEOPT info [bci:3]  <||@
  Comment 1949 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1954 [r10:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5             |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1955 block B15 null  <||@
  Comment 1955 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1955 124 r11|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5]  <||@
  Comment 1961 126 JUMP ~[] destination: B15 -> B123  <||@
  Comment 1963 block B122 null  <||@
  Comment 1963 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1963 1106 r11|DWORD = MOVE input: int[-246811|0xfffffffffffc3be5]  <||@
  Comment 1969 1108 JUMP ~[] destination: B122 -> B123  <||@
  Comment 1971 block B119 null  <||@
  Comment 1971 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1971 1088 r11|DWORD = MOVE input: int[-310307|0xfffffffffffb43dd]  <||@
  Comment 1977 1090 JUMP ~[] destination: B119 -> B123  <||@
  Comment 1979 block B38 null  <||@
  Comment 1979 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1979 318 r10|DWORD = MOVE input: int[-272155|0xfffffffffffbd8e5]  <||@
  Comment 1985 326 JUMP ~[] destination: B38 -> B91  <||@
  Comment 1985 block B91 null  <||@
  Comment 1985 886 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1985 878 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1990 880 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1995 882 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 888 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2007 890 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2014 892 DEOPT info [bci:27, 6, 40, 46, 24]  <||@
  Comment 2014 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2019 [rdi:0, r11:0, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2             |3         |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |rdi|QWORD[.]  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:40|QWORD[.]  |rdi|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 2020 block B115 null  <||@
  Comment 2020 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 1062 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2025 1064 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 1066 MOV [r15|QWORD + 668] y: -314907 size: DWORD  <||@
  Comment 2041 1068 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2048 1070 DEOPT info [bci:27]  <||@
  Comment 2048 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2053 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2054 block B94 null  <||@
  Comment 2054 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2054 906 r11|DWORD = MOVE input: int[-257827|0xfffffffffffc10dd]  <||@
  Comment 2060 908 JUMP ~[] destination: B94 -> B123  <||@
  Comment 2062 block B45 null  <||@
  Comment 2062 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2062 390 r10|DWORD = MOVE input: int[-274971|0xfffffffffffbcde5]  <||@
  Comment 2068 398 JUMP ~[] destination: B45 -> B91  <||@
  Comment 2070 block B59 null  <||@
  Comment 2070 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2070 510 r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5]  <||@
  Comment 2076 518 JUMP ~[] destination: B59 -> B91  <||@
  Comment 2078 block B52 null  <||@
  Comment 2078 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 450 r10|DWORD = MOVE input: int[-282139|0xfffffffffffbb1e5]  <||@
  Comment 2084 458 JUMP ~[] destination: B52 -> B91  <||@
  Comment 2086 block B1 null  <||@
  Comment 2086 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1110971169]  <||@
  Comment 2086 {Object[d.a@1110971169]}  <||@
  Comment 2096 18 MOV [r15|QWORD + 668] y: -256523 size: DWORD  <||@
  Comment 2107 20 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2114 22 DEOPT info [bci:0]  <||@
  Comment 2114 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2119 [rcx:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |Object[null]  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2120 block B90 null  <||@
  Comment 2120 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 876 r10|DWORD = MOVE input: int[-266267|0xfffffffffffbefe5]  <||@
  Comment 2126 884 JUMP ~[] destination: B90 -> B91  <||@
  Comment 2131 block B120 null  <||@
  Comment 2131 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2131 1094 r11|DWORD = MOVE input: int[-309539|0xfffffffffffb46dd]  <||@
  Comment 2137 1096 JUMP ~[] destination: B120 -> B123  <||@
  Comment 2142 block B121 null  <||@
  Comment 2142 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 1100 r11|DWORD = MOVE input: int[-308787|0xfffffffffffb49cd]  <||@
  Comment 2148 1102 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2153 block B88 null  <||@
  Comment 2153 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2153 860 r10|DWORD = MOVE input: int[-302875|0xfffffffffffb60e5]  <||@
  Comment 2159 868 JUMP ~[] destination: B88 -> B91  <||@
  Comment 2164 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2164 4  <||@
  Comment 2170 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2170 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6832[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)]"
  method "HotSpotCompilation-6832[org.graalvm.collections.EconomicMapImpl.findWithCollision(Object, EconomicMapImpl$CollisionLink)]"
  date 1526687568636
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1196f5540 448b560849c1e203493bc20f850ff930ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c2450488974244048895424384885d20f84e30700004c8bd166660f1f840000000000418502448b5e18468b04dd0c000000458b4a0c418bc9d1e1443bc10f863a07000049c1e303418b5c8b108bfb48c1e703483bfa0f84b40600008b462085c00f853a000000ffc1443bc10f8604070000458b5c8b104585db0f84ac06000042813cdd08000000b00301f80f859a0600008505016a7ef049c1e3034d8bd3eb8281f8de8902d8894c243044894c24340f8575000000488bf2488bd748b8ffffffffffffffff0f1f4000e8a4fc30ff9085c00f853d060000488b7424408b56188b4c2430ffc13b0cd50c0000000f83c406000048c1e2038b548a1085d20f8441060000813cd508000000b00301f80f853006000085057f697ef048c1e2034c8bd2488b542438e9f8feffff81f8dfbd03d874aa895c242c48897c2420448b1cc5080000004181fb5f3e03f80f85db040000488b542438448b5a0849b8c0170ac0070000004e3b04dd300000000f856706000085db0f8416000000448b1cdd080000004e3b04dd300000000f85cc050000448b5a2c44895c241c438504dc41ba00000000468b04dd10000000468b0cc50c000000428b0ccd0c000000413bca0f8e510500004489542418428b04c514000000443b14c50c0000000f833c06000048c1e003428b449010488b2cc54800000049c1e1034885ed0f846e000000413bca0f86360600004f8b44d110468b0c02458b04d8453bc10f84d40000004585c90f84b70300004585c00f84c203000049c1e10349c1e003498bf1498bd0660f1f440000e86cfd30ff9085c00f84aa030000448b54241841ffc2448b5c241c8b5c242c488b542438e938ffffff81f8e90a00d80f849a00000081f81d0b00d80f84ca00000081f8370b00d80f8412010000448b54241841ffc281f8f60a00d80f843b01000049c1e00381f8030b00d80f846d01000081f8440b00d80f84db01000081f82a0b00d80f843702000081f8100b00d80f84930200008505bc677ef0448b5c241c8b5c242c488b542438e9b3feffff8505a3677ef0448b54241841ffc2448b5c241c8b5c242c488b542438e992feffff3b4c24180f8673040000448b5424188b5c242c488b5424384b8b74d1108b0c323b0cde0f8598020000850559677ef041ffc2448b5c241ce956feffff448b5424188b5c242c488b542438413bca0f867d0400004b8b74d1100fbe0c320fb6c985c90f95c10fb6c90fb634de85f6400f95c6400fb6f63bf10f8558020000850505677ef041ffc2448b5c241ce902feffff448b5424188b5c242c488b542438413bca0f86390400004b8b74d110488b0c32483b0cde0f85390200008505c8667ef041ffc2448b5c241ce9c5fdffff448b5c24188b5c242c488b542438413bcb0f86f40300004b8b74d910c5fa100432c5f82e04de0f8a040200000f85fe010000850583667ef0448b5c241ce983fdffff4489542414448b5c2418488b542438498bf04c8bc2418bcb6690e8f4f630ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c2418c5fb11442408660f1f440000e8c4f630ff90c5f92e4424080f8a9c0100000f8596010000448b542414448b5c241c8b5c242c488b542438e909fdffff4489542414498bf0488b5424388b4c24180f1f8000000000e87cf630ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442404e854f630ff903b4424040f8538010000448b542414448b5c241c8b5c242c488b542438e9a1fcffff4489542414498bf0488b5424388b4c24180f1f8000000000e814f630ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442404e8ecf530ff903b4424040f85a0010000448b542414448b5c241c8b5c242c488b542438e939fcffff4489542414498bf0488b5424388b4c24180f1f8000000000e8acf530ff90448b5c241c428b34dd10000000418504f448c1e603488b5424208b4c241889442404e884f530ff903b4424040f8542010000448b542414448b5c241c8b5c242c488b542438e9d1fbffff488b742440e901fbffff488b742440e9f7faffff488b742440e9edfaffff488b742440e9e3faffff488b742440e9d9faffff488b742440e9cffaffff488b742440e9c5faffff488b742440e9bbfaffff488b742440e9b1faffff4181fbc71d01f80f85f8010000488b5424388b720849bbf85800c0070000004c3b1cf5300000000f85cd01000085db0f84150000008b34dd080000004c3b1cf5300000000f8510010000418504dc488bf248b8ffffffffffffffff666690e8e4f630ff90488b742420488944242048b8ffffffffffffffff660f1f440000e8c4f630ff90483b4424200f845a000000488b7424204885f60f843d000000488bd048b8ffffffffffffffff0f1f4000e894f630ff9085c00f852d000000488b742440e9ebf9ffff488b742440e9e1f9ffff488b742440e9d7f9ffff488b742440e9cdf9ffff44894c24348b442434488b6c24504883c458850571637ef0c5f877c3b8ffffffff488b6c24504883c458850559637ef0c5f877c3b8ffffffff488b6c24504883c458850541637ef0c5f877c341bbdd0cfcff45899f9c0200004d89a7a8020000e81c0931ff9041bbe52bfcffebe441bbe53bfcffebdc41bbdd43fbffebd441bae5d8fbff448b442418448b5c241c488b7c24204589979c0200004d89a7a8020000e8db0831ff90448b4c2434488b54243841c7879c020000e531fbff4d89a7a8020000e8b90831ff9041bbdd10fcffeb8141bae5cdfbffebab41bae590fbffeba341bae5b1fbffeb9b49ba40ec1d6c0700000041c7879c020000f515fcff4d8997a8020000e8770831ff9041bae5effbffe96effffff41bbdd46fbffe931ffffff41bbcd49fbffe926ffffff41bae560fbffe94dffffffe8e79970ff90e8410731ff9048bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@94a9b9b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 26 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 70 28 JUMP ~[] destination: B2 -> B3  <||@
  Comment 70 block B3 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 70 30 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 32 NULLCHECK [r10|QWORD[.]] state [bci:3]  <||@
  Comment 80 [rdx:0, rsi:0, r10:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 83 34 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 87 36 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 87 [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 38 r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 99 40 rcx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 104 42 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 107 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B122  <||@
  Comment 113 block B4 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 113 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 48 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 117 50 rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 122 52 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 128 54 CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 131 56 BRANCH trueDestinationProbability: 0.1293384951096047 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 137 block B6 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 137 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 66 rax|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 140 68 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 142 70 BRANCH trueDestinationProbability: 0.9234138966083788 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B16  <||@
  Comment 148 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 150 76 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 153 78 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B15  <||@
  Comment 159 block B8 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 159 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 82 r11|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 164 84 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 167 86 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B14 falseDestination: B8 -> B10  <||@
  Comment 173 block B10 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 173 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 94 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 173 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 185 96 BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B14  <||@
  Comment 191 block B11 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 191 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 100 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:3]  <||@
  Comment 191 [rdx:0, rsi:0, r10:0, r11:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 191 {infopoint: SAFEPOINT}  <||@
  Comment 191 11  <||@
  Comment 197 102 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 201 104 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 204 106 JUMP ~[] destination: B11 -> B3  <||@
  Comment 206 block B16 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 206 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 130 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 206 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 212 136 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 216 138 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 221 132 BRANCH trueDestinationProbability: 0.7926698339558881 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 227 block B17 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 227 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 140 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 230 142 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 233 144 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36, 24]  <||@
  Comment 233 7  <||@
  Comment 247 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 252 [stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 253 146 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 255 148 BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B118  <||@
  Comment 261 block B18 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 261 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 152 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 266 154 JUMP ~[] destination: B18 -> B107  <||@
  Comment 266 block B107 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 266 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 1006 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 269 1008 rcx|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 275 1010 CMP (x: rcx|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:27]  <||@
  Comment 275 [rdx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 275 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 282 1012 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B107 -> B108 falseDestination: B107 -> B115  <||@
  Comment 288 block B108 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 288 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 288 1016 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 292 1018 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 296 1020 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 298 1022 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B108 -> B114 falseDestination: B108 -> B110  <||@
  Comment 304 block B110 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 304 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 1030 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 304 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 315 1032 BRANCH trueDestinationProbability: 0.9924019993156828 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114  <||@
  Comment 321 block B111 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 321 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 321 1036 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27]  <||@
  Comment 321 [rdx:0, rsi:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2  |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |                   |   |                |   |   |   |    <||@
  Comment 321 {infopoint: SAFEPOINT}  <||@
  Comment 321 11  <||@
  Comment 327 1038 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 331 1040 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 334 1042 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 339 1044 JUMP ~[] destination: B111 -> B3  <||@
  Comment 344 block B20 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 344 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 166 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 344 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 350 168 BRANCH trueDestinationProbability: 0.006689798866198148 condition: = trueDestination: B20 -> B107 falseDestination: B20 -> B22  <||@
  Comment 352 block B22 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 352 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 176 stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 356 178 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 361 180 r11|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 369 182 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 369 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 376 184 BRANCH trueDestinationProbability: 0.9974996975440577 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B95  <||@
  Comment 382 block B23 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 382 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 188 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 387 190 r11|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 391 192 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 391 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 401 194 CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 409 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B94  <||@
  Comment 415 block B24 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 415 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 200 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 417 202 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B26  <||@
  Comment 423 block B26 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 423 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 210 r11|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 431 212 CMP (x: r8|QWORD, y: [r11|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 439 214 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B28 falseDestination: B26 -> B93  <||@
  Comment 445 block B28 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 445 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 222 r11|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD  <||@
  Comment 449 224 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 454 226 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:3]  <||@
  Comment 454 [rdx:0, rbx:0, rsi:0, r10:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5             |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 454 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 458 228 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 464 230 JUMP ~[] destination: B28 -> B29  <||@
  Comment 464 block B29 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 464 232 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 464 234 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 472 236 r9|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 472 [rdx:0, rbx:0, r8:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 472 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 480 238 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 480 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 480 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 488 240 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 491 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B118  <||@
  Comment 497 block B30 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 497 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 246 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 502 248 rax|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 510 250 CMP (x: r10|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 510 [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 510 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 518 252 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B30 -> B31 falseDestination: B30 -> B90  <||@
  Comment 524 block B31 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 524 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 256 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 528 258 rax|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 533 260 rbp|QWORD = MOV [rax|DWORD[.] * 8 + 72] size: QWORD state [bci:27, 6, 40, 46, 24]  <||@
  Comment 533 [rax:0, rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 533 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 541 262 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 545 264 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 548 266 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B77  <||@
  Comment 554 block B77 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 554 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 766 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 557 768 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B88  <||@
  Comment 563 block B78 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 563 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 772 r8|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 568 774 r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|QWORD * 1] size: DWORD  <||@
  Comment 572 776 r8|DWORD[.] = MOV [r8|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 576 778 CMP (x: r8|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 579 780 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 585 block B80 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 585 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 798 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 588 800 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 594 block B82 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 594 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 810 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 597 812 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 603 block B84 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 603 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 822 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 607 824 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 611 826 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 614 828 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 617 830 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepEquals0(Object, Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:472, 6, 40, 46, 24]  <||@
  Comment 617 8  <||@
  Comment 623 {HotSpotMethod<NodeClass.deepEquals0(Object, Object)>}  <||@
  Comment 628 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:718) [bci: 472, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 629 832 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 631 834 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 637 block B86 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 637 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 844 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 645 846 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 650 848 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 654 850 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 659 852 JUMP ~[] destination: B86 -> B29  <||@
  Comment 664 block B32 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 664 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 664 270 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 664 {NarrowOop[Class:int]}  <||@
  Comment 670 272 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B39  <||@
  Comment 676 block B39 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 676 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 676 330 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 676 {NarrowOop[Class:boolean]}  <||@
  Comment 682 332 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B46  <||@
  Comment 688 block B46 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 688 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 402 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 688 {NarrowOop[Class:long]}  <||@
  Comment 694 404 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B53  <||@
  Comment 700 block B53 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 700 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 462 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 708 464 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 708 {NarrowOop[Class:float]}  <||@
  Comment 714 466 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B60  <||@
  Comment 720 block B60 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 720 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 522 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 724 524 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 724 {NarrowOop[Class:double]}  <||@
  Comment 730 526 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B64  <||@
  Comment 736 block B64 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 736 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 586 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 736 {NarrowOop[Class:short]}  <||@
  Comment 742 588 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68  <||@
  Comment 748 block B68 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 748 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 642 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 748 {NarrowOop[Class:char]}  <||@
  Comment 754 644 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B72  <||@
  Comment 760 block B72 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 760 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 698 CMP rax|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 760 {NarrowOop[Class:byte]}  <||@
  Comment 766 700 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B76  <||@
  Comment 772 block B76 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 772 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 754 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 772 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 772 {infopoint: SAFEPOINT}  <||@
  Comment 772 11  <||@
  Comment 778 756 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 783 758 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 787 760 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 792 762 JUMP ~[] destination: B76 -> B29  <||@
  Comment 797 block B79 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 797 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 784 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 797 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 797 {infopoint: SAFEPOINT}  <||@
  Comment 797 11  <||@
  Comment 803 786 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 811 788 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 816 790 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 820 792 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 825 794 JUMP ~[] destination: B79 -> B29  <||@
  Comment 830 block B33 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 830 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 830 276 CMP (x: rcx|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 834 278 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B38  <||@
  Comment 840 block B34 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 840 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 282 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 845 284 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 849 286 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 854 288 rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 859 290 rcx|DWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 862 292 CMP (x: rcx|DWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD  <||@
  Comment 865 294 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 871 block B35 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 871 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 871 298 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 871 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 871 {infopoint: SAFEPOINT}  <||@
  Comment 871 11  <||@
  Comment 877 300 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 880 302 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 885 304 JUMP ~[] destination: B35 -> B29  <||@
  Comment 890 block B40 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 890 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 336 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 895 338 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 899 340 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 904 342 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 907 344 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B45  <||@
  Comment 913 block B41 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 913 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 348 rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 918 350 rcx|DWORD = MOVSXB [rdx|QWORD[.] + rsi|QWORD * 1] size: DWORD  <||@
  Comment 922 352 rcx|DWORD = MOVZXB rcx|DWORD size: DWORD  <||@
  Comment 925 354 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 927 356 rcx|DWORD = SETCC condition: !=  <||@
  Comment 933 358 rsi|DWORD = MOVZXB [rsi|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 937 360 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 939 362 rsi|DWORD = SETCC condition: !=  <||@
  Comment 947 364 CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 949 366 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 955 block B42 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 955 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 955 370 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 955 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 955 {infopoint: SAFEPOINT}  <||@
  Comment 955 11  <||@
  Comment 961 372 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 964 374 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 969 376 JUMP ~[] destination: B42 -> B29  <||@
  Comment 974 block B47 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 974 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 408 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 979 410 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 983 412 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 988 414 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 991 416 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B52  <||@
  Comment 997 block B48 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 997 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 997 420 rsi|QWORD = MOV [r9|QWORD[.] + r10|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1002 422 rcx|QWORD = MOV [rdx|QWORD[.] + rsi|QWORD * 1] size: QWORD  <||@
  Comment 1006 424 CMP (x: rcx|QWORD, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: QWORD  <||@
  Comment 1010 426 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1016 block B49 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1016 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 430 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1016 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r10|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1016 {infopoint: SAFEPOINT}  <||@
  Comment 1016 11  <||@
  Comment 1022 432 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1025 434 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1030 436 JUMP ~[] destination: B49 -> B29  <||@
  Comment 1035 block B54 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1035 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1035 470 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1040 472 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1044 474 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 476 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1052 478 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B59  <||@
  Comment 1058 block B55 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1058 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1058 482 rsi|QWORD = MOV [r9|QWORD[.] + r11|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1063 484 xmm0|SINGLE = H [rdx|QWORD[.] + rsi|QWORD * 1] nZ: XMM oh: VMOVSS  <||@
  Comment 1068 486 UCOMIS (x: xmm0|SINGLE, y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: PS  <||@
  Comment 1073 488 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 unorderedIsTrue: false  <||@
  Comment 1085 block B56 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1085 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 492 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:27, 6, 40, 46, 24]  <||@
  Comment 1085 [rdx:0, rbx:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3          |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:64|QWORD[.]  |r11|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1             |2                 
     locals:  |-  |rdx|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1             |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1085 {infopoint: SAFEPOINT}  <||@
  Comment 1085 11  <||@
  Comment 1091 494 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1096 496 JUMP ~[] destination: B56 -> B29  <||@
  Comment 1101 block B61 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1101 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1101 530 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1106 532 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1111 534 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 536 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1119 538 r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1122 542 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1125 544 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:240, 6, 40, 46, 24]  <||@
  Comment 1125 9  <||@
  Comment 1127 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1132 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 240, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1133 546 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1138 548 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1146 550 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:243, 6, 40, 46, 24]  <||@
  Comment 1146 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687) [bci: 243, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |xmm0|DOUBLE   |-                  |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1150 552 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1154 554 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 556 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1163 558 stack:88|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1169 560 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:251, 6, 40, 46, 24]  <||@
  Comment 1169 9  <||@
  Comment 1175 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1180 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:688) [bci: 251, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5                |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:88|DOUBLE  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1181 562 VUCOMISD (x: xmm0|DOUBLE, y: stack:88|DOUBLE)  <||@
  Comment 1187 564 FLOATBRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 unorderedIsTrue: false  <||@
  Comment 1199 block B62 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1199 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1199 568 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1204 570 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1209 572 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1213 574 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 576 JUMP ~[] destination: B62 -> B29  <||@
  Comment 1223 block B65 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1223 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1223 592 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1228 594 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1231 596 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1236 598 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1240 600 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:283, 6, 40, 46, 24]  <||@
  Comment 1240 9  <||@
  Comment 1247 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1252 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 283, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1253 602 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1258 604 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1266 606 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:286, 6, 40, 46, 24]  <||@
  Comment 1266 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:693) [bci: 286, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1270 608 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1274 610 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1279 612 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1283 614 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1287 616 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:294, 6, 40, 46, 24]  <||@
  Comment 1287 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1287 9  <||@
  Comment 1292 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:694) [bci: 294, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:92|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1293 618 CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1297 620 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1303 block B66 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1303 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1303 624 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1308 626 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1313 628 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1317 630 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1322 632 JUMP ~[] destination: B66 -> B29  <||@
  Comment 1327 block B69 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1327 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1327 648 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1332 650 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 652 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1340 654 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1344 656 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:325, 6, 40, 46, 24]  <||@
  Comment 1344 9  <||@
  Comment 1351 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1356 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 325, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1357 658 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1362 660 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1370 662 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:328, 6, 40, 46, 24]  <||@
  Comment 1370 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:699) [bci: 328, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1370 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1374 664 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1378 666 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 668 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1387 670 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1391 672 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:336, 6, 40, 46, 24]  <||@
  Comment 1391 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1391 9  <||@
  Comment 1396 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700) [bci: 336, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:92|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1397 674 CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1401 676 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1407 block B70 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1407 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 680 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1412 682 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1417 684 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1421 686 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1426 688 JUMP ~[] destination: B70 -> B29  <||@
  Comment 1431 block B73 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1431 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 704 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1436 706 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 708 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1444 710 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1448 712 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:367, 6, 40, 46, 24]  <||@
  Comment 1448 9  <||@
  Comment 1455 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1460 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 367, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1461 714 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1466 716 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1474 718 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:370, 6, 40, 46, 24]  <||@
  Comment 1474 [rsi:0, r11:0, stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:705) [bci: 370, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3               |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |rax|DWORD     |                   |                   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1474 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1478 720 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@101b0309 encoding: base: 0 shift: 3  <||@
  Comment 1482 722 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1487 724 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1491 726 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1495 728 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:378, 6, 40, 46, 24]  <||@
  Comment 1495 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1495 9  <||@
  Comment 1500 [stack:28, stack:32, stack:44, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:706) [bci: 378, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3               |4  |5               |6  |7  |8 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:72|DWORD  |-  |stack:92|DWORD  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2                 
     locals:  |-  |stack:40|QWORD[.]  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1501 730 CMP (x: rax|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1505 732 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 1511 block B74 loop 1 depth 2 outer 0 header:192|LoopBegin  <||@
  Comment 1511 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 736 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1516 738 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1521 740 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1525 742 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1530 744 JUMP ~[] destination: B74 -> B29  <||@
  Comment 1535 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1535 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 308 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 310 JUMP ~[] destination: B36 -> B107  <||@
  Comment 1545 block B81 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1545 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1545 804 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1550 806 JUMP ~[] destination: B81 -> B107  <||@
  Comment 1555 block B43 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1555 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 380 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1560 382 JUMP ~[] destination: B43 -> B107  <||@
  Comment 1565 block B83 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1565 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1565 816 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 818 JUMP ~[] destination: B83 -> B107  <||@
  Comment 1575 block B85 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1575 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 838 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1580 840 JUMP ~[] destination: B85 -> B107  <||@
  Comment 1585 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1585 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1585 440 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1590 442 JUMP ~[] destination: B50 -> B107  <||@
  Comment 1595 block B57 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1595 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1595 500 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 502 JUMP ~[] destination: B57 -> B107  <||@
  Comment 1605 block B63 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1605 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1605 580 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1610 582 JUMP ~[] destination: B63 -> B107  <||@
  Comment 1615 block B67 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1615 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 636 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 638 JUMP ~[] destination: B67 -> B107  <||@
  Comment 1625 block B95 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1625 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 912 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}  <||@
  Comment 1625 {meta{HotSpotType<Lorg/graalvm/compiler/hotspot/HotSpotGraalMBean$RefEquivalence;, resolved>;compressed}}  <||@
  Comment 1632 914 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B121  <||@
  Comment 1638 block B96 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1638 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1638 918 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1643 920 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 1646 922 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}  <||@
  Comment 1646 {meta{HotSpotType<Ljava/lang/ref/Reference;, resolved>}}  <||@
  Comment 1656 924 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1664 926 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B120  <||@
  Comment 1670 block B97 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1670 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1670 932 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1672 934 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B97 -> B101 falseDestination: B97 -> B99  <||@
  Comment 1678 block B99 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1678 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 942 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1685 944 CMP (x: r11|QWORD, y: [rsi|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1693 946 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B101 falseDestination: B99 -> B119  <||@
  Comment 1699 block B101 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1699 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1699 954 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1699 [rdx:0, r10:0, stack:32, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5             |6  |7 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1699 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1703 956 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 958 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12, 46, 24]  <||@
  Comment 1706 7  <||@
  Comment 1719 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1724 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 12, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                 
     locals:  |-  |-  |-  |-  |stack:64|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1725 960 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1730 962 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1735 964 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Reference.get()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 46, 24]  <||@
  Comment 1735 7  <||@
  Comment 1751 {HotSpotMethod<Reference.get()>}  <||@
  Comment 1756 [stack:32, stack:56, stack:64]at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:64|QWORD[.]  |   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1757 966 CMP (x: rax|QWORD[.], y: stack:64|QWORD[.]) size: QWORD  <||@
  Comment 1762 968 BRANCH trueDestinationProbability: 0.7491612393921453 condition: = trueDestination: B101 -> B118 falseDestination: B101 -> B103  <||@
  Comment 1768 block B103 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1768 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1768 976 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1773 978 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1776 980 BRANCH trueDestinationProbability: 0.16129032258064516 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1782 block B105 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1782 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1782 990 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1785 992 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:11, 20, 46, 24]  <||@
  Comment 1785 7  <||@
  Comment 1799 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1804 [stack:56, stack:64]at java.util.Objects.equals(Objects.java:59) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.hotspot.HotSpotGraalMBean$RefEquivalence.equals(HotSpotGraalMBean.java:351) [bci: 20, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 1805 994 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1807 996 BRANCH trueDestinationProbability: 0.989469325851564 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B118  <||@
  Comment 1813 block B106 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1813 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1813 1000 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1818 1002 JUMP ~[] destination: B106 -> B107  <||@
  Comment 1823 block B71 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1823 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 692 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1828 694 JUMP ~[] destination: B71 -> B107  <||@
  Comment 1833 block B75 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1833 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1833 748 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 750 JUMP ~[] destination: B75 -> B107  <||@
  Comment 1843 block B104 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 1843 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1843 984 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1848 986 JUMP ~[] destination: B104 -> B107  <||@
  Comment 1853 block B5 null  <||@
  Comment 1853 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1853 60 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1858 62 JUMP ~[] destination: B5 -> B118  <||@
  Comment 1858 block B118 null  <||@
  Comment 1858 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1858 1082 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1862 1084 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1871 12  <||@
  Comment 1881 block B14 null  <||@
  Comment 1881 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1881 118 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1886 120 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1895 12  <||@
  Comment 1905 block B114 null  <||@
  Comment 1905 1054 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 1056 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1910 1058 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1919 12  <||@
  Comment 1929 block B93 null  <||@
  Comment 1929 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1929 900 r11|DWORD = MOVE input: int[-258851|0xfffffffffffc0cdd]  <||@
  Comment 1935 902 JUMP ~[] destination: B93 -> B123  <||@
  Comment 1935 block B123 null  <||@
  Comment 1935 1110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1935 1112 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1942 1114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1949 1116 DEOPT info [bci:3]  <||@
  Comment 1949 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1954 [r10:0, stack:56, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:290) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5             |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1955 block B15 null  <||@
  Comment 1955 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1955 124 r11|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5]  <||@
  Comment 1961 126 JUMP ~[] destination: B15 -> B123  <||@
  Comment 1963 block B122 null  <||@
  Comment 1963 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1963 1106 r11|DWORD = MOVE input: int[-246811|0xfffffffffffc3be5]  <||@
  Comment 1969 1108 JUMP ~[] destination: B122 -> B123  <||@
  Comment 1971 block B119 null  <||@
  Comment 1971 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1971 1088 r11|DWORD = MOVE input: int[-310307|0xfffffffffffb43dd]  <||@
  Comment 1977 1090 JUMP ~[] destination: B119 -> B123  <||@
  Comment 1979 block B38 null  <||@
  Comment 1979 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1979 318 r10|DWORD = MOVE input: int[-272155|0xfffffffffffbd8e5]  <||@
  Comment 1985 326 JUMP ~[] destination: B38 -> B91  <||@
  Comment 1985 block B91 null  <||@
  Comment 1985 886 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1985 878 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1990 880 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1995 882 rdi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 888 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2007 890 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2014 892 DEOPT info [bci:27, 6, 40, 46, 24]  <||@
  Comment 2014 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2019 [rdi:0, r11:0, stack:56, stack:64]at org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:659) [bci: 27, duringCall: false, rethrow: false]
              |0             |1                  |2             |3         |4  |5  |6  |7  |8 
     locals:  |r11|DWORD[.]  |stack:40|QWORD[.]  |rdi|QWORD[.]  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Node.valueEquals(Node.java:1304) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.equals(Graph.java:145) [bci: 40, duringCall: true, rethrow: false]
              |0  |1                  |2            
     locals:  |-  |stack:40|QWORD[.]  |rdi|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:44|DWORD  |-  |-  |-  |-   <||@
  Comment 2020 block B115 null  <||@
  Comment 2020 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 1062 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2025 1064 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2030 1066 MOV [r15|QWORD + 668] y: -314907 size: DWORD  <||@
  Comment 2041 1068 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2048 1070 DEOPT info [bci:27]  <||@
  Comment 2048 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2053 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:293) [bci: 27, duringCall: false, rethrow: false]
              |0             |1             |2  |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |r9|DWORD  |-  |-  |-  |- 
     stack:   |int[0|0x0]    |              |   |          |   |   |   |    <||@
  Comment 2054 block B94 null  <||@
  Comment 2054 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2054 906 r11|DWORD = MOVE input: int[-257827|0xfffffffffffc10dd]  <||@
  Comment 2060 908 JUMP ~[] destination: B94 -> B123  <||@
  Comment 2062 block B45 null  <||@
  Comment 2062 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2062 390 r10|DWORD = MOVE input: int[-274971|0xfffffffffffbcde5]  <||@
  Comment 2068 398 JUMP ~[] destination: B45 -> B91  <||@
  Comment 2070 block B59 null  <||@
  Comment 2070 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2070 510 r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5]  <||@
  Comment 2076 518 JUMP ~[] destination: B59 -> B91  <||@
  Comment 2078 block B52 null  <||@
  Comment 2078 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 450 r10|DWORD = MOVE input: int[-282139|0xfffffffffffbb1e5]  <||@
  Comment 2084 458 JUMP ~[] destination: B52 -> B91  <||@
  Comment 2086 block B1 null  <||@
  Comment 2086 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1110971169]  <||@
  Comment 2086 {Object[d.a@1110971169]}  <||@
  Comment 2096 18 MOV [r15|QWORD + 668] y: -256523 size: DWORD  <||@
  Comment 2107 20 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2114 22 DEOPT info [bci:0]  <||@
  Comment 2114 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2119 [rcx:0, stack:64]at org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |Object[null]  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2120 block B90 null  <||@
  Comment 2120 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 876 r10|DWORD = MOVE input: int[-266267|0xfffffffffffbefe5]  <||@
  Comment 2126 884 JUMP ~[] destination: B90 -> B91  <||@
  Comment 2131 block B120 null  <||@
  Comment 2131 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2131 1094 r11|DWORD = MOVE input: int[-309539|0xfffffffffffb46dd]  <||@
  Comment 2137 1096 JUMP ~[] destination: B120 -> B123  <||@
  Comment 2142 block B121 null  <||@
  Comment 2142 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 1100 r11|DWORD = MOVE input: int[-308787|0xfffffffffffb49cd]  <||@
  Comment 2148 1102 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2153 block B88 null  <||@
  Comment 2153 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2153 860 r10|DWORD = MOVE input: int[-302875|0xfffffffffffb60e5]  <||@
  Comment 2159 868 JUMP ~[] destination: B88 -> B91  <||@
  Comment 2164 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2164 4  <||@
  Comment 2170 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2170 5  <||@
  HexCodeFile>>> <|@
end_nmethod
