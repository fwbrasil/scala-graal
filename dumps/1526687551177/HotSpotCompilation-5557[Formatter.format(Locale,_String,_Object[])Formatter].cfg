begin_compilation
  name " HotSpotCompilation-5557[java.util.Formatter.format(Locale, String, Object[])]"
  method "HotSpotCompilation-5557[java.util.Formatter.format(Locale, String, Object[])]"
  date 1526687558578
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v66 v1628 v436 ?12 ?20 ?194 ?73 ?128 ?207 ?983 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?207 ?12 ?20 ?73 v634 ?128 v590 v625 ?194 v624 ?983 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v436 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?207 ?12 ?20 ?73 v40 v1642 ?194 ?128 ?983 v1641 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2494
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 - - - - - - - 
=== Succesors ===
=== Usages ===
v1059 v1678 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v707 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v707 #falseSuccessor: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid a1056 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@958549472
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@958549472]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1055 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151315
stableDimension: 0
stamp: i32 [-151315] ⇊00000000fffdb0ed ⇈00000000fffdb0ed
stampKind: i32
value: int[-151315|0xfffffffffffdb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1055 
speculation: a1056 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1055 speculation: a1056  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1597 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1597  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
=== Succesors ===
next: v1678 
=== Usages ===
v1678 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1628 #next: v1678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1597 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a1597 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1597 #next: a11  <|@  <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
returnStamp: a [Ljava/lang/Object; (unchecked=a [Ljava/util/Formatter$FormatString;)
signature: [Ljdk.vm.ci.meta.JavaType;@204fdd9e
stamp: void
targetMethod: HotSpotMethod<Formatter.parse(String)>
=== Inputs ===
arguments: a1 a3 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2497) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 ?12 i17 i18 i43 ?983 ?983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?983 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Formatter.parse
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v436 
stateDuring: ?983 
=== Succesors ===
next: i1598 
=== Usages ===
?12 ?20 v1630 v1629 ?73 ?128 ?207 ?194 
=== Predecessor ===
v1678 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v436 stateDuring: ?983 #next: i1598  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - a11 
=== Succesors ===
=== Usages ===
v1067 i1598 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - - a11  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i1598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1629 
=== Succesors ===
next: v1593 
=== Usages ===
v22 j684 v698 
=== Predecessor ===
a11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1629 #next: v1593  <|@  <|@
f <@~|@floating>@ <|@
tid j684 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1598 
=== Succesors ===
=== Usages ===
j688 v690 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1598  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j688 j1501 j1552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j684 
y: j687 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j684 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j688 
y: j684 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j688 y: j684  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v117 v196 v209 a1207 v698 v375 v388 v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v690 
=== Succesors ===
trueSuccessor: v1589 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
i1598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v690 #trueSuccessor: v1589 #falseSuccessor: v1592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1587 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1587  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
v1589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B113" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1598 
y: i13 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1598 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v1590 #falseSuccessor: v719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1588 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1588  <|@  <|@
f <@*|@fixed>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1587 v1588 
=== Succesors ===
next: i1599 
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1587 v1588 #next: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i1599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 154]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1641 
=== Succesors ===
next: v15 
=== Usages ===
i43 v597 
=== Predecessor ===
v1586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1641 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1599 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1599 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1293 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 v1076 v1084 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i64 v340 i371 v384 i1183 i1596 i1595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.index(Formatter.java:2593) [bci: 0]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1280 v1594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
i1599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B101" "B76" "B84" "B104" "B79" "B102" 
    successors "B8" "B112" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616890898301560631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i17 i17 i38 i17 i38 
=== Succesors ===
=== Usages ===
?20 ?73 ?207 i17 i17 ?194 i17 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i17 i17 i38 i17 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i18 i18 i38 i18 i38 
=== Succesors ===
=== Usages ===
?20 ?73 i38 ?207 i18 i18 ?194 i18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i18 i18 i38 i18 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i13 i64 i1596 i1596 i1595 i1596 i64 
=== Succesors ===
=== Usages ===
?20 v22 v1630 ?73 ?128 ?207 i64 ?194 i1595 i1596 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i13 i64 i1596 i1596 i1595 i1596 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622861981371719
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v15 
=== Succesors ===
next: v27 
=== Usages ===
i17 i18 i19 v25 v65 v67 v275 v276 v277 v408 v819 v814 v809 v769 v799 v729 v794 v789 v784 v779 v774 v759 v764 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v15 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1598 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i1598  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
stamp: void
trueSuccessorProbability: 0.783683786357975
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1600 
=== Usages ===
v696 
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1600  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1586 v23 
=== Succesors ===
=== Usages ===
a1600 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1586 v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a11 
index: i19 
=== Succesors ===
=== Usages ===
a1600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v696 
address: v1630 
=== Succesors ===
next: v1601 
=== Usages ===
a452 v1647 v1631 v1633 v1639 v1640 v1684 v1685 v1686 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v696 address: v1630 #next: v1601  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2502
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
v1076 v1601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1647 
=== Succesors ===
next: v86 
=== Usages ===
v1282 v1280 v1594 
=== Predecessor ===
a1600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1647 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1601 
y: v1281 
=== Succesors ===
=== Usages ===
v775 v86 v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1601 y: v1281  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 0.5392324044009438
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v79 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611476891873793690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1602 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1602  <|@  <|@
f <@~|@floating>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.index
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.index(Formatter.java:2636) [bci: 1]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1686 
=== Succesors ===
next: v80 
=== Usages ===
i75 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1686 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
i1602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1601 
y: v1279 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1601 y: v1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1594 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1594 #trueSuccessor: v726 #falseSuccessor: v729  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v72 
values: i1602 i114 
=== Succesors ===
=== Usages ===
?73 v32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v72 values: i1602 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v92 
=== Succesors ===
next: v32 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v92 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1600 
=== Succesors ===
=== Usages ===
v634 ?73 v625 v624 v590 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1600  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a452 - - i75 
=== Succesors ===
=== Usages ===
v1084 a1207 a1604 v1679 v1680 v1681 i1609 v1622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a452 - - i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@34590419
keySuccessors: [I@1f3f123f
keys: [I@457d81e7
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
value: i75 
=== Succesors ===
successors: v33 v35 v36 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i75 #successors: v33 v35 v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609671356259498517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1601 
y: v1279 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1601 y: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid i1596 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 i19 i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.8270591525660747
=== Inputs ===
condition: v1280 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1280 #trueSuccessor: v134 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608462060969985249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1603 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
a1603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1631 
=== Succesors ===
next: a1604 
=== Usages ===
v1632 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1631 #next: a1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1603 
=== Succesors ===
=== Usages ===
a1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1632 
=== Succesors ===
next: v1679 
=== Usages ===
a462 v1679 v1636 v1637 v1648 a1683 
=== Predecessor ===
a1603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1632 #next: v1679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1604 
=== Succesors ===
next: a1605 
=== Usages ===
=== Predecessor ===
a1604 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1604 #next: a1605  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
a1605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1633 
=== Succesors ===
next: v1680 
=== Usages ===
a465 v1680 v1634 a1682 
=== Predecessor ===
v1679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1633 #next: v1680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1605 
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
a1605 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1605 #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1604 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1648 
=== Succesors ===
next: v244 
=== Usages ===
v1286 v1284 
=== Predecessor ===
v1680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1648 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1606 
y: v1283 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1606 y: v1283  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?266 ?261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5915997706422018
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v237 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605017948587023926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1607 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1607  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1605 
=== Succesors ===
=== Usages ===
a1607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1634 
=== Succesors ===
next: v1681 
=== Usages ===
a470 v1681 v1635 
=== Predecessor ===
v237 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1634 #next: v1681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1607 
=== Succesors ===
next: a1608 
=== Usages ===
=== Predecessor ===
a1607 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1607 #next: a1608  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1604 
=== Succesors ===
=== Usages ===
a1608 v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1637 
=== Succesors ===
next: i1609 
=== Usages ===
a480 v1645 v1638 
=== Predecessor ===
v1681 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1637 #next: i1609  <|@  <|@
f <@~|@floating>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1608 
=== Succesors ===
=== Usages ===
i1609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1638 
=== Succesors ===
next: i1610 
=== Usages ===
i339 i371 i1031 i513 v1009 
=== Predecessor ===
a1608 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1638 #next: i1610  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1607 
=== Succesors ===
=== Usages ===
i1610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1635 
=== Succesors ===
next: i1611 
=== Usages ===
i322 i513 ?354 i560 j1265 
=== Predecessor ===
i1609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1635 #next: i1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1604 
=== Succesors ===
=== Usages ===
i1611 v486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1636 
=== Succesors ===
next: v343 
=== Usages ===
i322 j1261 v542 v561 v514 
=== Predecessor ===
i1610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1636 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1611 
y: i13 
=== Succesors ===
=== Usages ===
v548 v501 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1611 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1610 
y: i1611 
=== Succesors ===
=== Usages ===
v486 i339 i374 i652 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1610 y: i1611  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i322 
y: i1609 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i322 y: i1609  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i339 
y: i37 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i339 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9359365262882174
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
i1611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604579579594941083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132961
stableDimension: 0
stamp: i32 [-132961] ⇊00000000fffdf89f ⇈00000000fffdf89f
stampKind: i32
value: int[-132961|0xfffffffffffdf89f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v500 
falseSuccessor: v496 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v500 #falseSuccessor: v496  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574847603017253725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@*|@fixed>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604515535994444436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1609 
y: i1610 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1609 y: i1610  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i513 
y: i1611 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i513 y: i1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v517 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574765627208618017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604452132829952756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid a480 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1608 
=== Succesors ===
=== Usages ===
a989 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1608  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1609 
y: i37 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1609 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i371 
y: i372 
=== Succesors ===
=== Usages ===
i374 i652 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i371 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i373 
y: i322 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i373 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i374 
y: i13 
=== Succesors ===
=== Usages ===
i652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i374 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v375 
trueValue: i322 
falseValue: i373 
=== Succesors ===
=== Usages ===
i560 j1296 v384 i387 v1192 v1009 i1031 a1207 v1234 i1183 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v375 trueValue: i322 falseValue: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i652 
y: i37 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i652 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v759 #falseSuccessor: v756  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135699
stableDimension: 0
stamp: i32 [-135699] ⇊00000000fffdeded ⇈00000000fffdeded
stampKind: i32
value: int[-135699|0xfffffffffffdeded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i386 
y: i652 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i386 y: i652  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i13 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i387 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v764 #falseSuccessor: v761  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid i1104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135955
stableDimension: 0
stamp: i32 [-135955] ⇊00000000fffdeced ⇈00000000fffdeced
stampKind: i32
value: int[-135955|0xfffffffffffdeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1186 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1186 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1231 
=== Usages ===
v1649 v1650 
=== Predecessor ===
v761 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1186 
index: - 
=== Succesors ===
=== Usages ===
j1231 v1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1649 
=== Succesors ===
next: j1232 
=== Usages ===
j1190 v1651 v1652 a1206 v1657 v1653 v1654 v1655 v1656 
=== Predecessor ===
j1186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1649 #next: j1232  <|@  <|@
f <@~|@floating>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1186 
index: - 
=== Succesors ===
=== Usages ===
j1232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1195 
=== Usages ===
v1196 
=== Predecessor ===
j1231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid i1191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i652 
y: i1191 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i652 y: i1191  <|@  <|@
f <@~|@floating>@ <|@
tid j1182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1235 v1307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1192 
=== Succesors ===
trueSuccessor: v1194 
falseSuccessor: v1193 
=== Usages ===
=== Predecessor ===
j1232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1192 #trueSuccessor: v1194 #falseSuccessor: v1193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586473334521787367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1202  <|@  <|@
f <@~|@floating>@ <|@
tid i1183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i652 
y: i37 
=== Succesors ===
=== Usages ===
i1215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i652 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1183 
y: i1214 
=== Succesors ===
=== Usages ===
i1185 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1183 y: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid i1184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1185 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1215 
y: i1184 
=== Succesors ===
=== Usages ===
j1189 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1215 y: i1184  <|@  <|@
f <@~|@floating>@ <|@
tid j1189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1185 
=== Succesors ===
=== Usages ===
j1190 v1653 v1654 v1655 v1656 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1185  <|@  <|@
f <@~|@floating>@ <|@
tid j1190 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
x: j1189 
y: j1231 
=== Succesors ===
=== Usages ===
v1196 v1233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1189 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1232 
y: j1190 
=== Succesors ===
=== Usages ===
v1202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1232 y: j1190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1196 
=== Succesors ===
trueSuccessor: v1201 
falseSuccessor: v1200 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1196 #trueSuccessor: v1201 #falseSuccessor: v1200  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556715640906271924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
v1202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1199  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
v1201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586410209386927438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1649 
value: j1190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1649 value: j1190 stateAfter: - lastLocationAccess: - #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1653 
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1653 #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1654 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1654 #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1655 
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1655 #next: v1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1656 
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1656 #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1231 
index: - 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1231 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1651 
value: i652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1235 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1651 value: i652 stateAfter: - lastLocationAccess: - #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1231 
index: - 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1231 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1652 
value: j1182 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1652 value: j1182 stateAfter: - lastLocationAccess: - #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1231 
index: - 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1231 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1657 
value: v1287 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1205 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1657 value: v1287 stateAfter: - lastLocationAccess: - #next: v1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1206 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1231 
=== Succesors ===
next: v1208 
=== Usages ===
a1211 
=== Predecessor ===
v1205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1231 #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
a1206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572261145252343329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
v1193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572766146331222764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1197 v1199 
=== Succesors ===
next: a1207 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1197 v1199 #next: a1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1207 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1181 i652 i13 
=== Succesors ===
next: v1210 
=== Usages ===
a1211 
=== Predecessor ===
v1198 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1181 i652 i13 #next: v1210  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
a1207 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1209 
values: a1206 a1207 
=== Succesors ===
=== Usages ===
v1662 a1038 v1646 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1209 values: a1206 a1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1208 v1210 
=== Succesors ===
next: v1437 
=== Usages ===
a1211 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1208 v1210 #next: v1437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1310 
=== Usages ===
j1438 j1440 
=== Predecessor ===
v1209 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1609 
y: i652 
=== Succesors ===
=== Usages ===
i1031 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1609 y: i652  <|@  <|@
f <@~|@floating>@ <|@
tid i1031 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1009 
trueValue: i1609 
falseValue: i652 
=== Succesors ===
=== Usages ===
j1297 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1009 trueValue: i1609 falseValue: i652  <|@  <|@
f <@~|@floating>@ <|@
tid j1297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1031 
=== Succesors ===
=== Usages ===
j1501 v1662 j1301 v1307 v1434 j1484 j1490 j1494 j1498 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1297 
y: j1182 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1297 y: j1182  <|@  <|@
f <@~|@floating>@ <|@
tid j1443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1457 j1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1498 j1549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1466 j1525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1494 j1546 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1531 j1474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1490 j1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1537 j1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1484 j1538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1526 v1539 j1467 j1475 v1485 j1532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1307 
=== Succesors ===
trueSuccessor: v1308 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1307 #trueSuccessor: v1308 #falseSuccessor: v1309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1327 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
v1308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1313  <|@  <|@
f <@~|@floating>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1211 
index: - 
=== Succesors ===
=== Usages ===
j1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1440 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1437 
address: v1646 
=== Succesors ===
=== Usages ===
v1663 v1665 v1667 v1669 v1671 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1437 address: v1646  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1608 
=== Succesors ===
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1608  <|@  <|@
f <@~|@floating>@ <|@
tid j1438 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1437 
address: v1645 
=== Succesors ===
=== Usages ===
v1664 v1666 v1668 v1670 v1672 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1437 address: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid j1484 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1297 
y: j1483 
=== Succesors ===
=== Usages ===
v1485 v1487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1484 
y: j1218 
=== Succesors ===
=== Usages ===
v1313 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1484 y: j1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1485 
=== Succesors ===
trueSuccessor: v1311 
falseSuccessor: v1312 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1485 #trueSuccessor: v1311 #falseSuccessor: v1312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1314 
=== Usages ===
=== Predecessor ===
v1313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1475 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1315 
values: j1218 j1482 
=== Succesors ===
=== Usages ===
v1672 j1482 v1671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1315 values: j1218 j1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1314 
=== Succesors ===
next: v1612 
=== Usages ===
v1612 v1319 v1320 j1475 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1314 #next: v1612  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1475 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1315 
address: v1672 
=== Succesors ===
next: v1570 
=== Usages ===
v1570 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1315 address: v1672 #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1475 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1671 
value: v1612 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1671 value: v1612 stateAfter: - lastLocationAccess: - #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid j1482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1475 
y: j431 
=== Succesors ===
=== Usages ===
j1467 j1475 v1487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1475 y: j431  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1484 
y: j1482 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1484 y: j1482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1487 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1321 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1487 #trueSuccessor: v1319 #falseSuccessor: v1321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1315 
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1315 #next: v1325  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1467 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1324 
values: j1218 j1482 
=== Succesors ===
=== Usages ===
v1670 j1474 j1458 v1491 v1669 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1324 values: j1218 j1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1323 v1325 
=== Succesors ===
next: v1347 
=== Usages ===
j1467 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1323 v1325 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid j1490 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1297 
y: j1489 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1490 
y: j1467 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1490 y: j1467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1491 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1491 #trueSuccessor: v1346 #falseSuccessor: v1345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
v1613 
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@~|@floating>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1467 
=== Succesors ===
=== Usages ===
v1613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1345 
address: v1670 
=== Succesors ===
next: v1568 
=== Usages ===
v1568 
=== Predecessor ===
v1345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1345 address: v1670 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1467 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1669 
value: v1613 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1669 value: v1613 stateAfter: - lastLocationAccess: - #next: v1334  <|@  <|@
f <@~|@floating>@ <|@
tid j1474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1467 
y: j1174 
=== Succesors ===
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1467 y: j1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1458 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1335 
values: j1474 j1467 
=== Succesors ===
=== Usages ===
v1668 j1466 j1450 v1495 v1667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1335 values: j1474 j1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1334 v1350 
=== Succesors ===
next: v1353 
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1334 v1350 #next: v1353  <|@  <|@
f <@~|@floating>@ <|@
tid j1494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1297 
y: j1493 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1494 
y: j1458 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1494 y: j1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1495 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1495 #trueSuccessor: v1352 #falseSuccessor: v1351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1614 
=== Usages ===
v1614 
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1614  <|@  <|@
f <@~|@floating>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1458 
=== Succesors ===
=== Usages ===
v1614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1351 
address: v1668 
=== Succesors ===
next: v1566 
=== Usages ===
v1566 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1351 address: v1668 #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1458 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1667 
value: v1614 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1667 value: v1614 stateAfter: - lastLocationAccess: - #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1458 
y: j1465 
=== Succesors ===
=== Usages ===
j1450 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1458 y: j1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1450 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1339 
values: j1466 j1458 
=== Succesors ===
=== Usages ===
v1666 j1457 j1441 v1499 v1665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1339 values: j1466 j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1338 v1356 
=== Succesors ===
next: v1359 
=== Usages ===
j1450 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1338 v1356 #next: v1359  <|@  <|@
f <@~|@floating>@ <|@
tid j1498 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1297 
y: j1497 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1498 
y: j1450 
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1498 y: j1450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1499 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1499 #trueSuccessor: v1358 #falseSuccessor: v1357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
v1358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
v1615 
=== Predecessor ===
v1359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1450 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1357 
address: v1666 
=== Succesors ===
next: v1564 
=== Usages ===
v1564 
=== Predecessor ===
v1357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1357 address: v1666 #next: v1564  <|@  <|@
f <@~|@floating>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1450 
=== Succesors ===
=== Usages ===
v1564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1665 
value: v1615 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1665 value: v1615 stateAfter: - lastLocationAccess: - #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1450 
y: j1443 
=== Succesors ===
=== Usages ===
j1441 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1450 y: j1443  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
v1564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1441 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1342 
values: j1457 j1450 
=== Succesors ===
=== Usages ===
v1664 v1502 v1663 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1342 values: j1457 j1450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1341 v1362 
=== Succesors ===
next: v1365 
=== Usages ===
j1441 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1341 v1362 #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid j1501 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1297 
y: j687 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1501 
y: j1441 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1501 y: j1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1502 
=== Succesors ===
trueSuccessor: v1364 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1502 #trueSuccessor: v1364 #falseSuccessor: v1363  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1368 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1616 
=== Usages ===
i1616 
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1616  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1441 
=== Succesors ===
=== Usages ===
i1616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1616 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1363 
address: v1664 
=== Succesors ===
next: v1562 
=== Usages ===
v1562 
=== Predecessor ===
v1363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1363 address: v1664 #next: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1441 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1663 
value: i1616 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
i1616 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1663 value: i1616 stateAfter: - lastLocationAccess: - #next: v1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1327 v1344 v1368 
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1327 v1344 v1368 #next: v1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1375 
=== Usages ===
j1507 
=== Predecessor ===
v1328 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i652 
=== Succesors ===
=== Usages ===
j1301 v1434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i652  <|@  <|@
f <@~|@floating>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1297 
y: j1296 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1297 y: j1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1434 
=== Succesors ===
trueSuccessor: v1374 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1434 #trueSuccessor: v1374 #falseSuccessor: v1373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1211 
index: j1297 
=== Succesors ===
=== Usages ===
j1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1211 index: j1297  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1505 
address: v1662 
=== Succesors ===
=== Usages ===
v1673 v1674 v1675 v1676 v1677 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1505 address: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1296 
y: j1297 
=== Succesors ===
=== Usages ===
j1552 j1538 j1543 j1546 j1549 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1296 y: j1297  <|@  <|@
f <@~|@floating>@ <|@
tid j1538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1301 
y: j1483 
=== Succesors ===
=== Usages ===
v1539 v1541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1538 
y: j1218 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1538 y: j1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1539 
=== Succesors ===
trueSuccessor: v1376 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1539 #trueSuccessor: v1376 #falseSuccessor: v1377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1387  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1532 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1380 
values: j1218 j1537 
=== Succesors ===
=== Usages ===
v1677 j1537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1380 values: j1218 j1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1379 
=== Succesors ===
next: v1580 
=== Usages ===
j1532 v1383 v1384 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1379 #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1532 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
value: v1581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1677 value: v1581 stateAfter: - lastLocationAccess: - #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid j1537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1532 
y: j431 
=== Succesors ===
=== Usages ===
j1526 j1532 v1541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1532 y: j431  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1538 
y: j1537 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1538 y: j1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1541 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1541 #trueSuccessor: v1383 #falseSuccessor: v1385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1380 
=== Succesors ===
next: v1389 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1380 #next: v1389  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
v1383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1526 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1388 
values: j1218 j1537 
=== Succesors ===
=== Usages ===
v1676 j1531 j1520 v1544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1388 values: j1218 j1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1387 v1389 
=== Succesors ===
next: v1410 
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1387 v1389 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1301 
y: j1489 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1543 
y: j1526 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1543 y: j1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1544 
=== Succesors ===
trueSuccessor: v1409 
falseSuccessor: v1408 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1544 #trueSuccessor: v1409 #falseSuccessor: v1408  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1526 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1676 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1676 value: v1585 stateAfter: - lastLocationAccess: - #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1531 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1526 
y: j1174 
=== Succesors ===
=== Usages ===
j1520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
v1579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1520 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1399 
values: j1531 j1526 
=== Succesors ===
=== Usages ===
v1675 j1525 j1514 v1547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1399 values: j1531 j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1398 v1413 
=== Succesors ===
next: v1416 
=== Usages ===
j1520 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1398 v1413 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid j1546 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1301 
y: j1493 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1546 
y: j1520 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1546 y: j1520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1547 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1547 #trueSuccessor: v1415 #falseSuccessor: v1414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1419 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1419  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1520 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1520  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1675 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1675 value: v1584 stateAfter: - lastLocationAccess: - #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid j1525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1520 
y: j1465 
=== Succesors ===
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1520 y: j1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
v1577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1514 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1402 
values: j1525 j1520 
=== Succesors ===
=== Usages ===
v1674 j1519 j1508 v1550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1402 values: j1525 j1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1401 v1419 
=== Succesors ===
next: v1422 
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1401 v1419 #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid j1549 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1301 
y: j1497 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1549 
y: j1514 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1549 y: j1514  <|@  <|@
f <@*|@fixed>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1550 
=== Succesors ===
trueSuccessor: v1421 
falseSuccessor: v1420 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1550 #trueSuccessor: v1421 #falseSuccessor: v1420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1425 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
v1421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1514 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
value: v1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1674 value: v1583 stateAfter: - lastLocationAccess: - #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid j1519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1514 
y: j1443 
=== Succesors ===
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1514 y: j1443  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
v1575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1508 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1405 
values: j1519 j1514 
=== Succesors ===
=== Usages ===
v1673 v1553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1405 values: j1519 j1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1404 v1425 
=== Succesors ===
next: v1428 
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1404 v1425 #next: v1428  <|@  <|@
f <@~|@floating>@ <|@
tid j1552 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1301 
y: j687 
=== Succesors ===
=== Usages ===
v1553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1552 
y: j1508 
=== Succesors ===
=== Usages ===
v1428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1552 y: j1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1553 
=== Succesors ===
trueSuccessor: v1427 
falseSuccessor: v1426 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1553 #trueSuccessor: v1427 #falseSuccessor: v1426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1573 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1573  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1508 
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1508  <|@  <|@
f <@~|@floating>@ <|@
tid i1582 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
value: i1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1407 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1673 value: i1582 stateAfter: - lastLocationAccess: - #next: v1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1380 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1391 v1407 v1431 
=== Succesors ===
next: a1038 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1391 v1407 v1431 #next: a1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1211 
=== Succesors ===
next: v533 
=== Usages ===
a989 a532 
=== Predecessor ===
v1392 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1211 #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid a532 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a1038 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1637 
value: a532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1246 
=== Usages ===
=== Predecessor ===
a1038 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1637 value: a532 stateAfter: - lastLocationAccess: - #next: j1246  <|@  <|@
f <@~|@floating>@ <|@
tid a462 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
j1246 ?258 ?336 ?274 ?354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a462 
=== Succesors ===
next: v1252 
=== Usages ===
j1248 
=== Predecessor ===
v533 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a462 #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid i1247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1248 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1246 
y: i1247 
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1246 y: i1247  <|@  <|@
f <@~|@floating>@ <|@
tid j1251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1248 
index: j1251 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1248 index: j1251  <|@  <|@
f <@~|@floating>@ <|@
tid i1253 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1658 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
j1246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1658 value: i1253 stateAfter: - lastLocationAccess: - #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v547 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v547 #falseSuccessor: v543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557613420602057587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587104585870386661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i560 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i652 
y: i1610 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i652 y: i1610  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i1611 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i560 y: i1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v564 #falseSuccessor: v562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557523642632479021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562072131244638800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v546 v563 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v546 v563 #next: v566  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: - - - 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a465 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1605 
=== Succesors ===
=== Usages ===
?354 ?258 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1605  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?261 
values: a462 a465 
=== Succesors ===
=== Usages ===
?274 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a462 a465  <|@  <|@
tid ?274 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?258 
values: a462 - 
=== Succesors ===
=== Usages ===
?291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?258 values: a462 -  <|@  <|@
tid ?291 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?274 
values: - - 
=== Succesors ===
=== Usages ===
?314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?274 values: - -  <|@  <|@
tid ?314 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?291 
values: - - 
=== Succesors ===
=== Usages ===
?336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?291 values: - -  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?314 
values: a462 - 
=== Succesors ===
=== Usages ===
?354 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a462 -  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?336 
values: a462 a465 i1610 
=== Succesors ===
=== Usages ===
?351 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?336 values: a462 a465 i1610  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?354 
values: - - 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?354 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?351 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587035148222040739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604881778279093150
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a989 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v424 
values: a1038 a480 
=== Succesors ===
=== Usages ===
j1260 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v424 values: a1038 a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v423 v426 
=== Succesors ===
next: j1256 
=== Usages ===
a989 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v423 v426 #next: j1256  <|@  <|@
f <@~|@floating>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1607 
=== Succesors ===
=== Usages ===
j1256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a470 
=== Succesors ===
next: j1260 
=== Usages ===
v1659 
=== Predecessor ===
v424 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a470 #next: j1260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a989 
=== Succesors ===
next: v1266 
=== Usages ===
v1660 
=== Predecessor ===
j1256 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a989 #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1256 
index: - 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1256 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1611 
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1261 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1261  <|@  <|@
f <@~|@floating>@ <|@
tid j1265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1610 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1659 v1660 j1265 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
j1260 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1659 v1660 j1265 #next: v486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1636 
value: i322 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1636 value: i322 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2531) [bci: 252]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1315 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1606 
y: v1285 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1606 y: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1286 
=== Succesors ===
trueSuccessor: v766 
falseSuccessor: v769 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1286 #trueSuccessor: v766 #falseSuccessor: v769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid a1683 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
v579 ?301 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@~|@floating>@ <|@
tid a1682 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1605 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1605  <|@  <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1b0007fb
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a1683 a1682 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1683 a1682  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: - - - 
=== Succesors ===
=== Usages ===
?287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: - - -  <|@  <|@
tid ?287 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: - - 
=== Succesors ===
=== Usages ===
?301 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: - -  <|@  <|@
tid ?301 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 1065
stackSize: 0
=== Inputs ===
outerFrameState: ?287 
values: a1683 - 
=== Succesors ===
=== Usages ===
?985 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?287 values: a1683 -  <|@  <|@
tid ?985 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 669
stackSize: 0
=== Inputs ===
outerFrameState: ?301 
values: - - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?301 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v579 
stateDuring: ?985 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v579 stateDuring: ?985 #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid i1106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147763
stableDimension: 0
stamp: i32 [-147763] ⇊00000000fffdbecd ⇈00000000fffdbecd
stampKind: i32
value: int[-147763|0xfffffffffffdbecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v771 #falseSuccessor: v774  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1617 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1617  <|@  <|@
f <@~|@floating>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1639 
=== Succesors ===
next: v780 
=== Usages ===
i584 
=== Predecessor ===
v771 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1639 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid i584 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1617 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1617  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i584 
y: i13 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i584 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v776 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
i1617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v776 #falseSuccessor: v779  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1618 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1618  <|@  <|@
f <@~|@floating>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1640 
=== Succesors ===
next: v206 
=== Usages ===
i589 
=== Predecessor ===
v776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1640 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1618 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@6705a14e
keySuccessors: [I@ccf97b
keys: [I@2917223c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: i589 
=== Succesors ===
successors: v201 v200 
=== Usages ===
=== Predecessor ===
i1618 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i589 #successors: v201 v200  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@32b3c73a
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a452 a39 a2 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 a39 a2  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?984 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
tid ?984 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?207 
values: - - - 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?207 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v590 
stateDuring: ?984 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v590 stateDuring: ?984 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid i1086 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] ⇊00000000ffff38ed ⇈00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid i1110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1107 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid i1108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148531
stableDimension: 0
stamp: i32 [-148531] ⇊00000000fffdbbcd ⇈00000000fffdbbcd
stampKind: i32
value: int[-148531|0xfffffffffffdbbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid i1081 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: i32
=== Inputs ===
x: i18 
y: i37 
=== Succesors ===
=== Usages ===
v44 v1642 ?128 ?128 i17 i18 i17 i17 i18 i18 v597 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i38 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v784 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v784 #falseSuccessor: v781  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid i1112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152339
stableDimension: 0
stamp: i32 [-152339] ⇊00000000fffdaced ⇈00000000fffdaced
stampKind: i32
value: int[-152339|0xfffffffffffdaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v784 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1599 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1599  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v786 #falseSuccessor: v789  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
a1621 
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v791 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v791 #falseSuccessor: v794  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1619 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1619  <|@  <|@
f <@~|@floating>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1685 
=== Succesors ===
next: v800 
=== Usages ===
i609 
=== Predecessor ===
v791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1685 #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1619 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1619  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i13 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i609 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v796 
falseSuccessor: v799 
=== Usages ===
=== Predecessor ===
i1619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v796 #falseSuccessor: v799  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1620 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1620  <|@  <|@
f <@~|@floating>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1684 
=== Succesors ===
next: v127 
=== Usages ===
i613 
=== Predecessor ===
v796 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1684 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1620 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@6705a14e
keySuccessors: [I@ccf97b
keys: [I@2917223c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
value: i613 
=== Succesors ===
successors: v122 v121 
=== Usages ===
=== Predecessor ===
i1620 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i613 #successors: v122 v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1621 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1621  <|@  <|@
f <@~|@floating>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a4 
index: i38 
=== Succesors ===
=== Usages ===
a1621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v786 
address: v1642 
=== Succesors ===
next: v1622 
=== Usages ===
v1661 v1644 v1643 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v786 address: v1642 #next: v1622  <|@  <|@
f <@~|@floating>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1621 
=== Succesors ===
=== Usages ===
v1622 v1623 v1624 v1626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1661 
=== Succesors ===
next: v1145 
=== Usages ===
v1289 
=== Predecessor ===
a1621 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1661 #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1622 
y: v1288 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1622 y: v1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1289 
=== Succesors ===
trueSuccessor: v809 
falseSuccessor: v1142 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1289 #trueSuccessor: v809 #falseSuccessor: v1142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid i1122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157459
stableDimension: 0
stamp: i32 [-157459] ⇊00000000fffd98ed ⇈00000000fffd98ed
stampKind: i32
value: int[-157459|0xfffffffffffd98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: v1156 
=== Usages ===
v1291 
=== Predecessor ===
v1142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1623 
y: v1290 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1623 y: v1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1291 
=== Succesors ===
trueSuccessor: v814 
falseSuccessor: v1153 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1291 #trueSuccessor: v814 #falseSuccessor: v1153  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1123  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157715
stableDimension: 0
stamp: i32 [-157715] ⇊00000000fffd97ed ⇈00000000fffd97ed
stampKind: i32
value: int[-157715|0xfffffffffffd97ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: v1134 
=== Usages ===
v1293 
=== Predecessor ===
v1153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1624 
y: v1292 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1624 y: v1292  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 190
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i38 i38 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i38 i38 a11 i19 - - -  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: - - - 
=== Succesors ===
=== Usages ===
?229 ?988 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.9002135507668414
=== Inputs ===
condition: v1293 
=== Succesors ===
trueSuccessor: v1132 
falseSuccessor: v1131 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1293 #trueSuccessor: v1132 #falseSuccessor: v1131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611071854692411589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1625 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1625  <|@  <|@
f <@~|@floating>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1621 
=== Succesors ===
=== Usages ===
i1625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:137) [bci: 5]
at java.lang.Integer.intValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 69]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1643 
=== Succesors ===
next: v212 
=== Usages ===
j208 v209 
=== Predecessor ===
v1132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1643 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3076) [bci: 1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1625 
=== Succesors ===
=== Usages ===
v625 v624 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1625  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3077) [bci: 4]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1625 
y: i13 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1625 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2787
stackSize: 0
=== Inputs ===
outerFrameState: ?183 
values: - - - 
=== Succesors ===
=== Usages ===
?987 ?986 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?183 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3077) [bci: 4]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.19596749490981824
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
i1625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600250668499895552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3077) [bci: 7]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@78760ff3
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a452 j208 a2 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 j208 a2  <|@  <|@
tid ?986 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(int, Locale)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3083
stackSize: 0
=== Inputs ===
outerFrameState: ?229 
values: - - - - - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
bci: 55
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v624 
stateDuring: ?986 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v624 stateDuring: ?986 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609427092546914181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 52]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1f9626a7
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a452 j208 a2 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 j208 a2  <|@  <|@
tid ?987 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(int, Locale)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3083
stackSize: 0
=== Inputs ===
outerFrameState: ?229 
values: - - - - - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
bci: 55
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v625 
stateDuring: ?987 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v625 stateDuring: ?987 #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1626 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: v1168 
=== Usages ===
v1295 
=== Predecessor ===
v1131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1626 
y: v1294 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1626 y: v1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1295 
=== Succesors ===
trueSuccessor: v1166 
falseSuccessor: v819 
=== Usages ===
=== Predecessor ===
v1626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1295 #trueSuccessor: v1166 #falseSuccessor: v819  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1627 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1627  <|@  <|@
f <@~|@floating>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1621 
=== Succesors ===
=== Usages ===
j1627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Long.value
nodeSourcePosition: at java.lang.Long.longValue(Long.java:1000) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.longValue(BoxingSnippets.java:143) [bci: 5]
at java.lang.Long.longValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 91]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1644 
=== Succesors ===
next: v179 
=== Usages ===
v634 
=== Predecessor ===
v1166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1644 #next: v179  <|@  <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@f00f1ab
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a452 j1627 a2 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 j1627 a2  <|@  <|@
tid ?988 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2789
stackSize: 0
=== Inputs ===
outerFrameState: ?183 
values: - - - 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?183 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
bci: 95
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v634 
stateDuring: ?988 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
j1627 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v634 stateDuring: ?988 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i1595 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid i1126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160275
stableDimension: 0
stamp: i32 [-160275] ⇊00000000fffd8ded ⇈00000000fffd8ded
stampKind: i32
value: int[-160275|0xfffffffffffd8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid i1088 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739] ⇊00000000ffff87ed ⇈00000000ffff87ed
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid i1118 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156179
stableDimension: 0
stamp: i32 [-156179] ⇊00000000fffd9ded ⇈00000000fffd9ded
stampKind: i32
value: int[-156179|0xfffffffffffd9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid i1116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155187
stableDimension: 0
stamp: i32 [-155187] ⇊00000000fffda1cd ⇈00000000fffda1cd
stampKind: i32
value: int[-155187|0xfffffffffffda1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid i1114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153115
stableDimension: 0
stamp: i32 [-153115] ⇊00000000fffda9e5 ⇈00000000fffda9e5
stampKind: i32
value: int[-153115|0xfffffffffffda9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B106" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B109" "B108" "B107" "B96" "B98" "B105" "B19" 
    successors 
    xhandlers
    flags 
    probability 4579310214740306367
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1082 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-173331 - -8723] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1079 
values: i1081 i1086 i1088 i1090 i1102 i1104 i1106 i1108 i1110 i1112 i1114 i1116 i1118 i1122 i1124 i1126 i1090 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1079 values: i1081 i1086 i1088 i1090 i1102 i1104 i1106 i1108 i1110 i1112 i1114 i1116 i1118 i1122 i1124 i1126 i1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1080 v1085 v1087 v1089 v1101 v1103 v1105 v1107 v1109 v1111 v1113 v1115 v1117 v1121 v1123 v1125 v1139 
=== Succesors ===
next: v1084 
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1080 v1085 v1087 v1089 v1101 v1103 v1105 v1107 v1109 v1111 v1113 v1115 v1117 v1121 v1123 v1125 v1139 #next: v1084  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1082 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1082 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid i1078 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163123
stableDimension: 0
stamp: i32 [-163123] ⇊00000000fffd82cd ⇈00000000fffd82cd
stampKind: i32
value: int[-163123|0xfffffffffffd82cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i1078 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i1078 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 269]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 270]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid a1070 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@328802343
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@328802343]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1069 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113947
stableDimension: 0
stamp: i32 [-113947] ⇊00000000fffe42e5 ⇈00000000fffe42e5
stampKind: i32
value: int[-113947|0xfffffffffffe42e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i1069 
speculation: a1070 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i1069 speculation: a1070  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v66 v1628 v436 ?12 ?20 ?194 ?73 ?128 ?207 ?983 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?207 ?12 ?20 ?73 v634 ?128 v590 v625 ?194 v624 ?983 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v436 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?207 ?12 ?20 ?73 v40 v1642 ?194 ?128 ?983 v1641 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2494
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 - - - - - - - 
=== Succesors ===
=== Usages ===
v1059 v1678 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v707 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v707 #falseSuccessor: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23a66d66 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid a1056 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@958549472
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@958549472]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1055 <|@
result int[-151315|0xfffffffffffdb0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151315
stableDimension: 0
stamp: i32 [-151315] ⇊00000000fffdb0ed ⇈00000000fffdb0ed
stampKind: i32
value: int[-151315|0xfffffffffffdb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1055 
speculation: a1056 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1055 speculation: a1056  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@958549472] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -151315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1597 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1597  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1597 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
=== Succesors ===
next: v1678 
=== Usages ===
v1678 
=== Predecessor ===
v705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1628 #next: v1678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1597 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a1597 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1597 #next: a11  <|@  <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
returnStamp: a [Ljava/lang/Object; (unchecked=a [Ljava/util/Formatter$FormatString;)
signature: [Ljdk.vm.ci.meta.JavaType;@204fdd9e
stamp: void
targetMethod: HotSpotMethod<Formatter.parse(String)>
=== Inputs ===
arguments: a1 a3 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2497) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 ?12 i17 i18 i43 ?983 ?983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?983 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Formatter.parse
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v436 
stateDuring: ?983 
=== Succesors ===
next: i1598 
=== Usages ===
?12 ?20 v1630 v1629 ?73 ?128 ?207 ?194 
=== Predecessor ===
v1678 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v436 stateDuring: ?983 #next: i1598  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - a11 
=== Succesors ===
=== Usages ===
v1067 i1598 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - - a11  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
result [v6|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i1598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1598 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1629 
=== Succesors ===
next: v1593 
=== Usages ===
v22 j684 v698 
=== Predecessor ===
a11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1629 #next: v1593  <|@  <|@
f <@~|@floating>@ <|@
tid j684 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1598 
=== Succesors ===
=== Usages ===
j688 v690 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1598  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j688 j1501 j1552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j684 
y: j687 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j684 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j688 
y: j684 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j688 y: j684  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v117 v196 v209 a1207 v698 v375 v388 v542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v690 
=== Succesors ===
trueSuccessor: v1589 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
i1598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v690 #trueSuccessor: v1589 #falseSuccessor: v1592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1587 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1587  <|@  <|@
f <@*|@fixed>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
v1589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B113" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1598 
y: i13 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1598 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v698 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v719 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v698 #trueSuccessor: v1590 #falseSuccessor: v719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1588 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1588  <|@  <|@
f <@*|@fixed>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1587 v1588 
=== Succesors ===
next: i1599 
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1587 v1588 #next: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v1641 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i1599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1599 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 154]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1641 
=== Succesors ===
next: v15 
=== Usages ===
i43 v597 
=== Predecessor ===
v1586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1641 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1599 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1599 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
result meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1293 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
result meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v590 v1076 v1084 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i64 v340 i371 v384 i1183 i1596 i1595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.index(Formatter.java:2593) [bci: 0]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1280 v1594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
result meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
i1599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], int[-1|0xffffffffffffffff], int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B101" "B76" "B84" "B104" "B79" "B102" 
    successors "B8" "B112" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616890898301560631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i17 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i17 i17 i38 i17 i38 
=== Succesors ===
=== Usages ===
?20 ?73 ?207 i17 i17 ?194 i17 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i17 i17 i38 i17 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i18 i18 i38 i18 i38 
=== Succesors ===
=== Usages ===
?20 ?73 i38 ?207 i18 i18 ?194 i18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i18 i18 i38 i18 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i13 i64 i1596 i1596 i1595 i1596 i64 
=== Succesors ===
=== Usages ===
?20 v22 v1630 ?73 ?128 ?207 i64 ?194 i1595 i1596 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i13 i64 i1596 i1596 i1595 i1596 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.622861981371719
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v15 
=== Succesors ===
next: v27 
=== Usages ===
i17 i18 i19 v25 v65 v67 v275 v276 v277 v408 v819 v814 v809 v769 v799 v729 v794 v789 v784 v779 v774 v759 v764 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v15 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1598 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i1598  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
stamp: void
trueSuccessorProbability: 0.783683786357975
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|DWORD, v14|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.783683786357975 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1600 
=== Usages ===
v696 
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1600  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1586 v23 
=== Succesors ===
=== Usages ===
a1600 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1586 v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
result [v6|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a11 
index: i19 
=== Succesors ===
=== Usages ===
a1600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1600 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v696 
address: v1630 
=== Succesors ===
next: v1601 
=== Usages ===
a452 v1647 v1631 v1633 v1639 v1640 v1684 v1685 v1686 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v696 address: v1630 #next: v1601  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2502
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
v1076 v1601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1647 <|@
result [v15|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1647 
=== Succesors ===
next: v86 
=== Usages ===
v1282 v1280 v1594 
=== Predecessor ===
a1600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1647 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1601 
y: v1281 
=== Succesors ===
=== Usages ===
v775 v86 v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1601 y: v1281  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 0.5392324044009438
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v79 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5392324044009438 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611476891873793690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1602 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1602  <|@  <|@
f <@~|@floating>@ <|@
tid v1686 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1602 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.index
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.index(Formatter.java:2636) [bci: 1]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1686 
=== Succesors ===
next: v80 
=== Usages ===
i75 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1686 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
i1602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1601 
y: v1279 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1601 y: v1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1594 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1594 #trueSuccessor: v726 #falseSuccessor: v729  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-2|0xfffffffffffffffe]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v72 
values: i1602 i114 
=== Succesors ===
=== Usages ===
?73 v32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v72 values: i1602 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v92 
=== Succesors ===
next: v32 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v92 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1600 
=== Succesors ===
=== Usages ===
v634 ?73 v625 v624 v590 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1600  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a452 - - i75 
=== Succesors ===
=== Usages ===
v1084 a1207 a1604 v1679 v1680 v1681 i1609 v1622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a452 - - i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@34590419
keySuccessors: [I@1f3f123f
keys: [I@457d81e7
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
value: i75 
=== Succesors ===
successors: v33 v35 v36 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i75 #successors: v33 v35 v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v18|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4285714285714284] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609671356259498517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1601 
y: v1279 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1601 y: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid i1596 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 i19 i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.8270591525660747
=== Inputs ===
condition: v1280 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1280 #trueSuccessor: v134 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8270591525660747 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608462060969985249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1603 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1631 <|@
result [v15|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
a1603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1603 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1631 
=== Succesors ===
next: a1604 
=== Usages ===
v1632 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1631 #next: a1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
result [v21|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1603 
=== Succesors ===
=== Usages ===
a1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1632 
=== Succesors ===
next: v1679 
=== Usages ===
a462 v1679 v1636 v1637 v1648 a1683 
=== Predecessor ===
a1603 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1632 #next: v1679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1604 
=== Succesors ===
next: a1605 
=== Usages ===
=== Predecessor ===
a1604 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1604 #next: a1605  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
a1605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1605 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1633 
=== Succesors ===
next: v1680 
=== Usages ===
a465 v1680 v1634 a1682 
=== Predecessor ===
v1679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1633 #next: v1680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1605 
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
a1605 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1605 #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1648 <|@
result [v22|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1604 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1606 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1648 
=== Succesors ===
next: v244 
=== Usages ===
v1286 v1284 
=== Predecessor ===
v1680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1648 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1606 
y: v1283 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1606 y: v1283  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?266 ?261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5915997706422018
=== Inputs ===
condition: v1284 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1284 #trueSuccessor: v237 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v15|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v22|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v23|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v22|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5915997706422018 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605017948587023926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1607 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1607  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
result [v23|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1605 
=== Succesors ===
=== Usages ===
a1607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1607 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1634 
=== Succesors ===
next: v1681 
=== Usages ===
a470 v1681 v1635 
=== Predecessor ===
v237 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1634 #next: v1681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1607 
=== Succesors ===
next: a1608 
=== Usages ===
=== Predecessor ===
a1607 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1607 #next: a1608  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
result [v22|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1604 
=== Succesors ===
=== Usages ===
a1608 v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1608 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1637 
=== Succesors ===
next: i1609 
=== Usages ===
a480 v1645 v1638 
=== Predecessor ===
v1681 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1637 #next: i1609  <|@  <|@
f <@~|@floating>@ <|@
tid v1638 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1608 
=== Succesors ===
=== Usages ===
i1609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1609 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1638 
=== Succesors ===
next: i1610 
=== Usages ===
i339 i371 i1031 i513 v1009 
=== Predecessor ===
a1608 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1638 #next: i1610  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
result [v25|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1607 
=== Succesors ===
=== Usages ===
i1610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1610 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1635 
=== Succesors ===
next: i1611 
=== Usages ===
i322 i513 ?354 i560 j1265 
=== Predecessor ===
i1609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1635 #next: i1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
result [v22|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1604 
=== Succesors ===
=== Usages ===
i1611 v486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1611 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1636 
=== Succesors ===
next: v343 
=== Usages ===
i322 j1261 v542 v561 v514 
=== Predecessor ===
i1610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1636 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1611 
y: i13 
=== Succesors ===
=== Usages ===
v548 v501 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1611 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1610 
y: i1611 
=== Succesors ===
=== Usages ===
v486 i339 i374 i652 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1610 y: i1611  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i322 
y: i1609 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i322 y: i1609  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i339 
y: i37 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i339 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9359365262882174
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
i1611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v23|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v25|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9359365262882174 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604579579594941083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i1090 <|@
result int[-132961|0xfffffffffffdf89f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132961
stableDimension: 0
stamp: i32 [-132961] ⇊00000000fffdf89f ⇈00000000fffdf89f
stampKind: i32
value: int[-132961|0xfffffffffffdf89f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v500 
falseSuccessor: v496 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v500 #falseSuccessor: v496  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574847603017253725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@*|@fixed>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v500 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132961|0xfffffffffffdf89f]] destination: B17 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604515535994444436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i513 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1609 
y: i1610 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1609 y: i1610  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i513 
y: i1611 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i513 y: i1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v517 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v27|DWORD, ~y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574765627208618017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132961|0xfffffffffffdf89f]] destination: B19 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604452132829952756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid a480 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1608 
=== Succesors ===
=== Usages ===
a989 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1608  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1609 
y: i37 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1609 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i371 
y: i372 
=== Succesors ===
=== Usages ===
i374 i652 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i371 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i373 
y: i322 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i373 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i374 
y: i13 
=== Succesors ===
=== Usages ===
i652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i374 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v375 
trueValue: i322 
falseValue: i373 
=== Succesors ===
=== Usages ===
i560 j1296 v384 i387 v1192 v1009 i1031 a1207 v1234 i1183 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v375 trueValue: i322 falseValue: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i652 
y: i37 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i652 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v759 #falseSuccessor: v756  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v34|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v35|DWORD, ~y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v35|DWORD, ~trueValue: v30|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
result int[-135699|0xfffffffffffdeded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135699
stableDimension: 0
stamp: i32 [-135699] ⇊00000000fffdeded ⇈00000000fffdeded
stampKind: i32
value: int[-135699|0xfffffffffffdeded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135699|0xfffffffffffdeded]] destination: B22 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i386 
y: i652 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i386 y: i652  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i13 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i387 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v764 #falseSuccessor: v761  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v38|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid i1104 <|@
result int[-135955|0xfffffffffffdeced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135955
stableDimension: 0
stamp: i32 [-135955] ⇊00000000fffdeced ⇈00000000fffdeced
stampKind: i32
value: int[-135955|0xfffffffffffdeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135955|0xfffffffffffdeced]] destination: B24 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1186 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1186 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1231 
=== Usages ===
v1649 v1650 
=== Predecessor ===
v761 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1186 
index: - 
=== Succesors ===
=== Usages ===
j1231 v1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1231 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1649 
=== Succesors ===
next: j1232 
=== Usages ===
j1190 v1651 v1652 a1206 v1657 v1653 v1654 v1655 v1656 
=== Predecessor ===
j1186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1649 #next: j1232  <|@  <|@
f <@~|@floating>@ <|@
tid v1650 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1186 
index: - 
=== Succesors ===
=== Usages ===
j1232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1186 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1232 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1195 
=== Usages ===
v1196 
=== Predecessor ===
j1231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid i1191 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i652 
y: i1191 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i652 y: i1191  <|@  <|@
f <@~|@floating>@ <|@
tid j1182 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1235 v1307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1192 
=== Succesors ===
trueSuccessor: v1194 
falseSuccessor: v1193 
=== Usages ===
=== Predecessor ===
j1232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1192 #trueSuccessor: v1194 #falseSuccessor: v1193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586473334521787367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1202  <|@  <|@
f <@~|@floating>@ <|@
tid i1183 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i652 
y: i37 
=== Succesors ===
=== Usages ===
i1215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i652 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1214 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1215 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1183 
y: i1214 
=== Succesors ===
=== Usages ===
i1185 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1183 y: i1214  <|@  <|@
f <@~|@floating>@ <|@
tid i1184 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1185 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1215 
y: i1184 
=== Succesors ===
=== Usages ===
j1189 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1215 y: i1184  <|@  <|@
f <@~|@floating>@ <|@
tid j1189 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1185 
=== Succesors ===
=== Usages ===
j1190 v1653 v1654 v1655 v1656 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1185  <|@  <|@
f <@~|@floating>@ <|@
tid j1190 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
x: j1189 
y: j1231 
=== Succesors ===
=== Usages ===
v1196 v1233 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1189 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1232 
y: j1190 
=== Succesors ===
=== Usages ===
v1202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1232 y: j1190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1196 
=== Succesors ===
trueSuccessor: v1201 
falseSuccessor: v1200 
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1196 #trueSuccessor: v1201 #falseSuccessor: v1200  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556715640906271924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
v1202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1199  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
v1201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586410209386927438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1233 
=== Usages ===
=== Predecessor ===
v1202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1649 
value: j1190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1649 value: j1190 stateAfter: - lastLocationAccess: - #next: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1653 <|@
result [v45|QWORD + v40|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1653 
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1653 #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1654 <|@
result [v45|QWORD + v40|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1654 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1654 #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1655 <|@
result [v45|QWORD + v40|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1655 
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1655 #next: v1229  <|@  <|@
f <@~|@floating>@ <|@
tid v1656 <|@
result [v45|QWORD + v40|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1189 
index: j1231 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1189 index: j1231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1656 
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1656 #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1651 <|@
result [v40|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1231 
index: - 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1231 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1651 
value: i652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1235 
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1651 value: i652 stateAfter: - lastLocationAccess: - #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid v1652 <|@
result [v40|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1231 
index: - 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1231 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1652 
value: j1182 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1652 value: j1182 stateAfter: - lastLocationAccess: - #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
result [v40|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1231 
index: - 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1231 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1287 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1657 
value: v1287 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1205 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1657 value: v1287 stateAfter: - lastLocationAccess: - #next: v1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1206 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1206 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1231 
=== Succesors ===
next: v1208 
=== Usages ===
a1211 
=== Predecessor ===
v1205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1231 #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
a1206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572261145252343329
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@*|@fixed>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
v1193 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572766146331222764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1197 v1199 
=== Succesors ===
next: a1207 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1197 v1199 #next: a1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1207 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1181 i652 i13 
=== Succesors ===
next: v1210 
=== Usages ===
a1211 
=== Predecessor ===
v1198 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1181 i652 i13 #next: v1210  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
a1207 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1211 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1209 
values: a1206 a1207 
=== Succesors ===
=== Usages ===
v1662 a1038 v1646 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1209 values: a1206 a1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1208 v1210 
=== Succesors ===
next: v1437 
=== Usages ===
a1211 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1208 v1210 #next: v1437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1310 
=== Usages ===
j1438 j1440 
=== Predecessor ===
v1209 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1609 
y: i652 
=== Succesors ===
=== Usages ===
i1031 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1609 y: i652  <|@  <|@
f <@~|@floating>@ <|@
tid i1031 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1009 
trueValue: i1609 
falseValue: i652 
=== Succesors ===
=== Usages ===
j1297 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1009 trueValue: i1609 falseValue: i652  <|@  <|@
f <@~|@floating>@ <|@
tid j1297 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1031 
=== Succesors ===
=== Usages ===
j1501 v1662 j1301 v1307 v1434 j1484 j1490 j1494 j1498 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1297 
y: j1182 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1297 y: j1182  <|@  <|@
f <@~|@floating>@ <|@
tid j1443 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1457 j1519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1497 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1498 j1549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1465 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1466 j1525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1493 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1494 j1546 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1174 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1531 j1474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1489 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1490 j1543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1537 j1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1483 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1484 j1538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1218 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1526 v1539 j1467 j1475 v1485 j1532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1307 
=== Succesors ===
trueSuccessor: v1308 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1307 #trueSuccessor: v1308 #falseSuccessor: v1309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v37|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1327 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
v1308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1313  <|@  <|@
f <@~|@floating>@ <|@
tid v1646 <|@
result [v50|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1211 
index: - 
=== Succesors ===
=== Usages ===
j1440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1440 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1437 
address: v1646 
=== Succesors ===
=== Usages ===
v1663 v1665 v1667 v1669 v1671 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1437 address: v1646  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
result [v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1608 
=== Succesors ===
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1608  <|@  <|@
f <@~|@floating>@ <|@
tid j1438 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1437 
address: v1645 
=== Succesors ===
=== Usages ===
v1664 v1666 v1668 v1670 v1672 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1437 address: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid j1484 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1297 
y: j1483 
=== Succesors ===
=== Usages ===
v1485 v1487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1484 
y: j1218 
=== Succesors ===
=== Usages ===
v1313 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1484 y: j1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1485 
=== Succesors ===
trueSuccessor: v1311 
falseSuccessor: v1312 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1485 #trueSuccessor: v1311 #falseSuccessor: v1312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v50|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = LEA [v26|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
v1311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1314 
=== Usages ===
=== Predecessor ===
v1313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1475 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1315 
values: j1218 j1482 
=== Succesors ===
=== Usages ===
v1672 j1482 v1671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1315 values: j1218 j1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1314 
=== Succesors ===
next: v1612 
=== Usages ===
v1612 v1319 v1320 j1475 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1314 #next: v1612  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
result [v54|QWORD[*] + v56|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1475 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1612 <|@
result v57|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1315 
address: v1672 
=== Succesors ===
next: v1570 
=== Usages ===
v1570 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1315 address: v1672 #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
result [v53|QWORD[.] + v56|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1475 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1671 
value: v1612 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1671 value: v1612 stateAfter: - lastLocationAccess: - #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid j1482 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1475 
y: j431 
=== Succesors ===
=== Usages ===
j1467 j1475 v1487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1475 y: j431  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1484 
y: j1482 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1484 y: j1482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1487 
=== Succesors ===
trueSuccessor: v1319 
falseSuccessor: v1321 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1487 #trueSuccessor: v1319 #falseSuccessor: v1321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V256_WORD = H [v54|QWORD[*] + v56|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v56|QWORD * 2], input: v57|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1315 
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1315 #next: v1325  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1324 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1467 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1324 
values: j1218 j1482 
=== Succesors ===
=== Usages ===
v1670 j1474 j1458 v1491 v1669 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1324 values: j1218 j1482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1323 v1325 
=== Succesors ===
next: v1347 
=== Usages ===
j1467 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1323 v1325 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid j1490 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1297 
y: j1489 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1490 
y: j1467 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1490 y: j1467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1491 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1491 #trueSuccessor: v1346 #falseSuccessor: v1345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
v1613 
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@~|@floating>@ <|@
tid v1670 <|@
result [v54|QWORD[*] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1467 
=== Succesors ===
=== Usages ===
v1613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
result v61|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1345 
address: v1670 
=== Succesors ===
next: v1568 
=== Usages ===
v1568 
=== Predecessor ===
v1345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1345 address: v1670 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1669 <|@
result [v53|QWORD[.] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1467 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1669 
value: v1613 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1334 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1669 value: v1613 stateAfter: - lastLocationAccess: - #next: v1334  <|@  <|@
f <@~|@floating>@ <|@
tid j1474 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1467 
y: j1174 
=== Succesors ===
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1467 y: j1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V128_WORD = H [v54|QWORD[*] + v59|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v59|QWORD * 2], input: v61|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1458 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1335 
values: j1474 j1467 
=== Succesors ===
=== Usages ===
v1668 j1466 j1450 v1495 v1667 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1335 values: j1474 j1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1334 v1350 
=== Succesors ===
next: v1353 
=== Usages ===
j1458 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1334 v1350 #next: v1353  <|@  <|@
f <@~|@floating>@ <|@
tid j1494 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1297 
y: j1493 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1494 
y: j1458 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1494 y: j1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1495 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1495 #trueSuccessor: v1352 #falseSuccessor: v1351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v52|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1614 
=== Usages ===
v1614 
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1614  <|@  <|@
f <@~|@floating>@ <|@
tid v1668 <|@
result [v54|QWORD[*] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1458 
=== Succesors ===
=== Usages ===
v1614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1614 <|@
result v65|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1351 
address: v1668 
=== Succesors ===
next: v1566 
=== Usages ===
v1566 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1351 address: v1668 #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid v1667 <|@
result [v53|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1458 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1667 
value: v1614 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1667 value: v1614 stateAfter: - lastLocationAccess: - #next: v1338  <|@  <|@
f <@~|@floating>@ <|@
tid j1466 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1458 
y: j1465 
=== Succesors ===
=== Usages ===
j1450 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1458 y: j1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V64_WORD = H [v54|QWORD[*] + v63|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v63|QWORD * 2], input: v65|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1450 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1339 
values: j1466 j1458 
=== Succesors ===
=== Usages ===
v1666 j1457 j1441 v1499 v1665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1339 values: j1466 j1458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1338 v1356 
=== Succesors ===
next: v1359 
=== Usages ===
j1450 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1338 v1356 #next: v1359  <|@  <|@
f <@~|@floating>@ <|@
tid j1498 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1297 
y: j1497 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1498 
y: j1450 
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1498 y: j1450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1499 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1499 #trueSuccessor: v1358 #falseSuccessor: v1357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v52|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
v1358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
v1615 
=== Predecessor ===
v1359 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
result [v54|QWORD[*] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1450 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
result v69|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1357 
address: v1666 
=== Succesors ===
next: v1564 
=== Usages ===
v1564 
=== Predecessor ===
v1357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1357 address: v1666 #next: v1564  <|@  <|@
f <@~|@floating>@ <|@
tid v1665 <|@
result [v53|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1450 
=== Succesors ===
=== Usages ===
v1564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1665 
value: v1615 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1665 value: v1615 stateAfter: - lastLocationAccess: - #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1450 
y: j1443 
=== Succesors ===
=== Usages ===
j1441 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1450 y: j1443  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
v1564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = H [v54|QWORD[*] + v67|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v67|QWORD * 2], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1441 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1342 
values: j1457 j1450 
=== Succesors ===
=== Usages ===
v1664 v1502 v1663 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1342 values: j1457 j1450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1341 v1362 
=== Succesors ===
next: v1365 
=== Usages ===
j1441 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1341 v1362 #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid j1501 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1297 
y: j687 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1297 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1501 
y: j1441 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1501 y: j1441  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1502 
=== Succesors ===
trueSuccessor: v1364 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1502 #trueSuccessor: v1364 #falseSuccessor: v1363  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1368 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1616 
=== Usages ===
i1616 
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1616  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
result [v54|QWORD[*] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1438 
index: j1441 
=== Succesors ===
=== Usages ===
i1616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1438 index: j1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1616 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1363 
address: v1664 
=== Succesors ===
next: v1562 
=== Usages ===
v1562 
=== Predecessor ===
v1363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1363 address: v1664 #next: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid v1663 <|@
result [v53|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1440 
index: j1441 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1440 index: j1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1663 
value: i1616 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
i1616 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1663 value: i1616 stateAfter: - lastLocationAccess: - #next: v1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1328 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVSX [v54|QWORD[*] + v71|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v71|QWORD * 2], y: v73|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1327 v1344 v1368 
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1327 v1344 v1368 #next: v1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1375 
=== Usages ===
j1507 
=== Predecessor ===
v1328 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i652 
=== Succesors ===
=== Usages ===
j1301 v1434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i652  <|@  <|@
f <@~|@floating>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1297 
y: j1296 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1297 y: j1296  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1434 
=== Succesors ===
trueSuccessor: v1374 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1434 #trueSuccessor: v1374 #falseSuccessor: v1373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v1662 <|@
result [v50|QWORD[.] + v52|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1211 
index: j1297 
=== Succesors ===
=== Usages ===
j1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1211 index: j1297  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1505 
address: v1662 
=== Succesors ===
=== Usages ===
v1673 v1674 v1675 v1676 v1677 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1505 address: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1296 
y: j1297 
=== Succesors ===
=== Usages ===
j1552 j1538 j1543 j1546 j1549 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1296 y: j1297  <|@  <|@
f <@~|@floating>@ <|@
tid j1538 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1301 
y: j1483 
=== Succesors ===
=== Usages ===
v1539 v1541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1538 
y: j1218 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1538 y: j1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1539 
=== Succesors ===
trueSuccessor: v1376 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1539 #trueSuccessor: v1376 #falseSuccessor: v1377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = LEA [v50|QWORD[.] + v52|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1387  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
result v78|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1532 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1380 
values: j1218 j1537 
=== Succesors ===
=== Usages ===
v1677 j1537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1380 values: j1218 j1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1379 
=== Succesors ===
next: v1580 
=== Usages ===
j1532 v1383 v1384 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1379 #next: v1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1677 <|@
result [v75|QWORD[.] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1532 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
value: v1581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1677 value: v1581 stateAfter: - lastLocationAccess: - #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid j1537 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1532 
y: j431 
=== Succesors ===
=== Usages ===
j1526 j1532 v1541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1532 y: j431  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1538 
y: j1537 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1538 y: j1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1541 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1541 #trueSuccessor: v1383 #falseSuccessor: v1385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v79|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v79|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1380 
=== Succesors ===
next: v1389 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1380 #next: v1389  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1388 
=== Predecessor ===
v1383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1526 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1388 
values: j1218 j1537 
=== Succesors ===
=== Usages ===
v1676 j1531 j1520 v1544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1388 values: j1218 j1537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1387 v1389 
=== Succesors ===
next: v1410 
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1387 v1389 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1543 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1301 
y: j1489 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1543 
y: j1526 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1543 y: j1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1544 
=== Succesors ===
trueSuccessor: v1409 
falseSuccessor: v1408 
=== Usages ===
=== Predecessor ===
v1388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1544 #trueSuccessor: v1409 #falseSuccessor: v1408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v76|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v1676 <|@
result [v75|QWORD[.] + v81|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1526 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
result v83|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1676 
value: v1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1676 value: v1585 stateAfter: - lastLocationAccess: - #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1531 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1526 
y: j1174 
=== Succesors ===
=== Usages ===
j1520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j1174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
v1579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v81|QWORD * 2], input: v83|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1520 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1399 
values: j1531 j1526 
=== Succesors ===
=== Usages ===
v1675 j1525 j1514 v1547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1399 values: j1531 j1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1398 v1413 
=== Succesors ===
next: v1416 
=== Usages ===
j1520 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1398 v1413 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid j1546 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1301 
y: j1493 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1546 
y: j1520 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1546 y: j1520  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1547 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1547 #trueSuccessor: v1415 #falseSuccessor: v1414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v76|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1419 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1419  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1577 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1675 <|@
result [v75|QWORD[.] + v85|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1520 
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1520  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
result v87|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1675 
value: v1584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1675 value: v1584 stateAfter: - lastLocationAccess: - #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid j1525 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1520 
y: j1465 
=== Succesors ===
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1520 y: j1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
v1577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v85|QWORD * 2], input: v87|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v85|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1514 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1402 
values: j1525 j1520 
=== Succesors ===
=== Usages ===
v1674 j1519 j1508 v1550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1402 values: j1525 j1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1401 v1419 
=== Succesors ===
next: v1422 
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1401 v1419 #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid j1549 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1301 
y: j1497 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1549 
y: j1514 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1549 y: j1514  <|@  <|@
f <@*|@fixed>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1550 
=== Succesors ===
trueSuccessor: v1421 
falseSuccessor: v1420 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1550 #trueSuccessor: v1421 #falseSuccessor: v1420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v76|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1425 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
v1421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
result [v75|QWORD[.] + v89|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1514 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
result v91|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
value: v1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1674 value: v1583 stateAfter: - lastLocationAccess: - #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid j1519 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1514 
y: j1443 
=== Succesors ===
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1514 y: j1443  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
v1575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v89|QWORD * 2], input: v91|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1508 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1405 
values: j1519 j1514 
=== Succesors ===
=== Usages ===
v1673 v1553 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1405 values: j1519 j1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1404 v1425 
=== Succesors ===
next: v1428 
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1404 v1425 #next: v1428  <|@  <|@
f <@~|@floating>@ <|@
tid j1552 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1301 
y: j687 
=== Succesors ===
=== Usages ===
v1553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1301 y: j687  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1552 
y: j1508 
=== Succesors ===
=== Usages ===
v1428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1552 y: j1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1553 
=== Succesors ===
trueSuccessor: v1427 
falseSuccessor: v1426 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1553 #trueSuccessor: v1427 #falseSuccessor: v1426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = DEC v76|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1573 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1573  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
result [v75|QWORD[.] + v93|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1507 
index: j1508 
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1507 index: j1508  <|@  <|@
f <@~|@floating>@ <|@
tid i1582 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
value: i1582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1407 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1673 value: i1582 stateAfter: - lastLocationAccess: - #next: v1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v93|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1380 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1392 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1391 v1407 v1431 
=== Succesors ===
next: a1038 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1391 v1407 v1431 #next: a1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1038 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1211 
=== Succesors ===
next: v533 
=== Usages ===
a989 a532 
=== Predecessor ===
v1392 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1211 #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid a532 <|@
result v95|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a1038 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1637 
value: a532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1246 
=== Usages ===
=== Predecessor ===
a1038 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1637 value: a532 stateAfter: - lastLocationAccess: - #next: j1246  <|@  <|@
f <@~|@floating>@ <|@
tid a462 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
j1246 ?258 ?336 ?274 ?354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1246 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a462 
=== Succesors ===
next: v1252 
=== Usages ===
j1248 
=== Predecessor ===
v533 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a462 #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid i1247 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1248 <|@
result v97|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1246 
y: i1247 
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1246 y: i1247  <|@  <|@
f <@~|@floating>@ <|@
tid j1251 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
result [v97|QWORD[*] + v98|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1248 
index: j1251 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1248 index: j1251  <|@  <|@
f <@~|@floating>@ <|@
tid i1253 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1658 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
j1246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1658 value: i1253 stateAfter: - lastLocationAccess: - #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v547 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v547 #falseSuccessor: v543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|DWORD[.] * 8 + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[*] = SHR v96|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v97|QWORD[*] + v98|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557613420602057587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587104585870386661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i560 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i652 
y: i1610 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i652 y: i1610  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i1611 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i560 y: i1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v564 #falseSuccessor: v562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SUB (x: v37|DWORD, ~y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557523642632479021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562072131244638800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v546 v563 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v546 v563 #next: v566  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: - - - 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a465 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1605 
=== Succesors ===
=== Usages ===
?354 ?258 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1605  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?261 
values: a462 a465 
=== Succesors ===
=== Usages ===
?274 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?261 values: a462 a465  <|@  <|@
tid ?274 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?258 
values: a462 - 
=== Succesors ===
=== Usages ===
?291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?258 values: a462 -  <|@  <|@
tid ?291 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?274 
values: - - 
=== Succesors ===
=== Usages ===
?314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?274 values: - -  <|@  <|@
tid ?314 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?291 
values: - - 
=== Succesors ===
=== Usages ===
?336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?291 values: - -  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?314 
values: a462 - 
=== Succesors ===
=== Usages ===
?354 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a462 -  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?336 
values: a462 a465 i1610 
=== Succesors ===
=== Usages ===
?351 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?336 values: a462 a465 i1610  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?354 
values: - - 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?354 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?351 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -144993 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v96|QWORD[.] v100|QWORD[.] v28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v96|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v96|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v96|QWORD[.] v100|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587035148222040739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604881778279093150
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a989 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v424 
values: a1038 a480 
=== Succesors ===
=== Usages ===
j1260 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v424 values: a1038 a480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v423 v426 
=== Succesors ===
next: j1256 
=== Usages ===
a989 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v423 v426 #next: j1256  <|@  <|@
f <@~|@floating>@ <|@
tid a470 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1607 
=== Succesors ===
=== Usages ===
j1256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1256 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a470 
=== Succesors ===
next: j1260 
=== Usages ===
v1659 
=== Predecessor ===
v424 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a470 #next: j1260  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1260 <|@
result v104|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a989 
=== Succesors ===
next: v1266 
=== Usages ===
v1660 
=== Predecessor ===
j1256 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a989 #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid v1659 <|@
result [v103|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1256 
index: - 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1256 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1261 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1611 
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1660 <|@
result [v104|QWORD[*] + v105|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1260 
index: j1261 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1260 index: j1261  <|@  <|@
f <@~|@floating>@ <|@
tid j1265 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1610 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1659 v1660 j1265 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
j1260 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1659 v1660 j1265 #next: v486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1636 
value: i322 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1636 value: i322 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2531) [bci: 252]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v101|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v105|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v106|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|DWORD[.] * 8 + 12], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v20|DWORD] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1315 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B77 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1606 
y: v1285 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1606 y: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1286 
=== Succesors ===
trueSuccessor: v766 
falseSuccessor: v769 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1286 #trueSuccessor: v766 #falseSuccessor: v769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid a1683 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
v579 ?301 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@~|@floating>@ <|@
tid a1682 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1605 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1605  <|@  <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1b0007fb
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a1683 a1682 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1683 a1682  <|@  <|@
tid ?266 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: - - - 
=== Succesors ===
=== Usages ===
?287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: - - -  <|@  <|@
tid ?287 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?266 
values: - - 
=== Succesors ===
=== Usages ===
?301 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?266 values: - -  <|@  <|@
tid ?301 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 1065
stackSize: 0
=== Inputs ===
outerFrameState: ?287 
values: a1683 - 
=== Succesors ===
=== Usages ===
?985 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?287 values: a1683 -  <|@  <|@
tid ?985 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 669
stackSize: 0
=== Inputs ===
outerFrameState: ?301 
values: - - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?301 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v579 
stateDuring: ?985 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v579 stateDuring: ?985 #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: v107|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v20|DWORD] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid i1106 <|@
result int[-147763|0xfffffffffffdbecd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147763
stableDimension: 0
stamp: i32 [-147763] ⇊00000000fffdbecd ⇈00000000fffdbecd
stampKind: i32
value: int[-147763|0xfffffffffffdbecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147763|0xfffffffffffdbecd]] destination: B80 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v771 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v771 #falseSuccessor: v774  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1617 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1617  <|@  <|@
f <@~|@floating>@ <|@
tid v1639 <|@
result [v15|DWORD[.] * 8 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1617 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1639 
=== Succesors ===
next: v780 
=== Usages ===
i584 
=== Predecessor ===
v771 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1639 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid i584 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1617 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1617  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i584 
y: i13 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i584 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v776 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
i1617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v776 #falseSuccessor: v779  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v109|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1618 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1618  <|@  <|@
f <@~|@floating>@ <|@
tid v1640 <|@
result [v15|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1618 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1640 
=== Succesors ===
next: v206 
=== Usages ===
i589 
=== Predecessor ===
v776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1640 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1618 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@6705a14e
keySuccessors: [I@ccf97b
keys: [I@2917223c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: i589 
=== Succesors ===
successors: v201 v200 
=== Usages ===
=== Predecessor ===
i1618 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i589 #successors: v201 v200  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v110|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@32b3c73a
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a452 a39 a2 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 a39 a2  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?984 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
tid ?984 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?207 
values: - - - 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?207 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v590 
stateDuring: ?984 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v590 stateDuring: ?984 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v20|DWORD] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid i1086 <|@
result int[-50963|0xffffffffffff38ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] ⇊00000000ffff38ed ⇈00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B85 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid i1110 <|@
result int[-149779|0xfffffffffffdb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B86 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1107 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid i1108 <|@
result int[-148531|0xfffffffffffdbbcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148531
stableDimension: 0
stamp: i32 [-148531] ⇊00000000fffdbbcd ⇈00000000fffdbbcd
stampKind: i32
value: int[-148531|0xfffffffffffdbbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148531|0xfffffffffffdbbcd]] destination: B87 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid i1081 <|@
result int[-8723|0xffffffffffffdded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B88 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v785 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: i32
=== Inputs ===
x: i18 
y: i37 
=== Succesors ===
=== Usages ===
v44 v1642 ?128 ?128 i17 i18 i17 i17 i18 i18 v597 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i38 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v784 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v784 #falseSuccessor: v781  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid i1112 <|@
result int[-152339|0xfffffffffffdaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152339
stableDimension: 0
stamp: i32 [-152339] ⇊00000000fffdaced ⇈00000000fffdaced
stampKind: i32
value: int[-152339|0xfffffffffffdaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v784 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152339|0xfffffffffffdaced]] destination: B90 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1599 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1599  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v789 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v786 #falseSuccessor: v789  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v795 
=== Usages ===
a1621 
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v791 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v791 #falseSuccessor: v794  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1619 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1619  <|@  <|@
f <@~|@floating>@ <|@
tid v1685 <|@
result [v15|DWORD[.] * 8 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1619 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1685 
=== Succesors ===
next: v800 
=== Usages ===
i609 
=== Predecessor ===
v791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1685 #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1619 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1619  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i13 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i609 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v796 
falseSuccessor: v799 
=== Usages ===
=== Predecessor ===
i1619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v796 #falseSuccessor: v799  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v112|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1620 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1620  <|@  <|@
f <@~|@floating>@ <|@
tid v1684 <|@
result [v15|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1600 
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1620 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1684 
=== Succesors ===
next: v127 
=== Usages ===
i613 
=== Predecessor ===
v796 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1684 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1620 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@6705a14e
keySuccessors: [I@ccf97b
keys: [I@2917223c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
value: i613 
=== Succesors ===
successors: v122 v121 
=== Usages ===
=== Predecessor ===
i1620 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i613 #successors: v122 v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1621 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1621  <|@  <|@
f <@~|@floating>@ <|@
tid v1642 <|@
result [v3|QWORD[.] + v111|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a4 
index: i38 
=== Succesors ===
=== Usages ===
a1621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1621 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v786 
address: v1642 
=== Succesors ===
next: v1622 
=== Usages ===
v1661 v1644 v1643 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v786 address: v1642 #next: v1622  <|@  <|@
f <@~|@floating>@ <|@
tid v1661 <|@
result [v114|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1621 
=== Succesors ===
=== Usages ===
v1622 v1623 v1624 v1626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1622 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1661 
=== Succesors ===
next: v1145 
=== Usages ===
v1289 
=== Predecessor ===
a1621 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1661 #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1622 
y: v1288 
=== Succesors ===
=== Usages ===
v1145 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1622 y: v1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1289 
=== Succesors ===
trueSuccessor: v809 
falseSuccessor: v1142 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1289 #trueSuccessor: v809 #falseSuccessor: v1142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v3|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid i1122 <|@
result int[-157459|0xfffffffffffd98ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157459
stableDimension: 0
stamp: i32 [-157459] ⇊00000000fffd98ed ⇈00000000fffd98ed
stampKind: i32
value: int[-157459|0xfffffffffffd98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v809 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157459|0xfffffffffffd98ed]] destination: B96 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1623 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: v1156 
=== Usages ===
v1291 
=== Predecessor ===
v1142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1623 
y: v1290 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1623 y: v1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1291 
=== Succesors ===
trueSuccessor: v814 
falseSuccessor: v1153 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1291 #trueSuccessor: v814 #falseSuccessor: v1153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1123  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
result int[-157715|0xfffffffffffd97ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157715
stableDimension: 0
stamp: i32 [-157715] ⇊00000000fffd97ed ⇈00000000fffd97ed
stampKind: i32
value: int[-157715|0xfffffffffffd97ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157715|0xfffffffffffd97ed]] destination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1624 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: v1134 
=== Usages ===
v1293 
=== Predecessor ===
v1153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1624 
y: v1292 
=== Succesors ===
=== Usages ===
v1134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1624 y: v1292  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 190
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i38 i38 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i38 i38 a11 i19 - - -  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: - - - 
=== Succesors ===
=== Usages ===
?229 ?988 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.9002135507668414
=== Inputs ===
condition: v1293 
=== Succesors ===
trueSuccessor: v1132 
falseSuccessor: v1131 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1293 #trueSuccessor: v1132 #falseSuccessor: v1131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9002135507668414 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611071854692411589
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1625 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1625  <|@  <|@
f <@~|@floating>@ <|@
tid v1643 <|@
result [v114|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1621 
=== Succesors ===
=== Usages ===
i1625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1625 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:137) [bci: 5]
at java.lang.Integer.intValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 69]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1643 
=== Succesors ===
next: v212 
=== Usages ===
j208 v209 
=== Predecessor ===
v1132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1643 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3076) [bci: 1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1625 
=== Succesors ===
=== Usages ===
v625 v624 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1625  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3077) [bci: 4]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1625 
y: i13 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1625 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2787
stackSize: 0
=== Inputs ===
outerFrameState: ?183 
values: - - - 
=== Succesors ===
=== Usages ===
?987 ?986 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?183 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3077) [bci: 4]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.19596749490981824
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
i1625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVSXD v116|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v116|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.19596749490981824 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600250668499895552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3077) [bci: 7]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@78760ff3
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a452 j208 a2 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 j208 a2  <|@  <|@
tid ?986 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(int, Locale)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3083
stackSize: 0
=== Inputs ===
outerFrameState: ?229 
values: - - - - - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
bci: 55
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v624 
stateDuring: ?986 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v624 stateDuring: ?986 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v111|DWORD v111|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v111|DWORD, v118|DWORD] destination: B101 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609427092546914181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 52]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1f9626a7
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a452 j208 a2 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 j208 a2  <|@  <|@
tid ?987 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(int, Locale)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3083
stackSize: 0
=== Inputs ===
outerFrameState: ?229 
values: - - - - - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?229 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
bci: 55
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v625 
stateDuring: ?987 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v625 stateDuring: ?987 #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v111|DWORD v111|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v111|DWORD, v118|DWORD] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1626 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1626 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1661 
=== Succesors ===
next: v1168 
=== Usages ===
v1295 
=== Predecessor ===
v1131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1661 #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
result meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1626 
y: v1294 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1626 y: v1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1295 
=== Succesors ===
trueSuccessor: v1166 
falseSuccessor: v819 
=== Usages ===
=== Predecessor ===
v1626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1295 #trueSuccessor: v1166 #falseSuccessor: v819  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1627 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1627  <|@  <|@
f <@~|@floating>@ <|@
tid v1644 <|@
result [v114|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1621 
=== Succesors ===
=== Usages ===
j1627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1627 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Long.value
nodeSourcePosition: at java.lang.Long.longValue(Long.java:1000) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.longValue(BoxingSnippets.java:143) [bci: 5]
at java.lang.Long.longValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 91]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1644 
=== Succesors ===
next: v179 
=== Usages ===
v634 
=== Predecessor ===
v1166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1644 #next: v179  <|@  <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@f00f1ab
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a452 j1627 a2 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a452 j1627 a2  <|@  <|@
tid ?988 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2789
stackSize: 0
=== Inputs ===
outerFrameState: ?183 
values: - - - 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?183 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
bci: 95
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v634 
stateDuring: ?988 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
j1627 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v634 stateDuring: ?988 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i1595 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v114|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v111|DWORD v111|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v111|DWORD, v120|DWORD] destination: B104 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1125 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid i1126 <|@
result int[-160275|0xfffffffffffd8ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160275
stableDimension: 0
stamp: i32 [-160275] ⇊00000000fffd8ded ⇈00000000fffd8ded
stampKind: i32
value: int[-160275|0xfffffffffffd8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v819 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160275|0xfffffffffffd8ded]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1087 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1087  <|@  <|@
f <@~|@floating>@ <|@
tid i1088 <|@
result int[-30739|0xffffffffffff87ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739] ⇊00000000ffff87ed ⇈00000000ffff87ed
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30739|0xffffffffffff87ed]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1117 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid i1118 <|@
result int[-156179|0xfffffffffffd9ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -156179
stableDimension: 0
stamp: i32 [-156179] ⇊00000000fffd9ded ⇈00000000fffd9ded
stampKind: i32
value: int[-156179|0xfffffffffffd9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-156179|0xfffffffffffd9ded]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid i1116 <|@
result int[-155187|0xfffffffffffda1cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155187
stableDimension: 0
stamp: i32 [-155187] ⇊00000000fffda1cd ⇈00000000fffda1cd
stampKind: i32
value: int[-155187|0xfffffffffffda1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155187|0xfffffffffffda1cd]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid i1114 <|@
result int[-153115|0xfffffffffffda9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153115
stableDimension: 0
stamp: i32 [-153115] ⇊00000000fffda9e5 ⇈00000000fffda9e5
stampKind: i32
value: int[-153115|0xfffffffffffda9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153115|0xfffffffffffda9e5]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B106" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B109" "B108" "B107" "B96" "B98" "B105" "B19" 
    successors 
    xhandlers
    flags 
    probability 4579310214740306367
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1082 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-173331 - -8723] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1079 
values: i1081 i1086 i1088 i1090 i1102 i1104 i1106 i1108 i1110 i1112 i1114 i1116 i1118 i1122 i1124 i1126 i1090 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1079 values: i1081 i1086 i1088 i1090 i1102 i1104 i1106 i1108 i1110 i1112 i1114 i1116 i1118 i1122 i1124 i1126 i1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1080 v1085 v1087 v1089 v1101 v1103 v1105 v1107 v1109 v1111 v1113 v1115 v1117 v1121 v1123 v1125 v1139 
=== Succesors ===
next: v1084 
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1080 v1085 v1087 v1089 v1101 v1103 v1105 v1107 v1109 v1111 v1113 v1115 v1117 v1121 v1123 v1125 v1139 #next: v1084  <|@  <|@
f <@*|@fixed>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1082 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1082 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid i1078 <|@
result int[-163123|0xfffffffffffd82cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163123
stableDimension: 0
stamp: i32 [-163123] ⇊00000000fffd82cd ⇈00000000fffd82cd
stampKind: i32
value: int[-163123|0xfffffffffffd82cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i1078 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i1078 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -163123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 269]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 270]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid a1070 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@328802343
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@328802343]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1069 <|@
result int[-113947|0xfffffffffffe42e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113947
stableDimension: 0
stamp: i32 [-113947] ⇊00000000fffe42e5 ⇈00000000fffe42e5
stampKind: i32
value: int[-113947|0xfffffffffffe42e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i1069 
speculation: a1070 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i1069 speculation: a1070  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328802343] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -113947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v122|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23a66d66 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B113" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], int[-1|0xffffffffffffffff], int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B101" "B76" "B84" "B104" "B79" "B102" 
    successors "B8" "B112" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616890898301560631
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|DWORD, v14|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.783683786357975 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5392324044009438 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611476891873793690
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v18|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4285714285714284] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v112|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v3|QWORD[.] + v111|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v114|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9002135507668414 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611071854692411589
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOV [v114|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOVSXD v116|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v116|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.19596749490981824 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609427092546914181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v111|DWORD v111|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v111|DWORD, v118|DWORD] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-2|0xfffffffffffffffe]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609671356259498517
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8270591525660747 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608462060969985249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v15|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v22|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v23|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v22|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5915997706422018 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605017948587023926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v23|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v25|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v30|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9359365262882174 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604579579594941083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604515535994444436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v27|DWORD, ~y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604452132829952756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604881778279093150
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v101|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVSXD v29|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v105|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v106|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|DWORD[.] * 8 + 12], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v20|DWORD] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: v107|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v20|DWORD] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600250668499895552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v117|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v111|DWORD v111|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v111|DWORD, v118|DWORD] destination: B101 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v109|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v110|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v20|DWORD] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v114|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v114|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v111|DWORD v111|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v111|DWORD, v120|DWORD] destination: B104 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v34|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v35|DWORD, ~y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v35|DWORD, ~trueValue: v30|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v38|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586473334521787367
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586410209386927438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = CMOVE (falseValue: v37|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v50|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = LEA [v26|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V128_WORD = H [v54|QWORD[*] + v59|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v59|QWORD * 2], input: v61|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v52|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V64_WORD = H [v54|QWORD[*] + v63|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v63|QWORD * 2], input: v65|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v52|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = H [v54|QWORD[*] + v67|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v67|QWORD * 2], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = DEC v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVSX [v54|QWORD[*] + v71|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v71|QWORD * 2], y: v73|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|DWORD[.] * 8 + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[*] = SHR v96|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v97|QWORD[*] + v98|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587104585870386661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SUB (x: v37|DWORD, ~y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587035148222040739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = LEA [v50|QWORD[.] + v52|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = SUB (x: v74|QWORD, ~y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v76|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v81|QWORD * 2], input: v83|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v76|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v85|QWORD * 2], input: v87|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v85|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = LEA [v76|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v89|QWORD * 2], input: v91|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v89|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = DEC v76|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v93|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B77 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V256_WORD = H [v54|QWORD[*] + v56|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v56|QWORD * 2], input: v57|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v79|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v79|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572261145252343329
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572766146331222764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556715640906271924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574847603017253725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132961|0xfffffffffffdf89f]] destination: B17 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B106" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B109" "B108" "B107" "B96" "B98" "B105" "B19" 
    successors 
    xhandlers
    flags 
    probability 4579310214740306367
    begin_IR
      LIR
      nr   -1  <|@ instruction [v121|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574765627208618017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132961|0xfffffffffffdf89f]] destination: B19 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557613420602057587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562072131244638800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -144993 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v96|QWORD[.] v100|QWORD[.] v28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v96|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v96|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v96|QWORD[.] v100|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557523642632479021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153115|0xfffffffffffda9e5]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@958549472] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -151315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328802343] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -113947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v122|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135699|0xfffffffffffdeded]] destination: B22 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30739|0xffffffffffff87ed]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -163123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152339|0xfffffffffffdaced]] destination: B90 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148531|0xfffffffffffdbbcd]] destination: B87 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147763|0xfffffffffffdbecd]] destination: B80 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B88 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-160275|0xfffffffffffd8ded]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B86 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157715|0xfffffffffffd97ed]] destination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157459|0xfffffffffffd98ed]] destination: B96 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155187|0xfffffffffffda1cd]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135955|0xfffffffffffdeced]] destination: B24 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-156179|0xfffffffffffd9ded]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B85 -> B110 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23a66d66 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   42  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rax:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   46  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B113" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   88  <|@ instruction stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B101" "B76" "B84" "B104" "B79" "B102" 
    successors "B8" "B112" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616890898301560631
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.783683786357975 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] rdx|QWORD[.] - r8|QWORD[.] stack:80|DWORD rbx|DWORD rax|QWORD[.] rdi|DWORD - - - 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  106  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.5392324044009438 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611476891873793690
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4285714285714284] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction r13|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  960  <|@ instruction stack:112|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rbp|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  994  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] rdx|QWORD[.] - r8|QWORD[.] stack:80|DWORD rbx|DWORD rax|QWORD[.] rdi|DWORD r14|QWORD[.] - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr 1030  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1048  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr 1050  <|@ instruction BRANCH trueDestinationProbability: 0.9002135507668414 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611071854692411589
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1056  <|@ instruction rcx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 1060  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.19596749490981824 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609427092546914181
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction rcx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:112|DWORD stack:112|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr 1112  <|@ instruction rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1118  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609671356259498517
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = INC stack:88|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.8270591525660747 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608462060969985249
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rsi:0, r10:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  154  <|@ instruction r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  158  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5915997706422018 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605017948587023926
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:92|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  172  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction stack:96|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.9359365262882174 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604579579594941083
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604515535994444436
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604452132829952756
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604881778279093150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  768  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rsi|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  774  <|@ instruction r9|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  780  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  784  <|@ instruction rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [stack:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: stack:144|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr  836  <|@ instruction rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600250668499895552
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:112|DWORD stack:112|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr 1078  <|@ instruction rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1084  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B101 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  876  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  884  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  886  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  894  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr  898  <|@ instruction rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction rdx|QWORD = MOV [rsi|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:112|DWORD stack:112|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr 1152  <|@ instruction rdi|DWORD = INC stack:88|DWORD size: DWORD <|@ <|@
      nr 1154  <|@ instruction rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1158  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction JUMP ~[] destination: B104 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rsi|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr  250  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  284  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586473334521787367
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdi|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  298  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  300  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  302  <|@ instruction r14|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586410209386927438
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  330  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  332  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  334  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  336  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  396  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  400  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r8|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  468  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  470  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  492  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  494  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  516  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  518  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  526  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rbp|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  706  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  708  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  712  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  714  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  716  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587104585870386661
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:120|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587035148222040739
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction r11|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  556  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  608  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  610  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  618  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  632  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  634  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  636  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  644  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  656  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  658  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  660  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  666  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  684  <|@ instruction rbp|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B77 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  438  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  440  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  442  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  574  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4580917649313418049
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  580  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction rbp|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572261145252343329
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572766146331222764
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  384  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  388  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556715640906271924
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574847603017253725
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f] <|@ <|@
      nr  200  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B17 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B106" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B109" "B108" "B107" "B96" "B98" "B105" "B19" 
    successors 
    xhandlers
    flags 
    probability 4579310214740306367
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1234  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574765627208618017
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f] <|@ <|@
      nr  218  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B19 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557613420602057587
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction r13|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562072131244638800
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 668] y: -144993 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r11|QWORD[.] r13|QWORD[.] rax|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: r11|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557523642632479021
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r13|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction r10|DWORD = MOVE input: int[-153115|0xfffffffffffda9e5] <|@ <|@
      nr 1220  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@958549472] <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 668] y: -151315 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: stack:56|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328802343] <|@ <|@
      nr 1258  <|@ instruction MOV [r15|QWORD + 668] y: -113947 size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1262  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: stack:64|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE input: int[-135699|0xfffffffffffdeded] <|@ <|@
      nr  258  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B22 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] <|@ <|@
      nr 1184  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~[] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction MOV [r15|QWORD + 668] y: -163123 size: DWORD <|@ <|@
      nr 1244  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1246  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVE input: int[-152339|0xfffffffffffdaced] <|@ <|@
      nr  970  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B90 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r10|DWORD = MOVE input: int[-148531|0xfffffffffffdbbcd] <|@ <|@
      nr  936  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B87 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction r10|DWORD = MOVE input: int[-147763|0xfffffffffffdbecd] <|@ <|@
      nr  858  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B80 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] <|@ <|@
      nr  944  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B88 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1176  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  928  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B86 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-157715|0xfffffffffffd97ed] <|@ <|@
      nr 1036  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed] <|@ <|@
      nr 1018  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1022  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B96 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction r10|DWORD = MOVE input: int[-155187|0xfffffffffffda1cd] <|@ <|@
      nr 1208  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r10|DWORD = MOVE input: int[-135955|0xfffffffffffdeced] <|@ <|@
      nr  276  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B24 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction r10|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1196  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] <|@ <|@
      nr  920  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B85 -> B110 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23a66d66 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   42  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rax:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   46  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B113" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   88  <|@ instruction stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B101" "B76" "B84" "B104" "B79" "B102" 
    successors "B8" "B112" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4616890898301560631
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   90  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.783683786357975 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] rdx|QWORD[.] - r8|QWORD[.] stack:80|DWORD rbx|DWORD rax|QWORD[.] rdi|DWORD - - - 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  106  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.5392324044009438 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611476891873793690
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615340378734677614
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4285714285714284] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction r13|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  960  <|@ instruction stack:112|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rbp|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  994  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1010  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] rdx|QWORD[.] - r8|QWORD[.] stack:80|DWORD rbx|DWORD rax|QWORD[.] rdi|DWORD r14|QWORD[.] - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr 1030  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611844110191251811
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1048  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr 1050  <|@ instruction BRANCH trueDestinationProbability: 0.9002135507668414 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B102" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611071854692411589
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1056  <|@ instruction rcx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1058  <|@ instruction rbx|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 1060  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.19596749490981824 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609427092546914181
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1106  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1108  <|@ instruction rcx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:112|DWORD stack:112|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr 1112  <|@ instruction rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1116  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1118  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B111" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610196666340820546
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe] <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609671356259498517
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rdi|DWORD = INC stack:88|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.8270591525660747 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608462060969985249
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rsi:0, r10:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  154  <|@ instruction r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  158  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  160  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5915997706422018 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605017948587023926
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:92|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  172  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD rbx|DWORD stack:64|QWORD[.] stack:88|DWORD r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  176  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction stack:96|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.9359365262882174 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604579579594941083
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604515535994444436
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604452132829952756
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604881778279093150
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  768  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rsi|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  774  <|@ instruction r9|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  776  <|@ instruction rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  778  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  780  <|@ instruction rdx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  784  <|@ instruction rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4602898974098205580
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  826  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ st <@st|@reference-map: [stack:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: stack:144|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr  836  <|@ instruction rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600250668499895552
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:112|DWORD stack:112|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr 1078  <|@ instruction rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1084  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B101 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  876  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  878  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  884  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  886  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598508801075958993
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  894  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr  898  <|@ instruction rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr 1140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596610798392168452
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction rdx|QWORD = MOV [rsi|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:112|DWORD stack:112|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr 1152  <|@ instruction rdi|DWORD = INC stack:88|DWORD size: DWORD <|@ <|@
      nr 1154  <|@ instruction rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1156  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1158  <|@ instruction r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction JUMP ~[] destination: B104 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rsi|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: < <|@ <|@
      nr  250  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119915
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  284  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586473334521787367
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction rdi|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  298  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  300  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  302  <|@ instruction r14|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586410209386927438
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  330  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  332  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  334  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  336  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  342  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B50" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  396  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  400  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  402  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r8|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  468  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  470  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  492  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  494  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  516  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  518  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  526  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B47" 
    successors "B51" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B50" "B67" "B65" 
    successors "B74" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587174724909119916
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rbp|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  706  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  708  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  712  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  714  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  716  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B74 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587104585870386661
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:120|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B74 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587035148222040739
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction r11|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  556  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  560  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B54" 
    successors "B59" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  608  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  610  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B62" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  618  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  632  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  634  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  636  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B59" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  644  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  656  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  658  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  660  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B70" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582671125281749420
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  666  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580917649313418049
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  438  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  440  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  442  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573663926027008428
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  574  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B54" 
    successors "B56" "B54" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4582671125281749420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  580  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572261145252343329
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572766146331222764
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  384  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  388  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4556715640906271924
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574847603017253725
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f] <|@ <|@
      nr  200  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B17 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B106" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B109" "B108" "B107" "B96" "B98" "B105" "B19" 
    successors 
    xhandlers
    flags 
    probability 4579310214740306367
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1234  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:84|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 4574765627208618017
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f] <|@ <|@
      nr  218  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B19 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" 
    successors 
    xhandlers
    flags 
    probability 4562072131244638800
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction r13|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 668] y: -144993 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r11|QWORD[.] r13|QWORD[.] rax|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: r11|QWORD[.] r13|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction r10|DWORD = MOVE input: int[-153115|0xfffffffffffda9e5] <|@ <|@
      nr 1220  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1224  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@958549472] <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 668] y: -151315 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: stack:56|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328802343] <|@ <|@
      nr 1258  <|@ instruction MOV [r15|QWORD + 668] y: -113947 size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1262  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: stack:64|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE input: int[-135699|0xfffffffffffdeded] <|@ <|@
      nr  258  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B22 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] <|@ <|@
      nr 1184  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~[] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction MOV [r15|QWORD + 668] y: -163123 size: DWORD <|@ <|@
      nr 1244  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1246  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:80|DWORD stack:108|DWORD stack:64|QWORD[.] stack:88|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVE input: int[-152339|0xfffffffffffdaced] <|@ <|@
      nr  970  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~[] destination: B90 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r10|DWORD = MOVE input: int[-148531|0xfffffffffffdbbcd] <|@ <|@
      nr  936  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B87 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction r10|DWORD = MOVE input: int[-147763|0xfffffffffffdbecd] <|@ <|@
      nr  858  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B80 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] <|@ <|@
      nr  944  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B88 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded] <|@ <|@
      nr 1176  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  928  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B86 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE input: int[-157715|0xfffffffffffd97ed] <|@ <|@
      nr 1036  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B98 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed] <|@ <|@
      nr 1018  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1022  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B96 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction r10|DWORD = MOVE input: int[-155187|0xfffffffffffda1cd] <|@ <|@
      nr 1208  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r10|DWORD = MOVE input: int[-135955|0xfffffffffffdeced] <|@ <|@
      nr  276  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B24 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction r10|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1196  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] <|@ <|@
      nr  920  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B85 -> B110 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4881ec880000004889ac248000000048895424684c894424604d85c00f8402080000448b5610438504d44c8bd6488bd14c89542458666690e800000000904889442450448b500c448954244c418bf2488bd648ffca483bf20f87090000004585d20f85e40700004c8b442460458b580c44895c2448458bcb41ffc944894c2444bf00000000bbffffffffc7442440ffffffff0f1f8000000000488b542468443bd70f8ef10600008b74b8108b2cf50800000081fdaddeadde0f8528010000448b2cf50c000000448bf649c1e6034183fd000f84190000004183fdfe0f841c0100004183fdff0f8402080000e9fd07000044896c243c448beb41ffc544896c2420453be90f8fac070000453bdd0f86fd06000081fdaddeadde0f853c0800000fb62cf51a00000085ed0f85540800000fb734f51800000083fe640f853e070000438b74a810813cf508000000addeadde0f84ed070000813cf508000000addeadde0f84c40700008b2cf50800000081fdaddeadde0f85a30200008b34f50c0000004863ce8bdfffc3895c243085f6897c2438498bf60f8cc2010000488bea488bd1488bcd0f1f440000e800000000908b7c24308b5c242048894424708b44242089442440488b442470448b4c2444448b5c2448448b54244c488b4424504c8b442460e9b3feffff81fdaddeadde0f85a306000041bdfeffffffe9c9feffff44896c243c897c24388b7c2438ffc781fdaddeadde0f858e0100008b14f510000000448b14d510000000438504d4448b2cf50c000000438504ec468b1cd5080000004181fbaddeadde0f85ba0000004489542434468b1ced0c000000438504dc468b04d510000000468b0cc50c000000428b04dd0c000000428b2cd50c0000008bd003d5895424308bf2412bf183fe010f8df501000085ed0f8c1b050000442bc8413be90f8f3205000049c1e003897c2420895c242449c1e3034863f5448bc8498d7b10498d747010498bd1e800000000908b542430448b542434428914d50c0000008b7c24208b5c2424448b4c2444448b5c2448448b54244c488b4424504c8b442460e993fdffff897c2420895c24244181fbaddeadde0f85c205000049c1e20349c1e503498bf2498bd54c891424666690e800000000908b7c24208b5c2424448b4c2444448b5c2448448b54244c488b4424504c8b442460e93dfdffff488bd1488b4c24680f1f4000e800000000908b7c24308b5c242048894424708b44242089442440488b442470448b4c2444448b5c2448448b54244c488b4424504c8b442460e9f3fcffff897c2420895c242481fdaddeadde0f85130500000fb614f51a00000085d20f85500500000fb734f51800000083fe640f85bf050000498bf648ba0000000000000000488b4c2468666690e800000000908b7c24208b5c2424448b4c2444448b5c2448448b54244c488b4424504c8b442460e97dfcffff897c2438895c2424813cf508000000addeadde0f85d5040000488b14f510000000498bf6488b4c2468666690e800000000908b7c2438ffc78b5c242048894424708b44242089442440488b442470448b4c2444448b5c2448448b54244c488b4424504c8b442460e911fcffff897c2420895c2424418bf1d1e68d76028bce2bca85c90f4cf283fe010f8cc3030000b9f7ffff7f2bce85c90f8cb9040000498b4f60498b5f7081feffffff000f83700200004c897424288bfed1e78d7f1783e7f84863ff4c8bf74c03f14c3bf30f878e0200004d8977600f18840fc00000000f18840f000100000f18840f400100000f18840f8001000089710c48c70101000000c74108addeadde448bf6896c241c89442418448944241444895c241044896c240c488bc1458be9453bf5418bf6410f4ff54c63d64983fa010f8c9e000000448b4424144c8d58104e8d04c5100000004d8d4af04d85c948c7c1000000000f8d7a0100004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63de4d3bda0f8f5c0000008b6c241c448b5424344c8bd849c1eb0346891cd510000000458bda49c1e3034d8bc349c1e80949b900c02408010000004788240885ed0f8caa010000418bf62b7424183bee0f8f9b0100004c8bc08b442418448b5c2410e953fcffff4e8d4450104d2bda4d8d53f04d85d20f8d9e00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f22ffffff6647892448e918ffffff0f1f8000000000660f1f440000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe96cfeffffc5f9efc049c7c1000000006666660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e93fffffff896c241c89442418448944241444895c241044896c240c4c89742428448bf648beaddeaddeaddeadde418bd6b900000000458be9e80000000090e9c7fdffff448bf6896c241c89442418448944241444895c241044896c240cebc4488b442458488bac24800000004881c488000000850500000000c5f877c341ba9ff8fdff4c89742428895c24244589979c0200004d89a7a8020000e8000000009041ba9ff8fdff4c89742428895c2424ebdb8b442418448b6c240c49c1e50341c7879c0200009fc9fdff4d89a7a8020000e8000000009041bae5a9fdff4c89742428897c2438895c2424eba1488974245849baaddeaddeaddeadde41c7879c020000edb0fdff4d8997a8020000e8000000009049baaddeaddeaddeadde41c7879c020000e542feff4d8997a8020000e8000000009041baededfdff4c89742428e948ffffff41baed87ffff4c89742428897c2438895c2424e930ffffff897c2438895c242441c7879c020000cd82fdff4d89a7a8020000e8000000009041baedacfdff4c89742428897c2438895c2424e9f8feffff41bacdbbfdff4c89742428e9e8feffff41bacdbefdff4c89742428e9d8feffff41baedddffff4c8974242844896c243c897c2438895c2424e9bbfeffff41baed8dfdff4c89742428e9abfeffff41baedb6fdff4c89742428e99bfeffff41baed97fdff4c89742428897c2438895c2424e983feffff41baed98fdff4c89742428897c2438895c2424e96bfeffff41bacda1fdff4c89742428897c2438895c2424e953feffff41baedecfdff4c89742428e943feffff41baed9dfdff4c89742428897c2438895c2424e92bfeffff41baed38ffff4c89742428e91bfeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23a66d66 slotKind: QWORD  <||@
  Comment 54 6 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 64 10 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 67 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 73 block B2 null  <||@
  Comment 73 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 28 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 30 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 77 [rcx:0, rsi:0, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 32 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 84 36 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 87 38 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 92 40 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12]  <||@
  Comment 92 9  <||@
  Comment 95 {HotSpotMethod<Formatter.parse(String)>}  <||@
  Comment 100 [stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-    <||@
  Comment 101 42 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 106 44 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15]  <||@
  Comment 106 [rax:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]       |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 46 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 115 48 rsi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 118 50 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 124 52 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 127 54 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 133 block B4 null  <||@
  Comment 133 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 64 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 136 66 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B113  <||@
  Comment 142 block B6 null  <||@
  Comment 142 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 58 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 147 76 r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 151 78 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 156 80 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 162 82 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 167 84 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 172 86 rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 177 88 stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 185 92 JUMP ~[] destination: B6 -> B7  <||@
  Comment 185 block B7 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 185 94 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 192 90 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 197 96 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 200 98 BRANCH trueDestinationProbability: 0.783683786357975 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B112  <||@
  Comment 206 block B8 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 206 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 102 rsi|DWORD[.] = MOV [rax|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 210 104 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:20]  <||@
  Comment 210 [rax:0, rdx:0, rsi:0, r8:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1             |2  |3            |4               |5          |6             |7          |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |-  |r8|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |rax|QWORD[.]  |rdi|DWORD  |-  |-  |-    <||@
  Comment 210 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 217 106 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 217 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 223 108 BRANCH trueDestinationProbability: 0.5392324044009438 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 229 block B9 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 229 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 112 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 237 114 JUMP ~[] destination: B9 -> B12  <||@
  Comment 237 block B12 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 237 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 237 130 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 244 132 AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4285714285714284]  <||@
  Comment 279 block B89 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 279 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 956 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 284 958 r13|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 290 960 stack:112|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 295 962 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 298 964 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 304 block B91 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 304 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 980 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 307 982 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B109  <||@
  Comment 313 block B92 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 313 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 986 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 313 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 319 988 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B108  <||@
  Comment 325 block B93 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 325 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 992 rbp|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 333 994 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 335 996 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B107  <||@
  Comment 341 block B94 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 341 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 1000 rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 349 1002 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 352 1004 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B106  <||@
  Comment 358 block B95 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 358 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 1008 rsi|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 363 1010 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42]  <||@
  Comment 363 [rax:0, rdx:0, rsi:0, r8:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1             |2  |3            |4               |5          |6             |7          |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |-  |r8|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |rax|QWORD[.]  |rdi|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |              |   |             |                |           |              |           |              |   |     <||@
  Comment 363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 363 {meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}}  <||@
  Comment 374 1012 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 380 block B97 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 380 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 1028 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}  <||@
  Comment 380 {meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}}  <||@
  Comment 391 1030 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 397 block B99 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 397 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 1046 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 404 1048 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 404 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 410 1050 BRANCH trueDestinationProbability: 0.9002135507668414 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103  <||@
  Comment 416 block B100 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 416 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 1054 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 423 1056 rcx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 426 1058 rbx|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 430 1060 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 434 1062 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 436 1068 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 440 1070 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 443 1064 BRANCH trueDestinationProbability: 0.19596749490981824 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 449 block B102 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 449 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 449 1104 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 452 1106 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 455 1108 rcx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 458 1110 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190]  <||@
  Comment 458 9  <||@
  Comment 463 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 468 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:112|DWORD  |stack:112|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 469 1112 rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 473 1114 rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 477 1116 stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 495 1118 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 500 1120 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 505 1122 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 510 1124 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 515 1126 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 520 1130 JUMP ~[] destination: B102 -> B7  <||@
  Comment 525 block B10 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 525 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 525 118 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 525 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 531 120 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B111  <||@
  Comment 537 block B11 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 537 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 124 r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe]  <||@
  Comment 543 126 JUMP ~[] destination: B11 -> B12  <||@
  Comment 548 block B13 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 548 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 136 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 553 138 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 557 140 rdi|DWORD = INC stack:88|DWORD size: DWORD  <||@
  Comment 563 142 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 563 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 569 144 BRANCH trueDestinationProbability: 0.8270591525660747 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81  <||@
  Comment 575 block B14 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 575 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 148 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 582 150 r10|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD state [bci:42]  <||@
  Comment 582 [rsi:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 582 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 590 152 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:42]  <||@
  Comment 590 [rsi:0, r10:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 590 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 594 154 r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 602 156 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42]  <||@
  Comment 602 [r10:0, r13:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 602 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 606 158 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 614 160 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 614 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 621 162 BRANCH trueDestinationProbability: 0.5915997706422018 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78  <||@
  Comment 627 block B15 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 627 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 166 stack:92|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 632 168 r11|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 640 170 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:42]  <||@
  Comment 640 [r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 640 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 644 172 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 652 174 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 652 [r8:0, r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 652 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 660 176 rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 668 178 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 676 180 rdx|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 680 182 stack:96|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 684 184 rsi|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 689 186 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 692 188 BRANCH trueDestinationProbability: 0.9359365262882174 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 698 block B16 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 698 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 698 192 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 700 194 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 706 block B18 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 706 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 208 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 709 210 CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 712 212 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 718 block B20 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 718 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 226 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 722 228 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 726 230 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 730 232 JUMP ~[] destination: B20 -> B76  <||@
  Comment 730 block B76 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 730 764 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 730 766 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 734 768 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 734 770 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 734 772 rsi|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 737 774 r9|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 740 776 rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 744 778 rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 749 780 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 752 782 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 752 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 758 784 rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 762 786 r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 767 788 MOV (x: [r10|DWORD[.] * 8 + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 775 790 rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 779 792 rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 783 794 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 788 796 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 793 798 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 798 800 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 803 802 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 808 806 JUMP ~[] destination: B76 -> B7  <||@
  Comment 813 block B78 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 813 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 813 814 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 817 816 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 821 818 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}  <||@
  Comment 821 {meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}}  <||@
  Comment 828 820 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 834 block B79 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 834 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 824 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 838 826 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 842 828 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 845 830 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 848 832 stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 852 834 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76]  <||@
  Comment 852 9  <||@
  Comment 855 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 860 [stack:0, stack:80, stack:88, stack:96, stack:104]at java.io.PrintStream.print(PrintStream.java:669) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:144|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:57) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 861 836 rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 865 838 rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 869 840 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 874 842 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 879 844 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 884 846 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 889 848 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 894 852 JUMP ~[] destination: B79 -> B7  <||@
  Comment 899 block B101 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 899 1066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 899 1072 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 902 1074 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 907 1076 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190]  <||@
  Comment 907 9  <||@
  Comment 911 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 916 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:112|DWORD  |stack:112|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 917 1078 rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 921 1080 rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 925 1082 stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 943 1084 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 948 1086 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 953 1088 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 958 1090 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 963 1092 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 968 1096 JUMP ~[] destination: B101 -> B7  <||@
  Comment 973 block B81 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 973 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 864 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 977 866 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 981 868 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 981 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 987 870 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 993 block B82 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 993 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 874 rdx|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 1001 876 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1003 878 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 1009 block B83 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1009 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1009 882 rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1017 884 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 1020 886 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 1026 block B84 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1026 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 890 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1029 892 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1039 894 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 896 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76]  <||@
  Comment 1044 9  <||@
  Comment 1047 {HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>}  <||@
  Comment 1052 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 1053 898 rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 1057 900 rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 1061 902 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1066 904 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1071 906 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1076 908 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 910 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1086 914 JUMP ~[] destination: B84 -> B7  <||@
  Comment 1091 block B103 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1091 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1091 1134 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1095 1136 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1099 1138 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}  <||@
  Comment 1099 {meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}}  <||@
  Comment 1110 1140 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1116 block B104 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1116 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 1144 rdx|QWORD = MOV [rsi|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1124 1146 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1127 1148 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1132 1150 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190]  <||@
  Comment 1132 9  <||@
  Comment 1135 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 1140 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:112|DWORD  |stack:112|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 1141 1152 rdi|DWORD = INC stack:88|DWORD size: DWORD  <||@
  Comment 1147 1154 rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 1151 1156 stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 1169 1158 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1174 1160 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1179 1162 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1184 1164 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 1166 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 1170 JUMP ~[] destination: B104 -> B7  <||@
  Comment 1199 block B21 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1199 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1199 236 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1203 238 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1207 240 rsi|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 1212 242 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1215 244 rcx|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1219 246 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1221 248 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: <  <||@
  Comment 1224 250 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1227 252 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1233 block B23 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1233 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1233 264 rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 1238 266 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1240 268 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1242 270 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1248 block B25 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1248 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1248 282 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1252 284 rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1256 286 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 1262 288 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29  <||@
  Comment 1268 block B26 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1268 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 292 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1273 294 rdi|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 1277 296 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 1280 298 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 1283 300 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1286 302 r14|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1292 304 CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1295 306 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 1301 block B28 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1301 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1301 326 MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD  <||@
  Comment 1305 328 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1313 330 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1321 332 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1329 334 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1337 336 MOV (x: [rcx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1340 338 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1347 340 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1347 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1354 342 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1354 344 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1357 346 stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1361 348 stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1365 350 stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1370 352 stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1375 354 stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1380 356 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 358 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1386 360 JUMP ~[] destination: B28 -> B31  <||@
  Comment 1386 block B31 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1386 394 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1386 396 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1389 398 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 1396 400 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1399 402 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1403 404 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 1409 block B33 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1409 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1409 412 r8|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD  <||@
  Comment 1414 414 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1418 416 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1426 418 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1430 420 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1433 426 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1440 422 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 1446 block B38 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1446 452 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1446 454 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1450 456 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1453 458 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 1459 block B40 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1459 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1459 466 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1465 468 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1471 470 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1475 472 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1478 474 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1478 block B41 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1478 476 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1478 478 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1482 480 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1485 482 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 1491 block B43 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1491 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 490 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1497 492 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1503 494 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1507 496 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1510 498 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1510 block B44 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1510 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1510 502 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1514 504 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1517 506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1523 block B46 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1523 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 514 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1529 516 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1535 518 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1539 520 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1542 522 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1542 block B47 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1542 524 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1542 526 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1548 528 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1551 530 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1557 block B49 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1557 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1557 538 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1562 540 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 1567 542 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1567 block B50 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1567 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1567 546 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1570 548 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1573 550 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 1579 block B70 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1579 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 696 rbp|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 1583 698 r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1588 704 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 1595 706 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1603 708 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 1610 710 r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1617 712 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1627 714 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1631 716 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1633 718 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B74 falseDestination: B70 -> B72  <||@
  Comment 1639 block B72 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1639 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 730 rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:120|DWORD) size: DWORD  <||@
  Comment 1646 732 CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1648 734 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B74 falseDestination: B72 -> B75  <||@
  Comment 1654 block B75 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1654 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 756 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1657 758 rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD  <||@
  Comment 1661 760 r11|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD  <||@
  Comment 1666 762 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1671 block B51 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1671 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1671 554 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1676 556 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1679 558 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1683 560 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1686 562 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 1692 block B52 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1692 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 566 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1699 568 JUMP ~[] destination: B52 -> B56  <||@
  Comment 1699 block B56 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1699 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1699 594 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1703 596 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1706 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 1712 block B58 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1712 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1712 606 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1716 608 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1722 610 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1726 612 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1729 614 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1729 block B59 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1729 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1729 618 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1733 620 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1736 622 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1742 block B61 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1742 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1742 630 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1746 632 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1752 634 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1756 636 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1759 638 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1759 block B62 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1759 640 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1759 642 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1763 644 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1766 646 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1772 block B64 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1772 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1772 654 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1776 656 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1782 658 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1786 660 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1789 662 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1789 block B65 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1789 664 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1789 666 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1792 668 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1795 670 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 1801 block B67 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1801 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1801 682 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1806 688 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1811 block B36 loop 1 depth 2 outer 0 header:1315|LoopBegin  <||@
  Comment 1811 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1824 438 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1830 440 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1836 442 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1840 444 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1843 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1850 block B53 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1850 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1850 572 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1854 574 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1861 576 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1861 block B54 loop 2 depth 2 outer 0 header:1380|LoopBegin  <||@
  Comment 1861 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1872 580 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1878 582 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1882 584 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1885 586 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 1892 block B29 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1892 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1892 364 stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1896 366 stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1900 368 stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1905 370 stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1910 372 stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1915 374 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1920 376 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1923 378 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1923 block B30 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1923 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1923 382 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1923 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1933 384 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1936 386 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1941 388 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1944 390 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42]  <||@
  Comment 1944 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1949 [stack:12, stack:16, stack:20, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |                 |                   |                |                    |   |     <||@
  Comment 1950 392 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1955 block B27 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1955 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1955 310 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1958 312 stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1962 314 stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1966 316 stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1971 318 stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1976 320 stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1981 322 JUMP ~[] destination: B27 -> B30  <||@
  Comment 1983 block B112 null  <||@
  Comment 1983 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1983 1250 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1988 1252 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 2003 12  <||@
  Comment 2013 block B17 null  <||@
  Comment 2013 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2013 198 r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f]  <||@
  Comment 2019 200 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2024 202 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2028 204 JUMP ~[] destination: B17 -> B110  <||@
  Comment 2028 block B110 null  <||@
  Comment 2028 1228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2028 1230 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2035 1232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2042 1234 DEOPT info [bci:42]  <||@
  Comment 2042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2047 [stack:40, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |                 |                   |                |                    |   |     <||@
  Comment 2048 block B19 null  <||@
  Comment 2048 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2048 216 r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f]  <||@
  Comment 2054 218 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2059 220 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2063 222 JUMP ~[] destination: B19 -> B110  <||@
  Comment 2065 block B74 null  <||@
  Comment 2065 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2065 722 rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD  <||@
  Comment 2069 724 r13|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD  <||@
  Comment 2074 746 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 2078 748 MOV [r15|QWORD + 668] y: -144993 size: DWORD  <||@
  Comment 2089 750 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2096 752 DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 2096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2101 [r11:0, r13:0, stack:80, stack:88, stack:96, stack:104]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |r11|QWORD[.]  |r13|QWORD[.]  |rax|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 2102 block B109 null  <||@
  Comment 2102 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2102 1218 r10|DWORD = MOVE input: int[-153115|0xfffffffffffda9e5]  <||@
  Comment 2108 1220 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 1222 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2117 1224 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2121 1226 JUMP ~[] destination: B109 -> B110  <||@
  Comment 2123 block B1 null  <||@
  Comment 2123 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 16 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2128 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@958549472]  <||@
  Comment 2128 {Object[d.a@958549472]}  <||@
  Comment 2138 20 MOV [r15|QWORD + 668] y: -151315 size: DWORD  <||@
  Comment 2149 22 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2156 24 DEOPT info [bci:0]  <||@
  Comment 2156 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2161 [rcx:0, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2162 block B113 null  <||@
  Comment 2162 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2162 1256 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328802343]  <||@
  Comment 2162 {Object[d.a@328802343]}  <||@
  Comment 2172 1258 MOV [r15|QWORD + 668] y: -113947 size: DWORD  <||@
  Comment 2183 1260 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2190 1262 DEOPT info [bci:15]  <||@
  Comment 2190 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2195 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |stack:64|QWORD[.]  |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 2196 block B22 null  <||@
  Comment 2196 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 256 r10|DWORD = MOVE input: int[-135699|0xfffffffffffdeded]  <||@
  Comment 2202 258 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2207 260 JUMP ~[] destination: B22 -> B110  <||@
  Comment 2212 block B106 null  <||@
  Comment 2212 1180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2212 1182 r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed]  <||@
  Comment 2218 1184 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 1186 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2227 1188 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2231 1190 JUMP ~[] destination: B106 -> B110  <||@
  Comment 2236 block B111 null  <||@
  Comment 2236 1236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2236 1238 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2240 1240 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2244 1242 MOV [r15|QWORD + 668] y: -163123 size: DWORD  <||@
  Comment 2255 1244 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2262 1246 DEOPT info [bci:20]  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2267 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 2268 block B90 null  <||@
  Comment 2268 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2268 968 r10|DWORD = MOVE input: int[-152339|0xfffffffffffdaced]  <||@
  Comment 2274 970 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2279 972 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2283 974 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2287 976 JUMP ~[] destination: B90 -> B110  <||@
  Comment 2292 block B87 null  <||@
  Comment 2292 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2292 934 r10|DWORD = MOVE input: int[-148531|0xfffffffffffdbbcd]  <||@
  Comment 2298 936 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2303 938 JUMP ~[] destination: B87 -> B110  <||@
  Comment 2308 block B80 null  <||@
  Comment 2308 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2308 856 r10|DWORD = MOVE input: int[-147763|0xfffffffffffdbecd]  <||@
  Comment 2314 858 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2319 860 JUMP ~[] destination: B80 -> B110  <||@
  Comment 2324 block B88 null  <||@
  Comment 2324 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2324 942 r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded]  <||@
  Comment 2330 944 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2335 946 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2340 948 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2344 950 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2348 952 JUMP ~[] destination: B88 -> B110  <||@
  Comment 2353 block B105 null  <||@
  Comment 2353 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 1174 r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded]  <||@
  Comment 2359 1176 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2364 1178 JUMP ~[] destination: B105 -> B110  <||@
  Comment 2369 block B86 null  <||@
  Comment 2369 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2369 926 r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 2375 928 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 930 JUMP ~[] destination: B86 -> B110  <||@
  Comment 2385 block B98 null  <||@
  Comment 2385 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2385 1034 r10|DWORD = MOVE input: int[-157715|0xfffffffffffd97ed]  <||@
  Comment 2391 1036 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 1038 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2400 1040 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2404 1042 JUMP ~[] destination: B98 -> B110  <||@
  Comment 2409 block B96 null  <||@
  Comment 2409 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2409 1016 r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed]  <||@
  Comment 2415 1018 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2420 1020 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2424 1022 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2428 1024 JUMP ~[] destination: B96 -> B110  <||@
  Comment 2433 block B108 null  <||@
  Comment 2433 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2433 1206 r10|DWORD = MOVE input: int[-155187|0xfffffffffffda1cd]  <||@
  Comment 2439 1208 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2444 1210 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2448 1212 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2452 1214 JUMP ~[] destination: B108 -> B110  <||@
  Comment 2457 block B24 null  <||@
  Comment 2457 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2457 274 r10|DWORD = MOVE input: int[-135955|0xfffffffffffdeced]  <||@
  Comment 2463 276 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2468 278 JUMP ~[] destination: B24 -> B110  <||@
  Comment 2473 block B107 null  <||@
  Comment 2473 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2473 1194 r10|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded]  <||@
  Comment 2479 1196 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2484 1198 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2488 1200 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2492 1202 JUMP ~[] destination: B107 -> B110  <||@
  Comment 2497 block B85 null  <||@
  Comment 2497 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2497 918 r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 2503 920 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2508 922 JUMP ~[] destination: B85 -> B110  <||@
  Comment 2513 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2513 4  <||@
  Comment 2519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2519 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5557[java.util.Formatter.format(Locale, String, Object[])]"
  method "HotSpotCompilation-5557[java.util.Formatter.format(Locale, String, Object[])]"
  date 1526687559427
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11953f120 448b560849c1e203493bc20f852f5d4cff900f1f80000000000f1f800000000089842400c0feff4881ec880000004889ac248000000048895424684c894424604d85c00f8402080000448b5610438504d44c8bd6488bd14c89542458666690e85cb387ff904889442450448b500c448954244c418bf2488bd648ffca483bf20f87090000004585d20f85e40700004c8b442460458b580c44895c2448458bcb41ffc944894c2444bf00000000bbffffffffc7442440ffffffff0f1f8000000000488b542468443bd70f8ef10600008b74b8108b2cf50800000081fd303a02f80f8528010000448b2cf50c000000448bf649c1e6034183fd000f84190000004183fdfe0f841c0100004183fdff0f8402080000e9fd07000044896c243c448beb41ffc544896c2420453be90f8fac070000453bdd0f86fd06000081fd303a02f80f853c0800000fb62cf51a00000085ed0f85540800000fb734f51800000083fe640f853e070000438b74a810813cf508000000d92100f80f84ed070000813cf508000000202200f80f84c40700008b2cf50800000081fd672200f80f85a30200008b34f50c0000004863ce8bdfffc3895c243085f6897c2438498bf60f8cc2010000488bea488bd1488bcd0f1f440000e8ac5d4cff908b7c24308b5c242048894424708b44242089442440488b442470448b4c2444448b5c2448448b54244c488b4424504c8b442460e9b3feffff81fd333e02f80f85a306000041bdfeffffffe9c9feffff44896c243c897c24388b7c2438ffc781fd333e02f80f858e0100008b14f510000000448b14d510000000438504d4448b2cf50c000000438504ec468b1cd5080000004181fb4b1b00f80f85ba0000004489542434468b1ced0c000000438504dc468b04d510000000468b0cc50c000000428b04dd0c000000428b2cd50c0000008bd003d5895424308bf2412bf183fe010f8df501000085ed0f8c1b050000442bc8413be90f8f3205000049c1e003897c2420895c242449c1e3034863f5448bc8498d7b10498d747010498bd1e82b294dff908b542430448b542434428914d50c0000008b7c24208b5c2424448b4c2444448b5c2448448b54244c488b4424504c8b442460e993fdffff897c2420895c24244181fb254f00f80f85c205000049c1e20349c1e503498bf2498bd54c891424666690e8245c4cff908b7c24208b5c2424448b4c2444448b5c2448448b54244c488b4424504c8b442460e93dfdffff488bd1488b4c24680f1f4000e8ec5b4cff908b7c24308b5c242048894424708b44242089442440488b442470448b4c2444448b5c2448448b54244c488b4424504c8b442460e9f3fcffff897c2420895c242481fd303a02f80f85130500000fb614f51a00000085d20f85500500000fb734f51800000083fe640f85bf050000498bf648ba0000000000000000488b4c2468666690e8645b4cff908b7c24208b5c2424448b4c2444448b5c2448448b54244c488b4424504c8b442460e97dfcffff897c2438895c2424813cf508000000ae2200f80f85d5040000488b14f510000000498bf6488b4c2468666690e80c5b4cff908b7c2438ffc78b5c242048894424708b44242089442440488b442470448b4c2444448b5c2448448b54244c488b4424504c8b442460e911fcffff897c2420895c2424418bf1d1e68d76028bce2bca85c90f4cf283fe010f8cc3030000b9f7ffff7f2bce85c90f8cb9040000498b4f60498b5f7081feffffff000f83700200004c897424288bfed1e78d7f1783e7f84863ff4c8bf74c03f14c3bf30f878e0200004d8977600f18840fc00000000f18840f000100000f18840f400100000f18840f8001000089710c48c70101000000c74108410000f8448bf6896c241c89442418448944241444895c241044896c240c488bc1458be9453bf5418bf6410f4ff54c63d64983fa010f8c9e000000448b4424144c8d58104e8d04c5100000004d8d4af04d85c948c7c1000000000f8d7a0100004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63de4d3bda0f8f5c0000008b6c241c448b5424344c8bd849c1eb0346891cd510000000458bda49c1e3034d8bc349c1e80949b900c02408010000004788240885ed0f8caa010000418bf62b7424183bee0f8f9b0100004c8bc08b442418448b5c2410e953fcffff4e8d4450104d2bda4d8d53f04d85d20f8d9e00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f22ffffff6647892448e918ffffff0f1f8000000000660f1f440000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe96cfeffffc5f9efc049c7c1000000006666660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e93fffffff896c241c89442418448944241444895c241044896c240c4c89742428448bf648be080200c007000000418bd6b900000000458be9e8e349c2ff90e9c7fdffff448bf6896c241c89442418448944241444895c241044896c240cebc4488b442458488bac24800000004881c48800000085050dc799f0c5f877c341ba9ff8fdff4c89742428895c24244589979c0200004d89a7a8020000e8df6c4cff9041ba9ff8fdff4c89742428895c2424ebdb8b442418448b6c240c49c1e50341c7879c0200009fc9fdff4d89a7a8020000e8a96c4cff9041bae5a9fdff4c89742428897c2438895c2424eba1488974245849bab8ca00700700000041c7879c020000edb0fdff4d8997a8020000e86d6c4cff9049ba405e00700700000041c7879c020000e542feff4d8997a8020000e84b6c4cff9041baededfdff4c89742428e948ffffff41baed87ffff4c89742428897c2438895c2424e930ffffff897c2438895c242441c7879c020000cd82fdff4d89a7a8020000e8036c4cff9041baedacfdff4c89742428897c2438895c2424e9f8feffff41bacdbbfdff4c89742428e9e8feffff41bacdbefdff4c89742428e9d8feffff41baedddffff4c8974242844896c243c897c2438895c2424e9bbfeffff41baed8dfdff4c89742428e9abfeffff41baedb6fdff4c89742428e99bfeffff41baed97fdff4c89742428897c2438895c2424e983feffff41baed98fdff4c89742428897c2438895c2424e96bfeffff41bacda1fdff4c89742428897c2438895c2424e953feffff41baedecfdff4c89742428e943feffff41baed9dfdff4c89742428897c2438895c2424e92bfeffff41baed38ffff4c89742428e91bfeffffe8aafc8bff90e8046a4cff90f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23a66d66 slotKind: QWORD  <||@
  Comment 54 6 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 64 10 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 67 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 73 block B2 null  <||@
  Comment 73 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 28 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 30 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 77 [rcx:0, rsi:0, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 32 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 84 36 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 87 38 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 92 40 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12]  <||@
  Comment 92 9  <||@
  Comment 95 {HotSpotMethod<Formatter.parse(String)>}  <||@
  Comment 100 [stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-    <||@
  Comment 101 42 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 106 44 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15]  <||@
  Comment 106 [rax:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]       |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 46 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 115 48 rsi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 118 50 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 124 52 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 127 54 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 133 block B4 null  <||@
  Comment 133 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 64 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 136 66 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B113  <||@
  Comment 142 block B6 null  <||@
  Comment 142 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 58 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 147 76 r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 151 78 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 156 80 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 162 82 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 167 84 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 172 86 rbx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 177 88 stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 185 92 JUMP ~[] destination: B6 -> B7  <||@
  Comment 185 block B7 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 185 94 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 192 90 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 197 96 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 200 98 BRANCH trueDestinationProbability: 0.783683786357975 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B112  <||@
  Comment 206 block B8 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 206 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 102 rsi|DWORD[.] = MOV [rax|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 210 104 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:20]  <||@
  Comment 210 [rax:0, rdx:0, rsi:0, r8:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1             |2  |3            |4               |5          |6             |7          |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |-  |r8|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |rax|QWORD[.]  |rdi|DWORD  |-  |-  |-    <||@
  Comment 210 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 217 106 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 217 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 223 108 BRANCH trueDestinationProbability: 0.5392324044009438 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 229 block B9 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 229 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 112 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 237 114 JUMP ~[] destination: B9 -> B12  <||@
  Comment 237 block B12 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 237 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 237 130 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 244 132 AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4285714285714284]  <||@
  Comment 279 block B89 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 279 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 956 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 284 958 r13|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 290 960 stack:112|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 295 962 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 298 964 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 304 block B91 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 304 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 980 CMP (x: r11|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 307 982 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B109  <||@
  Comment 313 block B92 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 313 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 986 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 313 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 319 988 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B108  <||@
  Comment 325 block B93 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 325 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 992 rbp|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 333 994 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 335 996 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B107  <||@
  Comment 341 block B94 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 341 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 1000 rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 349 1002 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 352 1004 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B106  <||@
  Comment 358 block B95 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 358 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 1008 rsi|DWORD[.] = MOV [r8|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 363 1010 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42]  <||@
  Comment 363 [rax:0, rdx:0, rsi:0, r8:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1             |2  |3            |4               |5          |6             |7          |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |rdx|QWORD[.]  |-  |r8|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |rax|QWORD[.]  |rdi|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |              |   |             |                |           |              |           |              |   |     <||@
  Comment 363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 363 {meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}}  <||@
  Comment 374 1012 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 380 block B97 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 380 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 1028 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}  <||@
  Comment 380 {meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}}  <||@
  Comment 391 1030 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 397 block B99 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 397 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 1046 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 404 1048 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 404 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 410 1050 BRANCH trueDestinationProbability: 0.9002135507668414 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B103  <||@
  Comment 416 block B100 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 416 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 1054 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 423 1056 rcx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 426 1058 rbx|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 430 1060 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 434 1062 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 436 1068 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 440 1070 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 443 1064 BRANCH trueDestinationProbability: 0.19596749490981824 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 449 block B102 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 449 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 449 1104 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 452 1106 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 455 1108 rcx|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 458 1110 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190]  <||@
  Comment 458 9  <||@
  Comment 463 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 468 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:112|DWORD  |stack:112|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 469 1112 rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 473 1114 rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 477 1116 stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 495 1118 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 500 1120 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 505 1122 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 510 1124 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 515 1126 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 520 1130 JUMP ~[] destination: B102 -> B7  <||@
  Comment 525 block B10 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 525 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 525 118 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 525 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 531 120 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B111  <||@
  Comment 537 block B11 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 537 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 124 r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe]  <||@
  Comment 543 126 JUMP ~[] destination: B11 -> B12  <||@
  Comment 548 block B13 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 548 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 136 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 553 138 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 557 140 rdi|DWORD = INC stack:88|DWORD size: DWORD  <||@
  Comment 563 142 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 563 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 569 144 BRANCH trueDestinationProbability: 0.8270591525660747 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81  <||@
  Comment 575 block B14 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 575 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 148 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 582 150 r10|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD state [bci:42]  <||@
  Comment 582 [rsi:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 582 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 590 152 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:42]  <||@
  Comment 590 [rsi:0, r10:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 590 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 594 154 r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 602 156 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42]  <||@
  Comment 602 [r10:0, r13:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 602 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 606 158 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 614 160 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 614 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 621 162 BRANCH trueDestinationProbability: 0.5915997706422018 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78  <||@
  Comment 627 block B15 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 627 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 166 stack:92|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 632 168 r11|DWORD[.] = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 640 170 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:42]  <||@
  Comment 640 [r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 640 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 644 172 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 652 174 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 652 [r8:0, r10:0, r11:0, r13:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5          |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |rbx|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |           |                   |                |              |   |     <||@
  Comment 652 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 660 176 rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 668 178 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 676 180 rdx|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 680 182 stack:96|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 684 184 rsi|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 689 186 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 692 188 BRANCH trueDestinationProbability: 0.9359365262882174 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 698 block B16 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 698 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 698 192 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 700 194 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 706 block B18 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 706 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 208 r9|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 709 210 CMP (x: rbp|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 712 212 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 718 block B20 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 718 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 226 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 722 228 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 726 230 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 730 232 JUMP ~[] destination: B20 -> B76  <||@
  Comment 730 block B76 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 730 764 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 730 766 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 734 768 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 734 770 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 734 772 rsi|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 737 774 r9|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 740 776 rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 744 778 rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 749 780 rdx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 752 782 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 752 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 758 784 rdx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 762 786 r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 767 788 MOV (x: [r10|DWORD[.] * 8 + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 775 790 rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 779 792 rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 783 794 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 788 796 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 793 798 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 798 800 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 803 802 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 808 806 JUMP ~[] destination: B76 -> B7  <||@
  Comment 813 block B78 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 813 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 813 814 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 817 816 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 821 818 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}  <||@
  Comment 821 {meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}}  <||@
  Comment 828 820 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 834 block B79 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 834 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 824 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 838 826 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 842 828 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 845 830 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 848 832 stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 852 834 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76]  <||@
  Comment 852 9  <||@
  Comment 855 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 860 [stack:0, stack:80, stack:88, stack:96, stack:104]at java.io.PrintStream.print(PrintStream.java:669) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:144|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:57) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 861 836 rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 865 838 rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 869 840 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 874 842 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 879 844 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 884 846 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 889 848 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 894 852 JUMP ~[] destination: B79 -> B7  <||@
  Comment 899 block B101 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 899 1066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 899 1072 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 902 1074 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 907 1076 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190]  <||@
  Comment 907 9  <||@
  Comment 911 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 916 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:112|DWORD  |stack:112|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 917 1078 rdi|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 921 1080 rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 925 1082 stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 943 1084 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 948 1086 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 953 1088 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 958 1090 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 963 1092 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 968 1096 JUMP ~[] destination: B101 -> B7  <||@
  Comment 973 block B81 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 973 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 864 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 977 866 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 981 868 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 981 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 987 870 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 993 block B82 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 993 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 874 rdx|DWORD = MOVZXB [rsi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 1001 876 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1003 878 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 1009 block B83 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1009 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1009 882 rsi|DWORD = MOVZX [rsi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1017 884 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 1020 886 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 1026 block B84 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1026 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 890 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1029 892 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1039 894 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1044 896 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76]  <||@
  Comment 1044 9  <||@
  Comment 1047 {HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>}  <||@
  Comment 1052 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 1053 898 rdi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 1057 900 rbx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 1061 902 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1066 904 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1071 906 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1076 908 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 910 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1086 914 JUMP ~[] destination: B84 -> B7  <||@
  Comment 1091 block B103 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1091 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1091 1134 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1095 1136 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1099 1138 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}  <||@
  Comment 1099 {meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}}  <||@
  Comment 1110 1140 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 1116 block B104 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1116 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 1144 rdx|QWORD = MOV [rsi|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1124 1146 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1127 1148 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1132 1150 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190]  <||@
  Comment 1132 9  <||@
  Comment 1135 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 1140 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:112|DWORD  |stack:112|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 1141 1152 rdi|DWORD = INC stack:88|DWORD size: DWORD  <||@
  Comment 1147 1154 rbx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 1151 1156 stack:80|DWORD = STACKMOVE (input: stack:112|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 1169 1158 r9|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1174 1160 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1179 1162 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1184 1164 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 1166 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 1170 JUMP ~[] destination: B104 -> B7  <||@
  Comment 1199 block B21 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1199 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1199 236 stack:112|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1203 238 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1207 240 rsi|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 1212 242 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1215 244 rcx|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1219 246 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1221 248 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rdx|DWORD) condition: <  <||@
  Comment 1224 250 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1227 252 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1233 block B23 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1233 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1233 264 rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 1238 266 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1240 268 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1242 270 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1248 block B25 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1248 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1248 282 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1252 284 rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1256 286 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 1262 288 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29  <||@
  Comment 1268 block B26 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1268 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 292 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1273 294 rdi|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 1277 296 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 1280 298 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 1283 300 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1286 302 r14|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1292 304 CMP (x: r14|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1295 306 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 1301 block B28 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1301 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1301 326 MOV (x: [r15|QWORD + 96], y: r14|QWORD) size: QWORD  <||@
  Comment 1305 328 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1313 330 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1321 332 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1329 334 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1337 336 MOV (x: [rcx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1340 338 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1347 340 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1347 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1354 342 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1354 344 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1357 346 stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1361 348 stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1365 350 stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1370 352 stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1375 354 stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1380 356 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 358 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1386 360 JUMP ~[] destination: B28 -> B31  <||@
  Comment 1386 block B31 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1386 394 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1386 396 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1389 398 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 1396 400 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1399 402 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1403 404 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 1409 block B33 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1409 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1409 412 r8|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD  <||@
  Comment 1414 414 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1418 416 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1426 418 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1430 420 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1433 426 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1440 422 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 1446 block B38 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1446 452 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1446 454 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1450 456 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1453 458 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 1459 block B40 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1459 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1459 466 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1465 468 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1471 470 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1475 472 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1478 474 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1478 block B41 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1478 476 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1478 478 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1482 480 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1485 482 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 1491 block B43 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1491 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 490 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1497 492 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1503 494 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1507 496 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1510 498 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1510 block B44 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1510 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1510 502 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1514 504 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1517 506 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1523 block B46 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1523 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 514 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1529 516 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1535 518 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1539 520 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1542 522 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1542 block B47 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1542 524 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1542 526 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1548 528 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1551 530 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1557 block B49 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1557 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1557 538 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1562 540 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 1567 542 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1567 block B50 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1567 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1567 546 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1570 548 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1573 550 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 1579 block B70 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1579 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 696 rbp|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 1583 698 r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1588 704 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 1595 706 MOV (x: [r10|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1603 708 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 1610 710 r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1617 712 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1627 714 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1631 716 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1633 718 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B74 falseDestination: B70 -> B72  <||@
  Comment 1639 block B72 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1639 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 730 rsi|DWORD = SUB (x: r14|DWORD, ~y: stack:120|DWORD) size: DWORD  <||@
  Comment 1646 732 CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1648 734 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B74 falseDestination: B72 -> B75  <||@
  Comment 1654 block B75 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1654 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1654 756 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1657 758 rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD  <||@
  Comment 1661 760 r11|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD  <||@
  Comment 1666 762 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1671 block B51 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1671 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1671 554 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1676 556 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1679 558 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1683 560 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1686 562 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 1692 block B52 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1692 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 566 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1699 568 JUMP ~[] destination: B52 -> B56  <||@
  Comment 1699 block B56 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1699 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1699 594 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1703 596 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1706 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 1712 block B58 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1712 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1712 606 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1716 608 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1722 610 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1726 612 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1729 614 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1729 block B59 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1729 616 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1729 618 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1733 620 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1736 622 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1742 block B61 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1742 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1742 630 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1746 632 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1752 634 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1756 636 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1759 638 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1759 block B62 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1759 640 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1759 642 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1763 644 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1766 646 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1772 block B64 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1772 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1772 654 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1776 656 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1782 658 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1786 660 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1789 662 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1789 block B65 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1789 664 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1789 666 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1792 668 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1795 670 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 1801 block B67 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1801 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1801 682 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1806 688 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1811 block B36 loop 1 depth 2 outer 0 header:1315|LoopBegin  <||@
  Comment 1811 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1824 438 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1830 440 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1836 442 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1840 444 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1843 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1850 block B53 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1850 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1850 572 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1854 574 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1861 576 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1861 block B54 loop 2 depth 2 outer 0 header:1380|LoopBegin  <||@
  Comment 1861 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1872 580 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1878 582 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1882 584 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1885 586 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 1892 block B29 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1892 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1892 364 stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1896 366 stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1900 368 stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1905 370 stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1910 372 stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1915 374 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1920 376 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1923 378 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1923 block B30 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1923 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1923 382 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1923 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1933 384 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1936 386 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1941 388 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1944 390 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42]  <||@
  Comment 1944 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1949 [stack:12, stack:16, stack:20, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |                 |                   |                |                    |   |     <||@
  Comment 1950 392 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1955 block B27 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1955 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1955 310 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1958 312 stack:116|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1962 314 stack:120|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1966 316 stack:124|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 1971 318 stack:128|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1976 320 stack:132|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1981 322 JUMP ~[] destination: B27 -> B30  <||@
  Comment 1983 block B112 null  <||@
  Comment 1983 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1983 1250 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1988 1252 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 2003 12  <||@
  Comment 2013 block B17 null  <||@
  Comment 2013 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2013 198 r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f]  <||@
  Comment 2019 200 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2024 202 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2028 204 JUMP ~[] destination: B17 -> B110  <||@
  Comment 2028 block B110 null  <||@
  Comment 2028 1228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2028 1230 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2035 1232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2042 1234 DEOPT info [bci:42]  <||@
  Comment 2042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2047 [stack:40, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:84|DWORD     |                   |   |                   |                |                 |                   |                |                    |   |     <||@
  Comment 2048 block B19 null  <||@
  Comment 2048 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2048 216 r10|DWORD = MOVE input: int[-132961|0xfffffffffffdf89f]  <||@
  Comment 2054 218 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2059 220 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2063 222 JUMP ~[] destination: B19 -> B110  <||@
  Comment 2065 block B74 null  <||@
  Comment 2065 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2065 722 rax|DWORD = MOVE stack:120|DWORD moveKind: DWORD  <||@
  Comment 2069 724 r13|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD  <||@
  Comment 2074 746 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6b67f776 encoding: base: 0 shift: 3  <||@
  Comment 2078 748 MOV [r15|QWORD + 668] y: -144993 size: DWORD  <||@
  Comment 2089 750 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2096 752 DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 2096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2101 [r11:0, r13:0, stack:80, stack:88, stack:96, stack:104]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |r11|QWORD[.]  |r13|QWORD[.]  |rax|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |r13|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 2102 block B109 null  <||@
  Comment 2102 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2102 1218 r10|DWORD = MOVE input: int[-153115|0xfffffffffffda9e5]  <||@
  Comment 2108 1220 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 1222 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2117 1224 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2121 1226 JUMP ~[] destination: B109 -> B110  <||@
  Comment 2123 block B1 null  <||@
  Comment 2123 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2123 16 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2128 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@958549472]  <||@
  Comment 2128 {Object[d.a@958549472]}  <||@
  Comment 2138 20 MOV [r15|QWORD + 668] y: -151315 size: DWORD  <||@
  Comment 2149 22 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2156 24 DEOPT info [bci:0]  <||@
  Comment 2156 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2161 [rcx:0, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 2162 block B113 null  <||@
  Comment 2162 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2162 1256 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@328802343]  <||@
  Comment 2162 {Object[d.a@328802343]}  <||@
  Comment 2172 1258 MOV [r15|QWORD + 668] y: -113947 size: DWORD  <||@
  Comment 2183 1260 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2190 1262 DEOPT info [bci:15]  <||@
  Comment 2190 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2195 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |stack:64|QWORD[.]  |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 2196 block B22 null  <||@
  Comment 2196 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 256 r10|DWORD = MOVE input: int[-135699|0xfffffffffffdeded]  <||@
  Comment 2202 258 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2207 260 JUMP ~[] destination: B22 -> B110  <||@
  Comment 2212 block B106 null  <||@
  Comment 2212 1180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2212 1182 r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed]  <||@
  Comment 2218 1184 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 1186 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2227 1188 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2231 1190 JUMP ~[] destination: B106 -> B110  <||@
  Comment 2236 block B111 null  <||@
  Comment 2236 1236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2236 1238 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2240 1240 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2244 1242 MOV [r15|QWORD + 668] y: -163123 size: DWORD  <||@
  Comment 2255 1244 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2262 1246 DEOPT info [bci:20]  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2267 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5                |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:80|DWORD  |stack:108|DWORD  |stack:64|QWORD[.]  |stack:88|DWORD  |-  |-  |-    <||@
  Comment 2268 block B90 null  <||@
  Comment 2268 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2268 968 r10|DWORD = MOVE input: int[-152339|0xfffffffffffdaced]  <||@
  Comment 2274 970 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2279 972 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2283 974 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2287 976 JUMP ~[] destination: B90 -> B110  <||@
  Comment 2292 block B87 null  <||@
  Comment 2292 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2292 934 r10|DWORD = MOVE input: int[-148531|0xfffffffffffdbbcd]  <||@
  Comment 2298 936 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2303 938 JUMP ~[] destination: B87 -> B110  <||@
  Comment 2308 block B80 null  <||@
  Comment 2308 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2308 856 r10|DWORD = MOVE input: int[-147763|0xfffffffffffdbecd]  <||@
  Comment 2314 858 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2319 860 JUMP ~[] destination: B80 -> B110  <||@
  Comment 2324 block B88 null  <||@
  Comment 2324 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2324 942 r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded]  <||@
  Comment 2330 944 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2335 946 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2340 948 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2344 950 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2348 952 JUMP ~[] destination: B88 -> B110  <||@
  Comment 2353 block B105 null  <||@
  Comment 2353 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 1174 r10|DWORD = MOVE input: int[-160275|0xfffffffffffd8ded]  <||@
  Comment 2359 1176 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2364 1178 JUMP ~[] destination: B105 -> B110  <||@
  Comment 2369 block B86 null  <||@
  Comment 2369 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2369 926 r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 2375 928 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 930 JUMP ~[] destination: B86 -> B110  <||@
  Comment 2385 block B98 null  <||@
  Comment 2385 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2385 1034 r10|DWORD = MOVE input: int[-157715|0xfffffffffffd97ed]  <||@
  Comment 2391 1036 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2396 1038 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2400 1040 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2404 1042 JUMP ~[] destination: B98 -> B110  <||@
  Comment 2409 block B96 null  <||@
  Comment 2409 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2409 1016 r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed]  <||@
  Comment 2415 1018 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2420 1020 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2424 1022 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2428 1024 JUMP ~[] destination: B96 -> B110  <||@
  Comment 2433 block B108 null  <||@
  Comment 2433 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2433 1206 r10|DWORD = MOVE input: int[-155187|0xfffffffffffda1cd]  <||@
  Comment 2439 1208 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2444 1210 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2448 1212 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2452 1214 JUMP ~[] destination: B108 -> B110  <||@
  Comment 2457 block B24 null  <||@
  Comment 2457 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2457 274 r10|DWORD = MOVE input: int[-135955|0xfffffffffffdeced]  <||@
  Comment 2463 276 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2468 278 JUMP ~[] destination: B24 -> B110  <||@
  Comment 2473 block B107 null  <||@
  Comment 2473 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2473 1194 r10|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded]  <||@
  Comment 2479 1196 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2484 1198 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2488 1200 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2492 1202 JUMP ~[] destination: B107 -> B110  <||@
  Comment 2497 block B85 null  <||@
  Comment 2497 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2497 918 r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 2503 920 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2508 922 JUMP ~[] destination: B85 -> B110  <||@
  Comment 2513 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2513 4  <||@
  Comment 2519 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2519 5  <||@
  HexCodeFile>>> <|@
end_nmethod
