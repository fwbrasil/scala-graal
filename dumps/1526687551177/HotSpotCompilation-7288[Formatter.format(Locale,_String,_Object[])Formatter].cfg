begin_compilation
  name " HotSpotCompilation-7288[java.util.Formatter.format(Locale, String, Object[])]"
  method "HotSpotCompilation-7288[java.util.Formatter.format(Locale, String, Object[])]"
  date 1526687576948
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i1078 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130401
stableDimension: 0
stamp: i32 [-130401] ⇊00000000fffe029f ⇈00000000fffe029f
stampKind: i32
value: int[-130401|0xfffffffffffe029f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v66 v1617 v426 ?12 ?20 ?158 ?73 ?128 ?171 ?972 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v623 ?128 v580 ?158 v614 ?972 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v426 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v40 v1631 ?158 ?128 ?972 v1630 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2494
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 - - - - - - - 
=== Succesors ===
=== Usages ===
v1047 v1667 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v694 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v696 #falseSuccessor: v694  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid a1044 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@747854488
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@747854488]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1043 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148755
stableDimension: 0
stamp: i32 [-148755] ⇊00000000fffdbaed ⇈00000000fffdbaed
stampKind: i32
value: int[-148755|0xfffffffffffdbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1043 
speculation: a1044 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1043 speculation: a1044  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1586 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1586  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
=== Succesors ===
next: v1667 
=== Usages ===
v1667 
=== Predecessor ===
v694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1617 #next: v1667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1586 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a1586 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1586 #next: a11  <|@  <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
returnStamp: a [Ljava/lang/Object; (unchecked=a [Ljava/util/Formatter$FormatString;)
signature: [Ljdk.vm.ci.meta.JavaType;@7f9f65b8
stamp: void
targetMethod: HotSpotMethod<Formatter.parse(String)>
=== Inputs ===
arguments: a1 a3 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2497) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 ?12 i17 i18 i43 ?972 ?972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?972 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Formatter.parse
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v426 
stateDuring: ?972 
=== Succesors ===
next: i1587 
=== Usages ===
?12 ?20 v1619 v1618 ?73 ?128 ?171 ?158 
=== Predecessor ===
v1667 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v426 stateDuring: ?972 #next: i1587  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - a11 
=== Succesors ===
=== Usages ===
v1055 i1587 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - - a11  <|@  <|@
f <@~|@floating>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1618 
=== Succesors ===
next: v1581 
=== Usages ===
v22 j673 v687 
=== Predecessor ===
a11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1618 #next: v1581  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1587 
=== Succesors ===
=== Usages ===
j677 v679 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1587  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j677 j1489 j1540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j677 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j673 
y: j676 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j673 y: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j673 
=== Succesors ===
=== Usages ===
v1581 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j677 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v117 v160 v388 a1195 v687 v375 v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v679 
=== Succesors ===
trueSuccessor: v1577 
falseSuccessor: v1580 
=== Usages ===
=== Predecessor ===
i1587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v679 #trueSuccessor: v1577 #falseSuccessor: v1580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
v1577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1587 
y: i13 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1587 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v708 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v1578 #falseSuccessor: v708  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1576  <|@  <|@
f <@*|@fixed>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1575 v1576 
=== Succesors ===
next: i1588 
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1575 v1576 #next: i1588  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i1588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 154]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1630 
=== Succesors ===
next: v15 
=== Usages ===
i43 v587 
=== Predecessor ===
v1574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1630 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1588 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1588 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 v1064 v1072 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i64 v340 i371 v384 i1171 i1585 i1584 i1583 i1582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.index(Formatter.java:2593) [bci: 0]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
i1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B100" "B76" "B84" "B79" "B102" 
    successors "B8" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617138375075572482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i17 i17 i17 i38 
=== Succesors ===
=== Usages ===
?20 ?73 ?171 i17 i17 ?158 i17 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i17 i17 i17 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i18 i18 i18 i38 
=== Succesors ===
=== Usages ===
?20 ?73 i38 ?171 i18 i18 ?158 i18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i18 i18 i18 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i13 i64 i1583 i1585 i1584 i1582 
=== Succesors ===
=== Usages ===
?20 v22 v1619 ?73 ?128 ?171 i64 ?158 i1582 i1583 i1584 i1585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i13 i64 i1583 i1585 i1584 i1582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.84266551142605
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v15 
=== Succesors ===
next: v27 
=== Usages ===
i17 i18 i19 v25 v65 v67 v217 v218 v301 v808 v803 v798 v758 v788 v718 v783 v778 v773 v768 v763 v748 v753 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v15 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1587 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i1587  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
stamp: void
trueSuccessorProbability: 0.7935021533821518
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1589 
=== Usages ===
v685 
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1589  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1574 v23 
=== Succesors ===
=== Usages ===
a1589 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1574 v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a11 
index: i19 
=== Succesors ===
=== Usages ===
a1589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v685 
address: v1619 
=== Succesors ===
next: v1590 
=== Usages ===
a442 v1636 v1620 v1622 v1628 v1629 v1673 v1674 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v685 address: v1619 #next: v1590  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2502
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
v1064 v1590 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
v1590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1636 
=== Succesors ===
next: v86 
=== Usages ===
v1270 v1268 
=== Predecessor ===
a1589 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1636 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1590 
y: v1267 
=== Succesors ===
=== Usages ===
v140 v719 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1590 y: v1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1590 
y: v1269 
=== Succesors ===
=== Usages ===
v764 v86 v784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1590 y: v1269  <|@  <|@
f <@~|@floating>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
a1594 i1591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 0.5218002798789941
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v79 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611697511477050593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1591 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.index
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.index(Formatter.java:2636) [bci: 1]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1622 
=== Succesors ===
next: v80 
=== Usages ===
i75 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1622 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
i1591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v715 #falseSuccessor: v718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v72 
values: i1591 i100 
=== Succesors ===
=== Usages ===
?73 v32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v72 values: i1591 i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v92 
=== Succesors ===
next: v32 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v92 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a442 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1589 
=== Succesors ===
=== Usages ===
v623 ?73 v614 v580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1589  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a442 - - i75 
=== Succesors ===
=== Usages ===
v1072 a1195 a1593 v1668 v1669 v1670 i1598 v1611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a442 - - i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@5f9fee0
keySuccessors: [I@3308335d
keys: [I@586756e8
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
value: i75 
=== Succesors ===
successors: v33 v35 v36 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i75 #successors: v33 v35 v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612220307059015120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.8449316052539398
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v134 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611192161200176738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1592 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1592  <|@  <|@
f <@~|@floating>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
a1592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1620 
=== Succesors ===
next: a1593 
=== Usages ===
v1621 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1620 #next: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1592 
=== Succesors ===
=== Usages ===
a1593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1621 
=== Succesors ===
next: v1668 
=== Usages ===
a452 v1668 v1625 v1626 v1637 a1672 
=== Predecessor ===
a1592 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1621 #next: v1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1593 
=== Succesors ===
next: a1594 
=== Usages ===
=== Predecessor ===
a1593 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1593 #next: a1594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1622 
=== Succesors ===
next: v1669 
=== Usages ===
a455 v1669 v1623 a1671 
=== Predecessor ===
v1668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1622 #next: v1669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1594 
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
a1594 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1594 #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1637 
=== Succesors ===
next: v186 
=== Usages ===
v1274 v1272 
=== Predecessor ===
v1669 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1637 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1595 
y: v1271 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1595 y: v1271  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?208 ?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5841949545480353
=== Inputs ===
condition: v1272 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1272 #trueSuccessor: v179 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607652270631471577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1596 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1596  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1594 
=== Succesors ===
=== Usages ===
a1596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1623 
=== Succesors ===
next: v1670 
=== Usages ===
a460 v1670 v1624 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1623 #next: v1670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1596 
=== Succesors ===
next: a1597 
=== Usages ===
=== Predecessor ===
a1596 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1596 #next: a1597  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
a1597 v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1626 
=== Succesors ===
next: i1598 
=== Usages ===
a470 v1634 v1627 
=== Predecessor ===
v1670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1626 #next: i1598  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1597 
=== Succesors ===
=== Usages ===
i1598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1627 
=== Succesors ===
next: i1599 
=== Usages ===
i339 i371 i1019 i503 v997 
=== Predecessor ===
a1597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1627 #next: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1596 
=== Succesors ===
=== Usages ===
i1599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1624 
=== Succesors ===
next: i1600 
=== Usages ===
i322 i503 ?354 i550 j1253 
=== Predecessor ===
i1598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1624 #next: i1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
i1600 v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1625 
=== Succesors ===
next: v343 
=== Usages ===
i322 j1249 v532 v551 v504 
=== Predecessor ===
i1599 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1625 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1600 
y: i13 
=== Succesors ===
=== Usages ===
v538 v491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1600 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1599 
y: i1600 
=== Succesors ===
=== Usages ===
v476 i339 i374 i641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1599 y: i1600  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i322 
y: i1598 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i322 y: i1598  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i339 
y: i37 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i339 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9518065952449013
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
i1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607412583072286604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v491  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v490 #falseSuccessor: v486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577212839572592251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607365245433290207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1598 
y: i1599 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1598 y: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i1600 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i503 y: i1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v507 #falseSuccessor: v505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577152247394676863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607318381170683774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1597 
=== Succesors ===
=== Usages ===
a977 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1597  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1598 
y: i37 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1598 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i371 
y: i372 
=== Succesors ===
=== Usages ===
i374 i641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i371 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i373 
y: i322 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i373 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i374 
y: i13 
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i374 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v375 
trueValue: i322 
falseValue: i373 
=== Succesors ===
=== Usages ===
i550 j1284 v384 i387 v1180 v997 i1019 a1195 v1222 i1171 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v375 trueValue: i322 falseValue: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i37 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i641 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v745 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v748 #falseSuccessor: v745  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1089  <|@  <|@
f <@~|@floating>@ <|@
tid i1090 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133139
stableDimension: 0
stamp: i32 [-133139] ⇊00000000fffdf7ed ⇈00000000fffdf7ed
stampKind: i32
value: int[-133139|0xfffffffffffdf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i386 
y: i641 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i386 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i13 
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i387 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v753 
falseSuccessor: v750 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v753 #falseSuccessor: v750  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1091 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1091  <|@  <|@
f <@~|@floating>@ <|@
tid i1092 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133395
stableDimension: 0
stamp: i32 [-133395] ⇊00000000fffdf6ed ⇈00000000fffdf6ed
stampKind: i32
value: int[-133395|0xfffffffffffdf6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1174 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1174 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1219 
=== Usages ===
v1638 v1639 
=== Predecessor ===
v750 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1174 
index: - 
=== Succesors ===
=== Usages ===
j1219 v1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1638 
=== Succesors ===
next: j1220 
=== Usages ===
j1178 v1640 v1641 a1194 v1646 v1642 v1643 v1644 v1645 
=== Predecessor ===
j1174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1638 #next: j1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1174 
index: - 
=== Succesors ===
=== Usages ===
j1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1639 
=== Succesors ===
next: v1183 
=== Usages ===
v1184 
=== Predecessor ===
j1219 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1639 #next: v1183  <|@  <|@
f <@~|@floating>@ <|@
tid i1179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i1179 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i641 y: i1179  <|@  <|@
f <@~|@floating>@ <|@
tid j1170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1223 v1295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1180 
=== Succesors ===
trueSuccessor: v1182 
falseSuccessor: v1181 
=== Usages ===
=== Predecessor ===
j1220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1180 #trueSuccessor: v1182 #falseSuccessor: v1181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587063822740321660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid i1171 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i641 
y: i37 
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i641 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1202 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1171 
y: i1202 
=== Succesors ===
=== Usages ===
i1173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1171 y: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid i1172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1203 
y: i1172 
=== Succesors ===
=== Usages ===
j1177 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1203 y: i1172  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1173 
=== Succesors ===
=== Usages ===
j1178 v1642 v1643 v1644 v1645 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1173  <|@  <|@
f <@~|@floating>@ <|@
tid j1178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
x: j1177 
y: j1219 
=== Succesors ===
=== Usages ===
v1184 v1221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1177 y: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1220 
y: j1178 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1220 y: j1178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1184 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1188 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1184 #trueSuccessor: v1189 #falseSuccessor: v1188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557471465825995820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586994792723276388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1638 
value: j1178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1638 value: j1178 stateAfter: - lastLocationAccess: - #next: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1642 
=== Succesors ===
next: v1211 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1642 #next: v1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1643 
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1643 #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1644 
=== Succesors ===
next: v1217 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1644 #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1645 
=== Succesors ===
next: v1222 
=== Usages ===
=== Predecessor ===
v1214 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1645 #next: v1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1219 
index: - 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1219 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1640 
value: i641 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1640 value: i641 stateAfter: - lastLocationAccess: - #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1219 
index: - 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1219 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1641 
value: j1170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1641 value: j1170 stateAfter: - lastLocationAccess: - #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1219 
index: - 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1219 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1646 
value: v1275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1646 value: v1275 stateAfter: - lastLocationAccess: - #next: v1193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1194 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1219 
=== Succesors ===
next: v1196 
=== Usages ===
a1199 
=== Predecessor ===
v1193 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1219 #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
a1194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572786023668818256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573338263805180435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1185 v1187 
=== Succesors ===
next: a1195 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1185 v1187 #next: a1195  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1195 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1169 i641 i13 
=== Succesors ===
next: v1198 
=== Usages ===
a1199 
=== Predecessor ===
v1186 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1169 i641 i13 #next: v1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
a1195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1197 
values: a1194 a1195 
=== Succesors ===
=== Usages ===
v1651 a1026 v1635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1197 values: a1194 a1195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1196 v1198 
=== Succesors ===
next: v1425 
=== Usages ===
a1199 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1196 v1198 #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1298 
=== Usages ===
j1426 j1428 
=== Predecessor ===
v1197 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1598 
y: i641 
=== Succesors ===
=== Usages ===
i1019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1598 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid i1019 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v997 
trueValue: i1598 
falseValue: i641 
=== Succesors ===
=== Usages ===
j1285 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v997 trueValue: i1598 falseValue: i641  <|@  <|@
f <@~|@floating>@ <|@
tid j1285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1019 
=== Succesors ===
=== Usages ===
j1489 v1651 j1289 v1295 v1422 j1472 j1478 j1482 j1486 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1285 
y: j1170 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1285 y: j1170  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1445 j1507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1486 j1537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1454 j1513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1482 j1534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1519 j1462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1477 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1478 j1531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1525 j1470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1472 j1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1206 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1514 v1527 j1455 j1463 v1473 j1520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1295 
=== Succesors ===
trueSuccessor: v1296 
falseSuccessor: v1297 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1295 #trueSuccessor: v1296 #falseSuccessor: v1297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
v1296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1301  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1199 
index: - 
=== Succesors ===
=== Usages ===
j1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1199 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1428 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1425 
address: v1635 
=== Succesors ===
=== Usages ===
v1652 v1654 v1656 v1658 v1660 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1425 address: v1635  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1597 
=== Succesors ===
=== Usages ===
j1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1597  <|@  <|@
f <@~|@floating>@ <|@
tid j1426 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1425 
address: v1634 
=== Succesors ===
=== Usages ===
v1653 v1655 v1657 v1659 v1661 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1425 address: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid j1472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1285 
y: j1471 
=== Succesors ===
=== Usages ===
v1473 v1475 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1472 
y: j1206 
=== Succesors ===
=== Usages ===
v1301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1472 y: j1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1473 
=== Succesors ===
trueSuccessor: v1299 
falseSuccessor: v1300 
=== Usages ===
=== Predecessor ===
v1297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1473 #trueSuccessor: v1299 #falseSuccessor: v1300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1311 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
v1299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
v1300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1463 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1303 
values: j1206 j1470 
=== Succesors ===
=== Usages ===
v1661 j1470 v1660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1303 values: j1206 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1302 
=== Succesors ===
next: v1601 
=== Usages ===
v1601 v1307 v1308 j1463 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1302 #next: v1601  <|@  <|@
f <@~|@floating>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1463 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1303 
address: v1661 
=== Succesors ===
next: v1558 
=== Usages ===
v1558 
=== Predecessor ===
v1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1303 address: v1661 #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1463 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1660 
value: v1601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1310 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1660 value: v1601 stateAfter: - lastLocationAccess: - #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid j1470 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1463 
y: j421 
=== Succesors ===
=== Usages ===
j1455 j1463 v1475 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1463 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1472 
y: j1470 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1472 y: j1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1475 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1475 #trueSuccessor: v1307 #falseSuccessor: v1309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1303 
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1303 #next: v1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
v1307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1455 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1312 
values: j1206 j1470 
=== Succesors ===
=== Usages ===
v1659 j1462 j1446 v1479 v1658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1312 values: j1206 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1311 v1313 
=== Succesors ===
next: v1335 
=== Usages ===
j1455 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1311 v1313 #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid j1478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1285 
y: j1477 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1478 
y: j1455 
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1478 y: j1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1479 
=== Succesors ===
trueSuccessor: v1334 
falseSuccessor: v1333 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1479 #trueSuccessor: v1334 #falseSuccessor: v1333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
v1334 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1602 
=== Usages ===
v1602 
=== Predecessor ===
v1335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1602  <|@  <|@
f <@~|@floating>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1455 
=== Succesors ===
=== Usages ===
v1602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1333 
address: v1659 
=== Succesors ===
next: v1556 
=== Usages ===
v1556 
=== Predecessor ===
v1333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1333 address: v1659 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1455 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1658 
value: v1602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1658 value: v1602 stateAfter: - lastLocationAccess: - #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid j1462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1455 
y: j1162 
=== Succesors ===
=== Usages ===
j1446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1455 y: j1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
v1556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1446 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1323 
values: j1462 j1455 
=== Succesors ===
=== Usages ===
v1657 j1454 j1438 v1483 v1656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1323 values: j1462 j1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1322 v1338 
=== Succesors ===
next: v1341 
=== Usages ===
j1446 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1322 v1338 #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid j1482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1285 
y: j1481 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1482 
y: j1446 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1482 y: j1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1483 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1483 #trueSuccessor: v1340 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1603 
=== Usages ===
v1603 
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1446 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1339 
address: v1657 
=== Succesors ===
next: v1554 
=== Usages ===
v1554 
=== Predecessor ===
v1339 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1339 address: v1657 #next: v1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1446 
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1656 
value: v1603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1656 value: v1603 stateAfter: - lastLocationAccess: - #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid j1454 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1446 
y: j1453 
=== Succesors ===
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1446 y: j1453  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1438 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1327 
values: j1454 j1446 
=== Succesors ===
=== Usages ===
v1655 j1445 j1429 v1487 v1654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1327 values: j1454 j1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1326 v1344 
=== Succesors ===
next: v1347 
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1326 v1344 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid j1486 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1285 
y: j1485 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1486 
y: j1438 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1486 y: j1438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1487 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1487 #trueSuccessor: v1346 #falseSuccessor: v1345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
v1604 
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1438 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1345 
address: v1655 
=== Succesors ===
next: v1552 
=== Usages ===
v1552 
=== Predecessor ===
v1345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1345 address: v1655 #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1438 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1654 
value: v1604 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1654 value: v1604 stateAfter: - lastLocationAccess: - #next: v1329  <|@  <|@
f <@~|@floating>@ <|@
tid j1445 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1438 
y: j1431 
=== Succesors ===
=== Usages ===
j1429 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1438 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
v1552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1429 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1330 
values: j1445 j1438 
=== Succesors ===
=== Usages ===
v1653 v1490 v1652 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1330 values: j1445 j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1329 v1350 
=== Succesors ===
next: v1353 
=== Usages ===
j1429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1329 v1350 #next: v1353  <|@  <|@
f <@~|@floating>@ <|@
tid j1489 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1285 
y: j676 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1489 
y: j1429 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1489 y: j1429  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1490 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1490 #trueSuccessor: v1352 #falseSuccessor: v1351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1605 
=== Usages ===
i1605 
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1605  <|@  <|@
f <@~|@floating>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1429 
=== Succesors ===
=== Usages ===
i1605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1605 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1351 
address: v1653 
=== Succesors ===
next: v1550 
=== Usages ===
v1550 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1351 address: v1653 #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1429 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1652 
value: i1605 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1332 
=== Usages ===
=== Predecessor ===
i1605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1652 value: i1605 stateAfter: - lastLocationAccess: - #next: v1332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1315 v1332 v1356 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1315 v1332 v1356 #next: v1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1363 
=== Usages ===
j1495 
=== Predecessor ===
v1316 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1363  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i641 
=== Succesors ===
=== Usages ===
j1289 v1422 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1285 
y: j1284 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1285 y: j1284  <|@  <|@
f <@*|@fixed>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1422 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1422 #trueSuccessor: v1362 #falseSuccessor: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1199 
index: j1285 
=== Succesors ===
=== Usages ===
j1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1199 index: j1285  <|@  <|@
f <@~|@floating>@ <|@
tid j1495 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1493 
address: v1651 
=== Succesors ===
=== Usages ===
v1662 v1663 v1664 v1665 v1666 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1493 address: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1284 
y: j1285 
=== Succesors ===
=== Usages ===
j1540 j1526 j1531 j1534 j1537 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1284 y: j1285  <|@  <|@
f <@~|@floating>@ <|@
tid j1526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1289 
y: j1471 
=== Succesors ===
=== Usages ===
v1527 v1529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j1206 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1526 y: j1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1527 
=== Succesors ===
trueSuccessor: v1364 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1527 #trueSuccessor: v1364 #falseSuccessor: v1365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1375 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1375  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
v1365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1520 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1368 
values: j1206 j1525 
=== Succesors ===
=== Usages ===
v1666 j1525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1368 values: j1206 j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1367 
=== Succesors ===
next: v1568 
=== Usages ===
j1520 v1371 v1372 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1367 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1520 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1666 
value: v1569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1666 value: v1569 stateAfter: - lastLocationAccess: - #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid j1525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1520 
y: j421 
=== Succesors ===
=== Usages ===
j1514 j1520 v1529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1520 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j1525 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1526 y: j1525  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1529 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1529 #trueSuccessor: v1371 #falseSuccessor: v1373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1368 
=== Succesors ===
next: v1377 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1368 #next: v1377  <|@  <|@
f <@*|@fixed>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1514 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1376 
values: j1206 j1525 
=== Succesors ===
=== Usages ===
v1665 j1519 j1508 v1532 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1376 values: j1206 j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1375 v1377 
=== Succesors ===
next: v1398 
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1375 v1377 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1531 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1289 
y: j1477 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1531 
y: j1514 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1531 y: j1514  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1532 
=== Succesors ===
trueSuccessor: v1397 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1532 #trueSuccessor: v1397 #falseSuccessor: v1396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
v1397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1514 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1665 
value: v1573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1665 value: v1573 stateAfter: - lastLocationAccess: - #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid j1519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1514 
y: j1162 
=== Succesors ===
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1514 y: j1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
v1567 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1508 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1387 
values: j1519 j1514 
=== Succesors ===
=== Usages ===
v1664 j1513 j1502 v1535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1387 values: j1519 j1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1386 v1401 
=== Succesors ===
next: v1404 
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1386 v1401 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid j1534 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1289 
y: j1481 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1534 
y: j1508 
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1534 y: j1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1535 
=== Succesors ===
trueSuccessor: v1403 
falseSuccessor: v1402 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1535 #trueSuccessor: v1403 #falseSuccessor: v1402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1407 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1565 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1508 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1508  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1664 
value: v1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1389 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1664 value: v1572 stateAfter: - lastLocationAccess: - #next: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid j1513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1508 
y: j1453 
=== Succesors ===
=== Usages ===
j1502 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1508 y: j1453  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1502 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1390 
values: j1513 j1508 
=== Succesors ===
=== Usages ===
v1663 j1507 j1496 v1538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1390 values: j1513 j1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1389 v1407 
=== Succesors ===
next: v1410 
=== Usages ===
j1502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1389 v1407 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1289 
y: j1485 
=== Succesors ===
=== Usages ===
v1538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1537 
y: j1502 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1537 y: j1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1538 
=== Succesors ===
trueSuccessor: v1409 
falseSuccessor: v1408 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1538 #trueSuccessor: v1409 #falseSuccessor: v1408  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1563 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1502 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1502  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1663 
value: v1571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1663 value: v1571 stateAfter: - lastLocationAccess: - #next: v1392  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1502 
y: j1431 
=== Succesors ===
=== Usages ===
j1496 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1502 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
v1563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1496 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1393 
values: j1507 j1502 
=== Succesors ===
=== Usages ===
v1662 v1541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1393 values: j1507 j1502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1392 v1413 
=== Succesors ===
next: v1416 
=== Usages ===
j1496 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1392 v1413 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid j1540 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1289 
y: j676 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1540 
y: j1496 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1540 y: j1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1541 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1541 #trueSuccessor: v1415 #falseSuccessor: v1414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1419 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1419  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1496 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1496  <|@  <|@
f <@~|@floating>@ <|@
tid i1570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1662 
value: i1570 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1662 value: i1570 stateAfter: - lastLocationAccess: - #next: v1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1368 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1379 v1395 v1419 
=== Succesors ===
next: a1026 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1379 v1395 v1419 #next: a1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1199 
=== Succesors ===
next: v523 
=== Usages ===
a977 a522 
=== Predecessor ===
v1380 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1199 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a1026 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1626 
value: a522 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1234 
=== Usages ===
=== Predecessor ===
a1026 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1626 value: a522 stateAfter: - lastLocationAccess: - #next: j1234  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
j1234 ?200 ?336 ?216 ?354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a452 
=== Succesors ===
next: v1240 
=== Usages ===
j1236 
=== Predecessor ===
v523 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a452 #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid i1235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1234 
y: i1235 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1234 y: i1235  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1236 
index: j1239 
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1236 index: j1239  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1647 
value: i1241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
j1234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1647 value: i1241 stateAfter: - lastLocationAccess: - #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
v1240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v537 #falseSuccessor: v533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558048024483679711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587754122910774383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i641 
y: i1599 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i641 y: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i550 
y: i1600 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i550 y: i1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v551 
=== Succesors ===
trueSuccessor: v554 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v551 #trueSuccessor: v554 #falseSuccessor: v552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557998936471558629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562527080104989666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v536 v553 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v536 v553 #next: v556  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a455 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1594 
=== Succesors ===
=== Usages ===
?354 ?200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1594  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: a452 a455 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: a452 a455  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a452 - 
=== Succesors ===
=== Usages ===
?268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a452 -  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - - 
=== Succesors ===
=== Usages ===
?314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - -  <|@  <|@
tid ?314 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?268 
values: - - 
=== Succesors ===
=== Usages ===
?336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?268 values: - -  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?314 
values: a452 - 
=== Succesors ===
=== Usages ===
?354 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a452 -  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?336 
values: a452 a455 i1599 
=== Succesors ===
=== Usages ===
?351 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?336 values: a452 a455 i1599  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?354 
values: - - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?354 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?351 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587678189892024583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607553298947440966
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a977 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v414 
values: a1026 a470 
=== Succesors ===
=== Usages ===
j1248 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v414 values: a1026 a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v413 v416 
=== Succesors ===
next: j1244 
=== Usages ===
a977 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v413 v416 #next: j1244  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1596 
=== Succesors ===
=== Usages ===
j1244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a460 
=== Succesors ===
next: j1248 
=== Usages ===
v1648 
=== Predecessor ===
v414 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a460 #next: j1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a977 
=== Succesors ===
next: v1254 
=== Usages ===
v1649 
=== Predecessor ===
j1244 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a977 #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1244 
index: - 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1244 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1600 
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1248 
index: j1249 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1248 index: j1249  <|@  <|@
f <@~|@floating>@ <|@
tid j1253 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1599 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1648 v1649 j1253 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
j1248 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1648 v1649 j1253 #next: v476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1625 
value: i322 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1625 value: i322 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i1583 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2531) [bci: 252]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1595 
y: v1273 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1595 y: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1274 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v758 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1274 #trueSuccessor: v755 #falseSuccessor: v758  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid a1672 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
v569 ?300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid a1671 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1594 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1594  <|@  <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5c514af9
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a1672 a1671 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1672 a1671  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?264 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?208 
values: - - 
=== Succesors ===
=== Usages ===
?300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - -  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 1065
stackSize: 0
=== Inputs ===
outerFrameState: ?264 
values: a1672 - 
=== Succesors ===
=== Usages ===
?974 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?264 values: a1672 -  <|@  <|@
tid ?974 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 669
stackSize: 0
=== Inputs ===
outerFrameState: ?300 
values: - - 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?300 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v569 
stateDuring: ?974 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v569 stateDuring: ?974 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i1584 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid i1094 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145203
stableDimension: 0
stamp: i32 [-145203] ⇊00000000fffdc8cd ⇈00000000fffdc8cd
stampKind: i32
value: int[-145203|0xfffffffffffdc8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v760 #falseSuccessor: v763  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1606 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
=== Succesors ===
next: v769 
=== Usages ===
i574 
=== Predecessor ===
v760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1628 #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1606 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1606  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i574 
y: i13 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i574 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v768 
=== Usages ===
=== Predecessor ===
i1606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v765 #falseSuccessor: v768  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1607 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1607  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1629 
=== Succesors ===
next: v170 
=== Usages ===
i579 
=== Predecessor ===
v765 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1629 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1607 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1607  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1615a16d
keySuccessors: [I@64f5fa29
keys: [I@6472049
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: i579 
=== Succesors ===
successors: v165 v164 
=== Usages ===
=== Predecessor ===
i1607 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i579 #successors: v165 v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5017b4fa
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a442 a39 a2 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 a39 a2  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
tid ?973 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - - 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v580 
stateDuring: ?973 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v580 stateDuring: ?973 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i1585 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid i1074 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -41747
stableDimension: 0
stamp: i32 [-41747] ⇊00000000ffff5ced ⇈00000000ffff5ced
stampKind: i32
value: int[-41747|0xffffffffffff5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid i1098 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147219
stableDimension: 0
stamp: i32 [-147219] ⇊00000000fffdc0ed ⇈00000000fffdc0ed
stampKind: i32
value: int[-147219|0xfffffffffffdc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1095 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid i1096 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145971
stableDimension: 0
stamp: i32 [-145971] ⇊00000000fffdc5cd ⇈00000000fffdc5cd
stampKind: i32
value: int[-145971|0xfffffffffffdc5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid i1069 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: i32
=== Inputs ===
x: i18 
y: i37 
=== Succesors ===
=== Usages ===
v44 v1631 ?128 ?128 i17 i18 i17 i18 v587 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i38 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v773 #falseSuccessor: v770  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid i1100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1588 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1588  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v587 
=== Succesors ===
trueSuccessor: v775 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v587 #trueSuccessor: v775 #falseSuccessor: v778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
a1610 
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v780 #falseSuccessor: v783  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1608 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1608  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
=== Succesors ===
next: v789 
=== Usages ===
i599 
=== Predecessor ===
v780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1674 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1608 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1608  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i13 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i599 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v785 
falseSuccessor: v788 
=== Usages ===
=== Predecessor ===
i1608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v785 #falseSuccessor: v788  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1609 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1609  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: v127 
=== Usages ===
i603 
=== Predecessor ===
v785 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1609 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1615a16d
keySuccessors: [I@64f5fa29
keys: [I@6472049
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
value: i603 
=== Succesors ===
successors: v122 v121 
=== Usages ===
=== Predecessor ===
i1609 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i603 #successors: v122 v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1610 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1610  <|@  <|@
f <@~|@floating>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a4 
index: i38 
=== Succesors ===
=== Usages ===
a1610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v775 
address: v1631 
=== Succesors ===
next: v1611 
=== Usages ===
v1650 v1633 v1632 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v775 address: v1631 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1610 
=== Succesors ===
=== Usages ===
v1611 v1612 v1613 v1615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1650 
=== Succesors ===
next: v1133 
=== Usages ===
v1277 
=== Predecessor ===
a1610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1650 #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1611 
y: v1276 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1611 y: v1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1277 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1277 #trueSuccessor: v798 #falseSuccessor: v1130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid i1110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154899
stableDimension: 0
stamp: i32 [-154899] ⇊00000000fffda2ed ⇈00000000fffda2ed
stampKind: i32
value: int[-154899|0xfffffffffffda2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1144 
=== Usages ===
v1279 
=== Predecessor ===
v1130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1612 
y: v1278 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1612 y: v1278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1279 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v1141 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1279 #trueSuccessor: v803 #falseSuccessor: v1141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid i1112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155155
stableDimension: 0
stamp: i32 [-155155] ⇊00000000fffda1ed ⇈00000000fffda1ed
stampKind: i32
value: int[-155155|0xfffffffffffda1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v803 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1122 
=== Usages ===
v1281 
=== Predecessor ===
v1141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1613 
y: v1280 
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1613 y: v1280  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 190
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i38 i38 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i38 i38 a11 i19 - - -  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: - - - 
=== Succesors ===
=== Usages ===
?290 ?976 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.9263680917092032
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v1120 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v1120 #falseSuccessor: v1119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609376507208540546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1614 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1614  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1610 
=== Succesors ===
=== Usages ===
i1614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1614 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:137) [bci: 5]
at java.lang.Integer.intValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 69]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1632 
=== Succesors ===
next: v287 
=== Usages ===
j269 
=== Predecessor ===
v1120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1632 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3076) [bci: 1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1614 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1614  <|@  <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6b32795c
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a442 j269 a2 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 j269 a2  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2787
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: - - - 
=== Succesors ===
=== Usages ===
?975 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: - - -  <|@  <|@
tid ?975 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(int, Locale)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3083
stackSize: 0
=== Inputs ===
outerFrameState: ?290 
values: - - - - - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
bci: 55
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v614 
stateDuring: ?975 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
i1614 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v614 stateDuring: ?975 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1156 
=== Usages ===
v1283 
=== Predecessor ===
v1119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1615 
y: v1282 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1615 y: v1282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1283 
=== Succesors ===
trueSuccessor: v1154 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1283 #trueSuccessor: v1154 #falseSuccessor: v808  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1616 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1616  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1610 
=== Succesors ===
=== Usages ===
j1616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Long.value
nodeSourcePosition: at java.lang.Long.longValue(Long.java:1000) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.longValue(BoxingSnippets.java:143) [bci: 5]
at java.lang.Long.longValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 91]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1633 
=== Succesors ===
next: v247 
=== Usages ===
v623 
=== Predecessor ===
v1154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1633 #next: v247  <|@  <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@205df2a1
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a442 j1616 a2 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 j1616 a2  <|@  <|@
tid ?976 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2789
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: - - - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
bci: 95
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v623 
stateDuring: ?976 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
j1616 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v623 stateDuring: ?976 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid i1582 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid i1114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157459
stableDimension: 0
stamp: i32 [-157459] ⇊00000000fffd98ed ⇈00000000fffd98ed
stampKind: i32
value: int[-157459|0xfffffffffffd98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid i1076 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739] ⇊00000000ffff87ed ⇈00000000ffff87ed
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid i1106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153619
stableDimension: 0
stamp: i32 [-153619] ⇊00000000fffda7ed ⇈00000000fffda7ed
stampKind: i32
value: int[-153619|0xfffffffffffda7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid i1104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152627
stableDimension: 0
stamp: i32 [-152627] ⇊00000000fffdabcd ⇈00000000fffdabcd
stampKind: i32
value: int[-152627|0xfffffffffffdabcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150555
stableDimension: 0
stamp: i32 [-150555] ⇊00000000fffdb3e5 ⇈00000000fffdb3e5
stampKind: i32
value: int[-150555|0xfffffffffffdb3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B104" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B107" "B106" "B105" "B96" "B98" "B103" "B19" 
    successors 
    xhandlers
    flags 
    probability 4581686143111005053
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1070 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-170515 - -8723] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1067 
values: i1069 i1074 i1076 i1078 i1090 i1092 i1094 i1096 i1098 i1100 i1102 i1104 i1106 i1110 i1112 i1114 i1078 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1067 values: i1069 i1074 i1076 i1078 i1090 i1092 i1094 i1096 i1098 i1100 i1102 i1104 i1106 i1110 i1112 i1114 i1078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1068 v1073 v1075 v1077 v1089 v1091 v1093 v1095 v1097 v1099 v1101 v1103 v1105 v1109 v1111 v1113 v1127 
=== Succesors ===
next: v1072 
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1068 v1073 v1075 v1077 v1089 v1091 v1093 v1095 v1097 v1099 v1101 v1103 v1105 v1109 v1111 v1113 v1127 #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1070 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1070 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1064  <|@  <|@
f <@~|@floating>@ <|@
tid i1066 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160307
stableDimension: 0
stamp: i32 [-160307] ⇊00000000fffd8dcd ⇈00000000fffd8dcd
stampKind: i32
value: int[-160307|0xfffffffffffd8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i1066 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i1066 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 269]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 270]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid a1058 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@620363699
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@620363699]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -111387
stableDimension: 0
stamp: i32 [-111387] ⇊00000000fffe4ce5 ⇈00000000fffe4ce5
stampKind: i32
value: int[-111387|0xfffffffffffe4ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i1057 
speculation: a1058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i1057 speculation: a1058  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid i1078 <|@
result int[-130401|0xfffffffffffe029f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130401
stableDimension: 0
stamp: i32 [-130401] ⇊00000000fffe029f ⇈00000000fffe029f
stampKind: i32
value: int[-130401|0xfffffffffffe029f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v66 v1617 v426 ?12 ?20 ?158 ?73 ?128 ?171 ?972 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v623 ?128 v580 ?158 v614 ?972 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v426 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v40 v1631 ?158 ?128 ?972 v1630 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2494
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 - - - - - - - 
=== Succesors ===
=== Usages ===
v1047 v1667 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v696 
falseSuccessor: v694 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v696 #falseSuccessor: v694  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@64a720d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid a1044 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@747854488
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@747854488]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1043 <|@
result int[-148755|0xfffffffffffdbaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148755
stableDimension: 0
stamp: i32 [-148755] ⇊00000000fffdbaed ⇈00000000fffdbaed
stampKind: i32
value: int[-148755|0xfffffffffffdbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1043 
speculation: a1044 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1043 speculation: a1044  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@747854488] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -148755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1586 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1586  <|@  <|@
f <@~|@floating>@ <|@
tid v1617 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1586 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1617 
=== Succesors ===
next: v1667 
=== Usages ===
v1667 
=== Predecessor ===
v694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1617 #next: v1667  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1586 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a1586 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1586 #next: a11  <|@  <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
returnStamp: a [Ljava/lang/Object; (unchecked=a [Ljava/util/Formatter$FormatString;)
signature: [Ljdk.vm.ci.meta.JavaType;@7f9f65b8
stamp: void
targetMethod: HotSpotMethod<Formatter.parse(String)>
=== Inputs ===
arguments: a1 a3 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2497) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 ?12 i17 i18 i43 ?972 ?972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?972 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Formatter.parse
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v426 
stateDuring: ?972 
=== Succesors ===
next: i1587 
=== Usages ===
?12 ?20 v1619 v1618 ?73 ?128 ?171 ?158 
=== Predecessor ===
v1667 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v426 stateDuring: ?972 #next: i1587  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - a11 
=== Succesors ===
=== Usages ===
v1055 i1587 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - - a11  <|@  <|@
f <@~|@floating>@ <|@
tid v1618 <|@
result [v6|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1587 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1618 
=== Succesors ===
next: v1581 
=== Usages ===
v22 j673 v687 
=== Predecessor ===
a11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1618 #next: v1581  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1587 
=== Succesors ===
=== Usages ===
j677 v679 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1587  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j677 j1489 j1540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j677 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j673 
y: j676 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j673 y: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j673 
=== Succesors ===
=== Usages ===
v1581 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j677 y: j673  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v117 v160 v388 a1195 v687 v375 v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v679 
=== Succesors ===
trueSuccessor: v1577 
falseSuccessor: v1580 
=== Usages ===
=== Predecessor ===
i1587 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v679 #trueSuccessor: v1577 #falseSuccessor: v1580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1575 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1575  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
v1577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1579 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1587 
y: i13 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1587 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v708 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v1578 #falseSuccessor: v708  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1576  <|@  <|@
f <@*|@fixed>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1575 v1576 
=== Succesors ===
next: i1588 
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1575 v1576 #next: i1588  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i1588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1588 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 154]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1630 
=== Succesors ===
next: v15 
=== Usages ===
i43 v587 
=== Predecessor ===
v1574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1630 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1588 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1588 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
result meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1276 <|@
result meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 v1064 v1072 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i64 v340 i371 v384 i1171 i1585 i1584 i1583 i1582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1271 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.index(Formatter.java:2593) [bci: 0]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1267 <|@
result meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
result meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
i1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], int[-1|0xffffffffffffffff], int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B100" "B76" "B84" "B79" "B102" 
    successors "B8" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617138375075572482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i17 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i17 i17 i17 i38 
=== Succesors ===
=== Usages ===
?20 ?73 ?171 i17 i17 ?158 i17 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i17 i17 i17 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i18 i18 i18 i38 
=== Succesors ===
=== Usages ===
?20 ?73 i38 ?171 i18 i18 ?158 i18 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i18 i18 i18 i38  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i13 i64 i1583 i1585 i1584 i1582 
=== Succesors ===
=== Usages ===
?20 v22 v1619 ?73 ?128 ?171 i64 ?158 i1582 i1583 i1584 i1585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i13 i64 i1583 i1585 i1584 i1582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.84266551142605
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v15 
=== Succesors ===
next: v27 
=== Usages ===
i17 i18 i19 v25 v65 v67 v217 v218 v301 v808 v803 v798 v758 v788 v718 v783 v778 v773 v768 v763 v748 v753 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v15 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1587 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i1587  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
stamp: void
trueSuccessorProbability: 0.7935021533821518
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|DWORD, v14|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7935021533821518 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1589 
=== Usages ===
v685 
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1589  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1574 v23 
=== Succesors ===
=== Usages ===
a1589 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1574 v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1619 <|@
result [v6|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a11 
index: i19 
=== Succesors ===
=== Usages ===
a1589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1589 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v685 
address: v1619 
=== Succesors ===
next: v1590 
=== Usages ===
a442 v1636 v1620 v1622 v1628 v1629 v1673 v1674 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v685 address: v1619 #next: v1590  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2502
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
v1064 v1590 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1636 <|@
result [v15|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
v1590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1590 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1636 
=== Succesors ===
next: v86 
=== Usages ===
v1270 v1268 
=== Predecessor ===
a1589 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1636 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1590 
y: v1267 
=== Succesors ===
=== Usages ===
v140 v719 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1590 y: v1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1590 
y: v1269 
=== Succesors ===
=== Usages ===
v764 v86 v784 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1590 y: v1269  <|@  <|@
f <@~|@floating>@ <|@
tid v1622 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
a1594 i1591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 0.5218002798789941
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v79 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5218002798789941 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611697511477050593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1591 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1591 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.index
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.index(Formatter.java:2636) [bci: 1]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1622 
=== Succesors ===
next: v80 
=== Usages ===
i75 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1622 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
i1591 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v715 #falseSuccessor: v718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-2|0xfffffffffffffffe]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v72 
values: i1591 i100 
=== Succesors ===
=== Usages ===
?73 v32 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v72 values: i1591 i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v92 
=== Succesors ===
next: v32 
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v92 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a442 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1589 
=== Succesors ===
=== Usages ===
v623 ?73 v614 v580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1589  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a442 - - i75 
=== Succesors ===
=== Usages ===
v1072 a1195 a1593 v1668 v1669 v1670 i1598 v1611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a442 - - i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@5f9fee0
keySuccessors: [I@3308335d
keys: [I@586756e8
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
value: i75 
=== Succesors ===
successors: v33 v35 v36 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i75 #successors: v33 v35 v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v18|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4177812745869394] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612220307059015120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.8449316052539398
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v134 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8449316052539398 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611192161200176738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1592 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1592  <|@  <|@
f <@~|@floating>@ <|@
tid v1620 <|@
result [v15|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
a1592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1592 <|@
result v20|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1620 
=== Succesors ===
next: a1593 
=== Usages ===
v1621 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1620 #next: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid v1621 <|@
result [v20|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1592 
=== Succesors ===
=== Usages ===
a1593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1593 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1621 
=== Succesors ===
next: v1668 
=== Usages ===
a452 v1668 v1625 v1626 v1637 a1672 
=== Predecessor ===
a1592 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1621 #next: v1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1593 
=== Succesors ===
next: a1594 
=== Usages ===
=== Predecessor ===
a1593 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1593 #next: a1594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1594 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1622 
=== Succesors ===
next: v1669 
=== Usages ===
a455 v1669 v1623 a1671 
=== Predecessor ===
v1668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1622 #next: v1669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1594 
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
a1594 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1594 #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
result [v21|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1595 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1637 
=== Succesors ===
next: v186 
=== Usages ===
v1274 v1272 
=== Predecessor ===
v1669 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1637 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1595 
y: v1271 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1595 y: v1271  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?208 ?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5841949545480353
=== Inputs ===
condition: v1272 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1272 #trueSuccessor: v179 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v15|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v21|DWORD[.] = MOV [v20|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v21|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v21|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5841949545480353 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607652270631471577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1596 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1596  <|@  <|@
f <@~|@floating>@ <|@
tid v1623 <|@
result [v22|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1594 
=== Succesors ===
=== Usages ===
a1596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1596 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1623 
=== Succesors ===
next: v1670 
=== Usages ===
a460 v1670 v1624 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1623 #next: v1670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a1596 
=== Succesors ===
next: a1597 
=== Usages ===
=== Predecessor ===
a1596 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a1596 #next: a1597  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
result [v21|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
a1597 v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1597 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1626 
=== Succesors ===
next: i1598 
=== Usages ===
a470 v1634 v1627 
=== Predecessor ===
v1670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1626 #next: i1598  <|@  <|@
f <@~|@floating>@ <|@
tid v1627 <|@
result [v25|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1597 
=== Succesors ===
=== Usages ===
i1598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1598 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1627 
=== Succesors ===
next: i1599 
=== Usages ===
i339 i371 i1019 i503 v997 
=== Predecessor ===
a1597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1627 #next: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v1624 <|@
result [v24|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1596 
=== Succesors ===
=== Usages ===
i1599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1599 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1624 
=== Succesors ===
next: i1600 
=== Usages ===
i322 i503 ?354 i550 j1253 
=== Predecessor ===
i1598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1624 #next: i1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1625 <|@
result [v21|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1593 
=== Succesors ===
=== Usages ===
i1600 v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1600 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1625 
=== Succesors ===
next: v343 
=== Usages ===
i322 j1249 v532 v551 v504 
=== Predecessor ===
i1599 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1625 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1600 
y: i13 
=== Succesors ===
=== Usages ===
v538 v491 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1600 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1599 
y: i1600 
=== Succesors ===
=== Usages ===
v476 i339 i374 i641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1599 y: i1600  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i322 
y: i1598 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i322 y: i1598  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i339 
y: i37 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i339 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9518065952449013
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
i1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v22|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v24|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v24|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v21|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = ADD (x: v27|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v29|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9518065952449013 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607412583072286604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v491  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v490 #falseSuccessor: v486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577212839572592251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130401|0xfffffffffffe029f]] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607365245433290207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1598 
y: i1599 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1598 y: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i503 
y: i1600 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i503 y: i1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v505 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v507 #falseSuccessor: v505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v26|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577152247394676863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130401|0xfffffffffffe029f]] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607318381170683774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid a470 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1597 
=== Succesors ===
=== Usages ===
a977 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1597  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1598 
y: i37 
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1598 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i371 
y: i372 
=== Succesors ===
=== Usages ===
i374 i641 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i371 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i373 
y: i322 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i373 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i374 
y: i13 
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i374 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v375 
trueValue: i322 
falseValue: i373 
=== Succesors ===
=== Usages ===
i550 j1284 v384 i387 v1180 v997 i1019 a1195 v1222 i1171 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v375 trueValue: i322 falseValue: i373  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i37 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i641 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v745 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v748 #falseSuccessor: v745  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v34|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: v34|DWORD, ~trueValue: v29|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v36|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1089  <|@  <|@
f <@~|@floating>@ <|@
tid i1090 <|@
result int[-133139|0xfffffffffffdf7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133139
stableDimension: 0
stamp: i32 [-133139] ⇊00000000fffdf7ed ⇈00000000fffdf7ed
stampKind: i32
value: int[-133139|0xfffffffffffdf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133139|0xfffffffffffdf7ed]] destination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i386 
y: i641 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i386 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i13 
=== Succesors ===
=== Usages ===
v754 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i387 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v753 
falseSuccessor: v750 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v753 #falseSuccessor: v750  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v37|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1091 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1091  <|@  <|@
f <@~|@floating>@ <|@
tid i1092 <|@
result int[-133395|0xfffffffffffdf6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133395
stableDimension: 0
stamp: i32 [-133395] ⇊00000000fffdf6ed ⇈00000000fffdf6ed
stampKind: i32
value: int[-133395|0xfffffffffffdf6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133395|0xfffffffffffdf6ed]] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1174 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1174 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1219 
=== Usages ===
v1638 v1639 
=== Predecessor ===
v750 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1638 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1174 
index: - 
=== Succesors ===
=== Usages ===
j1219 v1221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1219 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1638 
=== Succesors ===
next: j1220 
=== Usages ===
j1178 v1640 v1641 a1194 v1646 v1642 v1643 v1644 v1645 
=== Predecessor ===
j1174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1638 #next: j1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1639 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1174 
index: - 
=== Succesors ===
=== Usages ===
j1220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1220 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1639 
=== Succesors ===
next: v1183 
=== Usages ===
v1184 
=== Predecessor ===
j1219 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1639 #next: v1183  <|@  <|@
f <@~|@floating>@ <|@
tid i1179 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i1179 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i641 y: i1179  <|@  <|@
f <@~|@floating>@ <|@
tid j1170 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1223 v1295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1180 
=== Succesors ===
trueSuccessor: v1182 
falseSuccessor: v1181 
=== Usages ===
=== Predecessor ===
j1220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1180 #trueSuccessor: v1182 #falseSuccessor: v1181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v36|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587063822740321660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid i1171 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i641 
y: i37 
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i641 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1202 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1203 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1171 
y: i1202 
=== Succesors ===
=== Usages ===
i1173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1171 y: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid i1172 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1173 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1203 
y: i1172 
=== Succesors ===
=== Usages ===
j1177 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1203 y: i1172  <|@  <|@
f <@~|@floating>@ <|@
tid j1177 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1173 
=== Succesors ===
=== Usages ===
j1178 v1642 v1643 v1644 v1645 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1173  <|@  <|@
f <@~|@floating>@ <|@
tid j1178 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
x: j1177 
y: j1219 
=== Succesors ===
=== Usages ===
v1184 v1221 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1177 y: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1220 
y: j1178 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1220 y: j1178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1184 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1188 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1184 #trueSuccessor: v1189 #falseSuccessor: v1188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SHL v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v41|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND v42|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557471465825995820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1187  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586994792723276388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1221 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1638 
value: j1178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1638 value: j1178 stateAfter: - lastLocationAccess: - #next: v1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1642 <|@
result [v44|QWORD + v39|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1642 
=== Succesors ===
next: v1211 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1642 #next: v1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1643 <|@
result [v44|QWORD + v39|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1643 
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1643 #next: v1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1644 <|@
result [v44|QWORD + v39|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1644 
=== Succesors ===
next: v1217 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1644 #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
result [v44|QWORD + v39|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1177 
index: j1219 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1177 index: j1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1645 
=== Succesors ===
next: v1222 
=== Usages ===
=== Predecessor ===
v1214 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1645 #next: v1222  <|@  <|@
f <@~|@floating>@ <|@
tid v1640 <|@
result [v39|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1219 
index: - 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1219 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1640 
value: i641 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1223 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1640 value: i641 stateAfter: - lastLocationAccess: - #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid v1641 <|@
result [v39|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1219 
index: - 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1219 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1641 
value: j1170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1641 value: j1170 stateAfter: - lastLocationAccess: - #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v1646 <|@
result [v39|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1219 
index: - 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1219 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1646 
value: v1275 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1646 value: v1275 stateAfter: - lastLocationAccess: - #next: v1193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1194 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1194 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1219 
=== Succesors ===
next: v1196 
=== Usages ===
a1199 
=== Predecessor ===
v1193 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1219 #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
a1194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572786023668818256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573338263805180435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1185 v1187 
=== Succesors ===
next: a1195 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1185 v1187 #next: a1195  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1195 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1169 i641 i13 
=== Succesors ===
next: v1198 
=== Usages ===
a1199 
=== Predecessor ===
v1186 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1169 i641 i13 #next: v1198  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
a1195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1199 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1197 
values: a1194 a1195 
=== Succesors ===
=== Usages ===
v1651 a1026 v1635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1197 values: a1194 a1195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1196 v1198 
=== Succesors ===
next: v1425 
=== Usages ===
a1199 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1196 v1198 #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1298 
=== Usages ===
j1426 j1428 
=== Predecessor ===
v1197 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1598 
y: i641 
=== Succesors ===
=== Usages ===
i1019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1598 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid i1019 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v997 
trueValue: i1598 
falseValue: i641 
=== Succesors ===
=== Usages ===
j1285 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v997 trueValue: i1598 falseValue: i641  <|@  <|@
f <@~|@floating>@ <|@
tid j1285 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1019 
=== Succesors ===
=== Usages ===
j1489 v1651 j1289 v1295 v1422 j1472 j1478 j1482 j1486 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1285 
y: j1170 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1285 y: j1170  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1445 j1507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1485 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1486 j1537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1453 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1454 j1513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1481 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1482 j1534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1162 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1519 j1462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1477 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1478 j1531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1525 j1470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1471 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1472 j1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1206 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1514 v1527 j1455 j1463 v1473 j1520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1295 
=== Succesors ===
trueSuccessor: v1296 
falseSuccessor: v1297 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1295 #trueSuccessor: v1296 #falseSuccessor: v1297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1315 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
v1296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1301 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1301  <|@  <|@
f <@~|@floating>@ <|@
tid v1635 <|@
result [v49|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1199 
index: - 
=== Succesors ===
=== Usages ===
j1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1199 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1428 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1425 
address: v1635 
=== Succesors ===
=== Usages ===
v1652 v1654 v1656 v1658 v1660 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1425 address: v1635  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
result [v25|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1597 
=== Succesors ===
=== Usages ===
j1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1597  <|@  <|@
f <@~|@floating>@ <|@
tid j1426 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1425 
address: v1634 
=== Succesors ===
=== Usages ===
v1653 v1655 v1657 v1659 v1661 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1425 address: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid j1472 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1285 
y: j1471 
=== Succesors ===
=== Usages ===
v1473 v1475 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1472 
y: j1206 
=== Succesors ===
=== Usages ===
v1301 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1472 y: j1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1473 
=== Succesors ===
trueSuccessor: v1299 
falseSuccessor: v1300 
=== Usages ===
=== Predecessor ===
v1297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1473 #trueSuccessor: v1299 #falseSuccessor: v1300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = LEA [v25|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1311 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1311  <|@  <|@
f <@*|@fixed>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
v1299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1303 
=== Predecessor ===
v1300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1463 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1303 
values: j1206 j1470 
=== Succesors ===
=== Usages ===
v1661 j1470 v1660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1303 values: j1206 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1302 
=== Succesors ===
next: v1601 
=== Usages ===
v1601 v1307 v1308 j1463 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1302 #next: v1601  <|@  <|@
f <@~|@floating>@ <|@
tid v1661 <|@
result [v53|QWORD[*] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1463 
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
result v56|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1303 
address: v1661 
=== Succesors ===
next: v1558 
=== Usages ===
v1558 
=== Predecessor ===
v1303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1303 address: v1661 #next: v1558  <|@  <|@
f <@~|@floating>@ <|@
tid v1660 <|@
result [v52|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1463 
=== Succesors ===
=== Usages ===
v1558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1660 
value: v1601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1310 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1660 value: v1601 stateAfter: - lastLocationAccess: - #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid j1470 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1463 
y: j421 
=== Succesors ===
=== Usages ===
j1455 j1463 v1475 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1463 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1472 
y: j1470 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1472 y: j1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1475 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1309 
=== Usages ===
=== Predecessor ===
v1558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1475 #trueSuccessor: v1307 #falseSuccessor: v1309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_WORD = H [v53|QWORD[*] + v55|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v55|QWORD * 2], input: v56|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1303 
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1303 #next: v1313  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
v1307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1455 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1312 
values: j1206 j1470 
=== Succesors ===
=== Usages ===
v1659 j1462 j1446 v1479 v1658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1312 values: j1206 j1470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1311 v1313 
=== Succesors ===
next: v1335 
=== Usages ===
j1455 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1311 v1313 #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid j1478 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1285 
y: j1477 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1478 
y: j1455 
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1478 y: j1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1479 
=== Succesors ===
trueSuccessor: v1334 
falseSuccessor: v1333 
=== Usages ===
=== Predecessor ===
v1312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1479 #trueSuccessor: v1334 #falseSuccessor: v1333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
v1335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
v1334 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1602 
=== Usages ===
v1602 
=== Predecessor ===
v1335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1602  <|@  <|@
f <@~|@floating>@ <|@
tid v1659 <|@
result [v53|QWORD[*] + v58|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1455 
=== Succesors ===
=== Usages ===
v1602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1602 <|@
result v60|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1333 
address: v1659 
=== Succesors ===
next: v1556 
=== Usages ===
v1556 
=== Predecessor ===
v1333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1333 address: v1659 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1658 <|@
result [v52|QWORD[.] + v58|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1455 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1658 
value: v1602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1322 
=== Usages ===
=== Predecessor ===
v1602 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1658 value: v1602 stateAfter: - lastLocationAccess: - #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid j1462 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1455 
y: j1162 
=== Succesors ===
=== Usages ===
j1446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1455 y: j1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1323 
=== Predecessor ===
v1556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|V128_WORD = H [v53|QWORD[*] + v58|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v58|QWORD * 2], input: v60|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v58|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1446 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1323 
values: j1462 j1455 
=== Succesors ===
=== Usages ===
v1657 j1454 j1438 v1483 v1656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1323 values: j1462 j1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1322 v1338 
=== Succesors ===
next: v1341 
=== Usages ===
j1446 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1322 v1338 #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid j1482 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1285 
y: j1481 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1482 
y: j1446 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1482 y: j1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1483 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1483 #trueSuccessor: v1340 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v51|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1603 
=== Usages ===
v1603 
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid v1657 <|@
result [v53|QWORD[*] + v62|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1446 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1603 <|@
result v64|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1339 
address: v1657 
=== Succesors ===
next: v1554 
=== Usages ===
v1554 
=== Predecessor ===
v1339 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1339 address: v1657 #next: v1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1656 <|@
result [v52|QWORD[.] + v62|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1446 
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1656 
value: v1603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1656 value: v1603 stateAfter: - lastLocationAccess: - #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid j1454 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1446 
y: j1453 
=== Succesors ===
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1446 y: j1453  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V64_WORD = H [v53|QWORD[*] + v62|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v62|QWORD * 2], input: v64|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1438 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1327 
values: j1454 j1446 
=== Succesors ===
=== Usages ===
v1655 j1445 j1429 v1487 v1654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1327 values: j1454 j1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1326 v1344 
=== Succesors ===
next: v1347 
=== Usages ===
j1438 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1326 v1344 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid j1486 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1285 
y: j1485 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1486 
y: j1438 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1486 y: j1438  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1487 
=== Succesors ===
trueSuccessor: v1346 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1487 #trueSuccessor: v1346 #falseSuccessor: v1345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v51|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
v1604 
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1655 <|@
result [v53|QWORD[*] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1438 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1604 <|@
result v68|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1345 
address: v1655 
=== Succesors ===
next: v1552 
=== Usages ===
v1552 
=== Predecessor ===
v1345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1345 address: v1655 #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1654 <|@
result [v52|QWORD[.] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1438 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1654 
value: v1604 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1654 value: v1604 stateAfter: - lastLocationAccess: - #next: v1329  <|@  <|@
f <@~|@floating>@ <|@
tid j1445 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1438 
y: j1431 
=== Succesors ===
=== Usages ===
j1429 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1438 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
v1552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V32_WORD = H [v53|QWORD[*] + v66|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v66|QWORD * 2], input: v68|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1429 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1330 
values: j1445 j1438 
=== Succesors ===
=== Usages ===
v1653 v1490 v1652 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1330 values: j1445 j1438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1329 v1350 
=== Succesors ===
next: v1353 
=== Usages ===
j1429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1329 v1350 #next: v1353  <|@  <|@
f <@~|@floating>@ <|@
tid j1489 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1285 
y: j676 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1285 y: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1489 
y: j1429 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1489 y: j1429  <|@  <|@
f <@*|@fixed>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1490 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1490 #trueSuccessor: v1352 #falseSuccessor: v1351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v51|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
v1352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1605 
=== Usages ===
i1605 
=== Predecessor ===
v1353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1605  <|@  <|@
f <@~|@floating>@ <|@
tid v1653 <|@
result [v53|QWORD[*] + v70|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1426 
index: j1429 
=== Succesors ===
=== Usages ===
i1605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1426 index: j1429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1605 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1351 
address: v1653 
=== Succesors ===
next: v1550 
=== Usages ===
v1550 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1351 address: v1653 #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1652 <|@
result [v52|QWORD[.] + v70|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1428 
index: j1429 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1428 index: j1429  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1652 
value: i1605 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1332 
=== Usages ===
=== Predecessor ===
i1605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1652 value: i1605 stateAfter: - lastLocationAccess: - #next: v1332  <|@  <|@
f <@*|@fixed>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVSX [v53|QWORD[*] + v70|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[.] + v70|QWORD * 2], y: v72|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1315 v1332 v1356 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1315 v1332 v1356 #next: v1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1363 
=== Usages ===
j1495 
=== Predecessor ===
v1316 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1363  <|@  <|@
f <@~|@floating>@ <|@
tid j1284 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i641 
=== Succesors ===
=== Usages ===
j1289 v1422 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1285 
y: j1284 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1285 y: j1284  <|@  <|@
f <@*|@fixed>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1422 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1422 #trueSuccessor: v1362 #falseSuccessor: v1361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid v1651 <|@
result [v49|QWORD[.] + v51|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1199 
index: j1285 
=== Succesors ===
=== Usages ===
j1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1199 index: j1285  <|@  <|@
f <@~|@floating>@ <|@
tid j1495 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1493 
address: v1651 
=== Succesors ===
=== Usages ===
v1662 v1663 v1664 v1665 v1666 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1493 address: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1284 
y: j1285 
=== Succesors ===
=== Usages ===
j1540 j1526 j1531 j1534 j1537 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1284 y: j1285  <|@  <|@
f <@~|@floating>@ <|@
tid j1526 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1289 
y: j1471 
=== Succesors ===
=== Usages ===
v1527 v1529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j1206 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1526 y: j1206  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1527 
=== Succesors ===
trueSuccessor: v1364 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1527 #trueSuccessor: v1364 #falseSuccessor: v1365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v49|QWORD[.] + v51|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = SUB (x: v73|QWORD, ~y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1375 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1375  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
result v77|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
v1365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1520 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1368 
values: j1206 j1525 
=== Succesors ===
=== Usages ===
v1666 j1525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1368 values: j1206 j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1367 
=== Succesors ===
next: v1568 
=== Usages ===
j1520 v1371 v1372 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1367 #next: v1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1666 <|@
result [v74|QWORD[.] + v78|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1520 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1666 
value: v1569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1666 value: v1569 stateAfter: - lastLocationAccess: - #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid j1525 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1520 
y: j421 
=== Succesors ===
=== Usages ===
j1514 j1520 v1529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1520 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j1525 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1526 y: j1525  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1529 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1373 
=== Usages ===
=== Predecessor ===
v1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1529 #trueSuccessor: v1371 #falseSuccessor: v1373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v78|QWORD * 2], input: v77|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1368 
=== Succesors ===
next: v1377 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1368 #next: v1377  <|@  <|@
f <@*|@fixed>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1514 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1376 
values: j1206 j1525 
=== Succesors ===
=== Usages ===
v1665 j1519 j1508 v1532 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1376 values: j1206 j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1375 v1377 
=== Succesors ===
next: v1398 
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1375 v1377 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1531 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1289 
y: j1477 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1531 
y: j1514 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1531 y: j1514  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1532 
=== Succesors ===
trueSuccessor: v1397 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1532 #trueSuccessor: v1397 #falseSuccessor: v1396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
v1397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid v1665 <|@
result [v74|QWORD[.] + v80|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1514 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
result v82|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1665 
value: v1573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1665 value: v1573 stateAfter: - lastLocationAccess: - #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid j1519 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1514 
y: j1162 
=== Succesors ===
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1514 y: j1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
v1567 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v80|QWORD * 2], input: v82|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1508 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1387 
values: j1519 j1514 
=== Succesors ===
=== Usages ===
v1664 j1513 j1502 v1535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1387 values: j1519 j1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1386 v1401 
=== Succesors ===
next: v1404 
=== Usages ===
j1508 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1386 v1401 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid j1534 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1289 
y: j1481 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1534 
y: j1508 
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1534 y: j1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1535 
=== Succesors ===
trueSuccessor: v1403 
falseSuccessor: v1402 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1535 #trueSuccessor: v1403 #falseSuccessor: v1402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1407 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1565 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid v1664 <|@
result [v74|QWORD[.] + v84|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1508 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1508  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
result v86|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1664 
value: v1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1389 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1664 value: v1572 stateAfter: - lastLocationAccess: - #next: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid j1513 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1508 
y: j1453 
=== Succesors ===
=== Usages ===
j1502 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1508 y: j1453  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v84|QWORD * 2], input: v86|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v84|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1502 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1390 
values: j1513 j1508 
=== Succesors ===
=== Usages ===
v1663 j1507 j1496 v1538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1390 values: j1513 j1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1389 v1407 
=== Succesors ===
next: v1410 
=== Usages ===
j1502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1389 v1407 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid j1537 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1289 
y: j1485 
=== Succesors ===
=== Usages ===
v1538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1537 
y: j1502 
=== Succesors ===
=== Usages ===
v1410 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1537 y: j1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1538 
=== Succesors ===
trueSuccessor: v1409 
falseSuccessor: v1408 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1538 #trueSuccessor: v1409 #falseSuccessor: v1408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v75|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
v1409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1563 
=== Usages ===
=== Predecessor ===
v1410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1663 <|@
result [v74|QWORD[.] + v88|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1502 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1502  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
result v90|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1663 
value: v1571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1663 value: v1571 stateAfter: - lastLocationAccess: - #next: v1392  <|@  <|@
f <@~|@floating>@ <|@
tid j1507 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1502 
y: j1431 
=== Succesors ===
=== Usages ===
j1496 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1502 y: j1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
v1563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v88|QWORD * 2], input: v90|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1496 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1393 
values: j1507 j1502 
=== Succesors ===
=== Usages ===
v1662 v1541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1393 values: j1507 j1502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1392 v1413 
=== Succesors ===
next: v1416 
=== Usages ===
j1496 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1392 v1413 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid j1540 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1289 
y: j676 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1289 y: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1540 
y: j1496 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1540 y: j1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1541 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1414 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1541 #trueSuccessor: v1415 #falseSuccessor: v1414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1419 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1419  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1662 <|@
result [v74|QWORD[.] + v92|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1495 
index: j1496 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1495 index: j1496  <|@  <|@
f <@~|@floating>@ <|@
tid i1570 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1662 
value: i1570 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1395 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1662 value: i1570 stateAfter: - lastLocationAccess: - #next: v1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v92|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1368 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1379 v1395 v1419 
=== Succesors ===
next: a1026 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1379 v1395 v1419 #next: a1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1026 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1199 
=== Succesors ===
next: v523 
=== Usages ===
a977 a522 
=== Predecessor ===
v1380 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1199 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
result v94|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a1026 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1626 
value: a522 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1234 
=== Usages ===
=== Predecessor ===
a1026 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1626 value: a522 stateAfter: - lastLocationAccess: - #next: j1234  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
j1234 ?200 ?336 ?216 ?354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1593  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1234 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a452 
=== Succesors ===
next: v1240 
=== Usages ===
j1236 
=== Predecessor ===
v523 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a452 #next: v1240  <|@  <|@
f <@~|@floating>@ <|@
tid i1235 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1236 <|@
result v96|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1234 
y: i1235 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1234 y: i1235  <|@  <|@
f <@~|@floating>@ <|@
tid j1239 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1647 <|@
result [v96|QWORD[*] + v97|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1236 
index: j1239 
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1236 index: j1239  <|@  <|@
f <@~|@floating>@ <|@
tid i1241 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1647 
value: i1241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
j1234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1647 value: i1241 stateAfter: - lastLocationAccess: - #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v532 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v533 
=== Usages ===
=== Predecessor ===
v1240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v532 #trueSuccessor: v537 #falseSuccessor: v533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|DWORD[.] * 8 + 16], y: v94|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v96|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558048024483679711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587754122910774383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i641 
y: i1599 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i641 y: i1599  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i550 
y: i1600 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i550 y: i1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v551 
=== Succesors ===
trueSuccessor: v554 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v551 #trueSuccessor: v554 #falseSuccessor: v552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SUB (x: v36|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557998936471558629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562527080104989666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v536 v553 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v536 v553 #next: v556  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a455 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1594 
=== Succesors ===
=== Usages ===
?354 ?200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1594  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: a452 a455 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: a452 a455  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a452 - 
=== Succesors ===
=== Usages ===
?268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a452 -  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - - 
=== Succesors ===
=== Usages ===
?314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - -  <|@  <|@
tid ?314 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?268 
values: - - 
=== Succesors ===
=== Usages ===
?336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?268 values: - -  <|@  <|@
tid ?336 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?314 
values: a452 - 
=== Succesors ===
=== Usages ===
?354 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a452 -  <|@  <|@
tid ?354 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?336 
values: a452 a455 i1599 
=== Succesors ===
=== Usages ===
?351 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?336 values: a452 a455 i1599  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?354 
values: - - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?354 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?351 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -142433 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v95|QWORD[.] v99|QWORD[.] v27|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v95|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v95|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v95|QWORD[.] v99|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587678189892024583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607553298947440966
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a977 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v414 
values: a1026 a470 
=== Succesors ===
=== Usages ===
j1248 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v414 values: a1026 a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v413 v416 
=== Succesors ===
next: j1244 
=== Usages ===
a977 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v413 v416 #next: j1244  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1596 
=== Succesors ===
=== Usages ===
j1244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1244 <|@
result v102|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a460 
=== Succesors ===
next: j1248 
=== Usages ===
v1648 
=== Predecessor ===
v414 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a460 #next: j1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1248 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a977 
=== Succesors ===
next: v1254 
=== Usages ===
v1649 
=== Predecessor ===
j1244 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a977 #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid v1648 <|@
result [v102|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1244 
index: - 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1244 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1249 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1600 
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
result [v103|QWORD[*] + v104|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1248 
index: j1249 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1248 index: j1249  <|@  <|@
f <@~|@floating>@ <|@
tid j1253 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1599 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1648 v1649 j1253 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
j1248 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1648 v1649 j1253 #next: v476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1625 
value: i322 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1625 value: i322 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid i1583 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2531) [bci: 252]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = MOVE v101|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v102|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v103|QWORD[*] + v104|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|DWORD[.] * 8 + 12], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v106|DWORD] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B77 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
result meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1595 
y: v1273 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1595 y: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1274 
=== Succesors ===
trueSuccessor: v755 
falseSuccessor: v758 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1274 #trueSuccessor: v755 #falseSuccessor: v758  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid a1672 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1593 
=== Succesors ===
=== Usages ===
v569 ?300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1593  <|@  <|@
f <@~|@floating>@ <|@
tid a1671 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1594 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1594  <|@  <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5c514af9
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a1672 a1671 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1672 a1671  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?264 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?208 
values: - - 
=== Succesors ===
=== Usages ===
?300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - -  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 1065
stackSize: 0
=== Inputs ===
outerFrameState: ?264 
values: a1672 - 
=== Succesors ===
=== Usages ===
?974 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?264 values: a1672 -  <|@  <|@
tid ?974 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 669
stackSize: 0
=== Inputs ===
outerFrameState: ?300 
values: - - 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?300 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v569 
stateDuring: ?974 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v569 stateDuring: ?974 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i1584 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: v107|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v109|DWORD] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid i1094 <|@
result int[-145203|0xfffffffffffdc8cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145203
stableDimension: 0
stamp: i32 [-145203] ⇊00000000fffdc8cd ⇈00000000fffdc8cd
stampKind: i32
value: int[-145203|0xfffffffffffdc8cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145203|0xfffffffffffdc8cd]] destination: B80 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v760 #falseSuccessor: v763  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1606 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
result [v15|DWORD[.] * 8 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1606 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1628 
=== Succesors ===
next: v769 
=== Usages ===
i574 
=== Predecessor ===
v760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1628 #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1606 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1606  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i574 
y: i13 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i574 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v765 
falseSuccessor: v768 
=== Usages ===
=== Predecessor ===
i1606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v765 #falseSuccessor: v768  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v110|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1607 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1607  <|@  <|@
f <@~|@floating>@ <|@
tid v1629 <|@
result [v15|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1607 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1629 
=== Succesors ===
next: v170 
=== Usages ===
i579 
=== Predecessor ===
v765 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1629 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1607 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1607  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1615a16d
keySuccessors: [I@64f5fa29
keys: [I@6472049
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: i579 
=== Succesors ===
successors: v165 v164 
=== Usages ===
=== Predecessor ===
i1607 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i579 #successors: v165 v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5017b4fa
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a442 a39 a2 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 a39 a2  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
tid ?973 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - - 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v580 
stateDuring: ?973 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v580 stateDuring: ?973 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i1585 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v112|DWORD] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid i1074 <|@
result int[-41747|0xffffffffffff5ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -41747
stableDimension: 0
stamp: i32 [-41747] ⇊00000000ffff5ced ⇈00000000ffff5ced
stampKind: i32
value: int[-41747|0xffffffffffff5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-41747|0xffffffffffff5ced]] destination: B85 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid i1098 <|@
result int[-147219|0xfffffffffffdc0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147219
stableDimension: 0
stamp: i32 [-147219] ⇊00000000fffdc0ed ⇈00000000fffdc0ed
stampKind: i32
value: int[-147219|0xfffffffffffdc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147219|0xfffffffffffdc0ed]] destination: B86 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1095 
=== Usages ===
=== Predecessor ===
v764 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1095  <|@  <|@
f <@~|@floating>@ <|@
tid i1096 <|@
result int[-145971|0xfffffffffffdc5cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145971
stableDimension: 0
stamp: i32 [-145971] ⇊00000000fffdc5cd ⇈00000000fffdc5cd
stampKind: i32
value: int[-145971|0xfffffffffffdc5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145971|0xfffffffffffdc5cd]] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid i1069 <|@
result int[-8723|0xffffffffffffdded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B88 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: i32
=== Inputs ===
x: i18 
y: i37 
=== Succesors ===
=== Usages ===
v44 v1631 ?128 ?128 i17 i18 i17 i18 v587 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i38 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v773 #falseSuccessor: v770  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid i1100 <|@
result int[-149779|0xfffffffffffdb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B90 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1588 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1588  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v587 
=== Succesors ===
trueSuccessor: v775 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v587 #trueSuccessor: v775 #falseSuccessor: v778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
a1610 
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v783 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v780 #falseSuccessor: v783  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1608 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1608  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
result [v15|DWORD[.] * 8 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1608 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
=== Succesors ===
next: v789 
=== Usages ===
i599 
=== Predecessor ===
v780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1674 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1608 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1608  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i13 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i599 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v785 
falseSuccessor: v788 
=== Usages ===
=== Predecessor ===
i1608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v785 #falseSuccessor: v788  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1609 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1609  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
result [v15|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1589 
=== Succesors ===
=== Usages ===
i1609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1609 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: v127 
=== Usages ===
i603 
=== Predecessor ===
v785 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1609 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1609  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1615a16d
keySuccessors: [I@64f5fa29
keys: [I@6472049
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
value: i603 
=== Succesors ===
successors: v122 v121 
=== Usages ===
=== Predecessor ===
i1609 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i603 #successors: v122 v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1610 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1610  <|@  <|@
f <@~|@floating>@ <|@
tid v1631 <|@
result [v3|QWORD[.] + v113|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a4 
index: i38 
=== Succesors ===
=== Usages ===
a1610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1610 <|@
result v116|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v775 
address: v1631 
=== Succesors ===
next: v1611 
=== Usages ===
v1650 v1633 v1632 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v775 address: v1631 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1650 <|@
result [v116|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1610 
=== Succesors ===
=== Usages ===
v1611 v1612 v1613 v1615 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?73 
guard: - 
address: v1650 
=== Succesors ===
next: v1133 
=== Usages ===
v1277 
=== Predecessor ===
a1610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?73 guard: - address: v1650 #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid v1277 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1611 
y: v1276 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1611 y: v1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1277 
=== Succesors ===
trueSuccessor: v798 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1277 #trueSuccessor: v798 #falseSuccessor: v1130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v3|QWORD[.] + v113|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid i1110 <|@
result int[-154899|0xfffffffffffda2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154899
stableDimension: 0
stamp: i32 [-154899] ⇊00000000fffda2ed ⇈00000000fffda2ed
stampKind: i32
value: int[-154899|0xfffffffffffda2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154899|0xfffffffffffda2ed]] destination: B96 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2782) [bci: 14]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1612 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1144 
=== Usages ===
v1279 
=== Predecessor ===
v1130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1612 
y: v1278 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1612 y: v1278  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1279 
=== Succesors ===
trueSuccessor: v803 
falseSuccessor: v1141 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1279 #trueSuccessor: v803 #falseSuccessor: v1141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid i1112 <|@
result int[-155155|0xfffffffffffda1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155155
stableDimension: 0
stamp: i32 [-155155] ⇊00000000fffda1ed ⇈00000000fffda1ed
stampKind: i32
value: int[-155155|0xfffffffffffda1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v803 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155155|0xfffffffffffda1ed]] destination: B98 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2784) [bci: 36]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1122 
=== Usages ===
v1281 
=== Predecessor ===
v1141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1613 
y: v1280 
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1613 y: v1280  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 190
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i38 i38 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i38 i38 a11 i19 - - -  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: - - - 
=== Succesors ===
=== Usages ===
?290 ?976 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 0.9263680917092032
=== Inputs ===
condition: v1281 
=== Succesors ===
trueSuccessor: v1120 
falseSuccessor: v1119 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1281 #trueSuccessor: v1120 #falseSuccessor: v1119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v117|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9263680917092032 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609376507208540546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1614 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1614  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
result [v116|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1610 
=== Succesors ===
=== Usages ===
i1614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1614 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Integer.value
nodeSourcePosition: at java.lang.Integer.intValue(Integer.java:893) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.intValue(BoxingSnippets.java:137) [bci: 5]
at java.lang.Integer.intValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 69]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1632 
=== Succesors ===
next: v287 
=== Usages ===
j269 
=== Predecessor ===
v1120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1632 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3076) [bci: 1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1614 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1614  <|@  <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6b32795c
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a442 j269 a2 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 j269 a2  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2787
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: - - - 
=== Succesors ===
=== Usages ===
?975 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: - - -  <|@  <|@
tid ?975 <|@
d <@d|@=== Debug Properties ===
bci: 55
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(int, Locale)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3083
stackSize: 0
=== Inputs ===
outerFrameState: ?290 
values: - - - - - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
bci: 55
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v614 
stateDuring: ?975 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
i1614 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v614 stateDuring: ?975 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVSXD [v116|DWORD[.] * 8 + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v113|DWORD v113|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD, v113|DWORD, v119|DWORD] destination: B100 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2786) [bci: 58]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
=== Predecessor ===
v1122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1650 
=== Succesors ===
next: v1156 
=== Usages ===
v1283 
=== Predecessor ===
v1119 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1650 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
result meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
rawvalue: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1283 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1615 
y: v1282 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1615 y: v1282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1283 
=== Succesors ===
trueSuccessor: v1154 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1283 #trueSuccessor: v1154 #falseSuccessor: v808  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1616 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1616  <|@  <|@
f <@~|@floating>@ <|@
tid v1633 <|@
result [v116|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1610 
=== Succesors ===
=== Usages ===
j1616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1616 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Long.value
nodeSourcePosition: at java.lang.Long.longValue(Long.java:1000) [bci: 1]
at org.graalvm.compiler.replacements.BoxingSnippets.longValue(BoxingSnippets.java:143) [bci: 5]
at java.lang.Long.longValue() [bci: -1]
at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 91]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1633 
=== Succesors ===
next: v247 
=== Usages ===
v623 
=== Predecessor ===
v1154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1633 #next: v247  <|@  <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@205df2a1
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>
=== Inputs ===
arguments: a442 j1616 a2 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a442 j1616 a2  <|@  <|@
tid ?976 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.printInteger(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2789
stackSize: 0
=== Inputs ===
outerFrameState: ?251 
values: - - - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?251 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
bci: 95
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v623 
stateDuring: ?976 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
j1616 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v623 stateDuring: ?976 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid i1582 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV [v116|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v113|DWORD v113|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD, v113|DWORD, v121|DWORD] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2788) [bci: 80]
at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid i1114 <|@
result int[-157459|0xfffffffffffd98ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -157459
stableDimension: 0
stamp: i32 [-157459] ⇊00000000fffd98ed ⇈00000000fffd98ed
stampKind: i32
value: int[-157459|0xfffffffffffd98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v808 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157459|0xfffffffffffd98ed]] destination: B103 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid i1076 <|@
result int[-30739|0xffffffffffff87ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739] ⇊00000000ffff87ed ⇈00000000ffff87ed
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30739|0xffffffffffff87ed]] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid i1106 <|@
result int[-153619|0xfffffffffffda7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153619
stableDimension: 0
stamp: i32 [-153619] ⇊00000000fffda7ed ⇈00000000fffda7ed
stampKind: i32
value: int[-153619|0xfffffffffffda7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v788 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153619|0xfffffffffffda7ed]] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=print target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid i1104 <|@
result int[-152627|0xfffffffffffdabcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152627
stableDimension: 0
stamp: i32 [-152627] ⇊00000000fffdabcd ⇈00000000fffdabcd
stampKind: i32
value: int[-152627|0xfffffffffffdabcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152627|0xfffffffffffdabcd]] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
result int[-150555|0xfffffffffffdb3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150555
stableDimension: 0
stamp: i32 [-150555] ⇊00000000fffdb3e5 ⇈00000000fffdb3e5
stampKind: i32
value: int[-150555|0xfffffffffffdb3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150555|0xfffffffffffdb3e5]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B104" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B107" "B106" "B105" "B96" "B98" "B103" "B19" 
    successors 
    xhandlers
    flags 
    probability 4581686143111005053
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1070 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-170515 - -8723] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1067 
values: i1069 i1074 i1076 i1078 i1090 i1092 i1094 i1096 i1098 i1100 i1102 i1104 i1106 i1110 i1112 i1114 i1078 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1067 values: i1069 i1074 i1076 i1078 i1090 i1092 i1094 i1096 i1098 i1100 i1102 i1104 i1106 i1110 i1112 i1114 i1078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1068 v1073 v1075 v1077 v1089 v1091 v1093 v1095 v1097 v1099 v1101 v1103 v1105 v1109 v1111 v1113 v1127 
=== Succesors ===
next: v1072 
=== Usages ===
i1070 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1068 v1073 v1075 v1077 v1089 v1091 v1093 v1095 v1097 v1099 v1101 v1103 v1105 v1109 v1111 v1113 v1127 #next: v1072  <|@  <|@
f <@*|@fixed>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1070 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1067 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1070 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1064  <|@  <|@
f <@~|@floating>@ <|@
tid i1066 <|@
result int[-160307|0xfffffffffffd8dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -160307
stableDimension: 0
stamp: i32 [-160307] ⇊00000000fffd8dcd ⇈00000000fffd8dcd
stampKind: i32
value: int[-160307|0xfffffffffffd8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1064 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i1066 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i1066 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -160307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 269]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 270]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid a1058 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@620363699
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@620363699]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1057 <|@
result int[-111387|0xfffffffffffe4ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -111387
stableDimension: 0
stamp: i32 [-111387] ⇊00000000fffe4ce5 ⇈00000000fffe4ce5
stampKind: i32
value: int[-111387|0xfffffffffffe4ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i1057 
speculation: a1058 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i1057 speculation: a1058  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@620363699] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -111387 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v123|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@64a720d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], int[-1|0xffffffffffffffff], int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B100" "B76" "B84" "B79" "B102" 
    successors "B8" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617138375075572482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD, v13|DWORD, v14|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7935021533821518 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v6|QWORD[.] + v14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5218002798789941 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611697511477050593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v18|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4177812745869394] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612220307059015120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8449316052539398 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611192161200176738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v15|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v21|DWORD[.] = MOV [v20|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v21|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v21|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5841949545480353 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607652270631471577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v22|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v24|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v24|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v21|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = ADD (x: v27|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v29|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9518065952449013 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607412583072286604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607365245433290207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v26|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607318381170683774
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607553298947440966
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = MOVE v101|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOVSXD v28|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v102|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v103|QWORD[*] + v104|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|DWORD[.] * 8 + 12], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v106|DWORD] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-2|0xfffffffffffffffe]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v3|QWORD[.] + v113|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v117|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9263680917092032 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609376507208540546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVSXD [v116|DWORD[.] * 8 + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v118|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v113|DWORD v113|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD, v113|DWORD, v119|DWORD] destination: B100 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v107|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: v107|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v109|DWORD] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVZXB [v15|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v110|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVZX [v15|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v111|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD, v13|DWORD, v112|DWORD] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v116|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV [v116|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v113|DWORD v113|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD, v113|DWORD, v121|DWORD] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v34|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v35|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = CMOVE (falseValue: v34|DWORD, ~trueValue: v29|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v36|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v37|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v36|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587063822740321660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SHL v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA [v41|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = AND v42|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOVSXD v43|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586994792723276388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v44|QWORD + v39|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD + 12], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v39|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v26|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = LEA [v25|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|V128_WORD = H [v53|QWORD[*] + v58|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v58|QWORD * 2], input: v60|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v58|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v51|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V64_WORD = H [v53|QWORD[*] + v62|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v62|QWORD * 2], input: v64|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v51|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V32_WORD = H [v53|QWORD[*] + v66|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v66|QWORD * 2], input: v68|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v51|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVSX [v53|QWORD[*] + v70|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[.] + v70|QWORD * 2], y: v72|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD v36|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|DWORD[.] * 8 + 16], y: v94|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = UNCOMPRESSPOINTER (input: v21|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v96|QWORD[*] + v97|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587754122910774383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = SUB (x: v36|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587678189892024583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v49|QWORD[.] + v51|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = SUB (x: v73|QWORD, ~y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v80|QWORD * 2], input: v82|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v84|QWORD * 2], input: v86|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v84|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v75|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v88|QWORD * 2], input: v90|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v92|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B77 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_WORD = H [v53|QWORD[*] + v55|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v55|QWORD * 2], input: v56|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v78|QWORD * 2], input: v77|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572786023668818256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573338263805180435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557471465825995820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577212839572592251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130401|0xfffffffffffe029f]] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B104" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B107" "B106" "B105" "B96" "B98" "B103" "B19" 
    successors 
    xhandlers
    flags 
    probability 4581686143111005053
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: v18|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD v19|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577152247394676863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130401|0xfffffffffffe029f]] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558048024483679711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562527080104989666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -142433 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v95|QWORD[.] v99|QWORD[.] v27|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v95|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v95|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v95|QWORD[.] v99|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557998936471558629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@747854488] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -148755 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30739|0xffffffffffff87ed]] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133395|0xfffffffffffdf6ed]] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133139|0xfffffffffffdf7ed]] destination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155155|0xfffffffffffda1ed]] destination: B98 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -160307 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v12|DWORD v13|DWORD v6|QWORD[.] v14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@620363699] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -111387 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v123|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v6|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145971|0xfffffffffffdc5cd]] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154899|0xfffffffffffda2ed]] destination: B96 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B88 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147219|0xfffffffffffdc0ed]] destination: B86 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145203|0xfffffffffffdc8cd]] destination: B80 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B90 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150555|0xfffffffffffdb3e5]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153619|0xfffffffffffda7ed]] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152627|0xfffffffffffdabcd]] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-157459|0xfffffffffffd98ed]] destination: B103 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-41747|0xffffffffffff5ced]] destination: B85 -> B108 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@64a720d8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   42  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rax:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   46  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rdi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   86  <|@ instruction stack:84|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   88  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B100" "B76" "B84" "B79" "B102" 
    successors "B8" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617138375075572482
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   94  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.7935021533821518 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rdi|DWORD[.] = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rax:0, rdi:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  104  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.5218002798789941 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611697511477050593
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r13|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4177812745869394] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612220307059015120
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.8449316052539398 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611192161200176738
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rax:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD r14|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  148  <|@ instruction rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  154  <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.5841949545480353 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607652270631471577
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r13|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  168  <|@ instruction stack:112|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rax:0, rsi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  172  <|@ instruction rdi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction r14|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.9518065952449013 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607412583072286604
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607365245433290207
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607318381170683774
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607553298947440966
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r13|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  754  <|@ instruction r10|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[*] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + r13|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  766  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction r10|DWORD = INC stack:80|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction CMP (x: r10|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  942  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  944  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  950  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  952  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction r9|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [r8:0, r9:0, stack:40, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - r8|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  962  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr  974  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  986  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.9263680917092032 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609376507208540546
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rdx|QWORD = MOVSXD [r9|DWORD[.] * 8 + 12] size: QWORD <|@ <|@
      nr  994  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD stack:92|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr 1002  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1004  <|@ instruction stack:84|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B100 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  800  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@reference-map: [stack:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: stack:144|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  842  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  850  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  860  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr  864  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD = MOV [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1022  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD stack:92|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr 1028  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr 1030  <|@ instruction stack:80|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1032  <|@ instruction stack:84|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr  250  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  280  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587063822740321660
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586994792723276388
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  318  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  320  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  324  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  378  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  394  <|@ instruction r8|QWORD[*] = LEA [rdi|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  446  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  470  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  472  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  482  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  494  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  498  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  506  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE stack:124|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  684  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  686  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  690  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  692  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  694  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587754122910774383
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: stack:128|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587678189892024583
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  574  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  586  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  588  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  590  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  610  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  612  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  614  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  620  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  634  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  636  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  638  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  644  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE stack:124|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B77 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B77" 
    successors "B37" "B77" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  416  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  418  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  552  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4581409722828863292
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  558  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  560  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  562  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction r10|DWORD = MOVE stack:124|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572786023668818256
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573338263805180435
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  358  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  366  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [stack:12, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557471465825995820
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  308  <|@ instruction stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577212839572592251
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f] <|@ <|@
      nr  200  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B104" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B107" "B106" "B105" "B96" "B98" "B103" "B19" 
    successors 
    xhandlers
    flags 
    probability 4581686143111005053
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577152247394676863
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f] <|@ <|@
      nr  216  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558048024483679711
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" 
    successors 
    xhandlers
    flags 
    probability 4562527080104989666
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction MOV [r15|QWORD + 668] y: -142433 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rdi:0, r11:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r11|QWORD[.] rdi|QWORD[.] r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: r11|QWORD[.] rdi|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" 
    xhandlers
    flags 
    probability 4557998936471558629
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@747854488] <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 668] y: -148755 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: stack:56|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE input: int[-133395|0xfffffffffffdf6ed] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction r10|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B98 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV [r15|QWORD + 668] y: -160307 size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@620363699] <|@ <|@
      nr 1098  <|@ instruction MOV [r15|QWORD + 668] y: -111387 size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: stack:64|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction r10|DWORD = MOVE input: int[-154899|0xfffffffffffda2ed] <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B96 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] <|@ <|@
      nr  894  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B88 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r10|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B86 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r10|DWORD = MOVE input: int[-145203|0xfffffffffffdc8cd] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B80 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B90 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-150555|0xfffffffffffdb3e5] <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-152627|0xfffffffffffdabcd] <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed] <|@ <|@
      nr 1044  <|@ instruction JUMP ~[] destination: B103 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B85 -> B108 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@64a720d8 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: rsi|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   42  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rax:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   46  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction rdi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B111" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   78  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   86  <|@ instruction stack:84|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   88  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B100" "B76" "B84" "B79" "B102" 
    successors "B8" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617138375075572482
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   94  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.7935021533821518 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rdi|DWORD[.] = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rax:0, rdi:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  104  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.5218002798789941 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611697511477050593
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r13|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B88" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615835332282701316
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4177812745869394] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612220307059015120
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.8449316052539398 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611192161200176738
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rax:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD r14|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:42] <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  148  <|@ instruction rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD r14|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  154  <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  162  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.5841949545480353 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607652270631471577
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r13|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  168  <|@ instruction stack:112|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ st <@st|@reference-map: [rax:0, rsi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr  172  <|@ instruction rdi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rax:0, rsi:0, rdi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD rax|QWORD[.] r9|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction r14|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  176  <|@ instruction r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.9518065952449013 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607412583072286604
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607365245433290207
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607318381170683774
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B20" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607553298947440966
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r13|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  754  <|@ instruction r10|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction r8|QWORD[*] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + r13|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  766  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr  774  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction JUMP ~[] destination: B76 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610954460783948358
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction r10|DWORD = INC stack:80|DWORD size: DWORD <|@ <|@
      nr  912  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction CMP (x: r10|DWORD, y: stack:76|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  942  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  944  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  950  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  952  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction r9|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [r8:0, r9:0, stack:40, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - r8|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  962  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed} <|@ <|@
      nr  974  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B100" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609908869620019304
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  986  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed} <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 0.9263680917092032 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609376507208540546
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rdx|QWORD = MOVSXD [r9|DWORD[.] * 8 + 12] size: QWORD <|@ <|@
      nr  994  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55]
locals: - - - - - 
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD stack:92|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction [stack:80|DWORD, stack:84|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B100 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B79" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605255000682686738
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  800  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  802  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ st <@st|@reference-map: [stack:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: stack:144|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr  812  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B79 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  842  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  850  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599921357879768312
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  860  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr  864  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B84 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed} <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593182219246825061
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD = MOV [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1022  <|@ instruction rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1026  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95]
locals: - - - 
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD stack:92|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190] <|@ <|@
      nr 1028  <|@ instruction r9|DWORD = INC stack:120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction [stack:80|DWORD, stack:84|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1034  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B102 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr  242  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr  250  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  280  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  282  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587063822740321660
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr  290  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B30 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586994792723276388
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  318  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  320  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  322  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  324  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  328  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B50" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  378  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  380  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  394  <|@ instruction r8|QWORD[*] = LEA [rdi|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  396  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  398  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  446  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  458  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  470  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  472  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  482  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  494  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  498  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  506  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B47" 
    successors "B51" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B50" "B67" "B65" 
    successors "B74" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587830822929713574
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE stack:124|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  684  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  686  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  688  <|@ instruction r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  690  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  692  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  694  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B74 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587754122910774383
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rdx|DWORD = SUB (x: r13|DWORD, ~y: stack:128|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B74 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587678189892024583
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  534  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B54" 
    successors "B59" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  574  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  586  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  588  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  590  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B62" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  610  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  612  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  614  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B59" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  620  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  622  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  634  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  636  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  638  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B70" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583327223302343078
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  644  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581409722828863292
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  416  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  418  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574320024047602086
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  552  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B54" 
    successors "B56" "B54" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4583327223302343078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  558  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  560  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  562  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573338263805180435
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  358  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  366  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [stack:12, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42] <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577212839572592251
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f] <|@ <|@
      nr  200  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B88" "B85" "B104" "B17" "B22" "B24" "B80" "B87" "B86" "B90" "B107" "B106" "B105" "B96" "B98" "B103" "B19" 
    successors 
    xhandlers
    flags 
    probability 4581686143111005053
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: stack:88|DWORD 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD stack:104|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 4577152247394676863
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f] <|@ <|@
      nr  216  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" 
    successors 
    xhandlers
    flags 
    probability 4562527080104989666
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3 <|@ <|@
      nr  726  <|@ instruction MOV [r15|QWORD + 668] y: -142433 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rdi:0, r11:0, stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r11|QWORD[.] rdi|QWORD[.] r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: r11|QWORD[.] rdi|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@747854488] <|@ <|@
      nr   20  <|@ instruction MOV [r15|QWORD + 668] y: -148755 size: DWORD <|@ <|@
      nr   22  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rcx:0, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: stack:56|QWORD[.] stack:40|QWORD[.] rcx|QWORD[.] stack:48|QWORD[.] - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1048  <|@ instruction r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B104 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE input: int[-133395|0xfffffffffffdf6ed] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B22 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction r10|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B98 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV [r15|QWORD + 668] y: -160307 size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:84|DWORD stack:80|DWORD stack:64|QWORD[.] stack:120|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@620363699] <|@ <|@
      nr 1098  <|@ instruction MOV [r15|QWORD + 668] y: -111387 size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [stack:80, stack:88, stack:96, stack:104]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: stack:64|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B87 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction r10|DWORD = MOVE input: int[-154899|0xfffffffffffda2ed] <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B96 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] <|@ <|@
      nr  894  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B88 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r10|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B86 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r10|DWORD = MOVE input: int[-145203|0xfffffffffffdc8cd] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B80 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B90 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-150555|0xfffffffffffdb3e5] <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r10|DWORD = MOVE input: int[-152627|0xfffffffffffdabcd] <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed] <|@ <|@
      nr 1044  <|@ instruction JUMP ~[] destination: B103 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  876  <|@ instruction JUMP ~[] destination: B85 -> B108 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4881ec880000004889ac248000000048895424684c894424604d85c00f844a070000448b5610438504d44c8bd6488bd14c89542458666690e800000000904889442450448b500c448954244c418bfa488bf748ffce483bfe0f87090000004585d20f856f0700004c8b442460458b580c44895c2448458bcb41ffc944894c2444c7442440ffffffffc744243cffffffff41b900000000666690453bd10f8e5b060000428b7c88108b34fd0800000081feaddeadde0f8537010000448b2cfd0c000000448bf749c1e6034183fdfe0f84190000004183fd000f842b0100004183fdff0f8427070000e92207000081feaddeadde0f854d02000044896c24388b34fd100000008b34f510000000418504f48b3cfd0c000000897c2434418504fc448b2cf5080000004181fdaddeadde4c897424280f85bf01000089742424448b2cfd0c00000044896c2420438504ec8b3cf510000000448b34fd0c000000468b14ed0c000000448b2cf50c000000458bda4503dd44895c241c458bc3452bc64183f8010f8d900200004585ed0f8c8b050000452bf2453bee0f8f9e05000048c1e703448b5c242044894c241849c1e3034d63ed458bd24c8bc7498d7b104b8d746810498bd2e800000000908b742424448b5c241c44891cf50c000000448b4c241841ffc1448b54244c488b442450e9a8feffff81feaddeadde0f85bc05000041bdfeffffffe9bafeffff4c8974242844896c243844894c2418448b54244041ffc24489542434443b5424440f8f0f060000448b5c2448453bda0f860c06000081feaddeadde0f85160600000fb634fd1a00000085f60f85fb0500000fb734fd1800000083fe640f85290500004c8b442460478b4c901042813ccd08000000addeadde0f847d05000042813ccd08000000addeadde0f8416050000428b34cd0800000081feaddeadde0f85090100004a6314cd0c000000488b742428488b4c24686690e80000000090448b4c241841ffc148894424708b442434894424408b4424348944243c488b442470448b54244c488b442450e9a2fdffff44894c24184181fdaddeadde0f852a050000448b44243448c1e603418bf848c1e7034c8bd6488bd74c8914240f1f440000e80000000090448b4c241841ffc1448b54244c488b442450e954fdffff4c8974242844896c243844894c241881feaddeadde0f85980400000fb634fd1a00000085f60f85b80400000fb734fd1800000083fe640f85f4040000488b74242848ba0000000000000000488b4c2468666690e80000000090448b4c241841ffc1448b54244c488b442450e9e4fcffff42813ccd08000000addeadde0f85a30400004a8b14cd10000000488b742428488b4c24680f1f8000000000e80000000090448b4c241841ffc148894424708b442434894424408b4424348944243c488b442470448b54244c488b442450e982fcffff448b44243444894c2418458bcb448b5c2420418bd6d1e28d52028bca412bc985c9410f4cd183fa010f8c5e030000b9f7ffff7f2bca85c90f8c47030000498b4f60498b5f7081faffffff000f83650200008bc2d1e08d401783e0f84863c0488be84803e9483beb0f874902000049896f600f188408c00000000f188408000100000f188408400100000f1884088001000089510c48c70101000000c74108addeadde488bc144896c24144489542410897c240c448bea453bee418bd5410f4fd64c63d24983fa010f8c9d0000008b7c240c4c8d58104c8d04fd100000004d8d4af04d85c948c7c1000000000f8d810100004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63dd4d3bda0f8f62000000448b5424148b7424244c8bd849c1eb0344891cf510000000448bde49c1e3034d8bc349c1e80949b900c0240801000000478824084585d20f8c7d010000418bd52b542410443bd20f8f6d010000488bf8458bea448b542410448b5c2420e9bbfbffff4e8d4450104d2bda4d8d53f04d85d20f8d9f00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f1cffffff6647892448e912ffffff0f1f80000000000f1f8000000000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe965feffffc5f9efc049c7c1000000006666660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e93effffff44896c24144489542410897c240c48b9addeaddeaddeadde488bf18bc2b900000000448be8e80000000090e9d0fdffff488b442458488bac24800000004881c488000000850500000000c5f877c341ba9f02feff44894c24184589979c0200004d89a7a8020000e8000000009041ba9f02feff44894c2418ebdf448b5424108b7c243448c1e70341c7879c0200009fd3fdff4d89a7a8020000e80000000090488974245849baaddeaddeaddeadde41c7879c020000edbafdff4d8997a8020000e8000000009041baed87ffffeb8b41baedf6fdffeb8341baedf7fdffe978ffffff41baeda1fdffe96dffffff44894c241841c7879c020000cd8dfdff4d89a7a8020000e8000000009049baaddeaddeaddeadde41c7879c020000e54cfeff4d8997a8020000e8000000009041bacdc5fdffe923ffffff41baeda2fdffe918ffffff41baedddffff4c8974242844896c243844894c2418e9fefeffff41baedc0fdffe9f3feffff41bacdc8fdffe9e8feffff41baedb6fdffe9ddfeffff41bae5b3fdffe9d2feffff41baeda7fdffe9c7feffff41bacdabfdffe9bcfeffff41baed98fdffe9b1feffff41baed5cffffe9a6feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@64a720d8 slotKind: QWORD  <||@
  Comment 54 6 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 64 10 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 67 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 73 block B2 null  <||@
  Comment 73 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 28 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 30 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 77 [rcx:0, rsi:0, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 32 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 84 36 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 87 38 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 92 40 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12]  <||@
  Comment 92 9  <||@
  Comment 95 {HotSpotMethod<Formatter.parse(String)>}  <||@
  Comment 100 [stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-    <||@
  Comment 101 42 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 106 44 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15]  <||@
  Comment 106 [rax:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]       |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 46 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 115 48 rdi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 118 50 rsi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 124 52 CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 127 54 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 133 block B4 null  <||@
  Comment 133 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 64 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 136 66 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B111  <||@
  Comment 142 block B6 null  <||@
  Comment 142 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 58 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 147 76 r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 151 78 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 156 80 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 162 82 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 167 84 stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 175 86 stack:84|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 183 88 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 189 90 JUMP ~[] destination: B6 -> B7  <||@
  Comment 189 block B7 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 189 92 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 192 94 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 195 96 BRANCH trueDestinationProbability: 0.7935021533821518 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B110  <||@
  Comment 201 block B8 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 201 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 100 rdi|DWORD[.] = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 206 102 rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20]  <||@
  Comment 206 [rax:0, rdi:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |-  |-  |-    <||@
  Comment 206 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 213 104 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 219 106 BRANCH trueDestinationProbability: 0.5218002798789941 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 225 block B9 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 225 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 110 r13|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 233 112 JUMP ~[] destination: B9 -> B12  <||@
  Comment 233 block B12 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 233 126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 233 128 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 240 130 AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4177812745869394]  <||@
  Comment 275 block B13 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 275 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 134 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 275 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 281 136 BRANCH trueDestinationProbability: 0.8449316052539398 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81  <||@
  Comment 287 block B14 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 287 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 140 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 292 142 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 299 144 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:42]  <||@
  Comment 299 [rax:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |              |   |     <||@
  Comment 299 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 306 146 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 306 [rax:0, rsi:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |              |   |     <||@
  Comment 306 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 310 148 rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 317 150 stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 321 152 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 321 [rax:0, rsi:0, rdi:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |              |   |     <||@
  Comment 321 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 325 154 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 333 156 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 333 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 340 162 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 345 158 BRANCH trueDestinationProbability: 0.5841949545480353 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78  <||@
  Comment 351 block B15 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 351 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 164 stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 355 166 r13|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 363 168 stack:112|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 368 170 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42]  <||@
  Comment 368 [rax:0, rsi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |                    |   |     <||@
  Comment 368 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 372 172 rdi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 379 174 r14|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 379 [rax:0, rsi:0, rdi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |                    |   |     <||@
  Comment 379 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 387 176 r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 395 178 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 403 180 r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 409 182 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 414 184 r8|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 420 186 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 424 188 BRANCH trueDestinationProbability: 0.9518065952449013 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 430 block B16 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 430 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 192 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 433 194 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 439 block B18 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 439 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 439 206 r14|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 442 208 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 445 210 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 451 block B20 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 451 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 222 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 455 224 r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 460 226 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 465 228 JUMP ~[] destination: B20 -> B76  <||@
  Comment 465 block B76 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 465 744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 465 746 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 469 748 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 469 750 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 469 752 r13|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 472 754 r10|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 475 756 r8|QWORD[*] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 478 758 rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 482 760 rsi|QWORD = LEA [r8|QWORD[*] + r13|QWORD * 2 + 16] size: QWORD  <||@
  Comment 487 762 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 490 764 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 490 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 496 766 rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 500 768 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 505 770 MOV (x: [rsi|DWORD[.] * 8 + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 513 772 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 521 774 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 526 776 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 531 778 JUMP ~[] destination: B76 -> B7  <||@
  Comment 536 block B10 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 536 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 536 116 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 536 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 542 118 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B109  <||@
  Comment 548 block B11 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 548 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 122 r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe]  <||@
  Comment 554 124 JUMP ~[] destination: B11 -> B12  <||@
  Comment 559 block B89 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 559 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 904 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 564 906 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 569 908 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 574 910 r10|DWORD = INC stack:80|DWORD size: DWORD  <||@
  Comment 582 912 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 587 914 CMP (x: r10|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 592 916 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 598 block B91 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 598 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 926 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 603 928 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 606 930 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B107  <||@
  Comment 612 block B92 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 612 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 934 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 612 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 618 936 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B106  <||@
  Comment 624 block B93 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 624 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 624 940 rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 632 942 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 634 944 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B105  <||@
  Comment 640 block B94 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 640 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 948 rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 648 950 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 651 952 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B104  <||@
  Comment 657 block B95 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 657 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 956 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 662 958 r9|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 667 960 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42]  <||@
  Comment 667 [r8:0, r9:0, stack:40, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3            |4               |5               |6                  |7                |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |r8|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |             |                |                |                   |                 |                    |   |     <||@
  Comment 667 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 667 {meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}}  <||@
  Comment 679 962 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 685 block B97 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 685 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 972 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}  <||@
  Comment 685 {meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}}  <||@
  Comment 697 974 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 703 block B99 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 703 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 984 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 711 986 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 711 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 717 988 BRANCH trueDestinationProbability: 0.9263680917092032 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 723 block B100 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 723 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 992 rdx|QWORD = MOVSXD [r9|DWORD[.] * 8 + 12] size: QWORD  <||@
  Comment 731 994 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 736 996 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 741 998 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190]  <||@
  Comment 741 9  <||@
  Comment 743 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 748 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD  |stack:92|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 749 1000 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 757 -1 [stack:80|DWORD, stack:84|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 783 1006 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 788 1008 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 793 1010 JUMP ~[] destination: B100 -> B7  <||@
  Comment 798 block B78 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 798 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 798 788 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 803 790 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}  <||@
  Comment 803 {meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}}  <||@
  Comment 810 792 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 816 block B79 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 816 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 796 r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 821 798 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 825 800 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 832 802 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 835 806 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 838 808 stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 842 810 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76]  <||@
  Comment 842 9  <||@
  Comment 847 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 852 [stack:0, stack:80, stack:88, stack:96, stack:104]at java.io.PrintStream.print(PrintStream.java:669) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:144|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:57) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 853 812 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 861 814 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 866 816 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 871 818 JUMP ~[] destination: B79 -> B7  <||@
  Comment 876 block B81 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 876 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 876 828 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 881 830 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 886 832 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 891 834 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 891 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 897 836 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 903 block B82 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 903 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 840 rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 911 842 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 913 844 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 919 block B83 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 919 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 919 848 rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 927 850 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 930 852 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 936 block B84 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 936 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 936 856 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 941 858 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 951 860 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 956 862 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76]  <||@
  Comment 956 9  <||@
  Comment 959 {HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>}  <||@
  Comment 964 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 965 864 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 973 866 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 978 868 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 983 870 JUMP ~[] destination: B84 -> B7  <||@
  Comment 988 block B101 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 988 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 988 1014 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}  <||@
  Comment 988 {meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}}  <||@
  Comment 1000 1016 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1006 block B102 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1006 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 1020 rdx|QWORD = MOV [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1014 1022 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1019 1024 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1024 1026 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190]  <||@
  Comment 1024 9  <||@
  Comment 1031 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 1036 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD  |stack:92|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 1037 1028 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 1045 -1 [stack:80|DWORD, stack:84|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 1071 1034 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1076 1036 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 1038 JUMP ~[] destination: B102 -> B7  <||@
  Comment 1086 block B21 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1086 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 232 r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1091 234 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1096 236 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1099 238 r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 1104 240 rdx|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 1109 242 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 1112 244 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1117 246 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1119 248 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 1123 250 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 1126 252 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1132 block B23 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1132 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1132 262 rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 1137 264 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1139 266 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1141 268 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1147 block B25 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1147 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 278 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1151 280 rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1155 282 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 1161 284 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 1167 block B26 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1167 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1167 288 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 1171 290 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 1174 292 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 1177 294 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1180 296 rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1186 298 CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1189 300 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B30 falseDestination: B26 -> B28  <||@
  Comment 1195 block B28 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1195 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 314 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 1199 316 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1207 318 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1215 320 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1223 322 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1231 324 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1234 326 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1241 328 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1241 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1248 330 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1248 332 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1251 334 stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1256 336 stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1261 338 stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 1265 340 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1268 342 JUMP ~[] destination: B28 -> B31  <||@
  Comment 1268 block B31 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1268 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1268 374 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1271 376 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1278 378 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1281 380 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1285 382 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 1291 block B33 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1291 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 390 rdi|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD  <||@
  Comment 1295 392 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1299 394 r8|QWORD[*] = LEA [rdi|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1307 396 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1311 398 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1314 404 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1321 400 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 1327 block B38 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1327 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1327 432 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1331 434 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1334 436 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 1340 block B40 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1340 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1340 444 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1346 446 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1352 448 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1356 450 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1359 452 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1359 block B41 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1359 454 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1359 456 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1363 458 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1366 460 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 1372 block B43 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1372 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1372 468 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1378 470 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1384 472 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1388 474 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1391 476 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1391 block B44 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1391 478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1391 480 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1395 482 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1398 484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1404 block B46 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1404 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1404 492 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1410 494 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1416 496 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1420 498 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1423 500 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1423 block B47 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1423 502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1423 504 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1429 506 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1432 508 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1438 block B49 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1438 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 516 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1443 518 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 1448 520 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1448 block B50 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1448 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 524 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1451 526 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1454 528 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 1460 block B70 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1460 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1460 674 r10|DWORD = MOVE stack:124|DWORD moveKind: DWORD  <||@
  Comment 1465 676 rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 1469 682 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 1476 684 MOV (x: [rsi|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1484 686 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 1491 688 r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1498 690 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1508 692 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1512 694 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1515 696 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B74 falseDestination: B70 -> B72  <||@
  Comment 1521 block B72 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1521 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1521 708 rdx|DWORD = SUB (x: r13|DWORD, ~y: stack:128|DWORD) size: DWORD  <||@
  Comment 1528 710 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1531 712 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B74 falseDestination: B72 -> B75  <||@
  Comment 1537 block B75 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1537 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1537 734 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 736 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1543 738 r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD  <||@
  Comment 1548 740 r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 1553 742 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1558 block B51 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1558 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 532 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1563 534 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1566 536 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1570 538 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1573 540 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 1579 block B52 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1579 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 544 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1586 546 JUMP ~[] destination: B52 -> B56  <||@
  Comment 1586 block B56 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1586 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1586 572 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1590 574 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1593 576 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 1599 block B58 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1599 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 584 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1603 586 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1609 588 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1613 590 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1616 592 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1616 block B59 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1616 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1616 596 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1620 598 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1623 600 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1629 block B61 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1629 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 608 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1633 610 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1639 612 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1643 614 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1646 616 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1646 block B62 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1646 618 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1646 620 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1650 622 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1653 624 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1659 block B64 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1659 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 632 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1663 634 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1669 636 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1673 638 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1676 640 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1676 block B65 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1676 642 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1676 644 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1679 646 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1682 648 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 1688 block B67 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1688 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 660 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1693 666 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1698 block B36 loop 1 depth 2 outer 0 header:1303|LoopBegin  <||@
  Comment 1698 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1712 416 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1718 418 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1724 420 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1728 422 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1731 424 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1738 block B53 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1738 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1738 550 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1742 552 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1749 554 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1749 block B54 loop 2 depth 2 outer 0 header:1368|LoopBegin  <||@
  Comment 1749 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1760 558 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1766 560 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1770 562 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1773 564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 1780 block B30 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1780 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1780 346 stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1785 348 stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1790 350 stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 1794 356 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1794 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1804 358 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1807 360 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1809 364 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1814 366 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1817 368 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42]  <||@
  Comment 1817 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1822 [stack:12, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |                   |                 |                    |   |     <||@
  Comment 1823 370 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1828 block B110 null  <||@
  Comment 1828 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 1090 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1833 1092 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1848 12  <||@
  Comment 1858 block B17 null  <||@
  Comment 1858 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1858 198 r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f]  <||@
  Comment 1864 200 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1869 202 JUMP ~[] destination: B17 -> B108  <||@
  Comment 1869 block B108 null  <||@
  Comment 1869 1070 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1869 1072 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1876 1074 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1883 1076 DEOPT info [bci:42]  <||@
  Comment 1883 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1888 [stack:40, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |                   |                 |                    |   |     <||@
  Comment 1889 block B19 null  <||@
  Comment 1889 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1889 214 r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f]  <||@
  Comment 1895 216 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1900 218 JUMP ~[] destination: B19 -> B108  <||@
  Comment 1902 block B74 null  <||@
  Comment 1902 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1902 700 r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD  <||@
  Comment 1907 702 rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1911 724 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 1915 726 MOV [r15|QWORD + 668] y: -142433 size: DWORD  <||@
  Comment 1926 728 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1933 730 DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 1933 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1938 [rdi:0, r11:0, stack:80, stack:88, stack:96, stack:104]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |r11|QWORD[.]  |rdi|QWORD[.]  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rdi|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 1939 block B1 null  <||@
  Comment 1939 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1939 16 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1944 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@747854488]  <||@
  Comment 1944 {Object[d.a@747854488]}  <||@
  Comment 1954 20 MOV [r15|QWORD + 668] y: -148755 size: DWORD  <||@
  Comment 1965 22 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1972 24 DEOPT info [bci:0]  <||@
  Comment 1972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1977 [rcx:0, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 1978 block B104 null  <||@
  Comment 1978 1046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 1048 r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed]  <||@
  Comment 1984 1050 JUMP ~[] destination: B104 -> B108  <||@
  Comment 1986 block B24 null  <||@
  Comment 1986 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1986 272 r10|DWORD = MOVE input: int[-133395|0xfffffffffffdf6ed]  <||@
  Comment 1992 274 JUMP ~[] destination: B24 -> B108  <||@
  Comment 1994 block B22 null  <||@
  Comment 1994 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 256 r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed]  <||@
  Comment 2000 258 JUMP ~[] destination: B22 -> B108  <||@
  Comment 2005 block B98 null  <||@
  Comment 2005 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 978 r10|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed]  <||@
  Comment 2011 980 JUMP ~[] destination: B98 -> B108  <||@
  Comment 2016 block B109 null  <||@
  Comment 2016 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 1080 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2021 1082 MOV [r15|QWORD + 668] y: -160307 size: DWORD  <||@
  Comment 2032 1084 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2039 1086 DEOPT info [bci:20]  <||@
  Comment 2039 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2044 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 2045 block B111 null  <||@
  Comment 2045 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2045 1096 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@620363699]  <||@
  Comment 2045 {Object[d.a@620363699]}  <||@
  Comment 2055 1098 MOV [r15|QWORD + 668] y: -111387 size: DWORD  <||@
  Comment 2066 1100 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2073 1102 DEOPT info [bci:15]  <||@
  Comment 2073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2078 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |stack:64|QWORD[.]  |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 2079 block B87 null  <||@
  Comment 2079 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2079 886 r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd]  <||@
  Comment 2085 888 JUMP ~[] destination: B87 -> B108  <||@
  Comment 2090 block B96 null  <||@
  Comment 2090 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2090 966 r10|DWORD = MOVE input: int[-154899|0xfffffffffffda2ed]  <||@
  Comment 2096 968 JUMP ~[] destination: B96 -> B108  <||@
  Comment 2101 block B88 null  <||@
  Comment 2101 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2101 892 r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded]  <||@
  Comment 2107 894 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2112 896 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2117 898 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2122 900 JUMP ~[] destination: B88 -> B108  <||@
  Comment 2127 block B86 null  <||@
  Comment 2127 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2127 880 r10|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed]  <||@
  Comment 2133 882 JUMP ~[] destination: B86 -> B108  <||@
  Comment 2138 block B80 null  <||@
  Comment 2138 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2138 822 r10|DWORD = MOVE input: int[-145203|0xfffffffffffdc8cd]  <||@
  Comment 2144 824 JUMP ~[] destination: B80 -> B108  <||@
  Comment 2149 block B90 null  <||@
  Comment 2149 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2149 920 r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 2155 922 JUMP ~[] destination: B90 -> B108  <||@
  Comment 2160 block B107 null  <||@
  Comment 2160 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2160 1066 r10|DWORD = MOVE input: int[-150555|0xfffffffffffdb3e5]  <||@
  Comment 2166 1068 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2171 block B105 null  <||@
  Comment 2171 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2171 1054 r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed]  <||@
  Comment 2177 1056 JUMP ~[] destination: B105 -> B108  <||@
  Comment 2182 block B106 null  <||@
  Comment 2182 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2182 1060 r10|DWORD = MOVE input: int[-152627|0xfffffffffffdabcd]  <||@
  Comment 2188 1062 JUMP ~[] destination: B106 -> B108  <||@
  Comment 2193 block B103 null  <||@
  Comment 2193 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2193 1042 r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed]  <||@
  Comment 2199 1044 JUMP ~[] destination: B103 -> B108  <||@
  Comment 2204 block B85 null  <||@
  Comment 2204 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2204 874 r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced]  <||@
  Comment 2210 876 JUMP ~[] destination: B85 -> B108  <||@
  Comment 2215 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2215 4  <||@
  Comment 2221 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2221 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7288[java.util.Formatter.format(Locale, String, Object[])]"
  method "HotSpotCompilation-7288[java.util.Formatter.format(Locale, String, Object[])]"
  date 1526687577769
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1197d2a20 448b560849c1e203493bc20f852f2423ff900f1f80000000000f1f800000000089842400c0feff4881ec880000004889ac248000000048895424684c894424604d85c00f844a070000448b5610438504d44c8bd6488bd14c89542458666690e8dcfcefff904889442450448b500c448954244c418bfa488bf748ffce483bfe0f87090000004585d20f856f0700004c8b442460458b580c44895c2448458bcb41ffc944894c2444c7442440ffffffffc744243cffffffff41b900000000666690453bd10f8e5b060000428b7c88108b34fd0800000081fe303a02f80f8537010000448b2cfd0c000000448bf749c1e6034183fdfe0f84190000004183fd000f842b0100004183fdff0f8427070000e92207000081fe333e02f80f854d02000044896c24388b34fd100000008b34f510000000418504f48b3cfd0c000000897c2434418504fc448b2cf5080000004181fd4b1b00f84c897424280f85bf01000089742424448b2cfd0c00000044896c2420438504ec8b3cf510000000448b34fd0c000000468b14ed0c000000448b2cf50c000000458bda4503dd44895c241c458bc3452bc64183f8010f8d900200004585ed0f8c8b050000452bf2453bee0f8f9e05000048c1e703448b5c242044894c241849c1e3034d63ed458bd24c8bc7498d7b104b8d746810498bd2e831f123ff908b742424448b5c241c44891cf50c000000448b4c241841ffc1448b54244c488b442450e9a8feffff81fe333e02f80f85bc05000041bdfeffffffe9bafeffff4c8974242844896c243844894c2418448b54244041ffc24489542434443b5424440f8f0f060000448b5c2448453bda0f860c06000081fe303a02f80f85160600000fb634fd1a00000085f60f85fb0500000fb734fd1800000083fe640f85290500004c8b442460478b4c901042813ccd08000000d92100f80f847d05000042813ccd08000000202200f80f8416050000428b34cd0800000081fe672200f80f85090100004a6314cd0c000000488b742428488b4c24686690e8942323ff90448b4c241841ffc148894424708b442434894424408b4424348944243c488b442470448b54244c488b442450e9a2fdffff44894c24184181fd254f00f80f852a050000448b44243448c1e603418bf848c1e7034c8bd6488bd74c8914240f1f440000e82c2323ff90448b4c241841ffc1448b54244c488b442450e954fdffff4c8974242844896c243844894c241881fe303a02f80f85980400000fb634fd1a00000085f60f85b80400000fb734fd1800000083fe640f85f4040000488b74242848ba0000000000000000488b4c2468666690e8bc2223ff90448b4c241841ffc1448b54244c488b442450e9e4fcffff42813ccd08000000ae2200f80f85a30400004a8b14cd10000000488b742428488b4c24680f1f8000000000e8742223ff90448b4c241841ffc148894424708b442434894424408b4424348944243c488b442470448b54244c488b442450e982fcffff448b44243444894c2418458bcb448b5c2420418bd6d1e28d52028bca412bc985c9410f4cd183fa010f8c5e030000b9f7ffff7f2bca85c90f8c47030000498b4f60498b5f7081faffffff000f83650200008bc2d1e08d401783e0f84863c0488be84803e9483beb0f874902000049896f600f188408c00000000f188408000100000f188408400100000f1884088001000089510c48c70101000000c74108410000f8488bc144896c24144489542410897c240c448bea453bee418bd5410f4fd64c63d24983fa010f8c9d0000008b7c240c4c8d58104c8d04fd100000004d8d4af04d85c948c7c1000000000f8d810100004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63dd4d3bda0f8f62000000448b5424148b7424244c8bd849c1eb0344891cf510000000448bde49c1e3034d8bc349c1e80949b900c0240801000000478824084585d20f8c7d010000418bd52b542410443bd20f8f6d010000488bf8458bea448b542410448b5c2420e9bbfbffff4e8d4450104d2bda4d8d53f04d85d20f8d9f00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f1cffffff6647892448e912ffffff0f1f80000000000f1f8000000000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe965feffffc5f9efc049c7c1000000006666660f1f840000000000c4817e7f04484d8d49104d3bca7ef1e93effffff44896c24144489542410897c240c48b9080200c007000000488bf18bc2b900000000448be8e8621199ff90e9d0fdffff488b442458488bac24800000004881c4880000008505a88e70f0c5f877c341ba9f02feff44894c24184589979c0200004d89a7a8020000e87e3423ff9041ba9f02feff44894c2418ebdf448b5424108b7c243448c1e70341c7879c0200009fd3fdff4d89a7a8020000e84c3423ff90488974245849ba8039576f0700000041c7879c020000edbafdff4d8997a8020000e8253423ff9041baed87ffffeb8b41baedf6fdffeb8341baedf7fdffe978ffffff41baeda1fdffe96dffffff44894c241841c7879c020000cd8dfdff4d89a7a8020000e8e23323ff9049ba78cd566f0700000041c7879c020000e54cfeff4d8997a8020000e8c03323ff9041bacdc5fdffe923ffffff41baeda2fdffe918ffffff41baedddffff4c8974242844896c243844894c2418e9fefeffff41baedc0fdffe9f3feffff41bacdc8fdffe9e8feffff41baedb6fdffe9ddfeffff41bae5b3fdffe9d2feffff41baeda7fdffe9c7feffff41bacdabfdffe9bcfeffff41baed98fdffe9b1feffff41baed5cffffe9a6feffffe8d4c462ff90e82e3223ff90f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@64a720d8 slotKind: QWORD  <||@
  Comment 54 6 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 64 10 TEST (x: r8|QWORD[.], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 67 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 73 block B2 null  <||@
  Comment 73 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 73 28 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 30 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 77 [rcx:0, rsi:0, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 32 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 84 36 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 87 38 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 92 40 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12]  <||@
  Comment 92 9  <||@
  Comment 95 {HotSpotMethod<Formatter.parse(String)>}  <||@
  Comment 100 [stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-    <||@
  Comment 101 42 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 106 44 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15]  <||@
  Comment 106 [rax:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]       |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 106 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 46 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 115 48 rdi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 118 50 rsi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 124 52 CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 127 54 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 133 block B4 null  <||@
  Comment 133 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 64 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 136 66 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B111  <||@
  Comment 142 block B6 null  <||@
  Comment 142 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 58 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 147 76 r11|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 151 78 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 156 80 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 162 82 stack:76|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 167 84 stack:80|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 175 86 stack:84|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 183 88 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 189 90 JUMP ~[] destination: B6 -> B7  <||@
  Comment 189 block B7 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 189 92 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 192 94 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 195 96 BRANCH trueDestinationProbability: 0.7935021533821518 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B110  <||@
  Comment 201 block B8 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 201 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 100 rdi|DWORD[.] = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 206 102 rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20]  <||@
  Comment 206 [rax:0, rdi:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |-  |-  |-    <||@
  Comment 206 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 213 104 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 219 106 BRANCH trueDestinationProbability: 0.5218002798789941 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 225 block B9 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 225 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 110 r13|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 233 112 JUMP ~[] destination: B9 -> B12  <||@
  Comment 233 block B12 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 233 126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 233 128 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 240 130 AMD64HOTSPOTSTRATEGYSWITCH ~r13|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B12 -> B13, B12 -> B88, B12 -> B89] defaultTarget: B12 -> B88 strategy: SequentialStrategy[avgEffort=1.4177812745869394]  <||@
  Comment 275 block B13 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 275 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 134 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 275 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 281 136 BRANCH trueDestinationProbability: 0.8449316052539398 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B81  <||@
  Comment 287 block B14 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 287 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 140 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 292 142 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 299 144 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD state [bci:42]  <||@
  Comment 299 [rax:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |              |   |     <||@
  Comment 299 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 306 146 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 306 [rax:0, rsi:0, rdi:0, r14:0, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |              |   |     <||@
  Comment 306 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 310 148 rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 317 150 stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 321 152 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 321 [rax:0, rsi:0, rdi:0, r14:0, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8             |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |r14|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |              |   |     <||@
  Comment 321 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 325 154 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 333 156 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 333 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 340 162 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 345 158 BRANCH trueDestinationProbability: 0.5841949545480353 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B78  <||@
  Comment 351 block B15 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 351 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 164 stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 355 166 r13|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 363 168 stack:112|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 368 170 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:42]  <||@
  Comment 368 [rax:0, rsi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |                    |   |     <||@
  Comment 368 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 372 172 rdi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 379 174 r14|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 379 [rax:0, rsi:0, rdi:0, r13:0, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |rax|QWORD[.]  |r9|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |              |          |                    |   |     <||@
  Comment 379 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 387 176 r10|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 395 178 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 403 180 r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 409 182 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 414 184 r8|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 420 186 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 424 188 BRANCH trueDestinationProbability: 0.9518065952449013 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 430 block B16 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 430 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 192 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 433 194 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 439 block B18 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 439 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 439 206 r14|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 442 208 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 445 210 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 451 block B20 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 451 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 222 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 455 224 r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 460 226 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 465 228 JUMP ~[] destination: B20 -> B76  <||@
  Comment 465 block B76 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 465 744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 465 746 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 469 748 r11|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 469 750 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 469 752 r13|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 472 754 r10|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 475 756 r8|QWORD[*] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 478 758 rdi|QWORD = LEA [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 482 760 rsi|QWORD = LEA [r8|QWORD[*] + r13|QWORD * 2 + 16] size: QWORD  <||@
  Comment 487 762 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 490 764 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 490 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 496 766 rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 500 768 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 505 770 MOV (x: [rsi|DWORD[.] * 8 + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 513 772 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 521 774 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 526 776 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 531 778 JUMP ~[] destination: B76 -> B7  <||@
  Comment 536 block B10 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 536 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 536 116 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 536 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 542 118 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B109  <||@
  Comment 548 block B11 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 548 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 122 r13|DWORD = MOVE input: int[-2|0xfffffffffffffffe]  <||@
  Comment 554 124 JUMP ~[] destination: B11 -> B12  <||@
  Comment 559 block B89 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 559 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 904 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 564 906 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 569 908 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 574 910 r10|DWORD = INC stack:80|DWORD size: DWORD  <||@
  Comment 582 912 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 587 914 CMP (x: r10|DWORD, y: stack:76|DWORD) size: DWORD  <||@
  Comment 592 916 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 598 block B91 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 598 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 926 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 603 928 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 606 930 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B107  <||@
  Comment 612 block B92 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 612 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 934 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 612 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 618 936 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B106  <||@
  Comment 624 block B93 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 624 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 624 940 rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 632 942 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 634 944 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B105  <||@
  Comment 640 block B94 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 640 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 948 rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 648 950 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 651 952 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B104  <||@
  Comment 657 block B95 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 657 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 956 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 662 958 r9|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 667 960 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed} state [bci:42]  <||@
  Comment 667 [r8:0, r9:0, stack:40, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3            |4               |5               |6                  |7                |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |r8|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |             |                |                |                   |                 |                    |   |     <||@
  Comment 667 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 667 {meta{HotSpotType<Ljava/lang/Byte;, resolved>;compressed}}  <||@
  Comment 679 962 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 685 block B97 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 685 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 972 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}  <||@
  Comment 685 {meta{HotSpotType<Ljava/lang/Short;, resolved>;compressed}}  <||@
  Comment 697 974 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99  <||@
  Comment 703 block B99 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 703 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 984 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 711 986 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}  <||@
  Comment 711 {meta{HotSpotType<Ljava/lang/Integer;, resolved>;compressed}}  <||@
  Comment 717 988 BRANCH trueDestinationProbability: 0.9263680917092032 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B101  <||@
  Comment 723 block B100 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 723 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 992 rdx|QWORD = MOVSXD [r9|DWORD[.] * 8 + 12] size: QWORD  <||@
  Comment 731 994 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 736 996 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 741 998 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:55, 73, 143, 190]  <||@
  Comment 741 9  <||@
  Comment 743 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 748 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:3083) [bci: 55, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2787) [bci: 73, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD  |stack:92|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 749 1000 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 757 -1 [stack:80|DWORD, stack:84|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 783 1006 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 788 1008 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 793 1010 JUMP ~[] destination: B100 -> B7  <||@
  Comment 798 block B78 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 798 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 798 788 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 803 790 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}  <||@
  Comment 803 {meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}}  <||@
  Comment 810 792 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 816 block B79 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 816 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 796 r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 821 798 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 825 800 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 832 802 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 835 806 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 838 808 stack:144|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 842 810 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76]  <||@
  Comment 842 9  <||@
  Comment 847 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 852 [stack:0, stack:80, stack:88, stack:96, stack:104]at java.io.PrintStream.print(PrintStream.java:669) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:144|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:57) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 853 812 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 861 814 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 866 816 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 871 818 JUMP ~[] destination: B79 -> B7  <||@
  Comment 876 block B81 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 876 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 876 828 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 881 830 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 886 832 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 891 834 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 891 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 897 836 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 903 block B82 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 903 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 840 rsi|DWORD = MOVZXB [rdi|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 911 842 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 913 844 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 919 block B83 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 919 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 919 848 rsi|DWORD = MOVZX [rdi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 927 850 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 930 852 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 936 block B84 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 936 854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 936 856 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 941 858 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 951 860 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 956 862 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76]  <||@
  Comment 956 9  <||@
  Comment 959 {HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>}  <||@
  Comment 964 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 965 864 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 973 866 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 978 868 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 983 870 JUMP ~[] destination: B84 -> B7  <||@
  Comment 988 block B101 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 988 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 988 1014 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}  <||@
  Comment 988 {meta{HotSpotType<Ljava/lang/Long;, resolved>;compressed}}  <||@
  Comment 1000 1016 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1006 block B102 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1006 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 1020 rdx|QWORD = MOV [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1014 1022 rsi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1019 1024 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1024 1026 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:95, 143, 190]  <||@
  Comment 1024 9  <||@
  Comment 1031 {HotSpotMethod<Formatter$FormatSpecifier.print(long, Locale)>}  <||@
  Comment 1036 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:2789) [bci: 95, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD  |stack:92|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 1037 1028 r9|DWORD = INC stack:120|DWORD size: DWORD  <||@
  Comment 1045 -1 [stack:80|DWORD, stack:84|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 1071 1034 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1076 1036 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 1038 JUMP ~[] destination: B102 -> B7  <||@
  Comment 1086 block B21 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1086 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 232 r8|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1091 234 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1096 236 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1099 238 r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 1104 240 rdx|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 1109 242 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 1112 244 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1117 246 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1119 248 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 1123 250 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 1126 252 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1132 block B23 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1132 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1132 262 rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 1137 264 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 1139 266 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1141 268 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1147 block B25 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1147 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 278 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1151 280 rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1155 282 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 1161 284 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 1167 block B26 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1167 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1167 288 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 1171 290 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 1174 292 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 1177 294 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1180 296 rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1186 298 CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1189 300 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B30 falseDestination: B26 -> B28  <||@
  Comment 1195 block B28 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1195 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 314 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 1199 316 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1207 318 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1215 320 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1223 322 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1231 324 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 1234 326 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 1241 328 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1241 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1248 330 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1248 332 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1251 334 stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1256 336 stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1261 338 stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 1265 340 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1268 342 JUMP ~[] destination: B28 -> B31  <||@
  Comment 1268 block B31 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1268 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1268 374 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1271 376 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1278 378 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1281 380 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 1285 382 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 1291 block B33 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1291 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 390 rdi|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD  <||@
  Comment 1295 392 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1299 394 r8|QWORD[*] = LEA [rdi|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1307 396 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 1311 398 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1314 404 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1321 400 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 1327 block B38 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1327 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1327 432 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1331 434 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1334 436 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 1340 block B40 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1340 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1340 444 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1346 446 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1352 448 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 1356 450 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1359 452 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1359 block B41 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1359 454 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1359 456 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 1363 458 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1366 460 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 1372 block B43 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1372 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1372 468 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1378 470 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1384 472 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1388 474 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1391 476 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1391 block B44 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1391 478 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1391 480 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 1395 482 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1398 484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 1404 block B46 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1404 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1404 492 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1410 494 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1416 496 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1420 498 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1423 500 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1423 block B47 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1423 502 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1423 504 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1429 506 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1432 508 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 1438 block B49 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1438 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1438 516 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1443 518 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 1448 520 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1448 block B50 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1448 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 524 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1451 526 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1454 528 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 1460 block B70 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1460 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1460 674 r10|DWORD = MOVE stack:124|DWORD moveKind: DWORD  <||@
  Comment 1465 676 rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 1469 682 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 1476 684 MOV (x: [rsi|DWORD[.] * 8 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1484 686 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 1491 688 r8|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1498 690 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1508 692 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1512 694 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1515 696 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B74 falseDestination: B70 -> B72  <||@
  Comment 1521 block B72 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1521 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1521 708 rdx|DWORD = SUB (x: r13|DWORD, ~y: stack:128|DWORD) size: DWORD  <||@
  Comment 1528 710 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1531 712 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B72 -> B74 falseDestination: B72 -> B75  <||@
  Comment 1537 block B75 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1537 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1537 734 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1540 736 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1543 738 r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD  <||@
  Comment 1548 740 r11|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 1553 742 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1558 block B51 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1558 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 532 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1563 534 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 1566 536 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 1570 538 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1573 540 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 1579 block B52 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1579 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1579 544 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1586 546 JUMP ~[] destination: B52 -> B56  <||@
  Comment 1586 block B56 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1586 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1586 572 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 1590 574 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1593 576 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 1599 block B58 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1599 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 584 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1603 586 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1609 588 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 1613 590 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1616 592 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1616 block B59 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1616 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1616 596 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 1620 598 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1623 600 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 1629 block B61 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1629 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 608 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1633 610 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1639 612 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 1643 614 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1646 616 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1646 block B62 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1646 618 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1646 620 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 1650 622 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1653 624 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 1659 block B64 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1659 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1659 632 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1663 634 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1669 636 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 1673 638 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1676 640 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1676 block B65 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1676 642 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1676 644 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 1679 646 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1682 648 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 1688 block B67 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1688 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 660 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1693 666 JUMP ~[] destination: B67 -> B70  <||@
  Comment 1698 block B36 loop 1 depth 2 outer 0 header:1303|LoopBegin  <||@
  Comment 1698 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1712 416 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1718 418 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1724 420 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1728 422 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1731 424 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1738 block B53 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1738 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1738 550 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1742 552 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1749 554 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1749 block B54 loop 2 depth 2 outer 0 header:1368|LoopBegin  <||@
  Comment 1749 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1760 558 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1766 560 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 1770 562 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1773 564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 1780 block B30 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1780 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1780 346 stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1785 348 stack:128|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1790 350 stack:132|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 1794 356 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1794 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1804 358 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1807 360 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1809 364 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1814 366 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1817 368 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:42]  <||@
  Comment 1817 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1822 [stack:12, stack:32, stack:36, stack:40, stack:52, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |                   |                 |                    |   |     <||@
  Comment 1823 370 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1828 block B110 null  <||@
  Comment 1828 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 1090 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1833 1092 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1848 12  <||@
  Comment 1858 block B17 null  <||@
  Comment 1858 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1858 198 r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f]  <||@
  Comment 1864 200 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1869 202 JUMP ~[] destination: B17 -> B108  <||@
  Comment 1869 block B108 null  <||@
  Comment 1869 1070 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1869 1072 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1876 1074 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1883 1076 DEOPT info [bci:42]  <||@
  Comment 1883 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1888 [stack:40, stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8                   |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |stack:104|QWORD[.]  |-  |-  
     stack:   |stack:88|DWORD     |                   |   |                   |                |                |                   |                 |                    |   |     <||@
  Comment 1889 block B19 null  <||@
  Comment 1889 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1889 214 r10|DWORD = MOVE input: int[-130401|0xfffffffffffe029f]  <||@
  Comment 1895 216 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1900 218 JUMP ~[] destination: B19 -> B108  <||@
  Comment 1902 block B74 null  <||@
  Comment 1902 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1902 700 r10|DWORD = MOVE stack:128|DWORD moveKind: DWORD  <||@
  Comment 1907 702 rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1911 724 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4698a5b9 encoding: base: 0 shift: 3  <||@
  Comment 1915 726 MOV [r15|QWORD + 668] y: -142433 size: DWORD  <||@
  Comment 1926 728 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1933 730 DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 1933 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1938 [rdi:0, r11:0, stack:80, stack:88, stack:96, stack:104]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |r11|QWORD[.]  |rdi|QWORD[.]  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rdi|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 1939 block B1 null  <||@
  Comment 1939 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1939 16 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1944 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@747854488]  <||@
  Comment 1944 {Object[d.a@747854488]}  <||@
  Comment 1954 20 MOV [r15|QWORD + 668] y: -148755 size: DWORD  <||@
  Comment 1965 22 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1972 24 DEOPT info [bci:0]  <||@
  Comment 1972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1977 [rcx:0, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                  |4  |5  |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |rcx|QWORD[.]  |stack:48|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 1978 block B104 null  <||@
  Comment 1978 1046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 1048 r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed]  <||@
  Comment 1984 1050 JUMP ~[] destination: B104 -> B108  <||@
  Comment 1986 block B24 null  <||@
  Comment 1986 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1986 272 r10|DWORD = MOVE input: int[-133395|0xfffffffffffdf6ed]  <||@
  Comment 1992 274 JUMP ~[] destination: B24 -> B108  <||@
  Comment 1994 block B22 null  <||@
  Comment 1994 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 256 r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed]  <||@
  Comment 2000 258 JUMP ~[] destination: B22 -> B108  <||@
  Comment 2005 block B98 null  <||@
  Comment 2005 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 978 r10|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed]  <||@
  Comment 2011 980 JUMP ~[] destination: B98 -> B108  <||@
  Comment 2016 block B109 null  <||@
  Comment 2016 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 1080 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2021 1082 MOV [r15|QWORD + 668] y: -160307 size: DWORD  <||@
  Comment 2032 1084 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2039 1086 DEOPT info [bci:20]  <||@
  Comment 2039 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2044 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7                |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:84|DWORD  |stack:80|DWORD  |stack:64|QWORD[.]  |stack:120|DWORD  |-  |-  |-    <||@
  Comment 2045 block B111 null  <||@
  Comment 2045 1094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2045 1096 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@620363699]  <||@
  Comment 2045 {Object[d.a@620363699]}  <||@
  Comment 2055 1098 MOV [r15|QWORD + 668] y: -111387 size: DWORD  <||@
  Comment 2066 1100 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2073 1102 DEOPT info [bci:15]  <||@
  Comment 2073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2078 [stack:80, stack:88, stack:96, stack:104]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |stack:64|QWORD[.]  |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 2079 block B87 null  <||@
  Comment 2079 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2079 886 r10|DWORD = MOVE input: int[-145971|0xfffffffffffdc5cd]  <||@
  Comment 2085 888 JUMP ~[] destination: B87 -> B108  <||@
  Comment 2090 block B96 null  <||@
  Comment 2090 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2090 966 r10|DWORD = MOVE input: int[-154899|0xfffffffffffda2ed]  <||@
  Comment 2096 968 JUMP ~[] destination: B96 -> B108  <||@
  Comment 2101 block B88 null  <||@
  Comment 2101 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2101 892 r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded]  <||@
  Comment 2107 894 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2112 896 stack:88|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2117 898 stack:120|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2122 900 JUMP ~[] destination: B88 -> B108  <||@
  Comment 2127 block B86 null  <||@
  Comment 2127 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2127 880 r10|DWORD = MOVE input: int[-147219|0xfffffffffffdc0ed]  <||@
  Comment 2133 882 JUMP ~[] destination: B86 -> B108  <||@
  Comment 2138 block B80 null  <||@
  Comment 2138 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2138 822 r10|DWORD = MOVE input: int[-145203|0xfffffffffffdc8cd]  <||@
  Comment 2144 824 JUMP ~[] destination: B80 -> B108  <||@
  Comment 2149 block B90 null  <||@
  Comment 2149 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2149 920 r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 2155 922 JUMP ~[] destination: B90 -> B108  <||@
  Comment 2160 block B107 null  <||@
  Comment 2160 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2160 1066 r10|DWORD = MOVE input: int[-150555|0xfffffffffffdb3e5]  <||@
  Comment 2166 1068 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2171 block B105 null  <||@
  Comment 2171 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2171 1054 r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed]  <||@
  Comment 2177 1056 JUMP ~[] destination: B105 -> B108  <||@
  Comment 2182 block B106 null  <||@
  Comment 2182 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2182 1060 r10|DWORD = MOVE input: int[-152627|0xfffffffffffdabcd]  <||@
  Comment 2188 1062 JUMP ~[] destination: B106 -> B108  <||@
  Comment 2193 block B103 null  <||@
  Comment 2193 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2193 1042 r10|DWORD = MOVE input: int[-157459|0xfffffffffffd98ed]  <||@
  Comment 2199 1044 JUMP ~[] destination: B103 -> B108  <||@
  Comment 2204 block B85 null  <||@
  Comment 2204 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2204 874 r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced]  <||@
  Comment 2210 876 JUMP ~[] destination: B85 -> B108  <||@
  Comment 2215 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2215 4  <||@
  Comment 2221 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2221 5  <||@
  HexCodeFile>>> <|@
end_nmethod
