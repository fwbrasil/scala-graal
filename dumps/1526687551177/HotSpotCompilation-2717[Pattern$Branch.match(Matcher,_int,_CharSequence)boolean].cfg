begin_compilation
  name " HotSpotCompilation-2717[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2717[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  date 1526687554143
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a1103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 v1204 v1196 v1164 v1130 v1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 v46 v47 i130 i159 i1238 i226 i1239 i1237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1098 ?11 v447 ?26 ?1095 ?81 v1310 ?320 ?71 v658 ?75 ?334 v1301 ?140 v640 ?167 v559 ?111 v567 ?234 v1294 v1334 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1095 ?11 v447 ?26 v658 ?81 v491 ?71 i109 i159 v146 v243 v1315 v239 v599 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?1095 ?11 v447 ?26 v658 ?81 ?71 v567 v640 ?111 v559 ?234 v1326 v1302 v1332 v1333 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Branch;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1095 ?11 v1288 v1289 v1292 ?26 ?81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v27 v37 i110 v273 v134 ?334 v154 v163 ?320 v239 v230 v380 ?26 ?229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B44" "B23" "B59" "B75" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i44 i1237 i1238 i1239 
=== Succesors ===
=== Usages ===
?11 v13 v1291 ?26 v450 ?81 i44 ?1095 i1237 i1238 i1239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i44 i1237 i1238 i1239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7277331505241476
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 4
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: i1241 
=== Usages ===
i10 v30 v40 v45 v309 v323 v388 v979 v919 v752 v969 v762 v884 v959 v777 v782 v934 v949 v797 v929 v914 v814 v820 v939 v832 v838 v904 v850 v856 v862 v899 v872 v889 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: i1241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.size
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
=== Succesors ===
next: v753 
=== Usages ===
v13 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1241 
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i1241  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
v1106 i1243 a1246 v1327 a1248 i1249 v1252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v749 
falseSuccessor: v752 
=== Usages ===
=== Predecessor ===
i1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v749 #falseSuccessor: v752  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1242 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.atoms
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
nullCheck: false
stamp: n [Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
=== Succesors ===
next: i1243 
=== Usages ===
a417 v1290 
=== Predecessor ===
v749 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 #next: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1242 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1290 
=== Succesors ===
next: v763 
=== Usages ===
v450 
=== Predecessor ===
a1242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1290 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1243 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i1243  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
i1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v759 #falseSuccessor: v762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1244 
=== Usages ===
a1244 
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1244  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
op: Uncompress
stamp: a [Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1242 
=== Succesors ===
=== Usages ===
v1291 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1242  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a417 
index: i10 
=== Succesors ===
=== Usages ===
a1244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a417 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: v759 
address: v1291 
=== Succesors ===
next: v21 
=== Usages ===
v676 ?320 v1295 v1298 v1323 ?75 ?167 ?1098 ?334 ?140 ?71 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v759 address: v1291 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
=== Inputs ===
value: a1244 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
trueSuccessorProbability: 0.42141865036453907
=== Inputs ===
condition: v676 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
a1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v676 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1245 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1245  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.conn
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 23]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
=== Succesors ===
next: a1246 
=== Usages ===
v1293 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1292 #next: a1246  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1245 
=== Succesors ===
=== Usages ===
a1246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
nullCheck: true
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1293 
=== Succesors ===
next: v1327 
=== Usages ===
a443 v1327 
=== Predecessor ===
a1245 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1293 #next: v1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a1246 
=== Succesors ===
next: i25 
=== Usages ===
=== Predecessor ===
a1246 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a1246 #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a443 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1246 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1246  <|@  <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6f8258cf
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a443 a2 i3 a4 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a443 a2 i3 a4  <|@  <|@
tid ?1095 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v447 
stateDuring: ?1095 
=== Succesors ===
next: v778 
=== Usages ===
v27 
=== Predecessor ===
v1327 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v447 stateDuring: ?1095 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i6 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v777 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v775  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 i6 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 448
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4605) [bci: 39]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
=== Succesors ===
next: v783 
=== Usages ===
v1226 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1323 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1247 
y: v1225 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1247 y: v1225  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1226 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1226 #trueSuccessor: v779 #falseSuccessor: v782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1248 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1248 a1264 a1270 a1282 a1285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1294 
=== Succesors ===
next: i1249 
=== Usages ===
a467 v1296 
=== Predecessor ===
v779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1294 #next: i1249  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1248 
=== Succesors ===
=== Usages ===
i1249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1296 
=== Succesors ===
next: i1250 
=== Usages ===
v626 
=== Predecessor ===
a1248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1296 #next: i1250  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
i1250 i1266 i1272 i1284 i1287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v798 
=== Usages ===
v626 v1297 
=== Predecessor ===
i1249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1250 
y: i1249 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1250 y: i1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v626 
=== Succesors ===
trueSuccessor: v794 
falseSuccessor: v797 
=== Usages ===
=== Predecessor ===
i1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v626 #trueSuccessor: v794 #falseSuccessor: v797  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1251 
=== Usages ===
v633 v491 i1253 
=== Predecessor ===
v798 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1251  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
a1251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
=== Succesors ===
next: v1252 
=== Usages ===
a494 v1324 v1299 v1300 v1311 v1318 v1330 a1331 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1298 #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1324 
=== Succesors ===
next: i1253 
=== Usages ===
v1230 v1228 
=== Predecessor ===
a1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1324 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1248 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a467 
index: i1250 
=== Succesors ===
=== Usages ===
v491 i1253 v633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a467 index: i1250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v794 
address: v1297 
=== Succesors ===
next: v491 
=== Usages ===
?71 ?75 v583 ?1098 v674 ?167 ?140 v552 ?320 v633 ?334 v657 
=== Predecessor ===
v1252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v794 address: v1297 #next: v491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v794 
address: v1297 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v794 address: v1297 value: i3 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1252 
y: v1227 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1252 y: v1227  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4606
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
?71 ?75 ?1098 ?334 ?167 ?140 ?320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 v1235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.49989025912563956
=== Inputs ===
condition: v1228 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1228 #trueSuccessor: v89 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602673547948718848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - 
=== Succesors ===
=== Usages ===
?111 ?138 ?234 ?1097 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 -  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1251 
=== Succesors ===
=== Usages ===
?111 ?234 v567 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1251  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
i1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603673856010745631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i3 i1268 
=== Succesors ===
=== Usages ===
?111 v567 i226 v213 v277 v1304 v273 v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i3 i1268  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i6 i130 
=== Succesors ===
=== Usages ===
?111 v113 v567 ?234 i130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i6 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.221657504180836
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v107 
=== Succesors ===
next: i1254 
=== Usages ===
i109 i110 v115 v125 v131 v883 v849 v861 v813 v819 v855 v831 v837 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v107 #next: i1254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1254 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
=== Succesors ===
next: v119 
=== Usages ===
v113 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i1254 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i110 y: i1254  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: a494 a2 i109 a4 i110 
=== Succesors ===
=== Usages ===
v1164 v1256 v1258 i1260 i1265 v1329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: a494 a2 i109 a4 i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.545737941206047
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i1254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v114 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1255 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
a1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
=== Succesors ===
next: v1256 
=== Usages ===
v1325 v1309 v1305 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1300 #next: v1256  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1325 
=== Succesors ===
next: v815 
=== Usages ===
v1232 
=== Predecessor ===
a1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1325 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1256 
y: v1231 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1256 y: v1231  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1232 
=== Succesors ===
trueSuccessor: v810 
falseSuccessor: v813 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1232 #trueSuccessor: v810 #falseSuccessor: v813  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1257 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1257  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
=== Succesors ===
next: v821 
=== Usages ===
v213 
=== Predecessor ===
v810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i1257 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v819 
=== Usages ===
=== Predecessor ===
i1257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v816 #falseSuccessor: v819  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1258 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1326 
=== Succesors ===
next: v833 
=== Usages ===
v1234 
=== Predecessor ===
v816 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1326 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1258 
y: v1233 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1258 y: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v828 #falseSuccessor: v831  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i6 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v837 
falseSuccessor: v834 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v837 #falseSuccessor: v834  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v838  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1173  <|@  <|@
f <@~|@floating>@ <|@
tid i1174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130323
stableDimension: 0
stamp: i32 [-130323] ⇊00000000fffe02ed ⇈00000000fffe02ed
stampKind: i32
value: int[-130323|0xfffffffffffe02ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1259 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
=== Succesors ===
next: i1260 
=== Usages ===
a512 v1303 
=== Predecessor ===
v834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1302 #next: i1260  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1259 
=== Succesors ===
=== Usages ===
i1260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1260 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1303 
=== Succesors ===
next: v851 
=== Usages ===
v277 v520 
=== Predecessor ===
a1259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1303 #next: v851  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i1260 
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v846 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
i1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v846 #falseSuccessor: v849  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i1260 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i109 y: i1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v852 
falseSuccessor: v855 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v852 #falseSuccessor: v855  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1261 
=== Usages ===
i1261 
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1261  <|@  <|@
f <@~|@floating>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1259 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a512 
index: i109 
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: i109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v852 
address: v1304 
=== Succesors ===
next: v863 
=== Usages ===
v748 j684 
=== Predecessor ===
v852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v852 address: v1304 #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1261 
y: i747 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1261 y: i747  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v748 
=== Succesors ===
trueSuccessor: v858 
falseSuccessor: v861 
=== Usages ===
=== Predecessor ===
i1261 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v748 #trueSuccessor: v858 #falseSuccessor: v861  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1262 
=== Usages ===
i1263 
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1262  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
i1262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
=== Succesors ===
next: i1263 
=== Usages ===
v285 
=== Predecessor ===
v858 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1305 #next: i1263  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j684 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1261 
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1261  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a292 
index: j684 
=== Succesors ===
=== Usages ===
i1263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v858 
address: v1306 
=== Succesors ===
next: v224 
=== Usages ===
v285 
=== Predecessor ===
i1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v858 address: v1306 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
x: i1262 
y: i1263 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1262 y: i1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.790796004384128
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
i1263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v125 #falseSuccessor: v223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: a1264 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: a1264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1265 
=== Usages ===
a538 v1307 
=== Predecessor ===
v125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1264 
=== Succesors ===
=== Usages ===
i1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1307 
=== Succesors ===
next: i1266 
=== Usages ===
v545 
=== Predecessor ===
a1264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1307 #next: i1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1266 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v873 
=== Usages ===
v1308 v545 
=== Predecessor ===
i1265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1266 
y: i1265 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1266 y: i1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v869 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
i1266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v869 #falseSuccessor: v872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
v552 
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid a538 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1264 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1264  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a538 
index: i1266 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a538 index: i1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v869 
address: v1308 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v869 address: v1308 value: i1253 stateAfter: - lastLocationAccess: - #next: v742  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 i6 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?320 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?320 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid i1237 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1185  <|@  <|@
f <@~|@floating>@ <|@
tid i1186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -139803
stableDimension: 0
stamp: i32 [-139803] ⇊00000000fffddde5 ⇈00000000fffddde5
stampKind: i32
value: int[-139803|0xfffffffffffddde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v872 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1267 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
a1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
=== Succesors ===
next: v1329 
=== Usages ===
a555 v1329 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 #next: v1329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
object: a1267 
=== Succesors ===
next: i228 
=== Usages ===
=== Predecessor ===
a1267 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?111 object: a1267 #next: i228  <|@  <|@
f <@~|@floating>@ <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1267 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1267  <|@  <|@
f <@~|@floating>@ <|@
tid i226 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i109 
y: i43 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i109 y: i43  <|@  <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@12277eaa
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a555 a2 i226 a4 
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a555 a2 i226 a4  <|@  <|@
tid ?234 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: a494 a2 - a4 i110 
=== Succesors ===
=== Usages ===
?229 ?1096 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: a494 a2 - a4 i110  <|@  <|@
tid ?1096 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?234 
values: - - - - 
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?234 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v559 
stateDuring: ?1096 
=== Succesors ===
next: v885 
=== Usages ===
v230 
=== Predecessor ===
v1329 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v559 stateDuring: ?1096 #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i6 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i228 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
i228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v883 #falseSuccessor: v880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v884  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v881  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?234 
values: - - - - i6 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?234 values: - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 560
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?229 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1268 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1268  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
=== Succesors ===
next: v131 
=== Usages ===
i109 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1310 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i110 
y: i43 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i110 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
loopBegin: v108 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1268 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1181 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1181  <|@  <|@
f <@~|@floating>@ <|@
tid i1182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135443
stableDimension: 0
stamp: i32 [-135443] ⇊00000000fffdeeed ⇈00000000fffdeeed
stampKind: i32
value: int[-135443|0xfffffffffffdeeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v856  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1179  <|@  <|@
f <@~|@floating>@ <|@
tid i1180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133403
stableDimension: 0
stamp: i32 [-133403] ⇊00000000fffdf6e5 ⇈00000000fffdf6e5
stampKind: i32
value: int[-133403|0xfffffffffffdf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v850  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid i1178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132627
stableDimension: 0
stamp: i32 [-132627] ⇊00000000fffdf9ed ⇈00000000fffdf9ed
stampKind: i32
value: int[-132627|0xfffffffffffdf9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v832  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid i1172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130099
stableDimension: 0
stamp: i32 [-130099] ⇊00000000fffe03cd ⇈00000000fffe03cd
stampKind: i32
value: int[-130099|0xfffffffffffe03cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v820  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid i1168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -129555
stableDimension: 0
stamp: i32 [-129555] ⇊00000000fffe05ed ⇈00000000fffe05ed
stampKind: i32
value: int[-129555|0xfffffffffffe05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v820 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v814  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid i1166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128819
stableDimension: 0
stamp: i32 [-128819] ⇊00000000fffe08cd ⇈00000000fffe08cd
stampKind: i32
value: int[-128819|0xfffffffffffe08cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: i1269 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: i1269  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
=== Succesors ===
next: v890 
=== Usages ===
v134 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1311 #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1269 
y: i6 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1269 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v886 
falseSuccessor: v889 
=== Usages ===
=== Predecessor ===
i1269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v886 #falseSuccessor: v889  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i137 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i137  <|@  <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2dfb49
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a494 a2 i109 i110 a4 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a494 a2 i109 i110 a4  <|@  <|@
tid ?1097 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - - - - 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v567 
stateDuring: ?1097 
=== Succesors ===
next: a1270 
=== Usages ===
?138 v37 
=== Predecessor ===
v886 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v567 stateDuring: ?1097 #next: a1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1271 
=== Usages ===
a569 v1312 
=== Predecessor ===
i137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1271  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 1
=== Inputs ===
outerFrameState: ?140 
values: - - - - - i137 
=== Succesors ===
=== Usages ===
v1196 i1271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - - - i137  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1270 
=== Succesors ===
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v1312 
=== Succesors ===
next: i1272 
=== Usages ===
v576 
=== Predecessor ===
a1270 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v1312 #next: i1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v900 
=== Usages ===
v1313 v576 
=== Predecessor ===
i1271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1272 
y: i1271 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1272 y: i1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v896 
falseSuccessor: v899 
=== Usages ===
=== Predecessor ===
i1272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v896 #falseSuccessor: v899  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
v583 
=== Predecessor ===
v900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid a569 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1270 
=== Succesors ===
=== Usages ===
v1313 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1270  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a569 
index: i1272 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a569 index: i1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v896 
address: v1313 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v896 address: v1313 value: i1253 stateAfter: - lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i6 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
trueSuccessorProbability: 0.7279994687165353
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v38 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596441672417340145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B77" 
    xhandlers
    flags 
    probability 4590099691780463890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid i1198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147739
stableDimension: 0
stamp: i32 [-147739] ⇊00000000fffdbee5 ⇈00000000fffdbee5
stampKind: i32
value: int[-147739|0xfffffffffffdbee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
actionAndReason: i1198 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?138 actionAndReason: i1198 speculation: a1103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1189 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1189  <|@  <|@
f <@~|@floating>@ <|@
tid i1190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144915
stableDimension: 0
stamp: i32 [-144915] ⇊00000000fffdc9ed ⇈00000000fffdc9ed
stampKind: i32
value: int[-144915|0xfffffffffffdc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v889 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B47" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1162 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-144915 - -128523] ⇊00000000fffc00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1159 
values: i1166 i1168 i1172 i1174 i1178 i1180 i1182 i1186 i1190 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1159 values: i1166 i1168 i1172 i1174 i1178 i1180 i1182 i1186 i1190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1165 v1167 v1171 v1173 v1177 v1179 v1181 v1185 v1189 
=== Succesors ===
next: v1164 
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1165 v1167 v1171 v1173 v1177 v1179 v1181 v1185 v1189 #next: v1164  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
actionAndReason: i1162 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?111 actionAndReason: i1162 speculation: a1103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602677500334007408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1252 
y: v1229 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1252 y: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.3333470479325241
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v101 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1273 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1273  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1334 
=== Succesors ===
next: v905 
=== Usages ===
v146 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1334 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1273 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1273  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 i3 a4 i1253 - 
=== Succesors ===
=== Usages ===
v1130 v1274 i1276 i1279 v1328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 i3 a4 i1253 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v904 
=== Usages ===
=== Predecessor ===
i1273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v901 #falseSuccessor: v904  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1333 
=== Succesors ===
next: v915 
=== Usages ===
v1235 
=== Predecessor ===
v901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1333 #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1274 
y: v1233 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1274 y: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1235 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1235 #trueSuccessor: v911 #falseSuccessor: v914  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v919 
falseSuccessor: v916 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v919 #falseSuccessor: v916  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid i1136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150547
stableDimension: 0
stamp: i32 [-150547] ⇊00000000fffdb3ed ⇈00000000fffdb3ed
stampKind: i32
value: int[-150547|0xfffffffffffdb3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v919 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1275 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1275  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
=== Succesors ===
next: i1276 
=== Usages ===
a591 v1314 
=== Predecessor ===
v916 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1332 #next: i1276  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1275 
=== Succesors ===
=== Usages ===
i1276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1314 
=== Succesors ===
next: v930 
=== Usages ===
v243 v599 
=== Predecessor ===
a1275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1314 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1276 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
i1276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v926 #falseSuccessor: v929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1276 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v934 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v931 #falseSuccessor: v934  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1277 
=== Usages ===
i1277 
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1277  <|@  <|@
f <@~|@floating>@ <|@
tid a591 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1275 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1275  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a591 
index: i3 
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a591 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v931 
address: v1315 
=== Succesors ===
next: v940 
=== Usages ===
i607 j688 v746 
=== Predecessor ===
v931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v931 address: v1315 #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid i745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1277 
y: i745 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1277 y: i745  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v939 
=== Usages ===
=== Predecessor ===
i1277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v936 #falseSuccessor: v939  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1278 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1278  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
a1278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1330 
=== Succesors ===
next: i1279 
=== Usages ===
v1317 v1316 
=== Predecessor ===
v936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1330 #next: i1279  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1278 
=== Succesors ===
=== Usages ===
i1279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1316 
=== Succesors ===
next: v950 
=== Usages ===
v617 
=== Predecessor ===
a1278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1316 #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid i607 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1277 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1277  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i607 
y: i1279 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i607 y: i1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v617 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
i1279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v617 #trueSuccessor: v946 #falseSuccessor: v949  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1280 
=== Usages ===
i1280 
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1280  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1277 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j688 
index: a1278 
=== Succesors ===
=== Usages ===
i1280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j688 index: a1278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v946 
address: v1317 
=== Succesors ===
next: v157 
=== Usages ===
i689 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v946 address: v1317 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1280 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1280  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i689 
y: i6 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i689 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7909164863850101
=== Inputs ===
condition: v154 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
i1280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v154 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593916815196290960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v794 
address: v1297 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v794 address: v1297 value: i1253 stateAfter: - lastLocationAccess: - #next: v743  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 i6 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?334 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?334 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid i1238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1281 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1281  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
a1281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
=== Succesors ===
next: v1328 
=== Usages ===
a636 v1328 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 #next: v1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
object: a1281 
=== Succesors ===
next: i161 
=== Usages ===
=== Predecessor ===
a1281 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?71 object: a1281 #next: i161  <|@  <|@
f <@~|@floating>@ <|@
tid a636 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1281 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1281  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i3 
y: i43 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i43  <|@  <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@77676fe6
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a636 a2 i159 a4 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a636 a2 i159 a4  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - 
=== Succesors ===
=== Usages ===
?162 ?1099 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 -  <|@  <|@
tid ?1099 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?167 
values: - - - - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?167 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v640 
stateDuring: ?1099 
=== Succesors ===
next: v960 
=== Usages ===
?162 v163 
=== Predecessor ===
v1328 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v640 stateDuring: ?1099 #next: v960  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?167 
values: - - - - i161 
=== Succesors ===
=== Usages ===
v1204 i1283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?167 values: - - - - i161  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i6 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i161 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v959 
falseSuccessor: v956 
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v959 #falseSuccessor: v956  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid i1201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164115
stableDimension: 0
stamp: i32 [-164115] ⇊00000000fffd7eed ⇈00000000fffd7eed
stampKind: i32
value: int[-164115|0xfffffffffffd7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
v959 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1282 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1283 
=== Usages ===
a643 v1319 
=== Predecessor ===
v956 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1282 
=== Succesors ===
=== Usages ===
i1283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?162 
guard: - 
address: v1319 
=== Succesors ===
next: i1284 
=== Usages ===
v650 
=== Predecessor ===
a1282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?162 guard: - address: v1319 #next: i1284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v970 
=== Usages ===
v1320 v650 
=== Predecessor ===
i1283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1284 
y: i1283 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1284 y: i1283  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v966 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
i1284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v966 #falseSuccessor: v969  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
v657 
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid a643 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1282 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a643 
index: i1284 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a643 index: i1284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v966 
address: v1320 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v966 address: v1320 value: i1253 stateAfter: - lastLocationAccess: - #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i1208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166683
stableDimension: 0
stamp: i32 [-166683] ⇊00000000fffd74e5 ⇈00000000fffd74e5
stampKind: i32
value: int[-166683|0xfffffffffffd74e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1202 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-166683 - -164115] ⇊00000000fffd70e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1199 
values: i1201 i1208 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1199 values: i1201 i1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1200 v1207 
=== Succesors ===
next: v1204 
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1200 v1207 #next: v1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?162 
actionAndReason: i1202 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?162 actionAndReason: i1202 speculation: a1103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158235
stableDimension: 0
stamp: i32 [-158235] ⇊00000000fffd95e5 ⇈00000000fffd95e5
stampKind: i32
value: int[-158235|0xfffffffffffd95e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v949 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid i1144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155667
stableDimension: 0
stamp: i32 [-155667] ⇊00000000fffd9fed ⇈00000000fffd9fed
stampKind: i32
value: int[-155667|0xfffffffffffd9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid i1142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153627
stableDimension: 0
stamp: i32 [-153627] ⇊00000000fffda7e5 ⇈00000000fffda7e5
stampKind: i32
value: int[-153627|0xfffffffffffda7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152851
stableDimension: 0
stamp: i32 [-152851] ⇊00000000fffdaaed ⇈00000000fffdaaed
stampKind: i32
value: int[-152851|0xfffffffffffdaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid i1134 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150323
stableDimension: 0
stamp: i32 [-150323] ⇊00000000fffdb4cd ⇈00000000fffdb4cd
stampKind: i32
value: int[-150323|0xfffffffffffdb4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid i1127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B53" "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1128 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163339 - -149779] ⇊00000000fffd80c5 ⇈00000000fffdbffd
valueDescription: i32
=== Inputs ===
merge: v1125 
values: i1127 i1134 i1136 i1140 i1142 i1144 i1148 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1125 values: i1127 i1134 i1136 i1140 i1142 i1144 i1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1126 v1133 v1135 v1139 v1141 v1143 v1147 
=== Succesors ===
next: v1130 
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1126 v1133 v1135 v1139 v1141 v1143 v1147 #next: v1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i1128 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i1128 speculation: a1103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B74" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i74 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i74  <|@  <|@
f <@~|@floating>@ <|@
tid a1331 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1251 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1251  <|@  <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@ade15e5
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1331 a2 i3 a4 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1331 a2 i3 a4  <|@  <|@
tid ?1098 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v658 
stateDuring: ?1098 
=== Succesors ===
next: a1285 
=== Usages ===
v380 ?75 
=== Predecessor ===
v104 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v658 stateDuring: ?1098 #next: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1286 
=== Usages ===
a660 v1321 
=== Predecessor ===
i74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1286  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - i74 
=== Succesors ===
=== Usages ===
v1156 i1286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 - i74  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1285 
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v1321 
=== Succesors ===
next: i1287 
=== Usages ===
v667 
=== Predecessor ===
a1285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v1321 #next: i1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v980 
=== Usages ===
v1322 v667 
=== Predecessor ===
i1286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1287 
y: i1286 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1287 y: i1286  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v979 
=== Usages ===
=== Predecessor ===
i1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v976 #falseSuccessor: v979  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
v674 
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid a660 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1285 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1285  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a660 
index: i1287 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a660 index: i1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v976 
address: v1322 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v976 address: v1322 value: i1253 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i6 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i74 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
trueSuccessorProbability: 0.7279994687165353
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v381 #falseSuccessor: v387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597909542001464746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i1239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4591196564302749184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B45" "B63" "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 v389 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 v389 #next: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 57]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171035
stableDimension: 0
stamp: i32 [-171035] ⇊00000000fffd63e5 ⇈00000000fffd63e5
stampKind: i32
value: int[-171035|0xfffffffffffd63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i1158 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i1158 speculation: a1103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid i1122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124187
stableDimension: 0
stamp: i32 [-124187] ⇊00000000fffe1ae5 ⇈00000000fffe1ae5
stampKind: i32
value: int[-124187|0xfffffffffffe1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v797 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid i1116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117811
stableDimension: 0
stamp: i32 [-117811] ⇊00000000fffe33cd ⇈00000000fffe33cd
stampKind: i32
value: int[-117811|0xfffffffffffe33cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid i1110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108827
stableDimension: 0
stamp: i32 [-108827] ⇊00000000fffe56e5 ⇈00000000fffe56e5
stampKind: i32
value: int[-108827|0xfffffffffffe56e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] ⇊00000000fffe62ed ⇈00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1104 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-126731 - -105747] ⇊00000000fffe00c5 ⇈00000000fffe7ffd
valueDescription: i32
=== Inputs ===
merge: v1100 
values: i1102 i1110 i1116 i1122 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1100 values: i1102 i1110 i1116 i1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1101 v1109 v1115 v1121 
=== Succesors ===
next: v1106 
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1101 v1109 v1115 v1121 #next: v1106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i1104 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i1104 speculation: a1103  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a1103 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 v1204 v1196 v1164 v1130 v1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 v46 v47 i130 i159 i1238 i226 i1239 i1237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1098 ?11 v447 ?26 ?1095 ?81 v1310 ?320 ?71 v658 ?75 ?334 v1301 ?140 v640 ?167 v559 ?111 v567 ?234 v1294 v1334 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1095 ?11 v447 ?26 v658 ?81 v491 ?71 i109 i159 v146 v243 v1315 v239 v599 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?1095 ?11 v447 ?26 v658 ?81 ?71 v567 v640 ?111 v559 ?234 v1326 v1302 v1332 v1333 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Branch;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1095 ?11 v1288 v1289 v1292 ?26 ?81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1289 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v27 v37 i110 v273 v134 ?334 v154 v163 ?320 v239 v230 v380 ?26 ?229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@eb9ee5f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B44" "B23" "B59" "B75" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i44 i1237 i1238 i1239 
=== Succesors ===
=== Usages ===
?11 v13 v1291 ?26 v450 ?81 i44 ?1095 i1237 i1238 i1239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i44 i1237 i1238 i1239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7277331505241476
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 4
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: i1241 
=== Usages ===
i10 v30 v40 v45 v309 v323 v388 v979 v919 v752 v969 v762 v884 v959 v777 v782 v934 v949 v797 v929 v914 v814 v820 v939 v832 v838 v904 v850 v856 v862 v899 v872 v889 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: i1241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1241 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.size
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1288 
=== Succesors ===
next: v753 
=== Usages ===
v13 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1288 #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1241 
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i1241  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
v1106 i1243 a1246 v1327 a1248 i1249 v1252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v749 
falseSuccessor: v752 
=== Usages ===
=== Predecessor ===
i1241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v749 #falseSuccessor: v752  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1242 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1242 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.atoms
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
nullCheck: false
stamp: n [Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1289 
=== Succesors ===
next: i1243 
=== Usages ===
a417 v1290 
=== Predecessor ===
v749 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1289 #next: i1243  <|@  <|@
f <@~|@floating>@ <|@
tid v1290 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1242 
=== Succesors ===
=== Usages ===
i1243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1243 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1290 
=== Succesors ===
next: v763 
=== Usages ===
v450 
=== Predecessor ===
a1242 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1290 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1243 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i1243  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
i1243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v759 #falseSuccessor: v762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v6|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1244 
=== Usages ===
a1244 
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1244  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
op: Uncompress
stamp: a [Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1242 
=== Succesors ===
=== Usages ===
v1291 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1242  <|@  <|@
f <@~|@floating>@ <|@
tid v1291 <|@
result [v7|QWORD[.] + v4|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a417 
index: i10 
=== Succesors ===
=== Usages ===
a1244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a417 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1244 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: v759 
address: v1291 
=== Succesors ===
next: v21 
=== Usages ===
v676 ?320 v1295 v1298 v1323 ?75 ?167 ?1098 ?334 ?140 ?71 
=== Predecessor ===
v759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v759 address: v1291 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
=== Inputs ===
value: a1244 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
trueSuccessorProbability: 0.42141865036453907
=== Inputs ===
condition: v676 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
a1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v676 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.42141865036453907 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1245 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1245  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1245 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.conn
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 23]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1292 
=== Succesors ===
next: a1246 
=== Usages ===
v1293 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1292 #next: a1246  <|@  <|@
f <@~|@floating>@ <|@
tid v1293 <|@
result [v9|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1245 
=== Succesors ===
=== Usages ===
a1246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
nullCheck: true
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1293 
=== Succesors ===
next: v1327 
=== Usages ===
a443 v1327 
=== Predecessor ===
a1245 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1293 #next: v1327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a1246 
=== Succesors ===
next: i25 
=== Usages ===
=== Predecessor ===
a1246 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a1246 #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a443 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1246 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1246  <|@  <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6f8258cf
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a443 a2 i3 a4 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a443 a2 i3 a4  <|@  <|@
tid ?1095 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v447 
stateDuring: ?1095 
=== Succesors ===
next: v778 
=== Usages ===
v27 
=== Predecessor ===
v1327 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v447 stateDuring: ?1095 #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i6 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v777 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v777 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v10|DWORD[.] = MOV [v9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v775  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 i6 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 448
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -114707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4605) [bci: 39]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid v1323 <|@
result [v8|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1247 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1323 
=== Succesors ===
next: v783 
=== Usages ===
v1226 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1323 #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1247 
y: v1225 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1247 y: v1225  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1226 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1226 #trueSuccessor: v779 #falseSuccessor: v782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1248 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1294 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1248 a1264 a1270 a1282 a1285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1248 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1294 
=== Succesors ===
next: i1249 
=== Usages ===
a467 v1296 
=== Predecessor ===
v779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1294 #next: i1249  <|@  <|@
f <@~|@floating>@ <|@
tid v1296 <|@
result [v13|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1248 
=== Succesors ===
=== Usages ===
i1249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1249 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1296 
=== Succesors ===
next: i1250 
=== Usages ===
v626 
=== Predecessor ===
a1248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1296 #next: i1250  <|@  <|@
f <@~|@floating>@ <|@
tid v1295 <|@
result [v8|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
i1250 i1266 i1272 i1284 i1287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1250 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v798 
=== Usages ===
v626 v1297 
=== Predecessor ===
i1249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1250 
y: i1249 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1250 y: i1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v626 
=== Succesors ===
trueSuccessor: v794 
falseSuccessor: v797 
=== Usages ===
=== Predecessor ===
i1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v626 #trueSuccessor: v794 #falseSuccessor: v797  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v13|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1251 
=== Usages ===
v633 v491 i1253 
=== Predecessor ===
v798 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1251  <|@  <|@
f <@~|@floating>@ <|@
tid v1298 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1244 
=== Succesors ===
=== Usages ===
a1251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1251 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1298 
=== Succesors ===
next: v1252 
=== Usages ===
a494 v1324 v1299 v1300 v1311 v1318 v1330 a1331 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1298 #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid v1324 <|@
result [v16|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
v1252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1252 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1324 
=== Succesors ===
next: i1253 
=== Usages ===
v1230 v1228 
=== Predecessor ===
a1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1324 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid a467 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1248 
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1248  <|@  <|@
f <@~|@floating>@ <|@
tid v1297 <|@
result [v18|QWORD[.] + v15|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a467 
index: i1250 
=== Succesors ===
=== Usages ===
v491 i1253 v633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a467 index: i1250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v794 
address: v1297 
=== Succesors ===
next: v491 
=== Usages ===
?71 ?75 v583 ?1098 v674 ?167 ?140 v552 ?320 v633 ?334 v657 
=== Predecessor ===
v1252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v794 address: v1297 #next: v491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v794 
address: v1297 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v794 address: v1297 value: i3 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1252 
y: v1227 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1252 y: v1227  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4606
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
?71 ?75 ?1098 ?334 ?167 ?140 ?320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1234 v1235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.49989025912563956
=== Inputs ===
condition: v1228 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1228 #trueSuccessor: v89 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v15|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49989025912563956 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602673547948718848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - 
=== Succesors ===
=== Usages ===
?111 ?138 ?234 ?1097 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 -  <|@  <|@
f <@~|@floating>@ <|@
tid a494 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1251 
=== Succesors ===
=== Usages ===
?111 ?234 v567 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1251  <|@  <|@
f <@~|@floating>@ <|@
tid v1299 <|@
result [v16|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
i1254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603673856010745631
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i109 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i3 i1268 
=== Succesors ===
=== Usages ===
?111 v567 i226 v213 v277 v1304 v273 v520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i3 i1268  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i6 i130 
=== Succesors ===
=== Usages ===
?111 v113 v567 ?234 i130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i6 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.221657504180836
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v107 
=== Succesors ===
next: i1254 
=== Usages ===
i109 i110 v115 v125 v131 v883 v849 v861 v813 v819 v855 v831 v837 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v107 #next: i1254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1254 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1299 
=== Succesors ===
next: v119 
=== Usages ===
v113 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1299 #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i1254 
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i110 y: i1254  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: a494 a2 i109 a4 i110 
=== Succesors ===
=== Usages ===
v1164 v1256 v1258 i1260 i1265 v1329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: a494 a2 i109 a4 i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.545737941206047
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v114 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i1254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v114 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD, v22|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v16|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.545737941206047 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1255 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1255  <|@  <|@
f <@~|@floating>@ <|@
tid v1300 <|@
result [v16|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
a1255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1255 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1300 
=== Succesors ===
next: v1256 
=== Usages ===
v1325 v1309 v1305 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1300 #next: v1256  <|@  <|@
f <@~|@floating>@ <|@
tid v1325 <|@
result [v24|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1256 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1325 
=== Succesors ===
next: v815 
=== Usages ===
v1232 
=== Predecessor ===
a1255 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1325 #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1256 
y: v1231 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1256 y: v1231  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1232 
=== Succesors ===
trueSuccessor: v810 
falseSuccessor: v813 
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1232 #trueSuccessor: v810 #falseSuccessor: v813  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v16|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v24|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1257 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1257  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1257 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1301 
=== Succesors ===
next: v821 
=== Usages ===
v213 
=== Predecessor ===
v810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1301 #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i1257 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i1257  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v816 
falseSuccessor: v819 
=== Usages ===
=== Predecessor ===
i1257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v816 #falseSuccessor: v819  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1258 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1258  <|@  <|@
f <@~|@floating>@ <|@
tid v1326 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1258 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1326 
=== Succesors ===
next: v833 
=== Usages ===
v1234 
=== Predecessor ===
v816 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1326 #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1258 
y: v1233 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1258 y: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v831 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v828 #falseSuccessor: v831  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i6 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v837 
falseSuccessor: v834 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v837 #falseSuccessor: v834  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v838  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1173  <|@  <|@
f <@~|@floating>@ <|@
tid i1174 <|@
result int[-130323|0xfffffffffffe02ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130323
stableDimension: 0
stamp: i32 [-130323] ⇊00000000fffe02ed ⇈00000000fffe02ed
stampKind: i32
value: int[-130323|0xfffffffffffe02ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130323|0xfffffffffffe02ed]] destination: B17 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1259 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid v1302 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1259 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1302 
=== Succesors ===
next: i1260 
=== Usages ===
a512 v1303 
=== Predecessor ===
v834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1302 #next: i1260  <|@  <|@
f <@~|@floating>@ <|@
tid v1303 <|@
result [v25|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1259 
=== Succesors ===
=== Usages ===
i1260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1260 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1303 
=== Succesors ===
next: v851 
=== Usages ===
v277 v520 
=== Predecessor ===
a1259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1303 #next: v851  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i1260 
=== Succesors ===
=== Usages ===
v851 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v846 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
i1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v846 #falseSuccessor: v849  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i1260 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i109 y: i1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v852 
falseSuccessor: v855 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v852 #falseSuccessor: v855  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1261 
=== Usages ===
i1261 
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1261  <|@  <|@
f <@~|@floating>@ <|@
tid a512 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1259 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid v1304 <|@
result [v27|QWORD[.] + v21|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a512 
index: i109 
=== Succesors ===
=== Usages ===
i1261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: i109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1261 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v852 
address: v1304 
=== Succesors ===
next: v863 
=== Usages ===
v748 j684 
=== Predecessor ===
v852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v852 address: v1304 #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1261 
y: i747 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1261 y: i747  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v748 
=== Succesors ===
trueSuccessor: v858 
falseSuccessor: v861 
=== Usages ===
=== Predecessor ===
i1261 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v748 #trueSuccessor: v858 #falseSuccessor: v861  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSX [v27|QWORD[.] + v21|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1262 
=== Usages ===
i1263 
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1262  <|@  <|@
f <@~|@floating>@ <|@
tid v1305 <|@
result [v24|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
i1262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1262 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1305 
=== Succesors ===
next: i1263 
=== Usages ===
v285 
=== Predecessor ===
v858 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1305 #next: i1263  <|@  <|@
f <@~|@floating>@ <|@
tid a292 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j684 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1261 
=== Succesors ===
=== Usages ===
v1306 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1261  <|@  <|@
f <@~|@floating>@ <|@
tid v1306 <|@
result [v30|QWORD[.] + v31|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a292 
index: j684 
=== Succesors ===
=== Usages ===
i1263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a292 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1263 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v858 
address: v1306 
=== Succesors ===
next: v224 
=== Usages ===
v285 
=== Predecessor ===
i1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v858 address: v1306 #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
x: i1262 
y: i1263 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1262 y: i1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.790796004384128
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v223 
=== Usages ===
=== Predecessor ===
i1263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v125 #falseSuccessor: v223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v24|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVZX v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: [v30|QWORD[.] + v31|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.790796004384128 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: a1264 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: a1264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1264 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1265 
=== Usages ===
a538 v1307 
=== Predecessor ===
v125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1265  <|@  <|@
f <@~|@floating>@ <|@
tid v1307 <|@
result [v32|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1264 
=== Succesors ===
=== Usages ===
i1265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1265 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v1307 
=== Succesors ===
next: i1266 
=== Usages ===
v545 
=== Predecessor ===
a1264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v1307 #next: i1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1266 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v873 
=== Usages ===
v1308 v545 
=== Predecessor ===
i1265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v873  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1266 
y: i1265 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1266 y: i1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v869 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
i1266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v869 #falseSuccessor: v872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
v552 
=== Predecessor ===
v873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid a538 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1264 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1264  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
result [v35|QWORD[.] + v34|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a538 
index: i1266 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a538 index: i1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v869 
address: v1308 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v869 address: v1308 value: i1253 stateAfter: - lastLocationAccess: - #next: v742  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 i6 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?320 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?320 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid i1237 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v34|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1185  <|@  <|@
f <@~|@floating>@ <|@
tid i1186 <|@
result int[-139803|0xfffffffffffddde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -139803
stableDimension: 0
stamp: i32 [-139803] ⇊00000000fffddde5 ⇈00000000fffddde5
stampKind: i32
value: int[-139803|0xfffffffffffddde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v872 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-139803|0xfffffffffffddde5]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1267 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1267  <|@  <|@
f <@~|@floating>@ <|@
tid v1309 <|@
result [v24|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1255 
=== Succesors ===
=== Usages ===
a1267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1267 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1309 
=== Succesors ===
next: v1329 
=== Usages ===
a555 v1329 
=== Predecessor ===
v223 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1309 #next: v1329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
object: a1267 
=== Succesors ===
next: i228 
=== Usages ===
=== Predecessor ===
a1267 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?111 object: a1267 #next: i228  <|@  <|@
f <@~|@floating>@ <|@
tid a555 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1267 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1267  <|@  <|@
f <@~|@floating>@ <|@
tid i226 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i109 
y: i43 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i109 y: i43  <|@  <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@12277eaa
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a555 a2 i226 a4 
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a555 a2 i226 a4  <|@  <|@
tid ?234 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: a494 a2 - a4 i110 
=== Succesors ===
=== Usages ===
?229 ?1096 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: a494 a2 - a4 i110  <|@  <|@
tid ?1096 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?234 
values: - - - - 
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?234 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i228 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v559 
stateDuring: ?1096 
=== Succesors ===
next: v885 
=== Usages ===
v230 
=== Predecessor ===
v1329 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v559 stateDuring: ?1096 #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i6 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i228 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
i228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v883 #falseSuccessor: v880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v24|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v884  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v881  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?234 
values: - - - - i6 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?234 values: - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 560
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?229 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1268 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1268  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1268 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1310 
=== Succesors ===
next: v131 
=== Usages ===
i109 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1310 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i110 
y: i43 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i110 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
loopBegin: v108 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1268 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v42|DWORD] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v862 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1181 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1181  <|@  <|@
f <@~|@floating>@ <|@
tid i1182 <|@
result int[-135443|0xfffffffffffdeeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -135443
stableDimension: 0
stamp: i32 [-135443] ⇊00000000fffdeeed ⇈00000000fffdeeed
stampKind: i32
value: int[-135443|0xfffffffffffdeeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135443|0xfffffffffffdeeed]] destination: B30 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v856  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1179  <|@  <|@
f <@~|@floating>@ <|@
tid i1180 <|@
result int[-133403|0xfffffffffffdf6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133403
stableDimension: 0
stamp: i32 [-133403] ⇊00000000fffdf6e5 ⇈00000000fffdf6e5
stampKind: i32
value: int[-133403|0xfffffffffffdf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133403|0xfffffffffffdf6e5]] destination: B32 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v850  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid i1178 <|@
result int[-132627|0xfffffffffffdf9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132627
stableDimension: 0
stamp: i32 [-132627] ⇊00000000fffdf9ed ⇈00000000fffdf9ed
stampKind: i32
value: int[-132627|0xfffffffffffdf9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132627|0xfffffffffffdf9ed]] destination: B34 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v832  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid i1172 <|@
result int[-130099|0xfffffffffffe03cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130099
stableDimension: 0
stamp: i32 [-130099] ⇊00000000fffe03cd ⇈00000000fffe03cd
stampKind: i32
value: int[-130099|0xfffffffffffe03cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130099|0xfffffffffffe03cd]] destination: B36 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v821 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v820  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid i1168 <|@
result int[-129555|0xfffffffffffe05ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -129555
stableDimension: 0
stamp: i32 [-129555] ⇊00000000fffe05ed ⇈00000000fffe05ed
stampKind: i32
value: int[-129555|0xfffffffffffe05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v820 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-129555|0xfffffffffffe05ed]] destination: B38 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: v814  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1165  <|@  <|@
f <@~|@floating>@ <|@
tid i1166 <|@
result int[-128819|0xfffffffffffe08cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128819
stableDimension: 0
stamp: i32 [-128819] ⇊00000000fffe08cd ⇈00000000fffe08cd
stampKind: i32
value: int[-128819|0xfffffffffffe08cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128819|0xfffffffffffe08cd]] destination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v108 
=== Succesors ===
next: i1269 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v108 #next: i1269  <|@  <|@
f <@~|@floating>@ <|@
tid v1311 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
i1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1269 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1311 
=== Succesors ===
next: v890 
=== Usages ===
v134 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1311 #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1269 
y: i6 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1269 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v886 
falseSuccessor: v889 
=== Usages ===
=== Predecessor ===
i1269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v886 #falseSuccessor: v889  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v16|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i137 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i137  <|@  <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2dfb49
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a494 a2 i109 i110 a4 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a494 a2 i109 i110 a4  <|@  <|@
tid ?1097 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?140 
values: - - - - - 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v567 
stateDuring: ?1097 
=== Succesors ===
next: a1270 
=== Usages ===
?138 v37 
=== Predecessor ===
v886 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v567 stateDuring: ?1097 #next: a1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1270 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1271 
=== Usages ===
a569 v1312 
=== Predecessor ===
i137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1271  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 1
=== Inputs ===
outerFrameState: ?140 
values: - - - - - i137 
=== Succesors ===
=== Usages ===
v1196 i1271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?140 values: - - - - - i137  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
result [v44|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1270 
=== Succesors ===
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1271 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v1312 
=== Succesors ===
next: i1272 
=== Usages ===
v576 
=== Predecessor ===
a1270 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v1312 #next: i1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1272 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v900 
=== Usages ===
v1313 v576 
=== Predecessor ===
i1271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1272 
y: i1271 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1272 y: i1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v896 
falseSuccessor: v899 
=== Usages ===
=== Predecessor ===
i1272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v896 #falseSuccessor: v899  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: v43|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v45|DWORD = MOV [v44|DWORD[.] * 8 + 12] size: DWORD state [bci:57, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v583 
=== Usages ===
v583 
=== Predecessor ===
v900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid a569 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1270 
=== Succesors ===
=== Usages ===
v1313 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1270  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
result [v47|QWORD[.] + v46|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a569 
index: i1272 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a569 index: i1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v896 
address: v1313 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v896 address: v1313 value: i1253 stateAfter: - lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i6 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
trueSuccessorProbability: 0.7279994687165353
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v38 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + v46|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596441672417340145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B44 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B77" 
    xhandlers
    flags 
    probability 4590099691780463890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid i1198 <|@
result int[-147739|0xfffffffffffdbee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147739
stableDimension: 0
stamp: i32 [-147739] ⇊00000000fffdbee5 ⇈00000000fffdbee5
stampKind: i32
value: int[-147739|0xfffffffffffdbee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
actionAndReason: i1198 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?138 actionAndReason: i1198 speculation: a1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -147739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: v43|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:57, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1189 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1189  <|@  <|@
f <@~|@floating>@ <|@
tid i1190 <|@
result int[-144915|0xfffffffffffdc9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144915
stableDimension: 0
stamp: i32 [-144915] ⇊00000000fffdc9ed ⇈00000000fffdc9ed
stampKind: i32
value: int[-144915|0xfffffffffffdc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
v889 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144915|0xfffffffffffdc9ed]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B47" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1162 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-144915 - -128523] ⇊00000000fffc00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1159 
values: i1166 i1168 i1172 i1174 i1178 i1180 i1182 i1186 i1190 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1159 values: i1166 i1168 i1172 i1174 i1178 i1180 i1182 i1186 i1190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1165 v1167 v1171 v1173 v1177 v1179 v1181 v1185 v1189 
=== Succesors ===
next: v1164 
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1165 v1167 v1171 v1173 v1177 v1179 v1181 v1185 v1189 #next: v1164  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?111 
actionAndReason: i1162 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?111 actionAndReason: i1162 speculation: a1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602677500334007408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1252 
y: v1229 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1252 y: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.3333470479325241
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v101 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3333470479325241 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1273 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1273  <|@  <|@
f <@~|@floating>@ <|@
tid v1334 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1273 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1334 
=== Succesors ===
next: v905 
=== Usages ===
v146 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1334 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1273 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1273  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 i3 a4 i1253 - 
=== Succesors ===
=== Usages ===
v1130 v1274 i1276 i1279 v1328 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 i3 a4 i1253 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v904 
=== Usages ===
=== Predecessor ===
i1273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v901 #falseSuccessor: v904  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid v1333 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1274 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1333 
=== Succesors ===
next: v915 
=== Usages ===
v1235 
=== Predecessor ===
v901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1333 #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1274 
y: v1233 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1274 y: v1233  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1235 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v914 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1235 #trueSuccessor: v911 #falseSuccessor: v914  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v919 
falseSuccessor: v916 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v919 #falseSuccessor: v916  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1135 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1135  <|@  <|@
f <@~|@floating>@ <|@
tid i1136 <|@
result int[-150547|0xfffffffffffdb3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150547
stableDimension: 0
stamp: i32 [-150547] ⇊00000000fffdb3ed ⇈00000000fffdb3ed
stampKind: i32
value: int[-150547|0xfffffffffffdb3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v919 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150547|0xfffffffffffdb3ed]] destination: B53 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1275 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1275  <|@  <|@
f <@~|@floating>@ <|@
tid v1332 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1275 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1332 
=== Succesors ===
next: i1276 
=== Usages ===
a591 v1314 
=== Predecessor ===
v916 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1332 #next: i1276  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
result [v51|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1275 
=== Succesors ===
=== Usages ===
i1276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1276 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1314 
=== Succesors ===
next: v930 
=== Usages ===
v243 v599 
=== Predecessor ===
a1275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1314 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1276 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v926 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
i1276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v926 #falseSuccessor: v929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v52|DWORD = MOV [v51|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v935  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1276 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1276  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v599 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v934 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v599 #trueSuccessor: v931 #falseSuccessor: v934  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1277 
=== Usages ===
i1277 
=== Predecessor ===
v935 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1277  <|@  <|@
f <@~|@floating>@ <|@
tid a591 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1275 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1275  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
result [v53|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a591 
index: i3 
=== Succesors ===
=== Usages ===
i1277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a591 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1277 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v931 
address: v1315 
=== Succesors ===
next: v940 
=== Usages ===
i607 j688 v746 
=== Predecessor ===
v931 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v931 address: v1315 #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid i745 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1277 
y: i745 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1277 y: i745  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v746 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v939 
=== Usages ===
=== Predecessor ===
i1277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v746 #trueSuccessor: v936 #falseSuccessor: v939  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVSX [v53|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v54|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1278 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1278  <|@  <|@
f <@~|@floating>@ <|@
tid v1330 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
a1278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1278 <|@
result v55|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1330 
=== Succesors ===
next: i1279 
=== Usages ===
v1317 v1316 
=== Predecessor ===
v936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1330 #next: i1279  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
result [v55|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1278 
=== Succesors ===
=== Usages ===
i1279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1279 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1316 
=== Succesors ===
next: v950 
=== Usages ===
v617 
=== Predecessor ===
a1278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1316 #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid i607 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1277 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1277  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i607 
y: i1279 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i607 y: i1279  <|@  <|@
f <@*|@fixed>@ <|@
tid v950 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v617 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v949 
=== Usages ===
=== Predecessor ===
i1279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v617 #trueSuccessor: v946 #falseSuccessor: v949  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVZX v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v56|DWORD, y: [v55|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1280 
=== Usages ===
i1280 
=== Predecessor ===
v950 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1280  <|@  <|@
f <@~|@floating>@ <|@
tid j688 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1277 
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1277  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
result [v57|QWORD + v55|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j688 
index: a1278 
=== Succesors ===
=== Usages ===
i1280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j688 index: a1278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1280 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v946 
address: v1317 
=== Succesors ===
next: v157 
=== Usages ===
i689 
=== Predecessor ===
v946 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v946 address: v1317 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1280 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1280  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i689 
y: i6 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i689 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7909164863850101
=== Inputs ===
condition: v154 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
i1280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v154 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVZX v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v57|QWORD + v55|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7909164863850101 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593916815196290960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v794 
address: v1297 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v794 address: v1297 value: i1253 stateAfter: - lastLocationAccess: - #next: v743  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 i6 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?334 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?334 #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid i1238 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD] destination: B59 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1281 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1281  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1251 
=== Succesors ===
=== Usages ===
a1281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1281 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1318 
=== Succesors ===
next: v1328 
=== Usages ===
a636 v1328 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1318 #next: v1328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
object: a1281 
=== Succesors ===
next: i161 
=== Usages ===
=== Predecessor ===
a1281 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?71 object: a1281 #next: i161  <|@  <|@
f <@~|@floating>@ <|@
tid a636 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1281 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1281  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i3 
y: i43 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i43  <|@  <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@77676fe6
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a636 a2 i159 a4 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a636 a2 i159 a4  <|@  <|@
tid ?167 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - 
=== Succesors ===
=== Usages ===
?162 ?1099 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 -  <|@  <|@
tid ?1099 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?167 
values: - - - - 
=== Succesors ===
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?167 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i161 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v640 
stateDuring: ?1099 
=== Succesors ===
next: v960 
=== Usages ===
?162 v163 
=== Predecessor ===
v1328 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v640 stateDuring: ?1099 #next: v960  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?167 
values: - - - - i161 
=== Succesors ===
=== Usages ===
v1204 i1283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?167 values: - - - - i161  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i161 
y: i6 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i161 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v959 
falseSuccessor: v956 
=== Usages ===
=== Predecessor ===
i161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v959 #falseSuccessor: v956  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v60|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid i1201 <|@
result int[-164115|0xfffffffffffd7eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164115
stableDimension: 0
stamp: i32 [-164115] ⇊00000000fffd7eed ⇈00000000fffd7eed
stampKind: i32
value: int[-164115|0xfffffffffffd7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
v959 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164115|0xfffffffffffd7eed]] destination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1282 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1282 <|@
result v64|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1283 
=== Usages ===
a643 v1319 
=== Predecessor ===
v956 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1283  <|@  <|@
f <@~|@floating>@ <|@
tid v1319 <|@
result [v64|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1282 
=== Succesors ===
=== Usages ===
i1283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1283 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?162 
guard: - 
address: v1319 
=== Succesors ===
next: i1284 
=== Usages ===
v650 
=== Predecessor ===
a1282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?162 guard: - address: v1319 #next: i1284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1284 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v970 
=== Usages ===
v1320 v650 
=== Predecessor ===
i1283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1284 
y: i1283 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1284 y: i1283  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v966 
falseSuccessor: v969 
=== Usages ===
=== Predecessor ===
i1284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v966 #falseSuccessor: v969  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v63|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v65|DWORD = MOV [v64|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
v657 
=== Predecessor ===
v970 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid a643 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1282 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1320 <|@
result [v67|QWORD[.] + v66|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a643 
index: i1284 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a643 index: i1284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v966 
address: v1320 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v966 address: v1320 value: i1253 stateAfter: - lastLocationAccess: - #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + v66|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1207 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i1208 <|@
result int[-166683|0xfffffffffffd74e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -166683
stableDimension: 0
stamp: i32 [-166683] ⇊00000000fffd74e5 ⇈00000000fffd74e5
stampKind: i32
value: int[-166683|0xfffffffffffd74e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
v969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166683|0xfffffffffffd74e5]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1202 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-166683 - -164115] ⇊00000000fffd70e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1199 
values: i1201 i1208 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1199 values: i1201 i1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1200 v1207 
=== Succesors ===
next: v1204 
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1200 v1207 #next: v1204  <|@  <|@
f <@*|@fixed>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?162 
actionAndReason: i1202 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?162 actionAndReason: i1202 speculation: a1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v63|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i1148 <|@
result int[-158235|0xfffffffffffd95e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158235
stableDimension: 0
stamp: i32 [-158235] ⇊00000000fffd95e5 ⇈00000000fffd95e5
stampKind: i32
value: int[-158235|0xfffffffffffd95e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v949 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158235|0xfffffffffffd95e5]] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid i1144 <|@
result int[-155667|0xfffffffffffd9fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -155667
stableDimension: 0
stamp: i32 [-155667] ⇊00000000fffd9fed ⇈00000000fffd9fed
stampKind: i32
value: int[-155667|0xfffffffffffd9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155667|0xfffffffffffd9fed]] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1141 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid i1142 <|@
result int[-153627|0xfffffffffffda7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -153627
stableDimension: 0
stamp: i32 [-153627] ⇊00000000fffda7e5 ⇈00000000fffda7e5
stampKind: i32
value: int[-153627|0xfffffffffffda7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153627|0xfffffffffffda7e5]] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1139 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
result int[-152851|0xfffffffffffdaaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152851
stableDimension: 0
stamp: i32 [-152851] ⇊00000000fffdaaed ⇈00000000fffdaaed
stampKind: i32
value: int[-152851|0xfffffffffffdaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152851|0xfffffffffffdaaed]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1133 
=== Usages ===
=== Predecessor ===
v915 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1133  <|@  <|@
f <@~|@floating>@ <|@
tid i1134 <|@
result int[-150323|0xfffffffffffdb4cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -150323
stableDimension: 0
stamp: i32 [-150323] ⇊00000000fffdb4cd ⇈00000000fffdb4cd
stampKind: i32
value: int[-150323|0xfffffffffffdb4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150323|0xfffffffffffdb4cd]] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid i1127 <|@
result int[-149779|0xfffffffffffdb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B53" "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1128 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163339 - -149779] ⇊00000000fffd80c5 ⇈00000000fffdbffd
valueDescription: i32
=== Inputs ===
merge: v1125 
values: i1127 i1134 i1136 i1140 i1142 i1144 i1148 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1125 values: i1127 i1134 i1136 i1140 i1142 i1144 i1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1126 v1133 v1135 v1139 v1141 v1143 v1147 
=== Succesors ===
next: v1130 
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1126 v1133 v1135 v1139 v1141 v1143 v1147 #next: v1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i1128 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i1128 speculation: a1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B74" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i74 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i74  <|@  <|@
f <@~|@floating>@ <|@
tid a1331 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1251 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1251  <|@  <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@ade15e5
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1331 a2 i3 a4 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1331 a2 i3 a4  <|@  <|@
tid ?1098 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i74 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v658 
stateDuring: ?1098 
=== Succesors ===
next: a1285 
=== Usages ===
v380 ?75 
=== Predecessor ===
v104 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v658 stateDuring: ?1098 #next: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1285 <|@
result v72|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1294 
=== Succesors ===
next: i1286 
=== Usages ===
a660 v1321 
=== Predecessor ===
i74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1294 #next: i1286  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?81 
values: a1244 a2 - - i1253 - i74 
=== Succesors ===
=== Usages ===
v1156 i1286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1244 a2 - - i1253 - i74  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
result [v72|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1285 
=== Succesors ===
=== Usages ===
i1286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1286 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v1321 
=== Succesors ===
next: i1287 
=== Usages ===
v667 
=== Predecessor ===
a1285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v1321 #next: i1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1287 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1295 
=== Succesors ===
next: v980 
=== Usages ===
v1322 v667 
=== Predecessor ===
i1286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1295 #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1287 
y: i1286 
=== Succesors ===
=== Usages ===
v980 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1287 y: i1286  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v667 
=== Succesors ===
trueSuccessor: v976 
falseSuccessor: v979 
=== Usages ===
=== Predecessor ===
i1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v667 #trueSuccessor: v976 #falseSuccessor: v979  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28, 50] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v71|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v73|DWORD = MOV [v72|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
v674 
=== Predecessor ===
v980 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid a660 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1285 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1285  <|@  <|@
f <@~|@floating>@ <|@
tid v1322 <|@
result [v75|QWORD[.] + v74|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a660 
index: i1287 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a660 index: i1287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v976 
address: v1322 
value: i1253 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v976 address: v1322 value: i1253 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i74 
y: i6 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i74 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
trueSuccessorProbability: 0.7279994687165353
=== Inputs ===
condition: v380 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v380 #trueSuccessor: v381 #falseSuccessor: v387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v74|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597909542001464746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i1239 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|DWORD] destination: B75 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4591196564302749184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B45" "B63" "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 v389 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 v389 #next: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 57]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid i1158 <|@
result int[-171035|0xfffffffffffd63e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171035
stableDimension: 0
stamp: i32 [-171035] ⇊00000000fffd63e5 ⇈00000000fffd63e5
stampKind: i32
value: int[-171035|0xfffffffffffd63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i1158 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v979 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i1158 speculation: a1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -171035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v71|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid i1122 <|@
result int[-124187|0xfffffffffffe1ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124187
stableDimension: 0
stamp: i32 [-124187] ⇊00000000fffe1ae5 ⇈00000000fffe1ae5
stampKind: i32
value: int[-124187|0xfffffffffffe1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v797 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124187|0xfffffffffffe1ae5]] destination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid i1116 <|@
result int[-117811|0xfffffffffffe33cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117811
stableDimension: 0
stamp: i32 [-117811] ⇊00000000fffe33cd ⇈00000000fffe33cd
stampKind: i32
value: int[-117811|0xfffffffffffe33cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117811|0xfffffffffffe33cd]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid i1110 <|@
result int[-108827|0xfffffffffffe56e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -108827
stableDimension: 0
stamp: i32 [-108827] ⇊00000000fffe56e5 ⇈00000000fffe56e5
stampKind: i32
value: int[-108827|0xfffffffffffe56e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108827|0xfffffffffffe56e5]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid i1102 <|@
result int[-105747|0xfffffffffffe62ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] ⇊00000000fffe62ed ⇈00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
v752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105747|0xfffffffffffe62ed]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1104 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-126731 - -105747] ⇊00000000fffe00c5 ⇈00000000fffe7ffd
valueDescription: i32
=== Inputs ===
merge: v1100 
values: i1102 i1110 i1116 i1122 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1100 values: i1102 i1110 i1116 i1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1101 v1109 v1115 v1121 
=== Succesors ===
next: v1106 
=== Usages ===
i1104 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1101 v1109 v1115 v1121 #next: v1106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i1104 
speculation: a1103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i1104 speculation: a1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@eb9ee5f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B44" "B23" "B59" "B75" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v6|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.42141865036453907 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v13|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v15|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49989025912563956 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602677500334007408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3333470479325241 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B74" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28, 50] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v71|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v73|DWORD = MOV [v72|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v74|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597909542001464746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|DWORD] destination: B75 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602673547948718848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v16|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v24|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSX [v27|QWORD[.] + v21|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v24|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVZX v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: [v30|QWORD[.] + v31|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.790796004384128 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v24|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v42|DWORD] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603673856010745631
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD, v22|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v16|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.545737941206047 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v16|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: v43|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v45|DWORD = MOV [v44|DWORD[.] * 8 + 12] size: DWORD state [bci:57, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + v46|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596441672417340145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B44 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v34|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v52|DWORD = MOV [v51|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVSX [v53|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v54|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVZX v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v56|DWORD, y: [v55|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVZX v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v57|QWORD + v55|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7909164863850101 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593916815196290960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD] destination: B59 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v10|DWORD[.] = MOV [v9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4591196564302749184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B45" "B63" "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B77" 
    xhandlers
    flags 
    probability 4590099691780463890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v60|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v63|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v65|DWORD = MOV [v64|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v64|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + v66|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133403|0xfffffffffffdf6e5]] destination: B32 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B47" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-139803|0xfffffffffffddde5]] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158235|0xfffffffffffd95e5]] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B53" "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-155667|0xfffffffffffd9fed]] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-166683|0xfffffffffffd74e5]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v63|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164115|0xfffffffffffd7eed]] destination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-153627|0xfffffffffffda7e5]] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -114707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150547|0xfffffffffffdb3ed]] destination: B53 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-150323|0xfffffffffffdb4cd]] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128819|0xfffffffffffe08cd]] destination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144915|0xfffffffffffdc9ed]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132627|0xfffffffffffdf9ed]] destination: B34 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-135443|0xfffffffffffdeeed]] destination: B30 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105747|0xfffffffffffe62ed]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130099|0xfffffffffffe03cd]] destination: B36 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130323|0xfffffffffffe02ed]] destination: B17 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124187|0xfffffffffffe1ae5]] destination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -147739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: v43|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:57, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117811|0xfffffffffffe33cd]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -171035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v71|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152851|0xfffffffffffdaaed]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-129555|0xfffffffffffe05ed]] destination: B38 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-108827|0xfffffffffffe56e5]] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #2          // size:int
     9: if_icmpge     64
    12: aload_0       
    13: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    16: iload         4
    18: aaload        
    19: ifnonnull     40
    22: aload_0       
    23: getfield      #3          // conn:java.util.regex.Pattern$Node
    26: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    29: aload_1       
    30: iload_2       
    31: aload_3       
    32: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    35: ifeq          58
    38: iconst_1      
    39: ireturn       
    40: aload_0       
    41: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    44: iload         4
    46: aaload        
    47: aload_1       
    48: iload_2       
    49: aload_3       
    50: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    53: ifeq          58
    56: iconst_1      
    57: ireturn       
    58: iinc          
    61: goto          3
    64: iconst_0      
    65: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@eb9ee5f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B44" "B23" "B59" "B75" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.42141865036453907 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction stack:64|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr  118  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.49989025912563956 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602677500334007408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.3333470479325241 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B74" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28, 50] <|@ <|@
      nr  796  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr  802  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  816  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597909542001464746
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B75 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602673547948718848
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  158  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rdi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  208  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdi|DWORD = MOVSX [rdi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  224  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZX rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction TEST (x: rax|DWORD, y: [r13|QWORD[.] + rdi|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.790796004384128 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19, 28, 50] <|@ <|@
      nr  308  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  336  <|@ instruction r10|DWORD = INC stack:84|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603673856010745631
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.545737941206047 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54, 28, 50] <|@ <|@
      nr  486  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: rax|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:57, 28, 50] <|@ <|@
      nr  492  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  496  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596441672417340145
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B44 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr  266  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  602  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr  604  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP rsi|DWORD y: 256 size: WORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  640  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.7909164863850101 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593916815196290960
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B59 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:32] <|@ <|@
      nr   72  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    probability 4591196564302749184
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B45" "B63" "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  846  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B77" 
    xhandlers
    flags 
    probability 4590099691780463890
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B45 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  660  <|@ st <@st|@reference-map: [rsi:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:64|DWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  666  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 28, 50] <|@ <|@
      nr  672  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  696  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr  698  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B63 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B32 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B47" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: r8|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] r9|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r10|DWORD = MOVE input: int[-139803|0xfffffffffffddde5] <|@ <|@
      nr  280  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = MOVE input: int[-158235|0xfffffffffffd95e5] <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B53" "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-166683|0xfffffffffffd74e5] <|@ <|@
      nr  718  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-164115|0xfffffffffffd7eed] <|@ <|@
      nr  680  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r10|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5] <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction MOV [r15|QWORD + 668] y: -114707 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-150547|0xfffffffffffdb3ed] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B53 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-150323|0xfffffffffffdb4cd] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-128819|0xfffffffffffe08cd] <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed] <|@ <|@
      nr  542  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction MOV [r15|QWORD + 668] y: -143379 size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:16, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] rdx|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-132627|0xfffffffffffdf9ed] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B34 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE input: int[-135443|0xfffffffffffdeeed] <|@ <|@
      nr  358  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B30 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|DWORD = MOVE input: int[-130099|0xfffffffffffe03cd] <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B36 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVE input: int[-130323|0xfffffffffffe02ed] <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B17 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction MOV [r15|QWORD + 668] y: -147739 size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  536  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: rax|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:57, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: int[-117811|0xfffffffffffe33cd] <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 668] y: -171035 size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction r10|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed] <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B38 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-108827|0xfffffffffffe56e5] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #2          // size:int
     9: if_icmpge     64
    12: aload_0       
    13: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    16: iload         4
    18: aaload        
    19: ifnonnull     40
    22: aload_0       
    23: getfield      #3          // conn:java.util.regex.Pattern$Node
    26: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    29: aload_1       
    30: iload_2       
    31: aload_3       
    32: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    35: ifeq          58
    38: iconst_1      
    39: ireturn       
    40: aload_0       
    41: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    44: iload         4
    46: aaload        
    47: aload_1       
    48: iload_2       
    49: aload_3       
    50: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    53: ifeq          58
    56: iconst_1      
    57: ireturn       
    58: iinc          
    61: goto          3
    64: iconst_0      
    65: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@eb9ee5f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B44" "B23" "B59" "B75" 
    successors "B2" "B83" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610459837545543116
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.42141865036453907 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B80" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607179123768733624
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction stack:64|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr  118  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.49989025912563956 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602677500334007408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  568  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.3333470479325241 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B74" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28, 50] <|@ <|@
      nr  796  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr  802  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599675416683266645
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  816  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4597909542001464746
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  826  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B75 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602673547948718848
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  158  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rdi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  208  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdi|DWORD = MOVSX [rdi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  224  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599673249006117249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  232  <|@ instruction r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOVZX rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction TEST (x: rax|DWORD, y: [r13|QWORD[.] + rdi|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  242  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.790796004384128 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  292  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  296  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19, 28, 50] <|@ <|@
      nr  308  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4589686679804997939
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  336  <|@ instruction r10|DWORD = INC stack:84|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603673856010745631
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  152  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  154  <|@ instruction BRANCH trueDestinationProbability: 0.545737941206047 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54, 28, 50] <|@ <|@
      nr  486  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: rax|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:57, 28, 50] <|@ <|@
      nr  492  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  496  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598667263760633021
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596441672417340145
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B44 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598417684220658996
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr  266  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  572  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  602  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr  604  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  618  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP rsi|DWORD y: 256 size: WORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  630  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172187592016950
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  638  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  640  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.7909164863850101 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593916815196290960
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B59 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:32] <|@ <|@
      nr   72  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604733352067611616
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B43" "B63" "B74" 
    successors 
    xhandlers
    flags 
    probability 4596407100064703023
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  846  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  660  <|@ st <@st|@reference-map: [rsi:0, stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:64|DWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr  662  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  666  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:64|DWORD[.] stack:40|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 28, 50] <|@ <|@
      nr  672  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  696  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:68|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr  698  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B78" 
    xhandlers
    flags 
    probability 4585182310618698391
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3 <|@ <|@
      nr  710  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B63 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5] <|@ <|@
      nr  378  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B32 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B47" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  558  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: r8|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] r9|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r10|DWORD = MOVE input: int[-139803|0xfffffffffffddde5] <|@ <|@
      nr  280  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r10|DWORD = MOVE input: int[-158235|0xfffffffffffd95e5] <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B66 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B53" "B69" "B68" "B67" "B66" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B67 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-166683|0xfffffffffffd74e5] <|@ <|@
      nr  718  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r10|DWORD = MOVE input: int[-164115|0xfffffffffffd7eed] <|@ <|@
      nr  680  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r10|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5] <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B68 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction MOV [r15|QWORD + 668] y: -114707 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|DWORD = MOVE input: int[-150547|0xfffffffffffdb3ed] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B53 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction r10|DWORD = MOVE input: int[-150323|0xfffffffffffdb4cd] <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-128819|0xfffffffffffe08cd] <|@ <|@
      nr  458  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed] <|@ <|@
      nr  542  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction MOV [r15|QWORD + 668] y: -143379 size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:16, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] rdx|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-132627|0xfffffffffffdf9ed] <|@ <|@
      nr  398  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B34 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction r10|DWORD = MOVE input: int[-135443|0xfffffffffffdeeed] <|@ <|@
      nr  358  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B30 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|DWORD = MOVE input: int[-130099|0xfffffffffffe03cd] <|@ <|@
      nr  418  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B36 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVE input: int[-130323|0xfffffffffffe02ed] <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B17 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction MOV [r15|QWORD + 668] y: -147739 size: DWORD <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  536  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stack: rax|DWORD 
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:57, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|DWORD = MOVE input: int[-117811|0xfffffffffffe33cd] <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction MOV [r15|QWORD + 668] y: -171035 size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  856  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction r10|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed] <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B38 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction r10|DWORD = MOVE input: int[-108827|0xfffffffffffe56e5] <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B82 -> B84 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #2          // size:int
     9: if_icmpge     64
    12: aload_0       
    13: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    16: iload         4
    18: aaload        
    19: ifnonnull     40
    22: aload_0       
    23: getfield      #3          // conn:java.util.regex.Pattern$Node
    26: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    29: aload_1       
    30: iload_2       
    31: aload_3       
    32: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    35: ifeq          58
    38: iconst_1      
    39: ireturn       
    40: aload_0       
    41: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    44: iload         4
    46: aaload        
    47: aload_1       
    48: iload_2       
    49: aload_3       
    50: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    53: ifeq          58
    56: iconst_1      
    57: ireturn       
    58: iinc          
    61: goto          3
    64: iconst_0      
    65: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424404889542438894c24344c8944242841ba000000000f1f8000000000448b5e10453bda0f8efb050000448b5e14463b14dd0c0000000f83c306000049c1e303478b5c93104585db0f846903000042813cdd08000000addeadde0f854b060000448b4a3c428b1ccd0c000000428b3cdd100000003bdf0f860c06000044895c2420428b1cdd0c0000008b04dd0800000049c1e103418b6cb910896c241c41894cb91081f8addeadde0f848900000081f8addeadde44895424240f845702000048c1e303488bf3488bda8bf9498bc048b8ffffffffffffffff0f1f4000e80000000090488b5424388b723c8b0cf50c000000448b5c2420468b04dd10000000413bc88b6c241c0f86ae05000048c1e60342896c861085c00f85f6020000448b54242441ffc24c8b4424288b4c2434488b742440e9e6feffff4489542424895c2418448bd349c1e2034c895424104c8b44242841ba00000000e9d7000000908b34dd1c000000813cf508000000addeadde0f85030400003b4a100f8d5e05000041817808addeadde0f85b604000085c90f8cd1040000418b780c8b04fd0c0000003bc10f8e380400003bc10f86ec02000048c1e7030fbf7c4f106681ff80000f833f0400008b04f51000000049bdaddeaddeaddeadde0fb7ff418544bd10448954240c0f84e00000008b34f50c000000418504f448c1e603ffc1488bfa498bc048b8ffffffffffffffff0f1f4000e8000000009085c00f849f030000488b5424388b4a20448b54240c41ffc28b5c24184c8b4424288b34dd14000000413bf20f8f1affffff448954240c833cdd10000000000f8545030000488b7424104c8bd2448b44240c4c8b4c24280f1f4000e80000000090488b5424388b723c8b0cf50c000000448b5c2420468b04dd10000000413bc88b6c241c0f86f803000048c1e60342896c861085c00f8566010000448b54242441ffc24c8b4424288b4c2434488b742440e956fdffff8b6c241c448b5c24208b723c448b04f50c000000468b14dd10000000453bc20f86e101000048c1e60342896c9610850500000000448b54242441ffc24c8b4424288b4c2434488b742440e907fdffff8b72103b7424340f8e4a0200004c8b44242841817808addeadde0f852c02000085c90f8c1c020000418b700c448b14f50c000000443bd10f8e7e030000443bd10f86d901000048c1e6030fbf744e106681fe00010f8389010000448b14dd100000000fb7c6423b04d50c0000000f83560100000fb7f6420fb674d61085f60f859000000041896cb910850500000000448b54242441ffc2488b742440e966fcffff4489542424448b5618468b14d50c000000438504d449c1e203498bf24c8bd2448bc9498bd848b8ffffffffffffffff660f1f440000e8000000009085c00f8443010000b801000000488b6c24504883c458850500000000c5f877c3b801000000488b6c24504883c458850500000000c5f877c38b34dd0c000000418504f448c1e6038b4c2434ffc1488b5424384c8b44242848b8ffffffffffffffff90e8000000009085c00f84bd000000448b5c2420488b542438448b523c468b04d50c000000468b0cdd10000000453bc10f86780000008b6c241c49c1e20343896c8a10e977ffffff448954240c8b6c241c448b5c242041bae5f6fdff448b4c240c4c8b4424104589979c0200004d89a7a8020000e8000000009041bae5ddfdff448b4c240c4c8b442410ebda41bae595fdff4589979c0200004d89a7a8020000e8000000009041baed9ffdffebe441bae574fdff8b6c241c4589979c0200004d89a7a8020000e8000000009041baed7efdff8b6c241c448b5c2420488b542438ebd641bae5a7fdffeba8488b54243841c7879c020000ed3ffeff4d89a7a8020000e8000000009041baedb3fdffeb8341bacdb4fdffe978ffffff41baedb6fdffe96dffffff448954240c8b6c241c448b5c242041bacd08feff448b4c240c4c8b442410e91effffff41baedc9fdff448b4c240c4c8b4424108b6c241c448b5c2420e900ffffff8b6c241c448b5c2420488b54243841c7879c020000edcffdff4d89a7a8020000e80000000090448954240c8b6c241c448b5c242041baedf9fdff448b4c240c4c8b442410e9b7feffff448954240c8b6c241c448b5c242041baedeefdff448b4c240c4c8b442410e994feffff458bda41baed62feff4589979c0200004d89a7a8020000e80000000090448954240c8b6c241c448b5c242041bacd03feff448b4c240c4c8b442410e954feffff448954240c8b6c241c448b5c242041baed02feff448b4c240c4c8b442410e931feffff458bda41bae51afeffeb9b41c7879c020000e5befdff4d89a7a8020000e80000000090458bda41bacd33feffe975ffffff41c7879c020000e563fdff4d89a7a8020000e8000000009041baedaafdffe909feffff448954240c8b6c241c448b5c242041baed05feff448b4c240c4c8b442410e9bafdffff458bda41bae556feffe921ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@eb9ee5f slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 62 12 stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 67 14 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 73 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 73 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 73 18 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 20 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 84 22 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 87 24 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83  <||@
  Comment 93 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 93 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 28 r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 30 CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3]  <||@
  Comment 97 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 32 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B82  <||@
  Comment 111 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 111 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 36 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 115 38 r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 120 40 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 123 42 BRANCH trueDestinationProbability: 0.42141865036453907 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 129 block B7 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 129 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 94 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}  <||@
  Comment 129 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 141 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B81  <||@
  Comment 147 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 147 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 100 r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3]  <||@
  Comment 147 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 147 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 151 102 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 151 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 151 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 159 104 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 167 106 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 169 108 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B80  <||@
  Comment 175 block B9 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 175 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 112 stack:64|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 180 114 rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 188 116 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3]  <||@
  Comment 188 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 188 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 195 118 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 199 120 rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 204 122 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 208 124 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 213 126 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 219 128 BRANCH trueDestinationProbability: 0.49989025912563956 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B49  <||@
  Comment 225 block B49 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 225 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 562 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 225 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 231 568 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 236 564 BRANCH trueDestinationProbability: 0.3333470479325241 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B73  <||@
  Comment 242 block B73 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 242 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 778 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 246 780 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 249 782 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 252 786 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 254 790 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 257 794 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28, 50]  <||@
  Comment 257 7  <||@
  Comment 271 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 276 [stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 277 796 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 282 798 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 285 800 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50]  <||@
  Comment 285 [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
     stack:   |rax|DWORD          |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 285 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 292 802 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 297 804 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 305 806 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 308 812 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 312 808 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B79  <||@
  Comment 318 block B74 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 318 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 814 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 322 816 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 327 818 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 329 820 BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B78  <||@
  Comment 335 block B75 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 335 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 824 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 343 826 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 348 828 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 352 830 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 357 832 JUMP ~[] destination: B75 -> B1  <||@
  Comment 362 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 362 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 132 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 367 134 stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 371 136 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 378 138 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 383 142 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 388 144 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 394 146 JUMP ~[] destination: B10 -> B11  <||@
  Comment 399 block B12 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 399 156 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 158 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 407 160 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 407 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 407 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 407 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 418 162 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39  <||@
  Comment 424 block B13 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 424 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 424 166 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 427 168 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37  <||@
  Comment 433 block B14 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 433 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 172 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 433 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 433 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 433 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 441 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35  <||@
  Comment 447 block B15 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 447 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 178 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 449 180 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18  <||@
  Comment 455 block B18 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 455 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 204 rdi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 459 206 rax|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 459 [rdx:0, rsi:0, rdi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 459 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 466 208 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 468 210 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33  <||@
  Comment 474 block B19 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 474 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 214 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 476 216 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31  <||@
  Comment 482 block B20 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 482 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 220 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 486 222 rdi|DWORD = MOVSX [rdi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 491 224 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 496 226 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29  <||@
  Comment 502 block B21 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 502 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 230 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 509 232 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 509 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 519 234 rdi|QWORD = MOVZX rdi|DWORD size: DWORD  <||@
  Comment 522 236 TEST (x: rax|DWORD, y: [r13|QWORD[.] + rdi|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 527 242 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 532 238 BRANCH trueDestinationProbability: 0.790796004384128 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 538 block B25 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 538 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 290 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 545 292 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50]  <||@
  Comment 545 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 545 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 549 294 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 553 296 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 555 298 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 558 302 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 561 306 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19, 28, 50]  <||@
  Comment 561 7  <||@
  Comment 575 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 580 [stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 581 308 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 583 310 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 589 block B28 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 589 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 332 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 594 334 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 597 336 r10|DWORD = INC stack:84|DWORD size: DWORD  <||@
  Comment 605 338 rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 609 340 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 614 342 JUMP ~[] destination: B28 -> B11  <||@
  Comment 614 block B11 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 614 148 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 614 150 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 621 152 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 624 154 BRANCH trueDestinationProbability: 0.545737941206047 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41  <||@
  Comment 630 block B41 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 630 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 466 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 635 468 CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 643 470 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B47  <||@
  Comment 649 block B42 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 649 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 474 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 654 476 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 657 480 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 662 482 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 667 484 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54, 28, 50]  <||@
  Comment 667 9  <||@
  Comment 671 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 676 [stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 677 486 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 682 488 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 685 490 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:57, 28, 50]  <||@
  Comment 685 [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4 
     locals:  |-          |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 685 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 492 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 697 494 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 705 496 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 708 502 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 712 498 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 718 block B43 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 718 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 504 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 722 506 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 727 508 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 729 510 BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B78  <||@
  Comment 735 block B44 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 735 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 514 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 743 516 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 748 518 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 752 520 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 757 522 JUMP ~[] destination: B44 -> B1  <||@
  Comment 762 block B22 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 762 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 762 244 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 766 246 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 771 248 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 774 250 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 774 [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 774 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 782 252 r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 790 254 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 793 256 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 799 block B23 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 799 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 799 260 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 803 262 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 808 264 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50]  <||@
  Comment 808 [rdx:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 808 {infopoint: SAFEPOINT}  <||@
  Comment 808 11  <||@
  Comment 814 266 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 822 268 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 827 270 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 831 272 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 836 274 JUMP ~[] destination: B23 -> B1  <||@
  Comment 841 block B50 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 841 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 570 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 844 572 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 848 574 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71  <||@
  Comment 854 block B51 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 854 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 578 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 859 580 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50]  <||@
  Comment 859 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 859 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 859 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 867 582 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B70  <||@
  Comment 873 block B52 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 873 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 588 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 875 590 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 881 block B54 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 881 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 600 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 885 602 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50]  <||@
  Comment 885 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 885 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 893 604 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 896 606 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B69  <||@
  Comment 902 block B55 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 902 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 610 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 905 612 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B68  <||@
  Comment 911 block B56 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 911 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 616 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 915 618 rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 920 620 CMP rsi|DWORD y: 256 size: WORD  <||@
  Comment 925 622 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B67  <||@
  Comment 931 block B57 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 931 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 931 626 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 939 628 rax|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 942 630 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50]  <||@
  Comment 942 [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 942 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 950 632 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B66  <||@
  Comment 956 block B58 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 956 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 956 636 rsi|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 959 638 rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 965 640 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 967 642 BRANCH trueDestinationProbability: 0.7909164863850101 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 973 block B59 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 973 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 646 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 978 648 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50]  <||@
  Comment 978 [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 978 {infopoint: SAFEPOINT}  <||@
  Comment 978 11  <||@
  Comment 984 650 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 992 652 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 997 654 JUMP ~[] destination: B59 -> B1  <||@
  Comment 1002 block B4 null  <||@
  Comment 1002 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 46 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1007 48 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1011 50 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 1011 [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1011 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1019 52 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1019 [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1019 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1023 54 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 1027 56 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 58 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1033 62 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1036 66 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1039 70 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:32]  <||@
  Comment 1039 7  <||@
  Comment 1055 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1060 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1061 72 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1063 74 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1069 block B6 null  <||@
  Comment 1069 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 88 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1074 90 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1083 12  <||@
  Comment 1093 block B78 null  <||@
  Comment 1093 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1093 844 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1098 846 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1107 12  <||@
  Comment 1117 block B60 null  <||@
  Comment 1117 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 658 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1124 660 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50]  <||@
  Comment 1124 [rsi:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1124 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1128 662 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 1132 664 rcx|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 1138 666 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1143 668 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 670 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 28, 50]  <||@
  Comment 1148 7  <||@
  Comment 1159 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1164 [stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1165 672 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1167 674 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 1173 block B62 null  <||@
  Comment 1173 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 690 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1178 692 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1183 694 r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1187 696 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50]  <||@
  Comment 1187 [rdx:0, r10:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1187 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1195 698 r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1203 700 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1206 702 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 1212 block B63 null  <||@
  Comment 1212 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1212 706 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1216 708 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 1220 710 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1225 712 JUMP ~[] destination: B63 -> B78  <||@
  Comment 1230 block B31 null  <||@
  Comment 1230 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1230 366 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1235 368 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1239 370 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1244 372 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1244 block B32 null  <||@
  Comment 1244 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1244 376 r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5]  <||@
  Comment 1250 378 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1255 380 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 382 JUMP ~[] destination: B32 -> B48  <||@
  Comment 1260 block B48 null  <||@
  Comment 1260 552 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1260 554 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1267 556 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1274 558 DEOPT info [bci:3, 28, 50]  <||@
  Comment 1274 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1279 [rdx:0, r8:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0            |1             |2          |3                  |4        
     locals:  |r8|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |r9|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1280 block B24 null  <||@
  Comment 1280 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1280 278 r10|DWORD = MOVE input: int[-139803|0xfffffffffffddde5]  <||@
  Comment 1286 280 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1291 282 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1296 284 JUMP ~[] destination: B24 -> B48  <||@
  Comment 1298 block B66 null  <||@
  Comment 1298 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 732 r10|DWORD = MOVE input: int[-158235|0xfffffffffffd95e5]  <||@
  Comment 1304 734 JUMP ~[] destination: B66 -> B72  <||@
  Comment 1304 block B72 null  <||@
  Comment 1304 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1304 768 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1311 770 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1318 772 DEOPT info [bci:21, 50]  <||@
  Comment 1318 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1323 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1324 block B67 null  <||@
  Comment 1324 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 738 r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed]  <||@
  Comment 1330 740 JUMP ~[] destination: B67 -> B72  <||@
  Comment 1332 block B64 null  <||@
  Comment 1332 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 716 r10|DWORD = MOVE input: int[-166683|0xfffffffffffd74e5]  <||@
  Comment 1338 718 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1342 720 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1342 block B65 null  <||@
  Comment 1342 722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1342 724 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1349 726 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1356 728 DEOPT info [bci:34, 28, 50]  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1361 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1362 block B61 null  <||@
  Comment 1362 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1362 678 r10|DWORD = MOVE input: int[-164115|0xfffffffffffd7eed]  <||@
  Comment 1368 680 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1372 682 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1377 684 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1382 686 JUMP ~[] destination: B61 -> B65  <||@
  Comment 1384 block B68 null  <||@
  Comment 1384 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 744 r10|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5]  <||@
  Comment 1390 746 JUMP ~[] destination: B68 -> B72  <||@
  Comment 1392 block B5 null  <||@
  Comment 1392 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 78 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1397 80 MOV [r15|QWORD + 668] y: -114707 size: DWORD  <||@
  Comment 1408 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1415 84 DEOPT info [bci:35]  <||@
  Comment 1415 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1420 [rdx:0, stack:40, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |                 <||@
  Comment 1421 block B53 null  <||@
  Comment 1421 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1421 594 r10|DWORD = MOVE input: int[-150547|0xfffffffffffdb3ed]  <||@
  Comment 1427 596 JUMP ~[] destination: B53 -> B72  <||@
  Comment 1429 block B70 null  <||@
  Comment 1429 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 756 r10|DWORD = MOVE input: int[-150323|0xfffffffffffdb4cd]  <||@
  Comment 1435 758 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1440 block B71 null  <||@
  Comment 1440 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1440 762 r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 1446 764 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1451 block B39 null  <||@
  Comment 1451 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1451 446 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1456 448 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1460 450 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1465 452 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1465 block B40 null  <||@
  Comment 1465 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 456 r10|DWORD = MOVE input: int[-128819|0xfffffffffffe08cd]  <||@
  Comment 1471 458 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1476 460 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 462 JUMP ~[] destination: B40 -> B48  <||@
  Comment 1486 block B47 null  <||@
  Comment 1486 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 540 r10|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed]  <||@
  Comment 1492 542 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1497 544 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1502 546 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1506 548 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1511 550 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1516 block B26 null  <||@
  Comment 1516 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 314 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1520 316 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1525 318 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1530 320 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1530 block B27 null  <||@
  Comment 1530 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 324 MOV [r15|QWORD + 668] y: -143379 size: DWORD  <||@
  Comment 1541 326 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1548 328 DEOPT info [bci:34, 19, 28, 50]  <||@
  Comment 1548 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1553 [rdx:0, r11:0, stack:16, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1554 block B33 null  <||@
  Comment 1554 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1554 386 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1559 388 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1563 390 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1568 392 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1568 block B34 null  <||@
  Comment 1568 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1568 396 r10|DWORD = MOVE input: int[-132627|0xfffffffffffdf9ed]  <||@
  Comment 1574 398 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1579 400 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1584 402 JUMP ~[] destination: B34 -> B48  <||@
  Comment 1589 block B29 null  <||@
  Comment 1589 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1589 346 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1594 348 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1598 350 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1603 352 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1603 block B30 null  <||@
  Comment 1603 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1603 356 r10|DWORD = MOVE input: int[-135443|0xfffffffffffdeeed]  <||@
  Comment 1609 358 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1614 360 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 362 JUMP ~[] destination: B30 -> B48  <||@
  Comment 1624 block B83 null  <||@
  Comment 1624 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1624 884 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1627 886 r10|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed]  <||@
  Comment 1633 888 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1633 block B84 null  <||@
  Comment 1633 890 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1633 892 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1640 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1647 896 DEOPT info [bci:3]  <||@
  Comment 1647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1652 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 1653 block B35 null  <||@
  Comment 1653 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1653 406 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1658 408 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1662 410 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1667 412 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1667 block B36 null  <||@
  Comment 1667 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1667 416 r10|DWORD = MOVE input: int[-130099|0xfffffffffffe03cd]  <||@
  Comment 1673 418 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1678 420 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1683 422 JUMP ~[] destination: B36 -> B48  <||@
  Comment 1688 block B16 null  <||@
  Comment 1688 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 184 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1693 186 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1697 188 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1702 190 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1702 block B17 null  <||@
  Comment 1702 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1702 194 r10|DWORD = MOVE input: int[-130323|0xfffffffffffe02ed]  <||@
  Comment 1708 196 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1713 198 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1718 200 JUMP ~[] destination: B17 -> B48  <||@
  Comment 1723 block B80 null  <||@
  Comment 1723 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1723 860 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1726 862 r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5]  <||@
  Comment 1732 864 JUMP ~[] destination: B80 -> B84  <||@
  Comment 1734 block B46 null  <||@
  Comment 1734 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1734 532 MOV [r15|QWORD + 668] y: -147739 size: DWORD  <||@
  Comment 1745 534 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1752 536 DEOPT info [bci:57, 28, 50]  <||@
  Comment 1752 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1757 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4 
     locals:  |-          |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1758 block B81 null  <||@
  Comment 1758 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 868 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1761 870 r10|DWORD = MOVE input: int[-117811|0xfffffffffffe33cd]  <||@
  Comment 1767 872 JUMP ~[] destination: B81 -> B84  <||@
  Comment 1772 block B79 null  <||@
  Comment 1772 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1772 852 MOV [r15|QWORD + 668] y: -171035 size: DWORD  <||@
  Comment 1783 854 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 856 DEOPT info [bci:31, 50]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1795 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
     stack:   |rax|DWORD     |              |   |   |           |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1796 block B69 null  <||@
  Comment 1796 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 750 r10|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed]  <||@
  Comment 1802 752 JUMP ~[] destination: B69 -> B72  <||@
  Comment 1807 block B37 null  <||@
  Comment 1807 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1807 426 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1812 428 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1816 430 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1821 432 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1821 block B38 null  <||@
  Comment 1821 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1821 436 r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed]  <||@
  Comment 1827 438 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1832 440 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1837 442 JUMP ~[] destination: B38 -> B48  <||@
  Comment 1842 block B82 null  <||@
  Comment 1842 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 876 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1845 878 r10|DWORD = MOVE input: int[-108827|0xfffffffffffe56e5]  <||@
  Comment 1851 880 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1856 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1856 4  <||@
  Comment 1862 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1862 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2717[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2717[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  date 1526687554705
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1192b53e0 448b560849c1e203493bc20f856ffa74ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424404889542438894c24344c8944242841ba000000000f1f8000000000448b5e10453bda0f8efb050000448b5e14463b14dd0c0000000f83c306000049c1e303478b5c93104585db0f846903000042813cdd0800000088f600f80f854b060000448b4a3c428b1ccd0c000000428b3cdd100000003bdf0f860c06000044895c2420428b1cdd0c0000008b04dd0800000049c1e103418b6cb910896c241c41894cb91081f8e03702f80f848900000081f8643802f844895424240f845702000048c1e303488bf3488bda8bf9498bc048b8ffffffffffffffff0f1f4000e8ecfd74ff90488b5424388b723c8b0cf50c000000448b5c2420468b04dd10000000413bc88b6c241c0f86ae05000048c1e60342896c861085c00f85f6020000448b54242441ffc24c8b4424288b4c2434488b742440e9e6feffff4489542424895c2418448bd349c1e2034c895424104c8b44242841ba00000000e9d7000000908b34dd1c000000813cf5080000009a3702f80f85030400003b4a100f8d5e05000041817808da0200f80f85b604000085c90f8cd1040000418b780c8b04fd0c0000003bc10f8e380400003bc10f86ec02000048c1e7030fbf7c4f106681ff80000f833f0400008b04f51000000049bdf01400c0060000000fb7ff418544bd10448954240c0f84e00000008b34f50c000000418504f448c1e603ffc1488bfa498bc048b8ffffffffffffffff0f1f4000e8bcfc74ff9085c00f849f030000488b5424388b4a20448b54240c41ffc28b5c24184c8b4424288b34dd14000000413bf20f8f1affffff448954240c833cdd10000000000f8545030000488b7424104c8bd2448b44240c4c8b4c24280f1f4000e81cfa74ff90488b5424388b723c8b0cf50c000000448b5c2420468b04dd10000000413bc88b6c241c0f86f803000048c1e60342896c861085c00f8566010000448b54242441ffc24c8b4424288b4c2434488b742440e956fdffff8b6c241c448b5c24208b723c448b04f50c000000468b14dd10000000453bc20f86e101000048c1e60342896c96108505f868c2f0448b54242441ffc24c8b4424288b4c2434488b742440e907fdffff8b72103b7424340f8e4a0200004c8b44242841817808da0200f80f852c02000085c90f8c1c020000418b700c448b14f50c000000443bd10f8e7e030000443bd10f86d901000048c1e6030fbf744e106681fe00010f8389010000448b14dd100000000fb7c6423b04d50c0000000f83560100000fb7f6420fb674d61085f60f859000000041896cb91085054e68c2f0448b54242441ffc2488b742440e966fcffff4489542424448b5618468b14d50c000000438504d449c1e203498bf24c8bd2448bc9498bd848b8ffffffffffffffff660f1f440000e8dcfa74ff9085c00f8443010000b801000000488b6c24504883c4588505e567c2f0c5f877c3b801000000488b6c24504883c4588505cd67c2f0c5f877c38b34dd0c000000418504f448c1e6038b4c2434ffc1488b5424384c8b44242848b8ffffffffffffffff90e874fa74ff9085c00f84bd000000448b5c2420488b542438448b523c468b04d50c000000468b0cdd10000000453bc10f86780000008b6c241c49c1e20343896c8a10e977ffffff448954240c8b6c241c448b5c242041bae5f6fdff448b4c240c4c8b4424104589979c0200004d89a7a8020000e81f0d75ff9041bae5ddfdff448b4c240c4c8b442410ebda41bae595fdff4589979c0200004d89a7a8020000e8f30c75ff9041baed9ffdffebe441bae574fdff8b6c241c4589979c0200004d89a7a8020000e8cd0c75ff9041baed7efdff8b6c241c448b5c2420488b542438ebd641bae5a7fdffeba8488b54243841c7879c020000ed3ffeff4d89a7a8020000e8920c75ff9041baedb3fdffeb8341bacdb4fdffe978ffffff41baedb6fdffe96dffffff448954240c8b6c241c448b5c242041bacd08feff448b4c240c4c8b442410e91effffff41baedc9fdff448b4c240c4c8b4424108b6c241c448b5c2420e900ffffff8b6c241c448b5c2420488b54243841c7879c020000edcffdff4d89a7a8020000e80d0c75ff90448954240c8b6c241c448b5c242041baedf9fdff448b4c240c4c8b442410e9b7feffff448954240c8b6c241c448b5c242041baedeefdff448b4c240c4c8b442410e994feffff458bda41baed62feff4589979c0200004d89a7a8020000e8aa0b75ff90448954240c8b6c241c448b5c242041bacd03feff448b4c240c4c8b442410e954feffff448954240c8b6c241c448b5c242041baed02feff448b4c240c4c8b442410e931feffff458bda41bae51afeffeb9b41c7879c020000e5befdff4d89a7a8020000e8410b75ff90458bda41bacd33feffe975ffffff41c7879c020000e563fdff4d89a7a8020000e81b0b75ff9041baedaafdffe909feffff448954240c8b6c241c448b5c242041baed05feff448b4c240c4c8b442410e9bafdffff458bda41bae556feffe921ffffffe87b9cb4ff90e8d50975ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@eb9ee5f slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 62 12 stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 67 14 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 73 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 73 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 73 18 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 20 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 84 22 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 87 24 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B83  <||@
  Comment 93 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 93 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 28 r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 30 CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3]  <||@
  Comment 97 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 32 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B82  <||@
  Comment 111 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 111 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 36 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 115 38 r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 120 40 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 123 42 BRANCH trueDestinationProbability: 0.42141865036453907 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 129 block B7 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 129 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 94 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}  <||@
  Comment 129 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 141 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B81  <||@
  Comment 147 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 147 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 100 r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3]  <||@
  Comment 147 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 147 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 151 102 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 151 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 151 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 159 104 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 167 106 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 169 108 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B80  <||@
  Comment 175 block B9 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 175 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 112 stack:64|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 180 114 rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 188 116 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3]  <||@
  Comment 188 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 188 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 195 118 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 199 120 rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 204 122 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 208 124 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 213 126 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 213 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 219 128 BRANCH trueDestinationProbability: 0.49989025912563956 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B49  <||@
  Comment 225 block B49 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 225 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 562 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 225 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 231 568 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 236 564 BRANCH trueDestinationProbability: 0.3333470479325241 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B73  <||@
  Comment 242 block B73 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 242 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 778 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 246 780 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 249 782 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 252 786 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 254 790 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 257 794 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28, 50]  <||@
  Comment 257 7  <||@
  Comment 271 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 276 [stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 277 796 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 282 798 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 285 800 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50]  <||@
  Comment 285 [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
     stack:   |rax|DWORD          |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 285 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 292 802 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 297 804 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 305 806 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 308 812 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 312 808 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B79  <||@
  Comment 318 block B74 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 318 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 814 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 322 816 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 327 818 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 329 820 BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B78  <||@
  Comment 335 block B75 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 335 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 824 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 343 826 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 348 828 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 352 830 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 357 832 JUMP ~[] destination: B75 -> B1  <||@
  Comment 362 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 362 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 132 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 367 134 stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 371 136 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 378 138 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 383 142 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 388 144 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 394 146 JUMP ~[] destination: B10 -> B11  <||@
  Comment 399 block B12 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 399 156 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 158 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 407 160 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 407 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 407 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 407 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 418 162 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39  <||@
  Comment 424 block B13 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 424 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 424 166 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 427 168 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37  <||@
  Comment 433 block B14 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 433 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 172 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 433 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 433 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 433 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 441 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35  <||@
  Comment 447 block B15 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 447 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 178 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 449 180 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18  <||@
  Comment 455 block B18 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 455 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 204 rdi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 459 206 rax|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 459 [rdx:0, rsi:0, rdi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 459 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 466 208 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 468 210 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33  <||@
  Comment 474 block B19 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 474 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 214 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 476 216 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31  <||@
  Comment 482 block B20 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 482 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 220 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 486 222 rdi|DWORD = MOVSX [rdi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 491 224 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 496 226 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29  <||@
  Comment 502 block B21 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 502 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 230 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 509 232 r13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 509 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 519 234 rdi|QWORD = MOVZX rdi|DWORD size: DWORD  <||@
  Comment 522 236 TEST (x: rax|DWORD, y: [r13|QWORD[.] + rdi|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 527 242 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 532 238 BRANCH trueDestinationProbability: 0.790796004384128 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 538 block B25 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 538 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 290 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 545 292 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50]  <||@
  Comment 545 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 545 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 549 294 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 553 296 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 555 298 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 558 302 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 561 306 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19, 28, 50]  <||@
  Comment 561 7  <||@
  Comment 575 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 580 [stack:16, stack:24, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 581 308 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 583 310 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 589 block B28 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 589 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 332 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 594 334 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 597 336 r10|DWORD = INC stack:84|DWORD size: DWORD  <||@
  Comment 605 338 rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 609 340 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 614 342 JUMP ~[] destination: B28 -> B11  <||@
  Comment 614 block B11 loop 1 depth 2 outer 0 header:108|LoopBegin  <||@
  Comment 614 148 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 614 150 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 621 152 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 624 154 BRANCH trueDestinationProbability: 0.545737941206047 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41  <||@
  Comment 630 block B41 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 630 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 466 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 635 468 CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 643 470 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B47  <||@
  Comment 649 block B42 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 649 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 474 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 654 476 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 657 480 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 662 482 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 667 484 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54, 28, 50]  <||@
  Comment 667 9  <||@
  Comment 671 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 676 [stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 677 486 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 682 488 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 685 490 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:57, 28, 50]  <||@
  Comment 685 [rdx:0, rsi:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4 
     locals:  |-          |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 685 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 692 492 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 697 494 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 705 496 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 708 502 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 712 498 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 718 block B43 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 718 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 718 504 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 722 506 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 727 508 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 729 510 BRANCH trueDestinationProbability: 0.7279994687165353 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B78  <||@
  Comment 735 block B44 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 735 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 514 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 743 516 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 748 518 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 752 520 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 757 522 JUMP ~[] destination: B44 -> B1  <||@
  Comment 762 block B22 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 762 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 762 244 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 766 246 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 771 248 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 774 250 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 774 [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 774 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 782 252 r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 790 254 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 793 256 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 799 block B23 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 799 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 799 260 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 803 262 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 808 264 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50]  <||@
  Comment 808 [rdx:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 808 {infopoint: SAFEPOINT}  <||@
  Comment 808 11  <||@
  Comment 814 266 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 822 268 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 827 270 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 831 272 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 836 274 JUMP ~[] destination: B23 -> B1  <||@
  Comment 841 block B50 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 841 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 841 570 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 844 572 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 848 574 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71  <||@
  Comment 854 block B51 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 854 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 854 578 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 859 580 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50]  <||@
  Comment 859 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 859 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 859 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 867 582 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B70  <||@
  Comment 873 block B52 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 873 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 588 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 875 590 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 881 block B54 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 881 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 600 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 885 602 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50]  <||@
  Comment 885 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 885 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 893 604 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 896 606 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B69  <||@
  Comment 902 block B55 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 902 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 610 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 905 612 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B68  <||@
  Comment 911 block B56 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 911 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 616 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 915 618 rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 920 620 CMP rsi|DWORD y: 256 size: WORD  <||@
  Comment 925 622 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B67  <||@
  Comment 931 block B57 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 931 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 931 626 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 939 628 rax|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 942 630 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50]  <||@
  Comment 942 [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 942 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 950 632 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B57 -> B58 falseDestination: B57 -> B66  <||@
  Comment 956 block B58 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 956 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 956 636 rsi|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 959 638 rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 965 640 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 967 642 BRANCH trueDestinationProbability: 0.7909164863850101 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 973 block B59 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 973 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 646 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 978 648 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:44, 50]  <||@
  Comment 978 [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 978 {infopoint: SAFEPOINT}  <||@
  Comment 978 11  <||@
  Comment 984 650 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 992 652 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 997 654 JUMP ~[] destination: B59 -> B1  <||@
  Comment 1002 block B4 null  <||@
  Comment 1002 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 46 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1007 48 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1011 50 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 1011 [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1011 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1019 52 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1019 [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1019 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1023 54 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 1027 56 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 58 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1033 62 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1036 66 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1039 70 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:32]  <||@
  Comment 1039 7  <||@
  Comment 1055 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1060 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1061 72 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1063 74 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1069 block B6 null  <||@
  Comment 1069 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 88 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1074 90 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1083 12  <||@
  Comment 1093 block B78 null  <||@
  Comment 1093 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1093 844 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1098 846 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1107 12  <||@
  Comment 1117 block B60 null  <||@
  Comment 1117 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 658 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1124 660 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50]  <||@
  Comment 1124 [rsi:0, stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1124 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1128 662 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 1132 664 rcx|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 1138 666 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1143 668 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 670 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 28, 50]  <||@
  Comment 1148 7  <||@
  Comment 1159 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1164 [stack:32, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:64|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1165 672 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1167 674 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 1173 block B62 null  <||@
  Comment 1173 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 690 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1178 692 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1183 694 r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1187 696 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50]  <||@
  Comment 1187 [rdx:0, r10:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:68|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1187 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1195 698 r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1203 700 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1206 702 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 1212 block B63 null  <||@
  Comment 1212 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1212 706 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1216 708 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@919b748 encoding: base: 0 shift: 3  <||@
  Comment 1220 710 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1225 712 JUMP ~[] destination: B63 -> B78  <||@
  Comment 1230 block B31 null  <||@
  Comment 1230 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1230 366 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1235 368 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1239 370 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1244 372 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1244 block B32 null  <||@
  Comment 1244 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1244 376 r10|DWORD = MOVE input: int[-133403|0xfffffffffffdf6e5]  <||@
  Comment 1250 378 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1255 380 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 382 JUMP ~[] destination: B32 -> B48  <||@
  Comment 1260 block B48 null  <||@
  Comment 1260 552 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1260 554 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1267 556 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1274 558 DEOPT info [bci:3, 28, 50]  <||@
  Comment 1274 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1279 [rdx:0, r8:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0            |1             |2          |3                  |4        
     locals:  |r8|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |r9|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1280 block B24 null  <||@
  Comment 1280 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1280 278 r10|DWORD = MOVE input: int[-139803|0xfffffffffffddde5]  <||@
  Comment 1286 280 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1291 282 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1296 284 JUMP ~[] destination: B24 -> B48  <||@
  Comment 1298 block B66 null  <||@
  Comment 1298 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1298 732 r10|DWORD = MOVE input: int[-158235|0xfffffffffffd95e5]  <||@
  Comment 1304 734 JUMP ~[] destination: B66 -> B72  <||@
  Comment 1304 block B72 null  <||@
  Comment 1304 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1304 768 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1311 770 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1318 772 DEOPT info [bci:21, 50]  <||@
  Comment 1318 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1323 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1324 block B67 null  <||@
  Comment 1324 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 738 r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed]  <||@
  Comment 1330 740 JUMP ~[] destination: B67 -> B72  <||@
  Comment 1332 block B64 null  <||@
  Comment 1332 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 716 r10|DWORD = MOVE input: int[-166683|0xfffffffffffd74e5]  <||@
  Comment 1338 718 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1342 720 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1342 block B65 null  <||@
  Comment 1342 722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1342 724 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1349 726 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1356 728 DEOPT info [bci:34, 28, 50]  <||@
  Comment 1356 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1361 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1362 block B61 null  <||@
  Comment 1362 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1362 678 r10|DWORD = MOVE input: int[-164115|0xfffffffffffd7eed]  <||@
  Comment 1368 680 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1372 682 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1377 684 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1382 686 JUMP ~[] destination: B61 -> B65  <||@
  Comment 1384 block B68 null  <||@
  Comment 1384 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 744 r10|DWORD = MOVE input: int[-153627|0xfffffffffffda7e5]  <||@
  Comment 1390 746 JUMP ~[] destination: B68 -> B72  <||@
  Comment 1392 block B5 null  <||@
  Comment 1392 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 78 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1397 80 MOV [r15|QWORD + 668] y: -114707 size: DWORD  <||@
  Comment 1408 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1415 84 DEOPT info [bci:35]  <||@
  Comment 1415 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1420 [rdx:0, stack:40, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |                 <||@
  Comment 1421 block B53 null  <||@
  Comment 1421 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1421 594 r10|DWORD = MOVE input: int[-150547|0xfffffffffffdb3ed]  <||@
  Comment 1427 596 JUMP ~[] destination: B53 -> B72  <||@
  Comment 1429 block B70 null  <||@
  Comment 1429 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 756 r10|DWORD = MOVE input: int[-150323|0xfffffffffffdb4cd]  <||@
  Comment 1435 758 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1440 block B71 null  <||@
  Comment 1440 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1440 762 r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 1446 764 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1451 block B39 null  <||@
  Comment 1451 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1451 446 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1456 448 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1460 450 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1465 452 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1465 block B40 null  <||@
  Comment 1465 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1465 456 r10|DWORD = MOVE input: int[-128819|0xfffffffffffe08cd]  <||@
  Comment 1471 458 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1476 460 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 462 JUMP ~[] destination: B40 -> B48  <||@
  Comment 1486 block B47 null  <||@
  Comment 1486 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 540 r10|DWORD = MOVE input: int[-144915|0xfffffffffffdc9ed]  <||@
  Comment 1492 542 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1497 544 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1502 546 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1506 548 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1511 550 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1516 block B26 null  <||@
  Comment 1516 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 314 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1520 316 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1525 318 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1530 320 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1530 block B27 null  <||@
  Comment 1530 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 324 MOV [r15|QWORD + 668] y: -143379 size: DWORD  <||@
  Comment 1541 326 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1548 328 DEOPT info [bci:34, 19, 28, 50]  <||@
  Comment 1548 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1553 [rdx:0, r11:0, stack:16, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1554 block B33 null  <||@
  Comment 1554 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1554 386 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1559 388 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1563 390 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1568 392 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1568 block B34 null  <||@
  Comment 1568 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1568 396 r10|DWORD = MOVE input: int[-132627|0xfffffffffffdf9ed]  <||@
  Comment 1574 398 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1579 400 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1584 402 JUMP ~[] destination: B34 -> B48  <||@
  Comment 1589 block B29 null  <||@
  Comment 1589 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1589 346 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1594 348 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1598 350 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1603 352 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1603 block B30 null  <||@
  Comment 1603 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1603 356 r10|DWORD = MOVE input: int[-135443|0xfffffffffffdeeed]  <||@
  Comment 1609 358 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1614 360 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1619 362 JUMP ~[] destination: B30 -> B48  <||@
  Comment 1624 block B83 null  <||@
  Comment 1624 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1624 884 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1627 886 r10|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed]  <||@
  Comment 1633 888 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1633 block B84 null  <||@
  Comment 1633 890 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1633 892 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1640 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1647 896 DEOPT info [bci:3]  <||@
  Comment 1647 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1652 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 1653 block B35 null  <||@
  Comment 1653 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1653 406 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1658 408 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1662 410 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1667 412 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1667 block B36 null  <||@
  Comment 1667 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1667 416 r10|DWORD = MOVE input: int[-130099|0xfffffffffffe03cd]  <||@
  Comment 1673 418 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1678 420 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1683 422 JUMP ~[] destination: B36 -> B48  <||@
  Comment 1688 block B16 null  <||@
  Comment 1688 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 184 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1693 186 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1697 188 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1702 190 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1702 block B17 null  <||@
  Comment 1702 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1702 194 r10|DWORD = MOVE input: int[-130323|0xfffffffffffe02ed]  <||@
  Comment 1708 196 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1713 198 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1718 200 JUMP ~[] destination: B17 -> B48  <||@
  Comment 1723 block B80 null  <||@
  Comment 1723 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1723 860 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1726 862 r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5]  <||@
  Comment 1732 864 JUMP ~[] destination: B80 -> B84  <||@
  Comment 1734 block B46 null  <||@
  Comment 1734 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1734 532 MOV [r15|QWORD + 668] y: -147739 size: DWORD  <||@
  Comment 1745 534 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1752 536 DEOPT info [bci:57, 28, 50]  <||@
  Comment 1752 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1757 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4 
     locals:  |-          |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1758 block B81 null  <||@
  Comment 1758 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 868 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1761 870 r10|DWORD = MOVE input: int[-117811|0xfffffffffffe33cd]  <||@
  Comment 1767 872 JUMP ~[] destination: B81 -> B84  <||@
  Comment 1772 block B79 null  <||@
  Comment 1772 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1772 852 MOV [r15|QWORD + 668] y: -171035 size: DWORD  <||@
  Comment 1783 854 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 856 DEOPT info [bci:31, 50]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1795 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
     stack:   |rax|DWORD     |              |   |   |           |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1796 block B69 null  <||@
  Comment 1796 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 750 r10|DWORD = MOVE input: int[-152851|0xfffffffffffdaaed]  <||@
  Comment 1802 752 JUMP ~[] destination: B69 -> B72  <||@
  Comment 1807 block B37 null  <||@
  Comment 1807 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1807 426 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1812 428 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1816 430 r11|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 1821 432 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1821 block B38 null  <||@
  Comment 1821 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1821 436 r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed]  <||@
  Comment 1827 438 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1832 440 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1837 442 JUMP ~[] destination: B38 -> B48  <||@
  Comment 1842 block B82 null  <||@
  Comment 1842 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 876 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1845 878 r10|DWORD = MOVE input: int[-108827|0xfffffffffffe56e5]  <||@
  Comment 1851 880 JUMP ~[] destination: B82 -> B84  <||@
  Comment 1856 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1856 4  <||@
  Comment 1862 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1862 5  <||@
  HexCodeFile>>> <|@
end_nmethod
