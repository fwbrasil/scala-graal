begin_compilation
  name " HotSpotOSRCompilation-5958[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  method "HotSpotOSRCompilation-5958[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  date 1526687561139
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a817 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a817  <|@  <|@
f <@~|@floating>@ <|@
tid j813 <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 v1243 v1244 v1245 v1246 v1247 v1248 v1249 v1250 v1251 v1252 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
displacement: 88
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a817 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: a820 
=== Usages ===
v1258 ?236 ?137 v917 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: a820  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
=== Succesors ===
next: a823 
=== Usages ===
v899 ?236 ?137 v1257 v509 v1235 v1233 v1231 v1232 v1236 v1234 
=== Predecessor ===
a817 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 #next: a823  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
=== Succesors ===
next: a826 
=== Usages ===
v879 ?236 v1241 v1256 v509 ?137 v1239 v1237 v1238 v1242 v1240 
=== Predecessor ===
a820 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 #next: a826  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
=== Succesors ===
next: i829 
=== Usages ===
v861 ?236 v1226 v1255 ?137 v1224 v1220 v1221 
=== Predecessor ===
a823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 #next: i829  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
=== Succesors ===
next: i832 
=== Usages ===
?236 v1221 i247 v429 i110 i110 
=== Predecessor ===
a826 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1247 #next: i832  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
=== Succesors ===
next: a834 
=== Usages ===
?236 ?137 v138 
=== Predecessor ===
i829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
=== Succesors ===
next: i837 
=== Usages ===
v843 ?236 ?137 v1254 v1227 v1225 v1230 v1222 v1223 v1229 v1228 
=== Predecessor ===
i832 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 #next: i837  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
=== Succesors ===
next: i839 
=== Usages ===
?236 v237 i246 v1223 i113 i113 v442 
=== Predecessor ===
a834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1250 #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
=== Succesors ===
next: i841 
=== Usages ===
?236 i178 v153 ?137 
=== Predecessor ===
i837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 #next: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
=== Succesors ===
next: v814 
=== Usages ===
?236 v237 v73 v653 i643 
=== Predecessor ===
i839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 #next: v814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j813 
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
i841 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j813 #next: v846  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a817 a820 a823 a826 i829 i832 a834 i837 i839 i841 - - 
=== Succesors ===
=== Usages ===
v1012 i1201 i1203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a817 a820 a823 a826 i829 i832 a834 i837 i839 i841 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v845 
falseSuccessor: v844 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v845 #falseSuccessor: v844  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1043 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
v845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1195 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: - 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
=== Succesors ===
next: v1164 
=== Usages ===
v1120 
=== Predecessor ===
v844 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 #next: v1164  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1195 
y: v1119 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1195 y: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1120 
=== Succesors ===
trueSuccessor: v1163 
falseSuccessor: v1048 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1120 #trueSuccessor: v1163 #falseSuccessor: v1048  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1043 v1051 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1043 v1051 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a826 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a826  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v861 
=== Succesors ===
trueSuccessor: v863 
falseSuccessor: v862 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v861 #trueSuccessor: v863 #falseSuccessor: v862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1058 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1058  <|@  <|@
f <@*|@fixed>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
v863 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B89" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a826 
index: - 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
=== Succesors ===
next: v1172 
=== Usages ===
v1122 
=== Predecessor ===
v862 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1196 
y: v1121 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1196 y: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1171 
falseSuccessor: v1063 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1171 #falseSuccessor: v1063  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1058 v1066 
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1058 v1066 #next: v882  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a823 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a823  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v881 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v881 #falseSuccessor: v880  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B88" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
=== Succesors ===
next: v1198 
=== Usages ===
v1253 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1197 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
=== Succesors ===
next: v1180 
=== Usages ===
v886 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 #next: v1180  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1198 
y: v878 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1198 y: v878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v1179 
falseSuccessor: v1078 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v1179 #falseSuccessor: v1078  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v1179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1073 v1081 
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1073 v1081 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a820 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a820  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v899 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v899 #trueSuccessor: v901 #falseSuccessor: v900  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B87" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
=== Succesors ===
next: v1188 
=== Usages ===
v1124 
=== Predecessor ===
v900 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1199 
y: v1123 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1199 y: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v1187 
falseSuccessor: v1093 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v1187 #falseSuccessor: v1093  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v1187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1088 v1096 
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1088 v1096 #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a817 
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a817  <|@  <|@
f <@~|@floating>@ <|@
tid a1026 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1025 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105532
stableDimension: 0
stamp: i32 [-105532] ⇊00000000fffe63c4 ⇈00000000fffe63c4
stampKind: i32
value: int[-105532|0xfffffffffffe63c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v919 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v919 #falseSuccessor: v918  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v919 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a817 
index: - 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
=== Succesors ===
next: v926 
=== Usages ===
v1126 
=== Predecessor ===
v918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1200 
y: v1125 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1200 y: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v925 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v924 #falseSuccessor: v925  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:147) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i837 
y: i841 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i837 y: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: - 
=== Succesors ===
=== Usages ===
i1203 i1207 i1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a826 
index: - 
=== Succesors ===
=== Usages ===
i1201 i1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a960 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 a1011 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i117 i118 i163 i247 i246 i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.963585748524352
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1201 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1220 
=== Succesors ===
next: v697 
=== Usages ===
v650 v429 j640 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1220 #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 103]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i829 
y: i1201 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i829 y: i1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v696 
=== Usages ===
=== Predecessor ===
i1201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v694 #falseSuccessor: v696  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1202 
=== Usages ===
i1202 
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a826 
index: i829 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v694 
address: v1221 
=== Succesors ===
next: v245 
=== Usages ===
v593 i595 
=== Predecessor ===
v694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v694 address: v1221 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i592 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 v598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1202 
y: i592 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1202 y: i592  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998248648570572
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
i1202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v243 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i837 
y: i116 
=== Succesors ===
=== Usages ===
v661 i288 i643 v653 j657 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i837 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i643 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i841 
y: i246 
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i841 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i643 
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i643  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j644 
y: j645 
=== Succesors ===
=== Usages ===
j647 j658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i841 
=== Succesors ===
=== Usages ===
v1134 v1150 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i841  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i829 
y: i116 
=== Succesors ===
=== Usages ===
v650 i285 j642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i829 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a1033 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@285703510
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@285703510]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 a1011 a1011 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v653 
=== Succesors ===
trueSuccessor: v1133 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v653 #trueSuccessor: v1133 #falseSuccessor: v1130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1142 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i247 
=== Succesors ===
=== Usages ===
j647 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i247  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j642 
y: j646 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j642 y: j646  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1201 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1201  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j647 
y: j640 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j647 y: j640  <|@  <|@
f <@~|@floating>@ <|@
tid i1032 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115995
stableDimension: 0
stamp: i32 [-115995] ⇊00000000fffe3ae5 ⇈00000000fffe3ae5
stampKind: i32
value: int[-115995|0xfffffffffffe3ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v649 
=== Succesors ===
trueSuccessor: v1141 
falseSuccessor: v1138 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v649 #trueSuccessor: v1141 #falseSuccessor: v1138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i1201 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i247 y: i1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1139 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v1131 #falseSuccessor: v1139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1259 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1259  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1128 v1129 
=== Succesors ===
next: i1203 
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1128 v1129 #next: i1203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1222 
=== Succesors ===
next: v1150 
=== Usages ===
v442 v661 j656 
=== Predecessor ===
v1127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1222 #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v653 
=== Succesors ===
trueSuccessor: v1149 
falseSuccessor: v1146 
=== Usages ===
=== Predecessor ===
i1203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v653 #trueSuccessor: v1149 #falseSuccessor: v1146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1158  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
j658 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j646 
y: j657 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j646 y: j657  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1203 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j658 
y: j656 
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j658 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid i1035 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121115
stableDimension: 0
stamp: i32 [-121115] ⇊00000000fffe26e5 ⇈00000000fffe26e5
stampKind: i32
value: int[-121115|0xfffffffffffe26e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1157 
falseSuccessor: v1154 
=== Usages ===
=== Predecessor ===
v1149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1157 #falseSuccessor: v1154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i1203 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i246 y: i1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v1147 
falseSuccessor: v1155 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v1147 #falseSuccessor: v1155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1260 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1144 v1145 
=== Succesors ===
next: v713 
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1144 v1145 #next: v713  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i837 
y: i1203 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i837 y: i1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v442 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v442 #trueSuccessor: v710 #falseSuccessor: v712  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
v450 
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i837 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i837  <|@  <|@
f <@~|@floating>@ <|@
tid i595 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1202 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v710 
address: v1223 
value: i595 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v710 address: v1223 value: i595 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4627834709912957329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i247 i118 
=== Succesors ===
=== Usages ===
v1224 i110 i118 i110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i247 i118  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i246 i117 
=== Succesors ===
=== Usages ===
i113 v1225 i117 v73 i113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i246 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 26.335094126308224
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v87 
=== Usages ===
i285 v124 i288 v76 v95 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i841 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i841  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.963585748524352
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627574657818952556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1204 
=== Usages ===
v655 v665 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1127 v74 
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1127 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a826 
index: i285 
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v655 
address: v1224 
=== Succesors ===
next: v115 
=== Usages ===
v598 i600 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v655 address: v1224 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1204 
y: i592 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1204 y: i592  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998248648570572
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i1204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v91 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627573452636950541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1143 v74 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1143 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i288 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i288  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1204 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v665 
address: v1225 
value: i600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v665 address: v1225 value: i600 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i288 
y: i116 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i288 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i285 
y: i116 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571586447633935029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606496886553429159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid i1037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113435
stableDimension: 0
stamp: i32 [-113435] ⇊00000000fffe44e5 ⇈00000000fffe44e5
stampKind: i32
value: int[-113435|0xfffffffffffe44e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550358085247405120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid i1030 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107291
stableDimension: 0
stamp: i32 [-107291] ⇊00000000fffe5ce5 ⇈00000000fffe5ce5
stampKind: i32
value: int[-107291|0xfffffffffffe5ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585408667735848960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606864962830727157
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i288 i288 i837 i837 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i288 i288 i837 i837  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i285 i285 i829 i829 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i285 i285 i829 i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 v321 v322 
=== Succesors ===
next: v126 
=== Usages ===
i113 i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 v321 v322 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B63" 
    successors "B49" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607649332489968752
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i113 i163 i319 
=== Succesors ===
=== Usages ===
?137 v517 v153 v509 i163 v1227 i319 i178 v1228 i318 v500 i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i113 i163 i319  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i110 i212 i212 
=== Succesors ===
=== Usages ===
?137 v138 i326 v1226 v509 v486 i212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i110 i212 i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1439954332469138
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v126 
=== Succesors ===
next: v147 
=== Usages ===
v213 v156 v141 i135 i132 v320 v762 v757 v722 v747 v732 v737 v742 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v126 #next: v147  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a817 a820 a823 a826 i132 i832 a834 i135 i839 - - - 
=== Succesors ===
=== Usages ===
v963 a1209 i1205 i1207 i1208 v1261 a1214 v1262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a817 a820 a823 a826 i132 i832 a834 i135 i839 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i832 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i832  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.1258914277397759
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v139 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1205 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1220 
=== Succesors ===
next: v723 
=== Usages ===
v486 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1220 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i1205 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i1205  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
i1205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v719 #falseSuccessor: v722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1206 
=== Usages ===
i1206 
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1206  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a826 
index: i132 
=== Succesors ===
=== Usages ===
i1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v719 
address: v1226 
=== Succesors ===
next: v152 
=== Usages ===
i494 
=== Predecessor ===
v719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v719 address: v1226 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1206 
=== Succesors ===
=== Usages ===
v149 i164 i192 v170 i201 v340 i184 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1206  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 v149 i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i89 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i494 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i132 
y: i116 
=== Succesors ===
=== Usages ===
i132 i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i132 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i135 
y: i116 
=== Succesors ===
=== Usages ===
v1229 i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9463253509496284
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i1206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593905287281533474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i839 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i839  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 0.999825479930192
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1207 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1222 
=== Succesors ===
next: v733 
=== Usages ===
v500 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1222 #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1207 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v729 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
i1207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v729 #falseSuccessor: v732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
v508 
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i135 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i494 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v729 
address: v1227 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v729 address: v1227 value: i164 stateAfter: - lastLocationAccess: - #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128283
stableDimension: 0
stamp: i32 [-128283] ⇊00000000fffe0ae5 ⇈00000000fffe0ae5
stampKind: i32
value: int[-128283|0xfffffffffffe0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537393946110329921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a215 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a215  <|@  <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@f93244c
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a820 i132 a823 i135 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a820 i132 a823 i135  <|@  <|@
tid ?953 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a215 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v509 
stateDuring: ?953 
=== Succesors ===
next: v217 
=== Usages ===
v217 
=== Predecessor ===
v156 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v509 stateDuring: ?953 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stamp: void
=== Inputs ===
result: a215 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a215 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a215 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i169 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i494 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v737 #falseSuccessor: v734  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130579
stableDimension: 0
stamp: i32 [-130579] ⇊00000000fffe01ed ⇈00000000fffe01ed
stampKind: i32
value: int[-130579|0xfffffffffffe01ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i339 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i494 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v739 #falseSuccessor: v742  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i839 
y: i135 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i839 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i179 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v747 #falseSuccessor: v744  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131091
stableDimension: 0
stamp: i32 [-131091] ⇊00000000fffdffed ⇈00000000fffdffed
stampKind: i32
value: int[-131091|0xfffffffffffdffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1208 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1222 
=== Succesors ===
next: v758 
=== Usages ===
v517 v537 
=== Predecessor ===
v744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1222 #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1208 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v754 
falseSuccessor: v757 
=== Usages ===
=== Predecessor ===
i1208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v754 #falseSuccessor: v757  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
v638 
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i135 
y: i317 
=== Succesors ===
=== Usages ===
v537 v1230 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i1208 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i318 y: i1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v759 #falseSuccessor: v762  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
v638 
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v759 v754 
=== Succesors ===
=== Usages ===
v525 v545 v535 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v759 v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i135 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i494 
y: i183 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i494 y: i183  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i184 
y: i182 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i184 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i185 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v638 
address: v1228 
value: i186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v638 address: v1228 value: i186 stateAfter: - lastLocationAccess: - #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i163 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i494 
y: i191 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i494 y: i191  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i192 
y: i193 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i192 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i194 
y: i89 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i194 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i195 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v638 
address: v1229 
value: i196 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v638 address: v1229 value: i196 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i318 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i318  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i494 
y: i193 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i494 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i201 
y: i89 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i201 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v638 
address: v1230 
value: i203 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v638 address: v1230 value: i203 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i135 
y: i179 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -137755
stableDimension: 0
stamp: i32 [-137755] ⇊00000000fffde5e5 ⇈00000000fffde5e5
stampKind: i32
value: int[-137755|0xfffffffffffde5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid i981 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132635
stableDimension: 0
stamp: i32 [-132635] ⇊00000000fffdf9e5 ⇈00000000fffdf9e5
stampKind: i32
value: int[-132635|0xfffffffffffdf9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v757 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid i975 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130835
stableDimension: 0
stamp: i32 [-130835] ⇊00000000fffe00ed ⇈00000000fffe00ed
stampKind: i32
value: int[-130835|0xfffffffffffe00ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid i967 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124699
stableDimension: 0
stamp: i32 [-124699] ⇊00000000fffe18e5 ⇈00000000fffe18e5
stampKind: i32
value: int[-124699|0xfffffffffffe18e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" "B84" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a1209 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
a1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1231 
=== Succesors ===
next: v1261 
=== Usages ===
v1261 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1231 #next: v1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1209 
=== Succesors ===
next: i1210 
=== Usages ===
=== Predecessor ===
a1209 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1209 #next: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
=== Succesors ===
next: v775 
=== Usages ===
i555 
=== Predecessor ===
v1261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1232 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1210 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 v376 v350 v359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i555 
y: i175 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i555 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v350 
=== Succesors ===
trueSuccessor: v772 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
i1210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v350 #trueSuccessor: v772 #falseSuccessor: v774  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1211 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
=== Succesors ===
next: i1212 
=== Usages ===
v357 
=== Predecessor ===
v772 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1234 #next: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
=== Succesors ===
next: v779 
=== Usages ===
i326 
=== Predecessor ===
i1211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1233 #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i132 
y: i1212 
=== Succesors ===
=== Usages ===
v365 v357 v359 v567 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1211 
y: i326 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1211 y: i326  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v357 
=== Succesors ===
trueSuccessor: v778 
falseSuccessor: v776 
=== Usages ===
=== Predecessor ===
i1212 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v357 #trueSuccessor: v778 #falseSuccessor: v776  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid i987 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144147
stableDimension: 0
stamp: i32 [-144147] ⇊00000000fffdcced ⇈00000000fffdcced
stampKind: i32
value: int[-144147|0xfffffffffffdcced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i175 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v780 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v782 #falseSuccessor: v780  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144403
stableDimension: 0
stamp: i32 [-144403] ⇊00000000fffdcbed ⇈00000000fffdcbed
stampKind: i32
value: int[-144403|0xfffffffffffdcbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1213 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1213  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1236 
=== Succesors ===
next: v787 
=== Usages ===
v365 
=== Predecessor ===
v780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1236 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i1213 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v784 
=== Usages ===
=== Predecessor ===
i1213 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v786 #falseSuccessor: v784  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid i993 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145939
stableDimension: 0
stamp: i32 [-145939] ⇊00000000fffdc5ed ⇈00000000fffdc5ed
stampKind: i32
value: int[-145939|0xfffffffffffdc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B83" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1214 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
a1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1237 
=== Succesors ===
next: v1262 
=== Usages ===
v1262 
=== Predecessor ===
v784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1237 #next: v1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1214 
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
a1214 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1214 #next: i1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
=== Succesors ===
next: v799 
=== Usages ===
i578 
=== Predecessor ===
v1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1238 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1215 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1215  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i578 
y: i175 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i578 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v796 
falseSuccessor: v798 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v796 #falseSuccessor: v798  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1216 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
=== Succesors ===
next: i1217 
=== Usages ===
v383 
=== Predecessor ===
v796 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1240 #next: i1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
=== Succesors ===
next: v803 
=== Usages ===
i333 
=== Predecessor ===
i1216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1239 #next: v803  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i135 
y: i1217 
=== Succesors ===
=== Usages ===
v391 v383 v385 v587 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i135 y: i1217  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1216 
y: i333 
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1216 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v383 
=== Succesors ===
trueSuccessor: v802 
falseSuccessor: v800 
=== Usages ===
=== Predecessor ===
i1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v383 #trueSuccessor: v802 #falseSuccessor: v800  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i999 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149523
stableDimension: 0
stamp: i32 [-149523] ⇊00000000fffdb7ed ⇈00000000fffdb7ed
stampKind: i32
value: int[-149523|0xfffffffffffdb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v802 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i175 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v806 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v806 #falseSuccessor: v804  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1218 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
=== Succesors ===
next: v811 
=== Usages ===
v391 
=== Predecessor ===
v804 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i1218 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v810 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
i1218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v810 #falseSuccessor: v808  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151059
stableDimension: 0
stamp: i32 [-151059] ⇊00000000fffdb1ed ⇈00000000fffdb1ed
stampKind: i32
value: int[-151059|0xfffffffffffdb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
value: i326 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1235 value: i326 stateAfter: - lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1241 value: i333 stateAfter: - lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@872244084
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@872244084]
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a222 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a222 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid i1001 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148243
stableDimension: 0
stamp: i32 [-148243] ⇊00000000fffdbced ⇈00000000fffdbced
stampKind: i32
value: int[-148243|0xfffffffffffdbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid i989 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142355
stableDimension: 0
stamp: i32 [-142355] ⇊00000000fffdd3ed ⇈00000000fffdd3ed
stampKind: i32
value: int[-142355|0xfffffffffffdd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B67" "B54" "B57" "B66" "B60" "B65" "B64" "B70" "B84" "B72" "B74" "B77" "B83" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i961 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-151059 - -123403] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v957 
values: i967 i971 i973 i975 i977 i981 i983 i987 i989 i991 i993 i999 i1001 i1003 i1005 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i967 i971 i973 i975 i977 i981 i983 i987 i989 i991 i993 i999 i1001 i1003 i1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v966 v970 v972 v974 v976 v980 v982 v986 v988 v990 v992 v998 v1000 v1002 v1004 
=== Succesors ===
next: v963 
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v966 v970 v972 v974 v976 v980 v982 v986 v988 v990 v992 v998 v1000 v1002 v1004 #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
actionAndReason: i961 
speculation: a960 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?137 actionAndReason: i961 speculation: a960  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 59]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v925 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid a1021 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@934476285
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1020 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105276
stableDimension: 0
stamp: i32 [-105276] ⇊00000000fffe64c4 ⇈00000000fffe64c4
stampKind: i32
value: int[-105276|0xfffffffffffe64c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid a1018 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@328156221
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1017 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104252
stableDimension: 0
stamp: i32 [-104252] ⇊00000000fffe68c4 ⇈00000000fffe68c4
stampKind: i32
value: int[-104252|0xfffffffffffe68c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103228
stableDimension: 0
stamp: i32 [-103228] ⇊00000000fffe6cc4 ⇈00000000fffe6cc4
stampKind: i32
value: int[-103228|0xfffffffffffe6cc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1063 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid a1009 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102204
stableDimension: 0
stamp: i32 [-102204] ⇊00000000fffe70c4 ⇈00000000fffe70c4
stampKind: i32
value: int[-102204|0xfffffffffffe70c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1048 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B86" "B90" "B89" "B88" "B87" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-121115 - -102204] ⇊00000000fffe00c4 ⇈00000000fffe7ff5
valueDescription: i32
=== Inputs ===
merge: v1006 
values: i1025 i1030 i1032 i1035 i1037 i1025 i1008 i1014 i1017 i1020 i1032 i1035 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1006 values: i1025 i1030 i1032 i1035 i1037 i1025 i1008 i1014 i1017 i1020 i1032 i1035  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v1006 
values: a1026 a960 a1033 a1033 a960 a1026 a1009 a1015 a1018 a1021 a1033 a1033 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1006 values: a1026 a960 a1033 a1033 a960 a1026 a1009 a1015 a1018 a1021 a1033 a1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1024 v1029 v1031 v1034 v1036 v1098 v1099 v1100 v1101 v1102 v1259 v1260 
=== Succesors ===
next: v1012 
=== Usages ===
i1010 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1024 v1029 v1031 v1034 v1036 v1098 v1099 v1100 v1101 v1102 v1259 v1260 #next: v1012  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?236 
actionAndReason: i1010 
speculation: a1011 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?236 actionAndReason: i1010 speculation: a1011  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a817 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a817  <|@  <|@
f <@~|@floating>@ <|@
tid j813 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 v1243 v1244 v1245 v1246 v1247 v1248 v1249 v1250 v1251 v1252 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
result [v0|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a817 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1243 
=== Succesors ===
next: a820 
=== Usages ===
v1258 ?236 ?137 v917 
=== Predecessor ===
v812 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1243 #next: a820  <|@  <|@
f <@~|@floating>@ <|@
tid v1244 <|@
result [v0|QWORD + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a820 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1244 
=== Succesors ===
next: a823 
=== Usages ===
v899 ?236 ?137 v1257 v509 v1235 v1233 v1231 v1232 v1236 v1234 
=== Predecessor ===
a817 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1244 #next: a823  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
result [v0|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a823 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1245 
=== Succesors ===
next: a826 
=== Usages ===
v879 ?236 v1241 v1256 v509 ?137 v1239 v1237 v1238 v1242 v1240 
=== Predecessor ===
a820 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1245 #next: a826  <|@  <|@
f <@~|@floating>@ <|@
tid v1246 <|@
result [v0|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a826 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1246 
=== Succesors ===
next: i829 
=== Usages ===
v861 ?236 v1226 v1255 ?137 v1224 v1220 v1221 
=== Predecessor ===
a823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1246 #next: i829  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
result [v0|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i829 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1247 
=== Succesors ===
next: i832 
=== Usages ===
?236 v1221 i247 v429 i110 i110 
=== Predecessor ===
a826 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1247 #next: i832  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
result [v0|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i832 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1248 
=== Succesors ===
next: a834 
=== Usages ===
?236 ?137 v138 
=== Predecessor ===
i829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1248 #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v1249 <|@
result [v0|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
a834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: a -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1249 
=== Succesors ===
next: i837 
=== Usages ===
v843 ?236 ?137 v1254 v1227 v1225 v1230 v1222 v1223 v1229 v1228 
=== Predecessor ===
i832 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1249 #next: i837  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
result [v0|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i837 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1250 
=== Succesors ===
next: i839 
=== Usages ===
?236 v237 i246 v1223 i113 i113 v442 
=== Predecessor ===
a834 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1250 #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
result [v0|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1251 
=== Succesors ===
next: i841 
=== Usages ===
?236 i178 v153 ?137 
=== Predecessor ===
i837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1251 #next: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v1252 <|@
result [v0|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j813 
index: - 
=== Succesors ===
=== Usages ===
i841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j813 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i841 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1252 
=== Succesors ===
next: v814 
=== Usages ===
?236 v237 v73 v653 i643 
=== Predecessor ===
i839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1252 #next: v814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: OSR_migration_end(long)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j813 
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
i841 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j813 #next: v846  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a817 a820 a823 a826 i829 i832 a834 i837 i839 i841 - - 
=== Succesors ===
=== Usages ===
v1012 i1201 i1203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a817 a820 a823 a826 i829 i832 a834 i837 i839 i841 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v845 
falseSuccessor: v844 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v845 #falseSuccessor: v844  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59295d62 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v0|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOV [v0|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOV [v0|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD[.], y: v7|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1043 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
v845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1195 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1195  <|@  <|@
f <@~|@floating>@ <|@
tid v1254 <|@
result [v7|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: - 
=== Succesors ===
=== Usages ===
v1195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1195 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1254 
=== Succesors ===
next: v1164 
=== Usages ===
v1120 
=== Predecessor ===
v844 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1254 #next: v1164  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1195 
y: v1119 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1195 y: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1120 
=== Succesors ===
trueSuccessor: v1163 
falseSuccessor: v1048 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1120 #trueSuccessor: v1163 #falseSuccessor: v1048  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v7|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1043 v1051 
=== Succesors ===
next: v864 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1043 v1051 #next: v864  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a826 
=== Succesors ===
=== Usages ===
v864 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a826  <|@  <|@
f <@*|@fixed>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v861 
=== Succesors ===
trueSuccessor: v863 
falseSuccessor: v862 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v861 #trueSuccessor: v863 #falseSuccessor: v862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1058 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1058  <|@  <|@
f <@*|@fixed>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
v863 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B89" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v864 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid v1255 <|@
result [v4|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a826 
index: - 
=== Succesors ===
=== Usages ===
v1196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1196 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1255 
=== Succesors ===
next: v1172 
=== Usages ===
v1122 
=== Predecessor ===
v862 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1255 #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1196 
y: v1121 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1196 y: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1171 
falseSuccessor: v1063 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1171 #falseSuccessor: v1063  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1066  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1058 v1066 
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1058 v1066 #next: v882  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a823 
=== Succesors ===
=== Usages ===
v882 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a823  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v879 
=== Succesors ===
trueSuccessor: v881 
falseSuccessor: v880 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v879 #trueSuccessor: v881 #falseSuccessor: v880  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1073 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1073  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B88" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:160) [bci: 29]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v882 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1197  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1256 
=== Succesors ===
next: v1198 
=== Usages ===
v1253 
=== Predecessor ===
v880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1256 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1253 <|@
result [v11|DWORD * 8 + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1197 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1198 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v1253 
=== Succesors ===
next: v1180 
=== Usages ===
v886 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1253 #next: v1180  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1198 
y: v878 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1198 y: v878  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v886 
=== Succesors ===
trueSuccessor: v1179 
falseSuccessor: v1078 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v886 #trueSuccessor: v1179 #falseSuccessor: v1078  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [v11|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
v1179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1073 v1081 
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1073 v1081 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a820 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a820  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v899 
=== Succesors ===
trueSuccessor: v901 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v899 #trueSuccessor: v901 #falseSuccessor: v900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B87" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid v1257 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1199 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1257 
=== Succesors ===
next: v1188 
=== Usages ===
v1124 
=== Predecessor ===
v900 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1257 #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
result meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1199 
y: v1123 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1199 y: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v1187 
falseSuccessor: v1093 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v1187 #falseSuccessor: v1093  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
v1187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1088 v1096 
=== Succesors ===
next: v920 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1088 v1096 #next: v920  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
value: a817 
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a817  <|@  <|@
f <@~|@floating>@ <|@
tid a1026 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1025 <|@
result int[-105532|0xfffffffffffe63c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105532
stableDimension: 0
stamp: i32 [-105532] ⇊00000000fffe63c4 ⇈00000000fffe63c4
stampKind: i32
value: int[-105532|0xfffffffffffe63c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v919 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v919 #falseSuccessor: v918  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v919 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105532|0xfffffffffffe63c4], v13|QWORD[.]] destination: B17 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1200 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a817 
index: - 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a817 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1258 
=== Succesors ===
next: v926 
=== Usages ===
v1126 
=== Predecessor ===
v918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1258 #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
result meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
rawvalue: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1200 
y: v1125 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1200 y: v1125  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1126 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v925 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1126 #trueSuccessor: v924 #falseSuccessor: v925  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:147) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i837 
y: i841 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i837 y: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
result [v7|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: - 
=== Succesors ===
=== Usages ===
i1203 i1207 i1208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a826 
index: - 
=== Succesors ===
=== Usages ===
i1201 i1205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a960 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 a1011 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i117 i118 i163 i247 i246 i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.963585748524352
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v239 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v238 #falseSuccessor: v239  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1201 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1201 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1220 
=== Succesors ===
next: v697 
=== Usages ===
v650 v429 j640 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1220 #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 103]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i829 
y: i1201 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i829 y: i1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v696 
=== Usages ===
=== Predecessor ===
i1201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v694 #falseSuccessor: v696  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v14|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1202 
=== Usages ===
i1202 
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1202  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
result [v4|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a826 
index: i829 
=== Succesors ===
=== Usages ===
i1202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1202 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v694 
address: v1221 
=== Succesors ===
next: v245 
=== Usages ===
v593 i595 
=== Predecessor ===
v694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v694 address: v1221 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i592 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 v598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1202 
y: i592 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1202 y: i592  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998248648570572
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v243 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
i1202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v243 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSX [v4|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1134  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i837 
y: i116 
=== Succesors ===
=== Usages ===
v661 i288 i643 v653 j657 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i837 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i643 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i841 
y: i246 
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i841 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i643 
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i643  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j644 
y: j645 
=== Succesors ===
=== Usages ===
j647 j658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j645  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i841 
=== Succesors ===
=== Usages ===
v1134 v1150 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i841  <|@  <|@
f <@~|@floating>@ <|@
tid i247 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i829 
y: i116 
=== Succesors ===
=== Usages ===
v650 i285 j642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i829 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a1033 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@285703510
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@285703510]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 a1011 a1011 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v653 
=== Succesors ===
trueSuccessor: v1133 
falseSuccessor: v1130 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v653 #trueSuccessor: v1133 #falseSuccessor: v1130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = DEC v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1142 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1142  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i247 
=== Succesors ===
=== Usages ===
j647 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i247  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j642 
y: j646 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j642 y: j646  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1201 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1201  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j647 
y: j640 
=== Succesors ===
=== Usages ===
v1142 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j647 y: j640  <|@  <|@
f <@~|@floating>@ <|@
tid i1032 <|@
result int[-115995|0xfffffffffffe3ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115995
stableDimension: 0
stamp: i32 [-115995] ⇊00000000fffe3ae5 ⇈00000000fffe3ae5
stampKind: i32
value: int[-115995|0xfffffffffffe3ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v649 
=== Succesors ===
trueSuccessor: v1141 
falseSuccessor: v1138 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v649 #trueSuccessor: v1141 #falseSuccessor: v1138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v22|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1140 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i247 
y: i1201 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i247 y: i1201  <|@  <|@
f <@*|@fixed>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v1131 
falseSuccessor: v1139 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v1131 #falseSuccessor: v1139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1129  <|@  <|@
f <@*|@fixed>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
v1131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1259 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1259  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115995|0xfffffffffffe3ae5], v21|QWORD[.]] destination: B26 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v1142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1138 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115995|0xfffffffffffe3ae5], v21|QWORD[.]] destination: B27 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1128 v1129 
=== Succesors ===
next: i1203 
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1128 v1129 #next: i1203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1203 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?236 
guard: - 
address: v1222 
=== Succesors ===
next: v1150 
=== Usages ===
v442 v661 j656 
=== Predecessor ===
v1127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?236 guard: - address: v1222 #next: v1150  <|@  <|@
f <@*|@fixed>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v653 
=== Succesors ===
trueSuccessor: v1149 
falseSuccessor: v1146 
=== Usages ===
=== Predecessor ===
i1203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v653 #trueSuccessor: v1149 #falseSuccessor: v1146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1158 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1158  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
j658 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i246  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j646 
y: j657 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j646 y: j657  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1203 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1203  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j658 
y: j656 
=== Succesors ===
=== Usages ===
v1158 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j658 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid i1035 <|@
result int[-121115|0xfffffffffffe26e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121115
stableDimension: 0
stamp: i32 [-121115] ⇊00000000fffe26e5 ⇈00000000fffe26e5
stampKind: i32
value: int[-121115|0xfffffffffffe26e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v1157 
falseSuccessor: v1154 
=== Usages ===
=== Predecessor ===
v1149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v1157 #falseSuccessor: v1154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v26|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i1203 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i246 y: i1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v1147 
falseSuccessor: v1155 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v1147 #falseSuccessor: v1155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1147 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1260 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1260  <|@  <|@
f <@*|@fixed>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121115|0xfffffffffffe26e5], v21|QWORD[.]] destination: B33 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1034 
=== Usages ===
=== Predecessor ===
v1158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121115|0xfffffffffffe26e5], v21|QWORD[.]] destination: B34 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1144 
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
v1146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1144 v1145 
=== Succesors ===
next: v713 
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1144 v1145 #next: v713  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i837 
y: i1203 
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i837 y: i1203  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v442 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v442 #trueSuccessor: v710 #falseSuccessor: v712  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
v450 
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
result [v7|QWORD[.] + v8|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i837 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i837  <|@  <|@
f <@~|@floating>@ <|@
tid i595 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1202 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v710 
address: v1223 
value: i595 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v710 address: v1223 value: i595 stateAfter: - lastLocationAccess: - #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v8|DWORD * 1 + 16], y: v15|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v16|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4627834709912957329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i285 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i247 i118 
=== Succesors ===
=== Usages ===
v1224 i110 i118 i110 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i247 i118  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i246 i117 
=== Succesors ===
=== Usages ===
i113 v1225 i117 v73 i113 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i246 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 26.335094126308224
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v87 
=== Usages ===
i285 v124 i288 v76 v95 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i841 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i841  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.963585748524352
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627574657818952556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1204 
=== Usages ===
v655 v665 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1204  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1127 v74 
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1127 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1224 <|@
result [v4|QWORD[.] + v29|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a826 
index: i285 
=== Succesors ===
=== Usages ===
i1204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1204 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v655 
address: v1224 
=== Succesors ===
next: v115 
=== Usages ===
v598 i600 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v655 address: v1224 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1204 
y: i592 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1204 y: i592  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998248648570572
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i1204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v91 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSX [v4|QWORD[.] + v29|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627573452636950541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1143 v74 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1143 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
result [v7|QWORD[.] + v30|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i288 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i288  <|@  <|@
f <@~|@floating>@ <|@
tid i600 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1204 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v665 
address: v1225 
value: i600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v665 address: v1225 value: i600 stateAfter: - lastLocationAccess: - #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i288 
y: i116 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i288 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i285 
y: i116 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v30|DWORD * 1 + 16], y: v31|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v32|DWORD] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571586447633935029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606496886553429159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid i1037 <|@
result int[-113435|0xfffffffffffe44e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -113435
stableDimension: 0
stamp: i32 [-113435] ⇊00000000fffe44e5 ⇈00000000fffe44e5
stampKind: i32
value: int[-113435|0xfffffffffffe44e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113435|0xfffffffffffe44e5], Object[null]] destination: B43 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550358085247405120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v244 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid i1030 <|@
result int[-107291|0xfffffffffffe5ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107291
stableDimension: 0
stamp: i32 [-107291] ⇊00000000fffe5ce5 ⇈00000000fffe5ce5
stampKind: i32
value: int[-107291|0xfffffffffffe5ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107291|0xfffffffffffe5ce5], Object[null]] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585408667735848960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606864962830727157
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i113 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i288 i288 i837 i837 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i288 i288 i837 i837  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v93 
values: i285 i285 i829 i829 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v93 values: i285 i285 i829 i829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v92 v94 v321 v322 
=== Succesors ===
next: v126 
=== Usages ===
i113 i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v92 v94 v321 v322 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD, v35|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v35|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B63" 
    successors "B49" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607649332489968752
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i135 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i113 i163 i319 
=== Succesors ===
=== Usages ===
?137 v517 v153 v509 i163 v1227 i319 i178 v1228 i318 v500 i333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i113 i163 i319  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i110 i212 i212 
=== Succesors ===
=== Usages ===
?137 v138 i326 v1226 v509 v486 i212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i110 i212 i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1439954332469138
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v126 
=== Succesors ===
next: v147 
=== Usages ===
v213 v156 v141 i135 i132 v320 v762 v757 v722 v747 v732 v737 v742 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v126 #next: v147  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a817 a820 a823 a826 i132 i832 a834 i135 i839 - - - 
=== Succesors ===
=== Usages ===
v963 a1209 i1205 i1207 i1208 v1261 a1214 v1262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a817 a820 a823 a826 i132 i832 a834 i135 i839 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i832 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i132 y: i832  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.1258914277397759
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v139 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1258914277397759 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1205 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1205 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1220 
=== Succesors ===
next: v723 
=== Usages ===
v486 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1220 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i132 
y: i1205 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i132 y: i1205  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
i1205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v719 #falseSuccessor: v722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v37|DWORD, y: [v4|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1206 
=== Usages ===
i1206 
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1206  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
result [v4|QWORD[.] + v37|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a826 
index: i132 
=== Succesors ===
=== Usages ===
i1206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1206 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v719 
address: v1226 
=== Succesors ===
next: v152 
=== Usages ===
i494 
=== Predecessor ===
v719 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v719 address: v1226 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1206 
=== Succesors ===
=== Usages ===
v149 i164 i192 v170 i201 v340 i184 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1206  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i202 v149 i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i89 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i494 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i132 
y: i116 
=== Succesors ===
=== Usages ===
i132 i132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i132 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i135 
y: i116 
=== Succesors ===
=== Usages ===
v1229 i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i116  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9463253509496284
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i1206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZX [v4|QWORD[.] + v37|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593905287281533474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i839 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i135 y: i839  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 0.999825479930192
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1207 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1207 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1222 
=== Succesors ===
next: v733 
=== Usages ===
v500 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1222 #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1207 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1207  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v729 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
i1207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v729 #falseSuccessor: v732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v36|DWORD, y: [v7|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
v508 
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
result [v7|QWORD[.] + v36|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i135 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i494 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v729 
address: v1227 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v729 address: v1227 value: i164 stateAfter: - lastLocationAccess: - #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v38|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v39|DWORD] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
result int[-128283|0xfffffffffffe0ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -128283
stableDimension: 0
stamp: i32 [-128283] ⇊00000000fffe0ae5 ⇈00000000fffe0ae5
stampKind: i32
value: int[-128283|0xfffffffffffe0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128283|0xfffffffffffe0ae5]] destination: B54 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537393946110329921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a215 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a215  <|@  <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@f93244c
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a820 i132 a823 i135 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a820 i132 a823 i135  <|@  <|@
tid ?953 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a215 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a215 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v509 
stateDuring: ?953 
=== Succesors ===
next: v217 
=== Usages ===
v217 
=== Predecessor ===
v156 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v509 stateDuring: ?953 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stamp: void
=== Inputs ===
result: a215 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a215 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a215 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i169 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i494 y: i169  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v737 #falseSuccessor: v734  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
result int[-130579|0xfffffffffffe01ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130579
stableDimension: 0
stamp: i32 [-130579] ⇊00000000fffe01ed ⇈00000000fffe01ed
stampKind: i32
value: int[-130579|0xfffffffffffe01ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130579|0xfffffffffffe01ed]] destination: B57 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i494 
y: i339 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i494 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v742 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v739 #falseSuccessor: v742  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i839 
y: i135 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i839 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 i319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i179 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v747 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v747 #falseSuccessor: v744  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v9|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
result int[-131091|0xfffffffffffdffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131091
stableDimension: 0
stamp: i32 [-131091] ⇊00000000fffdffed ⇈00000000fffdffed
stampKind: i32
value: int[-131091|0xfffffffffffdffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131091|0xfffffffffffdffed]] destination: B60 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1208 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1208 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1222 
=== Succesors ===
next: v758 
=== Usages ===
v517 v537 
=== Predecessor ===
v744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1222 #next: v758  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i1208 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i135 y: i1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v754 
falseSuccessor: v757 
=== Usages ===
=== Predecessor ===
i1208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v754 #falseSuccessor: v757  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v43|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
v638 
=== Predecessor ===
v758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i135 
y: i317 
=== Succesors ===
=== Usages ===
v537 v1230 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i1208 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i318 y: i1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v759 
falseSuccessor: v762 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v759 #falseSuccessor: v762  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA [v36|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
v638 
=== Predecessor ===
v763 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v759 v754 
=== Succesors ===
=== Usages ===
v525 v545 v535 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v759 v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
result [v7|QWORD[.] + v36|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i135 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i494 
y: i183 
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i494 y: i183  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i184 
y: i182 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i184 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i185 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v638 
address: v1228 
value: i186 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v638 address: v1228 value: i186 stateAfter: - lastLocationAccess: - #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid v1229 <|@
result [v7|QWORD[.] + v40|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i163 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i163  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i494 
y: i191 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i494 y: i191  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i192 
y: i193 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i192 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i194 
y: i89 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i194 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i195 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v638 
address: v1229 
value: i196 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v638 address: v1229 value: i196 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
result [v7|QWORD[.] + v44|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a834 
index: i318 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a834 index: i318  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i494 
y: i193 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i494 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i201 
y: i89 
=== Succesors ===
=== Usages ===
i203 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i201 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i202 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v638 
address: v1230 
value: i203 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v638 address: v1230 value: i203 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i135 
y: i179 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i135 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHR v38|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = OR v45|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v46|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHR v38|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v47|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v40|DWORD * 1 + 16], y: v49|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND v38|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = OR v50|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v44|DWORD * 1 + 16], y: v51|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA [v36|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD, v39|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
result int[-137755|0xfffffffffffde5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -137755
stableDimension: 0
stamp: i32 [-137755] ⇊00000000fffde5e5 ⇈00000000fffde5e5
stampKind: i32
value: int[-137755|0xfffffffffffde5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v762 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137755|0xfffffffffffde5e5]] destination: B64 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid i981 <|@
result int[-132635|0xfffffffffffdf9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132635
stableDimension: 0
stamp: i32 [-132635] ⇊00000000fffdf9e5 ⇈00000000fffdf9e5
stampKind: i32
value: int[-132635|0xfffffffffffdf9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v757 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132635|0xfffffffffffdf9e5]] destination: B65 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid i975 <|@
result int[-130835|0xfffffffffffe00ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130835
stableDimension: 0
stamp: i32 [-130835] ⇊00000000fffe00ed ⇈00000000fffe00ed
stampKind: i32
value: int[-130835|0xfffffffffffe00ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130835|0xfffffffffffe00ed]] destination: B66 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid i967 <|@
result int[-124699|0xfffffffffffe18e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124699
stableDimension: 0
stamp: i32 [-124699] ⇊00000000fffe18e5 ⇈00000000fffe18e5
stampKind: i32
value: int[-124699|0xfffffffffffe18e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124699|0xfffffffffffe18e5]] destination: B67 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" "B84" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: a1209 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: a1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1231 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
a1209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1209 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1231 
=== Succesors ===
next: v1261 
=== Usages ===
v1261 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1231 #next: v1261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1209 
=== Succesors ===
next: i1210 
=== Usages ===
=== Predecessor ===
a1209 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1209 #next: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1232 <|@
result [v2|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1210 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1232 
=== Succesors ===
next: v775 
=== Usages ===
i555 
=== Predecessor ===
v1261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1232 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1210 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1210  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 v376 v350 v359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i555 
y: i175 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i555 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v350 
=== Succesors ===
trueSuccessor: v772 
falseSuccessor: v774 
=== Usages ===
=== Predecessor ===
i1210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v350 #trueSuccessor: v772 #falseSuccessor: v774  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v53|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1211 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1211  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1211 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1234 
=== Succesors ===
next: i1212 
=== Usages ===
v357 
=== Predecessor ===
v772 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1234 #next: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
result [v2|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1212 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1233 
=== Succesors ===
next: v779 
=== Usages ===
i326 
=== Predecessor ===
i1211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1233 #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i132 
y: i1212 
=== Succesors ===
=== Usages ===
v365 v357 v359 v567 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i1212  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1211 
y: i326 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1211 y: i326  <|@  <|@
f <@*|@fixed>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v357 
=== Succesors ===
trueSuccessor: v778 
falseSuccessor: v776 
=== Usages ===
=== Predecessor ===
i1212 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v357 #trueSuccessor: v778 #falseSuccessor: v776  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SUB (x: v37|DWORD, ~y: [v2|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid i987 <|@
result int[-144147|0xfffffffffffdcced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144147
stableDimension: 0
stamp: i32 [-144147] ⇊00000000fffdcced ⇈00000000fffdcced
stampKind: i32
value: int[-144147|0xfffffffffffdcced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144147|0xfffffffffffdcced]] destination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i175 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v780 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v782 #falseSuccessor: v780  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@~|@floating>@ <|@
tid i991 <|@
result int[-144403|0xfffffffffffdcbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -144403
stableDimension: 0
stamp: i32 [-144403] ⇊00000000fffdcbed ⇈00000000fffdcbed
stampKind: i32
value: int[-144403|0xfffffffffffdcbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144403|0xfffffffffffdcbed]] destination: B72 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1213 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1213  <|@  <|@
f <@~|@floating>@ <|@
tid v1236 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
i1213 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1213 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1236 
=== Succesors ===
next: v787 
=== Usages ===
v365 
=== Predecessor ===
v780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1236 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i326 
y: i1213 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i326 y: i1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v784 
=== Usages ===
=== Predecessor ===
i1213 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v786 #falseSuccessor: v784  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v992 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v992  <|@  <|@
f <@~|@floating>@ <|@
tid i993 <|@
result int[-145939|0xfffffffffffdc5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -145939
stableDimension: 0
stamp: i32 [-145939] ⇊00000000fffdc5ed ⇈00000000fffdc5ed
stampKind: i32
value: int[-145939|0xfffffffffffdc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v786 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145939|0xfffffffffffdc5ed]] destination: B74 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B83" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1214 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1214  <|@  <|@
f <@~|@floating>@ <|@
tid v1237 <|@
result [v3|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
a1214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1214 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1021) [bci: 1]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v1237 
=== Succesors ===
next: v1262 
=== Usages ===
v1262 
=== Predecessor ===
v784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v1237 #next: v1262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
object: a1214 
=== Succesors ===
next: i1215 
=== Usages ===
=== Predecessor ===
a1214 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: a1214 #next: i1215  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
result [v3|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1215 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1238 
=== Succesors ===
next: v799 
=== Usages ===
i578 
=== Predecessor ===
v1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1238 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 16]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1215 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1215  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i578 
y: i175 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i578 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v796 
falseSuccessor: v798 
=== Usages ===
=== Predecessor ===
i1215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v796 #falseSuccessor: v798  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v57|DWORD[.] = MOV [v3|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v3|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1216 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1216  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
result [v3|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1216 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1240 
=== Succesors ===
next: i1217 
=== Usages ===
v383 
=== Predecessor ===
v796 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1240 #next: i1217  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
result [v3|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1217 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1239 
=== Succesors ===
next: v803 
=== Usages ===
i333 
=== Predecessor ===
i1216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1239 #next: v803  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i135 
y: i1217 
=== Succesors ===
=== Usages ===
v391 v383 v385 v587 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i135 y: i1217  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1216 
y: i333 
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1216 y: i333  <|@  <|@
f <@*|@fixed>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v383 
=== Succesors ===
trueSuccessor: v802 
falseSuccessor: v800 
=== Usages ===
=== Predecessor ===
i1217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v383 #trueSuccessor: v802 #falseSuccessor: v800  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v3|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v36|DWORD, ~y: [v3|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v998 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid i999 <|@
result int[-149523|0xfffffffffffdb7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149523
stableDimension: 0
stamp: i32 [-149523] ⇊00000000fffdb7ed ⇈00000000fffdb7ed
stampKind: i32
value: int[-149523|0xfffffffffffdb7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v802 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149523|0xfffffffffffdb7ed]] destination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i175 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v806 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v806 #falseSuccessor: v804  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1002 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1002  <|@  <|@
f <@~|@floating>@ <|@
tid i1003 <|@
result int[-149779|0xfffffffffffdb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v806 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1218 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
i1218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1218 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1242 
=== Succesors ===
next: v811 
=== Usages ===
v391 
=== Predecessor ===
v804 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1242 #next: v811  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i333 
y: i1218 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i333 y: i1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v810 
falseSuccessor: v808 
=== Usages ===
=== Predecessor ===
i1218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v810 #falseSuccessor: v808  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: [v3|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
result int[-151059|0xfffffffffffdb1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151059
stableDimension: 0
stamp: i32 [-151059] ⇊00000000fffdb1ed ⇈00000000fffdb1ed
stampKind: i32
value: int[-151059|0xfffffffffffdb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v810 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151059|0xfffffffffffdb1ed]] destination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v811 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a820 
index: - 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a820 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1235 
value: i326 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1235 value: i326 stateAfter: - lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v1241 <|@
result [v3|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a823 
index: - 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1241 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1241 value: i333 stateAfter: - lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid a222 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@872244084
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@872244084]
=== Inputs ===
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a222 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a222 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 14]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid i1001 <|@
result int[-148243|0xfffffffffffdbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148243
stableDimension: 0
stamp: i32 [-148243] ⇊00000000fffdbced ⇈00000000fffdbced
stampKind: i32
value: int[-148243|0xfffffffffffdbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148243|0xfffffffffffdbced]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1023) [bci: 19]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 3]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@~|@floating>@ <|@
tid i989 <|@
result int[-142355|0xfffffffffffdd3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142355
stableDimension: 0
stamp: i32 [-142355] ⇊00000000fffdd3ed ⇈00000000fffdd3ed
stampKind: i32
value: int[-142355|0xfffffffffffdd3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-142355|0xfffffffffffdd3ed]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B67" "B54" "B57" "B66" "B60" "B65" "B64" "B70" "B84" "B72" "B74" "B77" "B83" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i961 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-151059 - -123403] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v957 
values: i967 i971 i973 i975 i977 i981 i983 i987 i989 i991 i993 i999 i1001 i1003 i1005 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v957 values: i967 i971 i973 i975 i977 i981 i983 i987 i989 i991 i993 i999 i1001 i1003 i1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v966 v970 v972 v974 v976 v980 v982 v986 v988 v990 v992 v998 v1000 v1002 v1004 
=== Succesors ===
next: v963 
=== Usages ===
i961 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v966 v970 v972 v974 v976 v980 v982 v986 v988 v990 v992 v998 v1000 v1002 v1004 #next: v963  <|@  <|@
f <@*|@fixed>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?137 
actionAndReason: i961 
speculation: a960 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?137 actionAndReason: i961 speculation: a960  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:144) [bci: 59]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v925 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105532|0xfffffffffffe63c4], v13|QWORD[.]] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid a1021 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@934476285
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1020 <|@
result int[-105276|0xfffffffffffe64c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105276
stableDimension: 0
stamp: i32 [-105276] ⇊00000000fffe64c4 ⇈00000000fffe64c4
stampKind: i32
value: int[-105276|0xfffffffffffe64c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105276|0xfffffffffffe64c4], v63|QWORD[.]] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid a1018 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@328156221
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1017 <|@
result int[-104252|0xfffffffffffe68c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104252
stableDimension: 0
stamp: i32 [-104252] ⇊00000000fffe68c4 ⇈00000000fffe68c4
stampKind: i32
value: int[-104252|0xfffffffffffe68c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104252|0xfffffffffffe68c4], v64|QWORD[.]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid a1015 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
result int[-103228|0xfffffffffffe6cc4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103228
stableDimension: 0
stamp: i32 [-103228] ⇊00000000fffe6cc4 ⇈00000000fffe6cc4
stampKind: i32
value: int[-103228|0xfffffffffffe6cc4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1063 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103228|0xfffffffffffe6cc4], v65|QWORD[.]] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@~|@floating>@ <|@
tid a1009 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015
stableDimension: 0
stamp: a!# Lorg/graalvm/compiler/hotspot/phases/OnStackReplacementPhase$OSRLocalSpeculationReason;
stampKind: a -
value: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1008 <|@
result int[-102204|0xfffffffffffe70c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -102204
stableDimension: 0
stamp: i32 [-102204] ⇊00000000fffe70c4 ⇈00000000fffe70c4
stampKind: i32
value: int[-102204|0xfffffffffffe70c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
v1048 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102204|0xfffffffffffe70c4], v66|QWORD[.]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B86" "B90" "B89" "B88" "B87" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1010 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-121115 - -102204] ⇊00000000fffe00c4 ⇈00000000fffe7ff5
valueDescription: i32
=== Inputs ===
merge: v1006 
values: i1025 i1030 i1032 i1035 i1037 i1025 i1008 i1014 i1017 i1020 i1032 i1035 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1006 values: i1025 i1030 i1032 i1035 i1037 i1025 i1008 i1014 i1017 i1020 i1032 i1035  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v1006 
values: a1026 a960 a1033 a1033 a960 a1026 a1009 a1015 a1018 a1021 a1033 a1033 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1006 values: a1026 a960 a1033 a1033 a960 a1026 a1009 a1015 a1018 a1021 a1033 a1033  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1024 v1029 v1031 v1034 v1036 v1098 v1099 v1100 v1101 v1102 v1259 v1260 
=== Succesors ===
next: v1012 
=== Usages ===
i1010 a1011 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1024 v1029 v1031 v1034 v1036 v1098 v1099 v1100 v1101 v1102 v1259 v1260 #next: v1012  <|@  <|@
f <@*|@fixed>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?236 
actionAndReason: i1010 
speculation: a1011 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?236 actionAndReason: i1010 speculation: a1011  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD, v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v68|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59295d62 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [v0|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v0|QWORD + 80] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOV [v0|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOV [v0|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOV [v0|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v0|QWORD + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|QWORD[.], y: v7|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v7|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|QWORD[.], y: v4|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B89" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v4|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|QWORD[.], y: v3|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B88" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v3|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: [v11|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B87" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v14|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVSX [v4|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = DEC v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v8|DWORD * 1 + 16], y: v15|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v16|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627574657818952556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSX [v4|QWORD[.] + v29|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627573452636950541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v30|DWORD * 1 + 16], y: v31|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v32|DWORD] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4627834709912957329
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606496886553429159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606864962830727157
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD, v35|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v35|DWORD] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B63" 
    successors "B49" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607649332489968752
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD, v37|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1258914277397759 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v37|DWORD, y: [v4|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVZX [v4|QWORD[.] + v37|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593905287281533474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction CMP (x: v36|DWORD, y: [v7|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v38|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|DWORD, v39|DWORD] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v9|DWORD, ~y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v43|DWORD = MOV [v7|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA [v36|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = SHR v38|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = OR v45|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v36|DWORD * 1 + 16], y: v46|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SHR v38|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v47|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = OR v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v40|DWORD * 1 + 16], y: v49|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = AND v38|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = OR v50|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v7|QWORD[.] + v44|DWORD * 1 + 16], y: v51|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA [v36|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD, v39|DWORD] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" "B84" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v53|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SUB (x: v37|DWORD, ~y: [v2|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B83" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction v57|DWORD[.] = MOV [v3|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v57|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVZXB [v3|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v3|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v36|DWORD, ~y: [v3|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: [v3|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v61|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = ADD (x: v26|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = ADD (x: v22|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585408667735848960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571586447633935029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v29|DWORD] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550358085247405120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD, v5|DWORD] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537393946110329921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v36|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105532|0xfffffffffffe63c4], v70|QWORD[.]] destination: B17 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B86" "B90" "B89" "B88" "B87" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD, v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v68|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v5|DWORD v6|DWORD v7|QWORD[.] v8|DWORD v9|DWORD v10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149523|0xfffffffffffdb7ed]] destination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B67" "B54" "B57" "B66" "B60" "B65" "B64" "B70" "B84" "B72" "B74" "B77" "B83" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] v37|DWORD v6|DWORD v7|QWORD[.] v36|DWORD v9|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148243|0xfffffffffffdbced]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144403|0xfffffffffffdcbed]] destination: B72 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115995|0xfffffffffffe3ae5], v73|QWORD[.]] destination: B27 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-142355|0xfffffffffffdd3ed]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132635|0xfffffffffffdf9e5]] destination: B65 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131091|0xfffffffffffdffed]] destination: B60 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121115|0xfffffffffffe26e5], v72|QWORD[.]] destination: B33 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130579|0xfffffffffffe01ed]] destination: B57 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-121115|0xfffffffffffe26e5], v71|QWORD[.]] destination: B34 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105532|0xfffffffffffe63c4], v69|QWORD[.]] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137755|0xfffffffffffde5e5]] destination: B64 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105276|0xfffffffffffe64c4], v63|QWORD[.]] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-145939|0xfffffffffffdc5ed]] destination: B74 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-113435|0xfffffffffffe44e5], Object[null]] destination: B43 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-144147|0xfffffffffffdcced]] destination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107291|0xfffffffffffe5ce5], Object[null]] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115995|0xfffffffffffe3ae5], v74|QWORD[.]] destination: B26 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-128283|0xfffffffffffe0ae5]] destination: B54 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151059|0xfffffffffffdb1ed]] destination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104252|0xfffffffffffe68c4], v64|QWORD[.]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103228|0xfffffffffffe6cc4], v65|QWORD[.]] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130835|0xfffffffffffe00ed]] destination: B66 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-102204|0xfffffffffffe70c4], v66|QWORD[.]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124699|0xfffffffffffe18e5]] destination: B67 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59295d62 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD <|@ <|@
      nr   12  <|@ instruction r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   46  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B89" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B88" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr  102  <|@ instruction CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B87" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: r11|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] stack:44|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  180  <|@ instruction CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  204  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B25" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  272  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B32" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  346  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627574657818952556
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMP rax|DWORD y: 128 size: WORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627573452636950541
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4627834709912957329
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606496886553429159
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606864962830727157
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B63" 
    successors "B49" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607649332489968752
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  446  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.1258914277397759 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593905287281533474
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  484  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr  552  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  568  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD <|@ <|@
      nr  570  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  578  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  580  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  584  <|@ instruction MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  586  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  588  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" "B84" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  630  <|@ instruction rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  632  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  640  <|@ instruction rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  642  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B83" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  688  <|@ instruction rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  690  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  698  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr  748  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r11|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction r9|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rbp|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  214  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585408667735848960
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571586447633935029
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550358085247405120
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537393946110329921
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143] <|@ <|@
      nr  510  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746] <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B86" "B90" "B89" "B88" "B87" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[-149523|0xfffffffffffdb7ed] <|@ <|@
      nr  708  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B67" "B54" "B57" "B66" "B60" "B65" "B64" "B70" "B84" "B72" "B74" "B77" "B83" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r10:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: rdx|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: int[-144403|0xfffffffffffdcbed] <|@ <|@
      nr  664  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B72 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B27 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVE input: int[-142355|0xfffffffffffdd3ed] <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction rcx|DWORD = MOVE input: int[-132635|0xfffffffffffdf9e5] <|@ <|@
      nr  604  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B65 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr  544  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B60 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B33 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[-130579|0xfffffffffffe01ed] <|@ <|@
      nr  522  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B57 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5] <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B34 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746] <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5] <|@ <|@
      nr  596  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B64 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285] <|@ <|@
      nr  808  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rcx|DWORD = MOVE input: int[-105276|0xfffffffffffe64c4] <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr  678  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B74 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5] <|@ <|@
      nr  392  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B43 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rcx|DWORD = MOVE input: int[-144147|0xfffffffffffdcced] <|@ <|@
      nr  650  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: int[-107291|0xfffffffffffe5ce5] <|@ <|@
      nr  414  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5] <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[-128283|0xfffffffffffe0ae5] <|@ <|@
      nr  494  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B54 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr  736  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221] <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = MOVE input: int[-104252|0xfffffffffffe68c4] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835] <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: int[-103228|0xfffffffffffe6cc4] <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: int[-130835|0xfffffffffffe00ed] <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B66 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015] <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE input: int[-102204|0xfffffffffffe70c4] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: int[-124699|0xfffffffffffe18e5] <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B67 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59295d62 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD <|@ <|@
      nr   12  <|@ instruction r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr   22  <|@ instruction rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD <|@ <|@
      nr   26  <|@ instruction rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL <|@ <|@
      nr   46  <|@ instruction TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B90" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B89" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B12 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B88" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>} <|@ <|@
      nr  102  <|@ instruction CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B16" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B87" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B16 falseDestination: B14 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed} <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B45" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: r11|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] stack:44|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  180  <|@ instruction CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B44" 
    xhandlers
    flags 
    probability 4606854428381264000
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  198  <|@ instruction r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r9|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  204  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  206  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B30" "B36" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD stack:40|DWORD rbx|QWORD[.] stack:48|DWORD stack:36|DWORD rdx|DWORD - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73] <|@ <|@
      nr  272  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B37" "B43" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4606852908346783879
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  346  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4627574657818952556
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMP rax|DWORD y: 128 size: WORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4627573452636950541
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B39" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4627834709912957329
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  352  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B47" 
    xhandlers
    flags 
    probability 4606496886553429159
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" "B46" "B44" 
    successors "B48" 
    xhandlers
    flags 
    probability 4606864962830727157
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B53" "B63" 
    successors "B49" "B68" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607649332489968752
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  446  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.1258914277397759 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B67" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B56" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594173980435473154
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B55" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593905287281533474
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109] <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593904460533367506
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  484  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B53 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B66" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction CMP rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B65" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109] <|@ <|@
      nr  552  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575248203079752698
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  568  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD <|@ <|@
      nr  570  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  574  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  578  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  580  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  582  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  584  <|@ instruction MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  586  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  588  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B63 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" "B84" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  630  <|@ instruction rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  632  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  640  <|@ instruction rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  642  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B72" "B73" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  670  <|@ instruction CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  672  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B83" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109] <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109] <|@ <|@
      nr  688  <|@ instruction rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  690  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  698  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 4606864756143685663
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr  748  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B34" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r11|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction r9|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  284  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B36" "B33" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B36 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rbp|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  214  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4602349308719413383
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B29 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585408667735848960
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4571586447633935029
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B47" 
    xhandlers
    flags 
    probability 4550358085247405120
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors 
    xhandlers
    flags 
    probability 4537393946110329921
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143] <|@ <|@
      nr  510  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746] <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B17" "B45" "B27" "B34" "B43" "B86" "B90" "B89" "B88" "B87" "B26" "B33" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rbx:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
locals: stack:32|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD rdx|DWORD - - 
>@ <|@ instruction DEOPT info [bci:73] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction rcx|DWORD = MOVE input: int[-149523|0xfffffffffffdb7ed] <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B67" "B54" "B57" "B66" "B60" "B65" "B64" "B70" "B84" "B72" "B74" "B77" "B83" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r10:0, r13:0, r14:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: rdx|QWORD[.] r10|QWORD[.] r14|QWORD[.] r13|QWORD[.] r8|DWORD r9|DWORD rbx|QWORD[.] r11|DWORD rdi|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction rcx|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: int[-144403|0xfffffffffffdcbed] <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B72 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B27 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVE input: int[-142355|0xfffffffffffdd3ed] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction rcx|DWORD = MOVE input: int[-132635|0xfffffffffffdf9e5] <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B65 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B60 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B33 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|DWORD = MOVE input: int[-130579|0xfffffffffffe01ed] <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B57 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5] <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B34 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746] <|@ <|@
      nr  788  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4] <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B79 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5] <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B64 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285] <|@ <|@
      nr  808  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rcx|DWORD = MOVE input: int[-105276|0xfffffffffffe64c4] <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B87 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B74 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  390  <|@ instruction rcx|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5] <|@ <|@
      nr  392  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B43 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rcx|DWORD = MOVE input: int[-144147|0xfffffffffffdcced] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: int[-107291|0xfffffffffffe5ce5] <|@ <|@
      nr  414  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B45 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5] <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B26 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[-128283|0xfffffffffffe0ae5] <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B54 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B81 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221] <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = MOVE input: int[-104252|0xfffffffffffe68c4] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835] <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rcx|DWORD = MOVE input: int[-103228|0xfffffffffffe6cc4] <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: int[-130835|0xfffffffffffe00ed] <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B66 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015] <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE input: int[-102204|0xfffffffffffe70c4] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE input: int[-124699|0xfffffffffffe18e5] <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B67 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488b5e5848895c24204c8b6e504c8b76484c8b5640448b5e38448b46304c8b4e288b4e208b7e188b5610897c241c448944241844895c2414894c24108954240c4c892c244d8bea498bd9e800000000904885db0f840d000000817b08addeadde0f85660500004d85ed0f840e00000041817d08addeadde0f85130500004d85f60f841c000000418b460848beaddeaddeaddeadde483b34c5380000000f85bc0400004c8b14244d85d20f840e00000041817a08addeadde0f85dd0300004c8b5c24204d85db0f849d02000041817b08addeadde8b54240c0f857f0300003b5424100f8e38020000418b450c3b4424140f8609040000448b442414430fbf7445106681fe80000f832a0200008b4c2410ffc1448bca442bc94d63c949ffc9418bf8ffc73bd10f8fd60100008b430c3bd10f8fac0100003b4424100f8693030000448b5c24104288741b108bf7e919000000410fbf4475106681f880000f83cc01000088440b10ffc1ffc63bd17fe3448bde458bc3448bd98b7c241c448b4c241890453bc80f8ebf000000453b450c0f836b040000430fb7444510418bf0ffc6418bd3ffc281f8800000000f8320000000413bfb0f8e89010000443b5b0c0f83880300004288441b10448bc6448bdaebb181f8000800000f825202000081f800d800000f83db0300008bcf412bcb83f9030f8c0c0200008b4b0c413bcb0f86f9010000418d6b023bcd0f86830200008bc8c1e90c81c9e000000042884c1b108bc8c1e90683e13f81c980000000884c131083e03f81c88000000088442b10458d5b03448bc6e938ffffff418b422c418504c4410fb6422885c00f8596010000418b421c418bf0412b72243bf00f8f8402000085f60f8c52010000413b720c0f8c46020000418b462c418504c4410fb6462885c00f852c010000418b461c418bd3412b56243bd00f8ffb00000085d20f8cd4010000413b560c0f8c98020000418972184189561848b8addeaddeaddeadde488b6c24304883c438850500000000c5f877c34c63d94d03d9448bc84d3bcb0f86440100003bc10f873afeffffe9080100004863ef4903e9448bd84c3bdd0f86bf0000003bc70f8710feffffe9060200008b4c2410448b5c2414e943feffff448bdee93bfeffff8b4c2410458bd8e92ffeffff498bf2418bd0498bce458bc36690e80000000090488b6c24304883c438850500000000c5f877c38b54240c8b7c241c448b4c2418448b442414448b5c241048b9addeaddeaddeadde488bf1b9c463feff41898f9c0200004989b7a8020000e80000000090b9edb7fdff488b54242041898f9c0200004d89a7a8020000e80000000090b9edbcfdffebe0b9edcbfdffebd98b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e53afeffeb9eb9edd3fdffebb0b9e5f9fdffeba9b9edfffdffeba28b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e526feffe964ffffffb9ed01feffe973ffffff8b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e526feffe935ffffff8b7c241c448b4c2418448b442414448b5c241048b9addeaddeaddeadde488bf1b9c463feffe90bffffffb9edb6fdffe91affffffb9e5e5fdffe910ffffff8b54240c8b7c241c448b5c2410448b4c2418448b44241448b9addeaddeaddeadde488bf1b9c464feffe9c9feffffb9edc5fdffe9d8feffff48be0000000000000000b9e544feff8b7c241c448b5c2410448b4c2418e99dfeffffb9edccfdffe9acfeffff48be0000000000000000b9e55cfeff8b7c241c448b4c2418448b442414448b5c2410e96cfeffff8b7c241c448b5c2410448b4c241848b9addeaddeaddeadde488bf1b9e53afeffe947feffffb9e50afeffe956feffffb9edb1fdffe94cfeffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9addeaddeaddeadde488bf1b9c468feffe901feffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9addeaddeaddeadde488bf1b9c46cfeffe9cffdffffb9ed00feffe9defdffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9addeaddeaddeadde488bf1b9c470feffe993fdffffb9e518feffe9a2fdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59295d62 slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD  <||@
  Comment 52 8 stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 57 10 r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD  <||@
  Comment 61 12 r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD  <||@
  Comment 65 14 r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD  <||@
  Comment 69 16 r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD  <||@
  Comment 73 18 r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD  <||@
  Comment 77 20 r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD  <||@
  Comment 81 22 rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD  <||@
  Comment 84 24 rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD  <||@
  Comment 87 26 rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD  <||@
  Comment 90 28 stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 94 30 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 99 32 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 104 34 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 108 36 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 112 38 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 116 40 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 119 42 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 122 44 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 122 {Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 128 46 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 131 48 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 137 block B2 null  <||@
  Comment 137 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 56 CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 137 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 144 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B90  <||@
  Comment 150 block B4 null  <||@
  Comment 150 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 66 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 153 68 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 159 block B6 null  <||@
  Comment 159 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 76 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 159 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 167 78 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B89  <||@
  Comment 173 block B8 null  <||@
  Comment 173 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 86 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 176 88 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 182 block B10 null  <||@
  Comment 182 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 98 rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 186 100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}  <||@
  Comment 186 {meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}}  <||@
  Comment 196 102 CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 204 104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B88  <||@
  Comment 210 block B12 null  <||@
  Comment 210 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 92 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 214 114 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 217 116 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 223 block B14 null  <||@
  Comment 223 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 223 126 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 223 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 231 128 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B16 falseDestination: B14 -> B87  <||@
  Comment 237 block B16 null  <||@
  Comment 237 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 120 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 242 138 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 245 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 251 block B18 null  <||@
  Comment 251 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 164 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 251 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 259 170 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 263 166 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B86  <||@
  Comment 269 block B19 null  <||@
  Comment 269 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 172 CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 273 174 BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46  <||@
  Comment 279 block B20 null  <||@
  Comment 279 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 178 rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 279 [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4               |5               |6             |7               |8               |9          |10  |11 
     locals:  |r11|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 279 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 283 180 CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 287 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45  <||@
  Comment 293 block B21 null  <||@
  Comment 293 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 186 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 298 188 rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 304 190 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 309 192 BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44  <||@
  Comment 315 block B22 null  <||@
  Comment 315 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 196 rcx|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 321 198 r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 327 200 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 330 202 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 333 204 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 338 206 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 340 208 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29  <||@
  Comment 346 block B29 null  <||@
  Comment 346 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 270 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 346 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5               |6             |7               |8               |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 349 272 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 351 274 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B36  <||@
  Comment 357 block B36 null  <||@
  Comment 357 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 336 CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 361 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43  <||@
  Comment 367 block B37 null  <||@
  Comment 367 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 342 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 372 344 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 377 346 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 379 348 JUMP ~[] destination: B37 -> B38  <||@
  Comment 384 block B39 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 384 356 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 358 rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 390 360 CMP rax|DWORD y: 128 size: WORD  <||@
  Comment 395 362 BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 401 block B40 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 401 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 366 MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 405 368 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 407 370 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 409 372 JUMP ~[] destination: B40 -> B38  <||@
  Comment 409 block B38 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 409 350 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 409 352 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 411 354 BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 413 block B42 null  <||@
  Comment 413 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 382 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 416 384 JUMP ~[] destination: B42 -> B47  <||@
  Comment 416 block B47 null  <||@
  Comment 416 432 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 416 434 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 419 436 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 422 438 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 426 440 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 431 442 JUMP ~[] destination: B47 -> B48  <||@
  Comment 431 block B48 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 431 444 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 446 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 435 448 BRANCH trueDestinationProbability: 0.1258914277397759 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68  <||@
  Comment 441 block B49 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 441 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 452 CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 441 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 441 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 445 454 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B67  <||@
  Comment 451 block B50 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 451 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 458 rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 457 460 rsi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 462 462 rdx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 467 464 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 473 466 BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56  <||@
  Comment 479 block B51 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 479 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 470 CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 482 472 BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 488 block B52 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 488 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 476 CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 488 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 478 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 498 block B53 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 498 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 482 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 503 484 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 506 486 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 509 488 JUMP ~[] destination: B53 -> B48  <||@
  Comment 511 block B56 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 511 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 514 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 517 516 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 523 block B58 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 523 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 528 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 529 530 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B66  <||@
  Comment 535 block B59 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 535 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 534 rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 540 536 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 543 538 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 549 block B61 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 549 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 550 rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109]  <||@
  Comment 549 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 549 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 552 552 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 555 554 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B65  <||@
  Comment 561 block B62 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 561 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 558 rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 565 560 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 567 562 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 573 block B63 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 573 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 566 rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 578 568 rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD  <||@
  Comment 584 570 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 589 572 rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 594 574 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 597 576 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 603 578 MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 607 580 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 610 582 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 616 584 MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 620 586 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 624 588 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 627 590 JUMP ~[] destination: B63 -> B48  <||@
  Comment 632 block B68 null  <||@
  Comment 632 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 626 rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 632 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 632 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 636 628 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 636 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 636 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 640 630 rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD  <||@
  Comment 645 632 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 647 634 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B84  <||@
  Comment 653 block B69 null  <||@
  Comment 653 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 638 rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 657 640 rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD  <||@
  Comment 664 642 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 666 644 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 672 block B71 null  <||@
  Comment 672 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 656 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 674 658 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 680 block B73 null  <||@
  Comment 680 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 670 CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 684 672 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 690 block B75 null  <||@
  Comment 690 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 684 rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 690 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 690 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 694 686 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 694 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 694 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 698 688 rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD  <||@
  Comment 703 690 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 705 692 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B83  <||@
  Comment 711 block B76 null  <||@
  Comment 711 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 696 rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 715 698 rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD  <||@
  Comment 722 700 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 724 702 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 730 block B78 null  <||@
  Comment 730 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 714 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 732 716 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 738 block B80 null  <||@
  Comment 738 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 728 CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 742 730 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 748 block B82 null  <||@
  Comment 748 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 742 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 752 744 MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD  <||@
  Comment 756 746 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084]  <||@
  Comment 756 {Object[CoderResult@872244084]}  <||@
  Comment 766 748 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 775 12  <||@
  Comment 785 block B30 null  <||@
  Comment 785 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 278 r11|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 788 280 r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 791 282 r9|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 794 284 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 797 286 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34  <||@
  Comment 803 block B31 null  <||@
  Comment 803 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 290 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 805 292 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 816 block B23 null  <||@
  Comment 816 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 212 rbp|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 819 214 rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 822 216 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 825 218 CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 828 220 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27  <||@
  Comment 834 block B24 null  <||@
  Comment 834 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 224 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 836 226 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B29 falseDestination: B24 -> B26  <||@
  Comment 847 block B46 null  <||@
  Comment 847 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 426 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 851 428 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 856 430 JUMP ~[] destination: B46 -> B47  <||@
  Comment 861 block B41 null  <||@
  Comment 861 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 861 376 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 864 378 JUMP ~[] destination: B41 -> B47  <||@
  Comment 869 block B44 null  <||@
  Comment 869 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 402 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 873 404 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 876 406 JUMP ~[] destination: B44 -> B47  <||@
  Comment 881 block B55 null  <||@
  Comment 881 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 500 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 884 502 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 887 504 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 890 506 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 893 508 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143]  <||@
  Comment 893 8  <||@
  Comment 895 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 900 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 901 510 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 910 12  <||@
  Comment 920 block B17 null  <||@
  Comment 920 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 920 144 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 924 146 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 928 148 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 933 150 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 938 152 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 943 154 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]  <||@
  Comment 943 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]}  <||@
  Comment 953 156 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 956 158 rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4]  <||@
  Comment 961 160 JUMP ~[] destination: B17 -> B91  <||@
  Comment 961 block B91 null  <||@
  Comment 961 880 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 961 882 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 968 884 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 975 886 DEOPT info [bci:73]  <||@
  Comment 975 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 980 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 981 block B77 null  <||@
  Comment 981 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 981 706 rcx|DWORD = MOVE input: int[-149523|0xfffffffffffdb7ed]  <||@
  Comment 986 710 JUMP ~[] destination: B77 -> B85  <||@
  Comment 986 block B85 null  <||@
  Comment 986 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 986 620 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 991 768 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 998 770 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1005 772 DEOPT info [bci:109]  <||@
  Comment 1005 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1010 [rdx:0, rbx:0, r10:0, r13:0, r14:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 1011 block B83 null  <||@
  Comment 1011 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 752 rcx|DWORD = MOVE input: int[-148243|0xfffffffffffdbced]  <||@
  Comment 1016 756 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1018 block B72 null  <||@
  Comment 1018 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1018 662 rcx|DWORD = MOVE input: int[-144403|0xfffffffffffdcbed]  <||@
  Comment 1023 666 JUMP ~[] destination: B72 -> B85  <||@
  Comment 1025 block B27 null  <||@
  Comment 1025 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 250 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1029 252 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1034 254 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1039 256 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1039 {Object[d.a@285703510]}  <||@
  Comment 1049 258 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 260 rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5]  <||@
  Comment 1057 262 JUMP ~[] destination: B27 -> B91  <||@
  Comment 1059 block B84 null  <||@
  Comment 1059 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1059 760 rcx|DWORD = MOVE input: int[-142355|0xfffffffffffdd3ed]  <||@
  Comment 1064 764 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1066 block B65 null  <||@
  Comment 1066 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 602 rcx|DWORD = MOVE input: int[-132635|0xfffffffffffdf9e5]  <||@
  Comment 1071 606 JUMP ~[] destination: B65 -> B85  <||@
  Comment 1073 block B60 null  <||@
  Comment 1073 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1073 542 rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed]  <||@
  Comment 1078 546 JUMP ~[] destination: B60 -> B85  <||@
  Comment 1080 block B33 null  <||@
  Comment 1080 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 300 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1084 302 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1089 304 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1094 306 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1094 {Object[d.a@285703510]}  <||@
  Comment 1104 308 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 310 rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5]  <||@
  Comment 1112 312 JUMP ~[] destination: B33 -> B91  <||@
  Comment 1117 block B57 null  <||@
  Comment 1117 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 520 rcx|DWORD = MOVE input: int[-130579|0xfffffffffffe01ed]  <||@
  Comment 1122 524 JUMP ~[] destination: B57 -> B85  <||@
  Comment 1127 block B34 null  <||@
  Comment 1127 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 316 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1131 318 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1136 320 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1141 322 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1141 {Object[d.a@285703510]}  <||@
  Comment 1151 324 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 326 rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5]  <||@
  Comment 1159 328 JUMP ~[] destination: B34 -> B91  <||@
  Comment 1164 block B86 null  <||@
  Comment 1164 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1164 778 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1168 780 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1173 782 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1178 784 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1183 786 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]  <||@
  Comment 1183 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]}  <||@
  Comment 1193 788 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 790 rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4]  <||@
  Comment 1201 792 JUMP ~[] destination: B86 -> B91  <||@
  Comment 1206 block B79 null  <||@
  Comment 1206 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 720 rcx|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 1211 724 JUMP ~[] destination: B79 -> B85  <||@
  Comment 1216 block B64 null  <||@
  Comment 1216 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 594 rcx|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5]  <||@
  Comment 1221 598 JUMP ~[] destination: B64 -> B85  <||@
  Comment 1226 block B87 null  <||@
  Comment 1226 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 796 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1230 798 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1234 800 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1239 802 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1244 804 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1249 806 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285]  <||@
  Comment 1249 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285]}  <||@
  Comment 1259 808 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1262 810 rcx|DWORD = MOVE input: int[-105276|0xfffffffffffe64c4]  <||@
  Comment 1267 812 JUMP ~[] destination: B87 -> B91  <||@
  Comment 1272 block B74 null  <||@
  Comment 1272 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 676 rcx|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed]  <||@
  Comment 1277 680 JUMP ~[] destination: B74 -> B85  <||@
  Comment 1282 block B43 null  <||@
  Comment 1282 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1282 388 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1292 390 rcx|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5]  <||@
  Comment 1297 392 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1301 394 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1306 396 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1311 398 JUMP ~[] destination: B43 -> B91  <||@
  Comment 1316 block B70 null  <||@
  Comment 1316 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 648 rcx|DWORD = MOVE input: int[-144147|0xfffffffffffdcced]  <||@
  Comment 1321 652 JUMP ~[] destination: B70 -> B85  <||@
  Comment 1326 block B45 null  <||@
  Comment 1326 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1326 410 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1336 412 rcx|DWORD = MOVE input: int[-107291|0xfffffffffffe5ce5]  <||@
  Comment 1341 414 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1345 416 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1350 418 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1355 420 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1360 422 JUMP ~[] destination: B45 -> B91  <||@
  Comment 1365 block B26 null  <||@
  Comment 1365 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1365 234 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1369 236 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1374 238 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1379 240 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1379 {Object[d.a@285703510]}  <||@
  Comment 1389 242 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 244 rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5]  <||@
  Comment 1397 246 JUMP ~[] destination: B26 -> B91  <||@
  Comment 1402 block B54 null  <||@
  Comment 1402 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 492 rcx|DWORD = MOVE input: int[-128283|0xfffffffffffe0ae5]  <||@
  Comment 1407 496 JUMP ~[] destination: B54 -> B85  <||@
  Comment 1412 block B81 null  <||@
  Comment 1412 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1412 734 rcx|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed]  <||@
  Comment 1417 738 JUMP ~[] destination: B81 -> B85  <||@
  Comment 1422 block B88 null  <||@
  Comment 1422 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 816 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1426 818 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1430 820 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1435 822 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1440 824 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1445 826 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1449 828 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221]  <||@
  Comment 1449 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221]}  <||@
  Comment 1459 830 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 832 rcx|DWORD = MOVE input: int[-104252|0xfffffffffffe68c4]  <||@
  Comment 1467 834 JUMP ~[] destination: B88 -> B91  <||@
  Comment 1472 block B89 null  <||@
  Comment 1472 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 838 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1476 840 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1480 842 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1485 844 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1490 846 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1495 848 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1499 850 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835]  <||@
  Comment 1499 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835]}  <||@
  Comment 1509 852 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1512 854 rcx|DWORD = MOVE input: int[-103228|0xfffffffffffe6cc4]  <||@
  Comment 1517 856 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1522 block B66 null  <||@
  Comment 1522 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 610 rcx|DWORD = MOVE input: int[-130835|0xfffffffffffe00ed]  <||@
  Comment 1527 614 JUMP ~[] destination: B66 -> B85  <||@
  Comment 1532 block B90 null  <||@
  Comment 1532 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1532 860 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1536 862 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1540 864 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1545 866 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1550 868 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1555 870 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1559 872 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015]  <||@
  Comment 1559 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015]}  <||@
  Comment 1569 874 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 876 rcx|DWORD = MOVE input: int[-102204|0xfffffffffffe70c4]  <||@
  Comment 1577 878 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1582 block B67 null  <||@
  Comment 1582 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1582 618 rcx|DWORD = MOVE input: int[-124699|0xfffffffffffe18e5]  <||@
  Comment 1587 622 JUMP ~[] destination: B67 -> B85  <||@
  Comment 1592 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1592 4  <||@
  Comment 1598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1598 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotOSRCompilation-5958[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  method "HotSpotOSRCompilation-5958[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)@73]"
  date 1526687561749
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1195cdb20 448b560849c1e203493bc20f852f7343ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488b5e5848895c24204c8b6e504c8b76484c8b5640448b5e38448b46304c8b4e288b4e208b7e188b5610897c241c448944241844895c2414894c24108954240c4c892c244d8bea498bd9e8c1b1d1ff904885db0f840d000000817b08f50000f80f85660500004d85ed0f840e00000041817d08410000f80f85130500004d85f60f841c000000418b460848be209102c007000000483b34c5380000000f85bc0400004c8b14244d85d20f840e00000041817a08c26300f80f85dd0300004c8b5c24204d85db0f849d02000041817b08d45100f88b54240c0f857f0300003b5424100f8e38020000418b450c3b4424140f8609040000448b442414430fbf7445106681fe80000f832a0200008b4c2410ffc1448bca442bc94d63c949ffc9418bf8ffc73bd10f8fd60100008b430c3bd10f8fac0100003b4424100f8693030000448b5c24104288741b108bf7e919000000410fbf4475106681f880000f83cc01000088440b10ffc1ffc63bd17fe3448bde458bc3448bd98b7c241c448b4c241890453bc80f8ebf000000453b450c0f836b040000430fb7444510418bf0ffc6418bd3ffc281f8800000000f8320000000413bfb0f8e89010000443b5b0c0f83880300004288441b10448bc6448bdaebb181f8000800000f825202000081f800d800000f83db0300008bcf412bcb83f9030f8c0c0200008b4b0c413bcb0f86f9010000418d6b023bcd0f86830200008bc8c1e90c81c9e000000042884c1b108bc8c1e90683e13f81c980000000884c131083e03f81c88000000088442b10458d5b03448bc6e938ffffff418b422c418504c4410fb6422885c00f8596010000418b421c418bf0412b72243bf00f8f8402000085f60f8c52010000413b720c0f8c46020000418b462c418504c4410fb6462885c00f852c010000418b461c418bd3412b56243bd00f8ffb00000085d20f8cd4010000413b560c0f8c98020000418972184189561848b8c81400c006000000488b6c24304883c4388505d9e190f0c5f877c34c63d94d03d9448bc84d3bcb0f86440100003bc10f873afeffffe9080100004863ef4903e9448bd84c3bdd0f86bf0000003bc70f8710feffffe9060200008b4c2410448b5c2414e943feffff448bdee93bfeffff8b4c2410458bd8e92ffeffff498bf2418bd0498bce458bc36690e87c7643ff90488b6c24304883c438850552e190f0c5f877c38b54240c8b7c241c448b4c2418448b442414448b5c241048b9685a357007000000488bf1b9c463feff41898f9c0200004989b7a8020000e80a8743ff90b9edb7fdff488b54242041898f9c0200004d89a7a8020000e8ec8643ff90b9edbcfdffebe0b9edcbfdffebd98b7c241c448b5c2410448b4c241848b9f85a8c7007000000488bf1b9e53afeffeb9eb9edd3fdffebb0b9e5f9fdffeba9b9edfffdffeba28b7c241c448b5c2410448b4c241848b9f85a8c7007000000488bf1b9e526feffe964ffffffb9ed01feffe973ffffff8b7c241c448b5c2410448b4c241848b9f85a8c7007000000488bf1b9e526feffe935ffffff8b7c241c448b4c2418448b442414448b5c241048b9685a357007000000488bf1b9c463feffe90bffffffb9edb6fdffe91affffffb9e5e5fdffe910ffffff8b54240c8b7c241c448b5c2410448b4c2418448b44241448b9d85c357007000000488bf1b9c464feffe9c9feffffb9edc5fdffe9d8feffff48be0000000000000000b9e544feff8b7c241c448b5c2410448b4c2418e99dfeffffb9edccfdffe9acfeffff48be0000000000000000b9e55cfeff8b7c241c448b4c2418448b442414448b5c2410e96cfeffff8b7c241c448b5c2410448b4c241848b9f85a8c7007000000488bf1b9e53afeffe947feffffb9e50afeffe956feffffb9edb1fdffe94cfeffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b9185f357007000000488bf1b9c468feffe901feffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b95861357007000000488bf1b9c46cfeffe9cffdffffb9ed00feffe9defdffff8b54240c8b7c241c448b5c2410448b4c2418448b4424144c8b142448b99866357007000000488bf1b9c470feffe993fdffffb9e518feffe9a2fdffffe8431683ff90e89d8343ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59295d62 slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOV [rsi|QWORD + 88] size: QWORD  <||@
  Comment 52 8 stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 57 10 r13|QWORD[.] = MOV [rsi|QWORD + 80] size: QWORD  <||@
  Comment 61 12 r14|QWORD[.] = MOV [rsi|QWORD + 72] size: QWORD  <||@
  Comment 65 14 r10|QWORD[.] = MOV [rsi|QWORD + 64] size: QWORD  <||@
  Comment 69 16 r11|DWORD = MOV [rsi|QWORD + 56] size: DWORD  <||@
  Comment 73 18 r8|DWORD = MOV [rsi|QWORD + 48] size: DWORD  <||@
  Comment 77 20 r9|QWORD[.] = MOV [rsi|QWORD + 40] size: QWORD  <||@
  Comment 81 22 rcx|DWORD = MOV [rsi|QWORD + 32] size: DWORD  <||@
  Comment 84 24 rdi|DWORD = MOV [rsi|QWORD + 24] size: DWORD  <||@
  Comment 87 26 rdx|DWORD = MOV [rsi|QWORD + 16] size: DWORD  <||@
  Comment 90 28 stack:36|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 94 30 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 99 32 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 104 34 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 108 36 stack:52|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 112 38 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 116 40 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 119 42 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 122 44 - = NEAR_FOREIGN_CALL [rsi|QWORD] [rdi|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL  <||@
  Comment 122 {Stub<OSR_migration_end(long)void>@0x1192e8d60:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]; temps=rdi|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 128 46 TEST (x: rbx|QWORD[.], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 131 48 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 137 block B2 null  <||@
  Comment 137 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 56 CMP [rbx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 137 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 144 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B90  <||@
  Comment 150 block B4 null  <||@
  Comment 150 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 66 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 153 68 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 159 block B6 null  <||@
  Comment 159 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 76 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 159 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 167 78 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B89  <||@
  Comment 173 block B8 null  <||@
  Comment 173 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 86 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 176 88 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 182 block B10 null  <||@
  Comment 182 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 98 rax|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 186 100 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}  <||@
  Comment 186 {meta{HotSpotType<Ljava/nio/ByteBuffer;, resolved>}}  <||@
  Comment 196 102 CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 56]) size: QWORD  <||@
  Comment 204 104 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B88  <||@
  Comment 210 block B12 null  <||@
  Comment 210 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 92 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 214 114 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 217 116 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B14  <||@
  Comment 223 block B14 null  <||@
  Comment 223 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 223 126 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 223 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 231 128 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B16 falseDestination: B14 -> B87  <||@
  Comment 237 block B16 null  <||@
  Comment 237 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 120 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 242 138 TEST (x: r11|QWORD[.], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 245 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 251 block B18 null  <||@
  Comment 251 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 164 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}  <||@
  Comment 251 {meta{HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>;compressed}}  <||@
  Comment 259 170 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 263 166 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B86  <||@
  Comment 269 block B19 null  <||@
  Comment 269 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 172 CMP (x: rdx|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 273 174 BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B46  <||@
  Comment 279 block B20 null  <||@
  Comment 279 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 178 rax|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 279 [rbx:0, r10:0, r11:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4               |5               |6             |7               |8               |9          |10  |11 
     locals:  |r11|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 279 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 283 180 CMP (x: rax|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 287 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B45  <||@
  Comment 293 block B21 null  <||@
  Comment 293 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 186 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 298 188 rsi|DWORD = MOVSX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 304 190 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 309 192 BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B44  <||@
  Comment 315 block B22 null  <||@
  Comment 315 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 196 rcx|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 321 198 r9|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 327 200 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 330 202 r9|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 333 204 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 338 206 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 340 208 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29  <||@
  Comment 346 block B29 null  <||@
  Comment 346 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 346 270 rax|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:73]  <||@
  Comment 346 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5               |6             |7               |8               |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |stack:40|DWORD  |rbx|QWORD[.]  |stack:48|DWORD  |stack:36|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 349 272 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 351 274 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B36  <||@
  Comment 357 block B36 null  <||@
  Comment 357 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 336 CMP (x: rax|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 361 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B43  <||@
  Comment 367 block B37 null  <||@
  Comment 367 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 342 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 372 344 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 377 346 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 379 348 JUMP ~[] destination: B37 -> B38  <||@
  Comment 384 block B39 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 384 356 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 384 358 rax|DWORD = MOVSX [r13|QWORD[.] + rsi|DWORD * 2 + 16] size: DWORD  <||@
  Comment 390 360 CMP rax|DWORD y: 128 size: WORD  <||@
  Comment 395 362 BRANCH trueDestinationProbability: 0.9998248648570572 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 401 block B40 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 401 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 366 MOVB (x: [rbx|QWORD[.] + rcx|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 405 368 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 407 370 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 409 372 JUMP ~[] destination: B40 -> B38  <||@
  Comment 409 block B38 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 409 350 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 409 352 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 411 354 BRANCH trueDestinationProbability: 0.963585748524352 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 413 block B42 null  <||@
  Comment 413 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 382 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 416 384 JUMP ~[] destination: B42 -> B47  <||@
  Comment 416 block B47 null  <||@
  Comment 416 432 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 416 434 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 419 436 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 422 438 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 426 440 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 431 442 JUMP ~[] destination: B47 -> B48  <||@
  Comment 431 block B48 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 431 444 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 446 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 435 448 BRANCH trueDestinationProbability: 0.1258914277397759 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B68  <||@
  Comment 441 block B49 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 441 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 452 CMP (x: r8|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 441 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 441 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 445 454 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B49 -> B50 falseDestination: B49 -> B67  <||@
  Comment 451 block B50 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 451 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 458 rax|DWORD = MOVZX [r13|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 457 460 rsi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 462 462 rdx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 467 464 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 473 466 BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B56  <||@
  Comment 479 block B51 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 479 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 470 CMP (x: rdi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 482 472 BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 488 block B52 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 488 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 476 CMP (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD state [bci:109]  <||@
  Comment 488 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 492 478 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 498 block B53 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 498 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 498 482 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 503 484 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 506 486 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 509 488 JUMP ~[] destination: B53 -> B48  <||@
  Comment 511 block B56 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 511 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 514 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 517 516 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 523 block B58 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 523 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 528 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 529 530 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B66  <||@
  Comment 535 block B59 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 535 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 534 rcx|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 540 536 CMP rcx|DWORD y: 3 size: DWORD  <||@
  Comment 543 538 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 549 block B61 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 549 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 550 rcx|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD state [bci:109]  <||@
  Comment 549 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 549 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 552 552 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 555 554 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B65  <||@
  Comment 561 block B62 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 561 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 561 558 rbp|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 565 560 CMP (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 567 562 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 573 block B63 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 573 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 566 rcx|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 578 568 rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD  <||@
  Comment 584 570 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 589 572 rcx|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 594 574 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 597 576 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 603 578 MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 607 580 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 610 582 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 616 584 MOVB (x: [rbx|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 620 586 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 624 588 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 627 590 JUMP ~[] destination: B63 -> B48  <||@
  Comment 632 block B68 null  <||@
  Comment 632 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 632 626 rax|DWORD[.] = MOV [r10|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 632 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 632 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 636 628 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 636 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 636 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 640 630 rax|DWORD = MOVZXB [r10|QWORD[.] + 40] size: DWORD  <||@
  Comment 645 632 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 647 634 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B84  <||@
  Comment 653 block B69 null  <||@
  Comment 653 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 638 rax|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 657 640 rsi|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 36]) size: DWORD  <||@
  Comment 664 642 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 666 644 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 672 block B71 null  <||@
  Comment 672 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 656 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 674 658 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 680 block B73 null  <||@
  Comment 680 668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 670 CMP (x: rsi|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 684 672 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 690 block B75 null  <||@
  Comment 690 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 684 rax|DWORD[.] = MOV [r14|QWORD[.] + 44] size: DWORD state [bci:109]  <||@
  Comment 690 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 690 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 694 686 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:109]  <||@
  Comment 694 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 694 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 698 688 rax|DWORD = MOVZXB [r14|QWORD[.] + 40] size: DWORD  <||@
  Comment 703 690 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 705 692 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B83  <||@
  Comment 711 block B76 null  <||@
  Comment 711 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 696 rax|DWORD = MOV [r14|QWORD[.] + 28] size: DWORD  <||@
  Comment 715 698 rdx|DWORD = SUB (x: r11|DWORD, ~y: [r14|QWORD[.] + 36]) size: DWORD  <||@
  Comment 722 700 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 724 702 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 730 block B78 null  <||@
  Comment 730 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 714 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 732 716 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 738 block B80 null  <||@
  Comment 738 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 728 CMP (x: rdx|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 742 730 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82  <||@
  Comment 748 block B82 null  <||@
  Comment 748 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 742 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 752 744 MOV (x: [r14|QWORD[.] + 24], y: rdx|DWORD) size: DWORD  <||@
  Comment 756 746 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084]  <||@
  Comment 756 {Object[CoderResult@872244084]}  <||@
  Comment 766 748 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 775 12  <||@
  Comment 785 block B30 null  <||@
  Comment 785 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 278 r11|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 788 280 r11|QWORD = ADD (x: r11|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 791 282 r9|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 794 284 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 797 286 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B34  <||@
  Comment 803 block B31 null  <||@
  Comment 803 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 290 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 805 292 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B36 falseDestination: B31 -> B33  <||@
  Comment 816 block B23 null  <||@
  Comment 816 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 212 rbp|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 819 214 rbp|QWORD = ADD (x: rbp|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 822 216 r11|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 825 218 CMP (x: r11|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 828 220 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27  <||@
  Comment 834 block B24 null  <||@
  Comment 834 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 224 CMP (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 836 226 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B29 falseDestination: B24 -> B26  <||@
  Comment 847 block B46 null  <||@
  Comment 847 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 426 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 851 428 r11|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 856 430 JUMP ~[] destination: B46 -> B47  <||@
  Comment 861 block B41 null  <||@
  Comment 861 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 861 376 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 864 378 JUMP ~[] destination: B41 -> B47  <||@
  Comment 869 block B44 null  <||@
  Comment 869 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 402 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 873 404 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 876 406 JUMP ~[] destination: B44 -> B47  <||@
  Comment 881 block B55 null  <||@
  Comment 881 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 500 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 884 502 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 887 504 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 890 506 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 893 508 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143]  <||@
  Comment 893 8  <||@
  Comment 895 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 900 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 901 510 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 910 12  <||@
  Comment 920 block B17 null  <||@
  Comment 920 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 920 144 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 924 146 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 928 148 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 933 150 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 938 152 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 943 154 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]  <||@
  Comment 943 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]}  <||@
  Comment 953 156 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 956 158 rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4]  <||@
  Comment 961 160 JUMP ~[] destination: B17 -> B91  <||@
  Comment 961 block B91 null  <||@
  Comment 961 880 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 961 882 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 968 884 MOV (x: [r15|QWORD + 680], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 975 886 DEOPT info [bci:73]  <||@
  Comment 975 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 980 [rbx:0, r10:0, r13:0, r14:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5         |6             |7          |8          |9          |10  |11 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |rdx|DWORD  |-   |-    <||@
  Comment 981 block B77 null  <||@
  Comment 981 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 981 706 rcx|DWORD = MOVE input: int[-149523|0xfffffffffffdb7ed]  <||@
  Comment 986 710 JUMP ~[] destination: B77 -> B85  <||@
  Comment 986 block B85 null  <||@
  Comment 986 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 986 620 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 991 768 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 998 770 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1005 772 DEOPT info [bci:109]  <||@
  Comment 1005 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1010 [rdx:0, rbx:0, r10:0, r13:0, r14:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4         |5         |6             |7          |8          |9  |10  |11 
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r14|QWORD[.]  |r13|QWORD[.]  |r8|DWORD  |r9|DWORD  |rbx|QWORD[.]  |r11|DWORD  |rdi|DWORD  |-  |-   |-    <||@
  Comment 1011 block B83 null  <||@
  Comment 1011 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 752 rcx|DWORD = MOVE input: int[-148243|0xfffffffffffdbced]  <||@
  Comment 1016 756 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1018 block B72 null  <||@
  Comment 1018 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1018 662 rcx|DWORD = MOVE input: int[-144403|0xfffffffffffdcbed]  <||@
  Comment 1023 666 JUMP ~[] destination: B72 -> B85  <||@
  Comment 1025 block B27 null  <||@
  Comment 1025 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 250 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1029 252 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1034 254 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1039 256 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1039 {Object[d.a@285703510]}  <||@
  Comment 1049 258 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 260 rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5]  <||@
  Comment 1057 262 JUMP ~[] destination: B27 -> B91  <||@
  Comment 1059 block B84 null  <||@
  Comment 1059 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1059 760 rcx|DWORD = MOVE input: int[-142355|0xfffffffffffdd3ed]  <||@
  Comment 1064 764 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1066 block B65 null  <||@
  Comment 1066 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1066 602 rcx|DWORD = MOVE input: int[-132635|0xfffffffffffdf9e5]  <||@
  Comment 1071 606 JUMP ~[] destination: B65 -> B85  <||@
  Comment 1073 block B60 null  <||@
  Comment 1073 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1073 542 rcx|DWORD = MOVE input: int[-131091|0xfffffffffffdffed]  <||@
  Comment 1078 546 JUMP ~[] destination: B60 -> B85  <||@
  Comment 1080 block B33 null  <||@
  Comment 1080 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 300 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1084 302 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1089 304 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1094 306 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1094 {Object[d.a@285703510]}  <||@
  Comment 1104 308 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 310 rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5]  <||@
  Comment 1112 312 JUMP ~[] destination: B33 -> B91  <||@
  Comment 1117 block B57 null  <||@
  Comment 1117 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1117 520 rcx|DWORD = MOVE input: int[-130579|0xfffffffffffe01ed]  <||@
  Comment 1122 524 JUMP ~[] destination: B57 -> B85  <||@
  Comment 1127 block B34 null  <||@
  Comment 1127 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1127 316 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1131 318 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1136 320 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1141 322 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1141 {Object[d.a@285703510]}  <||@
  Comment 1151 324 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 326 rcx|DWORD = MOVE input: int[-121115|0xfffffffffffe26e5]  <||@
  Comment 1159 328 JUMP ~[] destination: B34 -> B91  <||@
  Comment 1164 block B86 null  <||@
  Comment 1164 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1164 778 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1168 780 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1173 782 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1178 784 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1183 786 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]  <||@
  Comment 1183 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1382778746]}  <||@
  Comment 1193 788 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 790 rcx|DWORD = MOVE input: int[-105532|0xfffffffffffe63c4]  <||@
  Comment 1201 792 JUMP ~[] destination: B86 -> B91  <||@
  Comment 1206 block B79 null  <||@
  Comment 1206 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 720 rcx|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 1211 724 JUMP ~[] destination: B79 -> B85  <||@
  Comment 1216 block B64 null  <||@
  Comment 1216 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 594 rcx|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5]  <||@
  Comment 1221 598 JUMP ~[] destination: B64 -> B85  <||@
  Comment 1226 block B87 null  <||@
  Comment 1226 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 796 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1230 798 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1234 800 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1239 802 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1244 804 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1249 806 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285]  <||@
  Comment 1249 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@934476285]}  <||@
  Comment 1259 808 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1262 810 rcx|DWORD = MOVE input: int[-105276|0xfffffffffffe64c4]  <||@
  Comment 1267 812 JUMP ~[] destination: B87 -> B91  <||@
  Comment 1272 block B74 null  <||@
  Comment 1272 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 676 rcx|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed]  <||@
  Comment 1277 680 JUMP ~[] destination: B74 -> B85  <||@
  Comment 1282 block B43 null  <||@
  Comment 1282 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1282 388 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1292 390 rcx|DWORD = MOVE input: int[-113435|0xfffffffffffe44e5]  <||@
  Comment 1297 392 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1301 394 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1306 396 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1311 398 JUMP ~[] destination: B43 -> B91  <||@
  Comment 1316 block B70 null  <||@
  Comment 1316 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 648 rcx|DWORD = MOVE input: int[-144147|0xfffffffffffdcced]  <||@
  Comment 1321 652 JUMP ~[] destination: B70 -> B85  <||@
  Comment 1326 block B45 null  <||@
  Comment 1326 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1326 410 rsi|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1336 412 rcx|DWORD = MOVE input: int[-107291|0xfffffffffffe5ce5]  <||@
  Comment 1341 414 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1345 416 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1350 418 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1355 420 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1360 422 JUMP ~[] destination: B45 -> B91  <||@
  Comment 1365 block B26 null  <||@
  Comment 1365 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1365 234 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1369 236 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1374 238 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1379 240 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@285703510]  <||@
  Comment 1379 {Object[d.a@285703510]}  <||@
  Comment 1389 242 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 244 rcx|DWORD = MOVE input: int[-115995|0xfffffffffffe3ae5]  <||@
  Comment 1397 246 JUMP ~[] destination: B26 -> B91  <||@
  Comment 1402 block B54 null  <||@
  Comment 1402 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 492 rcx|DWORD = MOVE input: int[-128283|0xfffffffffffe0ae5]  <||@
  Comment 1407 496 JUMP ~[] destination: B54 -> B85  <||@
  Comment 1412 block B81 null  <||@
  Comment 1412 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1412 734 rcx|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed]  <||@
  Comment 1417 738 JUMP ~[] destination: B81 -> B85  <||@
  Comment 1422 block B88 null  <||@
  Comment 1422 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 816 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1426 818 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1430 820 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1435 822 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1440 824 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1445 826 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1449 828 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221]  <||@
  Comment 1449 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@328156221]}  <||@
  Comment 1459 830 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 832 rcx|DWORD = MOVE input: int[-104252|0xfffffffffffe68c4]  <||@
  Comment 1467 834 JUMP ~[] destination: B88 -> B91  <||@
  Comment 1472 block B89 null  <||@
  Comment 1472 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 838 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1476 840 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1480 842 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1485 844 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1490 846 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1495 848 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1499 850 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835]  <||@
  Comment 1499 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1539975835]}  <||@
  Comment 1509 852 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1512 854 rcx|DWORD = MOVE input: int[-103228|0xfffffffffffe6cc4]  <||@
  Comment 1517 856 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1522 block B66 null  <||@
  Comment 1522 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 610 rcx|DWORD = MOVE input: int[-130835|0xfffffffffffe00ed]  <||@
  Comment 1527 614 JUMP ~[] destination: B66 -> B85  <||@
  Comment 1532 block B90 null  <||@
  Comment 1532 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1532 860 rdx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1536 862 rdi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1540 864 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1545 866 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1550 868 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1555 870 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1559 872 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015]  <||@
  Comment 1559 {Object[OnStackReplacementPhase.OSRLocalSpeculationReason@1427384015]}  <||@
  Comment 1569 874 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 876 rcx|DWORD = MOVE input: int[-102204|0xfffffffffffe70c4]  <||@
  Comment 1577 878 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1582 block B67 null  <||@
  Comment 1582 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1582 618 rcx|DWORD = MOVE input: int[-124699|0xfffffffffffe18e5]  <||@
  Comment 1587 622 JUMP ~[] destination: B67 -> B85  <||@
  Comment 1592 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1592 4  <||@
  Comment 1598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1598 5  <||@
  HexCodeFile>>> <|@
end_nmethod
