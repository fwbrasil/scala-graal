begin_compilation
  name " HotSpotCompilation-2961[java.lang.StringBuilder.toString()]"
  method "HotSpotCompilation-2961[java.lang.StringBuilder.toString()]"
  date 1526687581431
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a640 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a640  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v648 v649 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
=== Succesors ===
next: v693 
=== Usages ===
v651 v693 v650 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v648 #next: v693  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 407
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v171 a257 a303 a194 v693 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a640 
=== Succesors ===
next: i641 
=== Usages ===
=== Predecessor ===
a640 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a640 #next: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
=== Succesors ===
next: v15 
=== Usages ===
j349 v12 v16 i25 a257 v124 i146 v280 i233 v242 
=== Predecessor ===
v693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v649 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 a194 i233 a303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i641 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v213 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j319 
index: - 
=== Succesors ===
=== Usages ===
j323 j219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j319 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a194 a303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a194 a303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j335 j343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 v16 v26 v333 a257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.09311697510464179
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i5 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i641 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v78 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14611
stableDimension: 0
stamp: i32 [-14611] ⇊00000000ffffc6ed ⇈00000000ffffc6ed
stampKind: i32
value: int[-14611|0xffffffffffffc6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: j181 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j201 
=== Usages ===
v653 v654 
=== Predecessor ===
v76 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j201  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j181 
index: - 
=== Succesors ===
=== Usages ===
j201 v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j181 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
=== Succesors ===
next: j202 
=== Usages ===
j335 j207 v671 
=== Predecessor ===
j181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 #next: j202  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j181 
index: - 
=== Succesors ===
=== Usages ===
j202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j181 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
=== Succesors ===
next: v189 
=== Usages ===
v186 
=== Predecessor ===
j201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v654 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j201 
y: j334 
=== Succesors ===
=== Usages ===
v186 v203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j201 y: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j202 
y: j335 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j202 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
j202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v187 #falseSuccessor: v188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4561727748314938017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a194 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a194 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v179 i192 i11 
=== Succesors ===
next: j195 
=== Usages ===
j195 
=== Predecessor ===
v187 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v179 i192 i11 #next: j195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a194 
=== Succesors ===
next: v208 
=== Usages ===
j207 
=== Predecessor ===
a194 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a194 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
j195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591307108001393747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
value: j335 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v653 value: j335 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v671 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v671 #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j207 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v205 
values: j201 j195 
=== Succesors ===
=== Usages ===
v656 v655 a87 v672 v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v205 values: j201 j195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v206 v208 
=== Succesors ===
next: a87 
=== Usages ===
j207 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v206 v208 #next: a87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j207 
=== Succesors ===
next: j219 
=== Usages ===
a93 
=== Predecessor ===
v205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j207 #next: j219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v220 
=== Usages ===
v220 
=== Predecessor ===
a87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
value: j219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
j219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 value: j219 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
value: v339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 value: v339 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
value: a105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 value: a105 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a93 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v673 value: i5 stateAfter: - lastLocationAccess: - #next: a93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a93 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a87 
=== Succesors ===
next: v94 
=== Usages ===
v38 
=== Predecessor ===
v230 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a87 #next: v94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a93 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a93 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a93 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i642 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i642  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a640 
=== Succesors ===
=== Usages ===
i642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
=== Succesors ===
next: v83 
=== Usages ===
i25 i146 v124 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v650 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32
=== Inputs ===
x: i642 
y: i641 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i642 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i5 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v82 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-18187 - -14611] ⇊00000000ffff80e5 ⇈00000000fffffefd
valueDescription: i32
=== Inputs ===
merge: v165 
values: i173 i175 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v165 values: i173 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v174 
=== Succesors ===
next: v171 
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v174 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i169 
speculation: a168 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i169 speculation: a168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: j236 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
v657 v658 
=== Predecessor ===
v80 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
j277 v279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
=== Succesors ===
next: j278 
=== Usages ===
j240 v659 v660 a256 v665 v661 v662 v663 v664 
=== Predecessor ===
j236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v657 #next: j278  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
=== Succesors ===
next: v245 
=== Usages ===
v246 
=== Predecessor ===
j277 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v658 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i241 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i641 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 v360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
j278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v244 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605526848040653670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i641 
y: i11 
=== Succesors ===
=== Usages ===
i265 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i641 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i233 
y: i264 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i233 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i265 
y: i234 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i265 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
j240 v661 v662 v663 v664 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i235  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i64
=== Inputs ===
x: j239 
y: j277 
=== Succesors ===
=== Usages ===
v246 v279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j239 y: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j240 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j240  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v251 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575858664018094887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605453331755699897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
value: j240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 value: j240 stateAfter: - lastLocationAccess: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v661 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v661 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v662 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v662 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v663 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v663 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v664 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v664 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
value: i641 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v659 value: i641 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
value: j232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 value: j232 stateAfter: - lastLocationAccess: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
value: v342 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v665 value: v342 stateAfter: - lastLocationAccess: - #next: v255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a256 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j277 
=== Succesors ===
next: v258 
=== Usages ===
a261 
=== Predecessor ===
v255 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j277 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
a256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591199201547944708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591787331827574889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v249 
=== Succesors ===
next: a257 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v249 #next: a257  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a257 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v231 i641 i5 
=== Succesors ===
next: v260 
=== Usages ===
a261 
=== Predecessor ===
v248 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v231 i641 i5 #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
a257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v259 
values: a256 a257 
=== Succesors ===
=== Usages ===
v677 a151 v652 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v259 values: a256 a257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 
=== Succesors ===
next: v490 
=== Usages ===
a261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v363 
=== Usages ===
j491 j493 
=== Predecessor ===
v259 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i642 
y: i641 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i642 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v124 
trueValue: i642 
falseValue: i641 
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v124 trueValue: i642 falseValue: i641  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j555 v677 j354 v360 v487 j537 j543 j547 j551 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j350 
y: j232 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j350 y: j232  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j555 j606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j510 j573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j551 j603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j547 j600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j585 j527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j543 j597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j591 j535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j537 j592 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j586 v538 j580 v593 j520 j528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B35" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a261 
index: - 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a261 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v490 
address: v652 
=== Succesors ===
=== Usages ===
v678 v680 v682 v684 v686 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v490 address: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a640 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a640  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v490 
address: v651 
=== Succesors ===
=== Usages ===
v679 v681 v683 v685 v687 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v490 address: v651  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j350 
y: j536 
=== Succesors ===
=== Usages ===
v538 v540 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j537 
y: j85 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j537 y: j85  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v364 #falseSuccessor: v365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B59" 
    successors "B22" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v368 
values: j85 j535 
=== Succesors ===
=== Usages ===
v687 j535 v686 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v368 values: j85 j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v367 
=== Succesors ===
next: v643 
=== Usages ===
v643 v372 v373 j528 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v367 #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j528 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v368 
address: v687 
=== Succesors ===
next: v624 
=== Usages ===
v624 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v368 address: v687 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j528 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
value: v643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v686 value: v643 stateAfter: - lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j528 
y: j50 
=== Succesors ===
=== Usages ===
j520 j528 v540 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j528 y: j50  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j537 
y: j535 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j537 y: j535  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v368 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v368 #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j520 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v377 
values: j85 j535 
=== Succesors ===
=== Usages ===
v685 j527 j511 v544 v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v377 values: j85 j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v376 v378 
=== Succesors ===
next: v400 
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v376 v378 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j350 
y: j542 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j542  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j543 
y: j520 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j543 y: j520  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v399 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
v644 
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j520 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v398 
address: v685 
=== Succesors ===
next: v622 
=== Usages ===
v622 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v398 address: v685 #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j520 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
value: v644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v684 value: v644 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j520 
y: j222 
=== Succesors ===
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j520 y: j222  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v388 
values: j527 j520 
=== Succesors ===
=== Usages ===
v683 j519 j503 v548 v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: j527 j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v403 
=== Succesors ===
next: v406 
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v403 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j350 
y: j546 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j511 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j547 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
v645 
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j511 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v404 
address: v683 
=== Succesors ===
next: v620 
=== Usages ===
v620 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v404 address: v683 #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j511 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
value: v645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v682 value: v645 stateAfter: - lastLocationAccess: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j511 
y: j518 
=== Succesors ===
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v392 
values: j519 j511 
=== Succesors ===
=== Usages ===
v681 j510 j494 v552 v680 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: j519 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v391 v409 
=== Succesors ===
next: v412 
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v391 v409 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid j551 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j350 
y: j550 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j550  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j551 
y: j503 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j551 y: j503  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v411 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
v646 
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j503 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v410 
address: v681 
=== Succesors ===
next: v618 
=== Usages ===
v618 
=== Predecessor ===
v410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v410 address: v681 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j503 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
value: v646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v680 value: v646 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j503 
y: j496 
=== Succesors ===
=== Usages ===
j494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v395 
values: j510 j503 
=== Succesors ===
=== Usages ===
v679 v556 v678 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: j510 j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v415 
=== Succesors ===
next: v418 
=== Usages ===
j494 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v415 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j350 
y: j554 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j555 
y: j494 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j555 y: j494  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v417 #falseSuccessor: v416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i647 
=== Usages ===
i647 
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i647  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j494 
=== Succesors ===
=== Usages ===
i647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i647 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v416 
address: v679 
=== Succesors ===
next: v616 
=== Usages ===
v616 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v416 address: v679 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j494 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
value: i647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
i647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v678 value: i647 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B17" "B34" "B33" 
    successors "B36" "B54" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v380 v397 v421 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v380 v397 v421 #next: v559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v428 
=== Usages ===
j561 
=== Predecessor ===
v381 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i641 
=== Succesors ===
=== Usages ===
j354 v487 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j350 
y: j349 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j350 y: j349  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v427 #falseSuccessor: v426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a261 
index: j350 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a261 index: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v559 
address: v677 
=== Succesors ===
=== Usages ===
v688 v689 v690 v691 v692 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v559 address: v677  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j349 
y: j350 
=== Succesors ===
=== Usages ===
j606 j592 j597 j600 j603 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j349 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j354 
y: j536 
=== Succesors ===
=== Usages ===
v593 v595 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j592 
y: j85 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j592 y: j85  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v429 #falseSuccessor: v430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B53" 
    successors "B40" "B53" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j586 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v433 
values: j85 j591 
=== Succesors ===
=== Usages ===
v692 j591 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v433 values: j85 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v432 
=== Succesors ===
next: v634 
=== Usages ===
j586 v436 v437 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v432 #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j586 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v692 
value: v635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v692 value: v635 stateAfter: - lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid j591 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j586 
y: j50 
=== Succesors ===
=== Usages ===
j580 j586 v595 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j586 y: j50  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j592 
y: j591 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j592 y: j591  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v595 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v595 #trueSuccessor: v436 #falseSuccessor: v438  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v433 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v433 #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j580 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v441 
values: j85 j591 
=== Succesors ===
=== Usages ===
v691 j585 j574 v598 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v441 values: j85 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v442 
=== Succesors ===
next: v463 
=== Usages ===
j580 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v442 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid j597 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j354 
y: j542 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j542  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j597 
y: j580 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j597 y: j580  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v461 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v462 #falseSuccessor: v461  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j580 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j580  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
value: v639 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 value: v639 stateAfter: - lastLocationAccess: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j580 
y: j222 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j580 y: j222  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v452 
values: j585 j580 
=== Succesors ===
=== Usages ===
v690 j579 j568 v601 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v452 values: j585 j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v466 
=== Succesors ===
next: v469 
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v466 #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j354 
y: j546 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j600 
y: j574 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j600 y: j574  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v601 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v601 #trueSuccessor: v468 #falseSuccessor: v467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j574 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v690 
value: v638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v690 value: v638 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j574 
y: j518 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j574 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j579 j574 
=== Succesors ===
=== Usages ===
v689 j573 j562 v604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j579 j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v472 
=== Succesors ===
next: v475 
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v472 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid j603 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j354 
y: j550 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j550  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j603 
y: j568 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j603 y: j568  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v474 #falseSuccessor: v473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j568 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
value: v637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v689 value: v637 stateAfter: - lastLocationAccess: - #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j568 
y: j496 
=== Succesors ===
=== Usages ===
j562 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j568 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j562 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v458 
values: j573 j568 
=== Succesors ===
=== Usages ===
v688 v607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v458 values: j573 j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v457 v478 
=== Succesors ===
next: v481 
=== Usages ===
j562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v457 v478 #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j354 
y: j554 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j606 
y: j562 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j606 y: j562  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v607 
=== Succesors ===
trueSuccessor: v480 
falseSuccessor: v479 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v607 #trueSuccessor: v480 #falseSuccessor: v479  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j562 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j562  <|@  <|@
f <@~|@floating>@ <|@
tid i636 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
value: i636 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v688 value: i636 stateAfter: - lastLocationAccess: - #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v433 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B52" "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v444 v460 v484 
=== Succesors ===
next: a151 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v444 v460 v484 #next: a151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a261 
=== Succesors ===
next: j292 
=== Usages ===
a100 
=== Predecessor ===
v445 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a261 #next: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j307 
=== Usages ===
v666 v667 
=== Predecessor ===
a151 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j307  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
j307 v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
=== Succesors ===
next: j308 
=== Usages ===
j343 j313 v674 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v666 #next: j308  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
=== Succesors ===
next: v300 
=== Usages ===
v297 
=== Predecessor ===
j307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v667 #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid j343 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j307 
y: j334 
=== Succesors ===
=== Usages ===
v297 v309 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j307 y: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j308 
y: j343 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j308 y: j343  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v298 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
j308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v298 #falseSuccessor: v299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576381446488877269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a303 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v179 i192 i11 
=== Succesors ===
next: j304 
=== Usages ===
j304 
=== Predecessor ===
v298 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v179 i192 i11 #next: j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j304 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a303 
=== Succesors ===
next: v314 
=== Usages ===
j313 
=== Predecessor ===
a303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a303 #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
j304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4606262010890191395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
value: j343 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v666 value: j343 stateAfter: - lastLocationAccess: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j307 
index: - 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v674 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v674 #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v311 
values: j307 j304 
=== Succesors ===
=== Usages ===
v670 v669 a97 v675 v676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: j307 j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v312 v314 
=== Succesors ===
next: a97 
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v312 v314 #next: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j313 
=== Succesors ===
next: j323 
=== Usages ===
a103 
=== Predecessor ===
v311 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j313 #next: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v324 
=== Usages ===
v324 
=== Predecessor ===
a97 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
value: j323 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
j323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v669 value: j323 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
value: v339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v670 value: v339 stateAfter: - lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a100 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a151 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
value: a100 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v675 value: a100 stateAfter: - lastLocationAccess: - #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v676 value: i5 stateAfter: - lastLocationAccess: - #next: a103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a97 
=== Succesors ===
next: v104 
=== Usages ===
v39 
=== Predecessor ===
v333 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a97 #next: v104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a103 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a103 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a103 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v368 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v368  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a640 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a640  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v648 v649 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a640 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
=== Succesors ===
next: v693 
=== Usages ===
v651 v693 v650 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v648 #next: v693  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 407
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v171 a257 a303 a194 v693 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a640 
=== Succesors ===
next: i641 
=== Usages ===
=== Predecessor ===
a640 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a640 #next: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i641 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
=== Succesors ===
next: v15 
=== Usages ===
j349 v12 v16 i25 a257 v124 i146 v280 i233 v242 
=== Predecessor ===
v693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v649 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 a194 i233 a303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i641 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v213 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
result [v3|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j319 
index: - 
=== Succesors ===
=== Usages ===
j323 j219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j319 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a194 a303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a194 a303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j335 j343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 v16 v26 v333 a257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.09311697510464179
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
i641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cf443fa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v1|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i5 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i641 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v78 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result int[-14611|0xffffffffffffc6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14611
stableDimension: 0
stamp: i32 [-14611] ⇊00000000ffffc6ed ⇈00000000ffffc6ed
stampKind: i32
value: int[-14611|0xffffffffffffc6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14611|0xffffffffffffc6ed]] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: j181 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j181 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j201 
=== Usages ===
v653 v654 
=== Predecessor ===
v76 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j201  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j181 
index: - 
=== Succesors ===
=== Usages ===
j201 v203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j181 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
=== Succesors ===
next: j202 
=== Usages ===
j335 j207 v671 
=== Predecessor ===
j181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 #next: j202  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j181 
index: - 
=== Succesors ===
=== Usages ===
j202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j181 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j202 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
=== Succesors ===
next: v189 
=== Usages ===
v186 
=== Predecessor ===
j201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v654 #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j201 
y: j334 
=== Succesors ===
=== Usages ===
v186 v203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j201 y: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j202 
y: j335 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j202 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
j202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v187 #falseSuccessor: v188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4561727748314938017
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a194 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a194 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v179 i192 i11 
=== Succesors ===
next: j195 
=== Usages ===
j195 
=== Predecessor ===
v187 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v179 i192 i11 #next: j195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j195 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a194 
=== Succesors ===
next: v208 
=== Usages ===
j207 
=== Predecessor ===
a194 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a194 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
j195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591307108001393747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
value: j335 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v653 value: j335 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result [v5|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v671 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v671 #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j207 <|@
result v8|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v205 
values: j201 j195 
=== Succesors ===
=== Usages ===
v656 v655 a87 v672 v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v205 values: j201 j195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v206 v208 
=== Succesors ===
next: a87 
=== Usages ===
j207 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v206 v208 #next: a87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j207 
=== Succesors ===
next: j219 
=== Usages ===
a93 
=== Predecessor ===
v205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j207 #next: j219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j219 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v220 
=== Usages ===
v220 
=== Predecessor ===
a87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
result [v8|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
value: j219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
j219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 value: j219 stateAfter: - lastLocationAccess: - #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result [v8|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
value: v339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 value: v339 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
result [v8|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
value: a105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 value: a105 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
result [v8|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j207 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a93 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v673 value: i5 stateAfter: - lastLocationAccess: - #next: a93  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a93 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a87 
=== Succesors ===
next: v94 
=== Usages ===
v38 
=== Predecessor ===
v230 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a87 #next: v94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a93 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a93 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a93 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE v8|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*]], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i642 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i642  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a640 
=== Succesors ===
=== Usages ===
i642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i642 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
=== Succesors ===
next: v83 
=== Usages ===
i25 i146 v124 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v650 #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32
=== Inputs ===
x: i642 
y: i641 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i642 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i5 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v82 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result int[-17171|0xffffffffffffbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17171
stableDimension: 0
stamp: i32 [-17171] ⇊00000000ffffbced ⇈00000000ffffbced
stampKind: i32
value: int[-17171|0xffffffffffffbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17171|0xffffffffffffbced]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i169 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-18187 - -14611] ⇊00000000ffff80e5 ⇈00000000fffffefd
valueDescription: i32
=== Inputs ===
merge: v165 
values: i173 i175 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v165 values: i173 i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v174 
=== Succesors ===
next: v171 
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v174 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a168 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i169 
speculation: a168 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i169 speculation: a168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: j236 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
v657 v658 
=== Predecessor ===
v80 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
j277 v279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
=== Succesors ===
next: j278 
=== Usages ===
j240 v659 v660 a256 v665 v661 v662 v663 v664 
=== Predecessor ===
j236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v657 #next: j278  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j236 
index: - 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
=== Succesors ===
next: v245 
=== Usages ===
v246 
=== Predecessor ===
j277 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v658 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i641 
y: i241 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i641 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j232 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 v360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
j278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v244 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605526848040653670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i641 
y: i11 
=== Succesors ===
=== Usages ===
i265 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i641 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i233 
y: i264 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i233 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i265 
y: i234 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i265 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid j239 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i235 
=== Succesors ===
=== Usages ===
j240 v661 v662 v663 v664 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i235  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: i64
=== Inputs ===
x: j239 
y: j277 
=== Succesors ===
=== Usages ===
v246 v279 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j239 y: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j240 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j240  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v251 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v16|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND v17|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575858664018094887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605453331755699897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
value: j240 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 value: j240 stateAfter: - lastLocationAccess: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
result [v19|QWORD + v14|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v661 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v661 #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result [v19|QWORD + v14|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v662 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v662 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result [v19|QWORD + v14|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v663 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v663 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
result [v19|QWORD + v14|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j239 
index: j277 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j239 index: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
address: v664 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v664 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result [v14|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
value: i641 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v659 value: i641 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
value: j232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 value: j232 stateAfter: - lastLocationAccess: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result [v14|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
value: v342 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v665 value: v342 stateAfter: - lastLocationAccess: - #next: v255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: a256 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a256  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a256 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j277 
=== Succesors ===
next: v258 
=== Usages ===
a261 
=== Predecessor ===
v255 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j277 #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
a256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591199201547944708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591787331827574889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v249 
=== Succesors ===
next: a257 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v249 #next: a257  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a257 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v231 i641 i5 
=== Succesors ===
next: v260 
=== Usages ===
a261 
=== Predecessor ===
v248 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v231 i641 i5 #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
a257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a261 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v259 
values: a256 a257 
=== Succesors ===
=== Usages ===
v677 a151 v652 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v259 values: a256 a257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 
=== Succesors ===
next: v490 
=== Usages ===
a261 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v363 
=== Usages ===
j491 j493 
=== Predecessor ===
v259 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i642 
y: i641 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i642 y: i641  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v124 
trueValue: i642 
falseValue: i641 
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v124 trueValue: i642 falseValue: i641  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
j555 v677 j354 v360 v487 j537 j543 j547 j551 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j350 
y: j232 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j350 y: j232  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j555 j606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j510 j573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j551 j603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j547 j600 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j585 j527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j543 j597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j50 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j591 j535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j536 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j537 j592 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j586 v538 j580 v593 j520 j528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v361 #falseSuccessor: v362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v11|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B35" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result [v24|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a261 
index: - 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a261 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v490 
address: v652 
=== Succesors ===
=== Usages ===
v678 v680 v682 v684 v686 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v490 address: v652  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a640 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a640  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result v28|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v490 
address: v651 
=== Succesors ===
=== Usages ===
v679 v681 v683 v685 v687 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v490 address: v651  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j350 
y: j536 
=== Succesors ===
=== Usages ===
v538 v540 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j537 
y: j85 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j537 y: j85  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v364 
falseSuccessor: v365 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v364 #falseSuccessor: v365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v24|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v1|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v367 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v367  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B59" 
    successors "B22" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j528 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v368 
values: j85 j535 
=== Succesors ===
=== Usages ===
v687 j535 v686 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v368 values: j85 j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v367 
=== Succesors ===
next: v643 
=== Usages ===
v643 v372 v373 j528 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v367 #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
result [v28|QWORD[*] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j528 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
result v31|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v368 
address: v687 
=== Succesors ===
next: v624 
=== Usages ===
v624 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v368 address: v687 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
result [v27|QWORD[.] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j528 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
value: v643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v686 value: v643 stateAfter: - lastLocationAccess: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j528 
y: j50 
=== Succesors ===
=== Usages ===
j520 j528 v540 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j528 y: j50  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j537 
y: j535 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j537 y: j535  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V256_WORD = H [v28|QWORD[*] + v30|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v30|QWORD * 2], input: v31|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v30|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v368 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v368 #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j520 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v377 
values: j85 j535 
=== Succesors ===
=== Usages ===
v685 j527 j511 v544 v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v377 values: j85 j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v376 v378 
=== Succesors ===
next: v400 
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v376 v378 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j350 
y: j542 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j542  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j543 
y: j520 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j543 y: j520  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v399 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
v644 
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
result [v28|QWORD[*] + v33|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j520 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
result v35|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v398 
address: v685 
=== Succesors ===
next: v622 
=== Usages ===
v622 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v398 address: v685 #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
result [v27|QWORD[.] + v33|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j520 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
value: v644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v684 value: v644 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j520 
y: j222 
=== Succesors ===
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j520 y: j222  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V128_WORD = H [v28|QWORD[*] + v33|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v33|QWORD * 2], input: v35|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j511 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v388 
values: j527 j520 
=== Succesors ===
=== Usages ===
v683 j519 j503 v548 v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: j527 j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v403 
=== Succesors ===
next: v406 
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v403 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j350 
y: j546 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j511 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j547 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
v645 
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
result [v28|QWORD[*] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j511 
=== Succesors ===
=== Usages ===
v645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v645 <|@
result v39|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v404 
address: v683 
=== Succesors ===
next: v620 
=== Usages ===
v620 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v404 address: v683 #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
result [v27|QWORD[.] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j511 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
value: v645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v645 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v682 value: v645 stateAfter: - lastLocationAccess: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j511 
y: j518 
=== Succesors ===
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V64_WORD = H [v28|QWORD[*] + v37|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v37|QWORD * 2], input: v39|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j503 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v392 
values: j519 j511 
=== Succesors ===
=== Usages ===
v681 j510 j494 v552 v680 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: j519 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v391 v409 
=== Succesors ===
next: v412 
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v391 v409 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid j551 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j350 
y: j550 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j550  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j551 
y: j503 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j551 y: j503  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v411 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
v646 
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
result [v28|QWORD[*] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j503 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
result v43|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v410 
address: v681 
=== Succesors ===
next: v618 
=== Usages ===
v618 
=== Predecessor ===
v410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v410 address: v681 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
result [v27|QWORD[.] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j503 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
value: v646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v680 value: v646 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j503 
y: j496 
=== Succesors ===
=== Usages ===
j494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V32_WORD = H [v28|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v41|QWORD * 2], input: v43|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j494 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v395 
values: j510 j503 
=== Succesors ===
=== Usages ===
v679 v556 v678 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: j510 j503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v415 
=== Succesors ===
next: v418 
=== Usages ===
j494 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v415 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j350 
y: j554 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j555 
y: j494 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j555 y: j494  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v417 #falseSuccessor: v416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i647 
=== Usages ===
i647 
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i647  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
result [v28|QWORD[*] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j491 
index: j494 
=== Succesors ===
=== Usages ===
i647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i647 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v416 
address: v679 
=== Succesors ===
next: v616 
=== Usages ===
v616 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v416 address: v679 #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
result [v27|QWORD[.] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j493 
index: j494 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
value: i647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
i647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v678 value: i647 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSX [v28|QWORD[*] + v45|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v45|QWORD * 2], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B17" "B34" "B33" 
    successors "B36" "B54" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v380 v397 v421 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v380 v397 v421 #next: v559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v428 
=== Usages ===
j561 
=== Predecessor ===
v381 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i641 
=== Succesors ===
=== Usages ===
j354 v487 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i641  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j350 
y: j349 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j350 y: j349  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v426 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v427 #falseSuccessor: v426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
result [v24|QWORD[.] + v26|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a261 
index: j350 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a261 index: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v559 
address: v677 
=== Succesors ===
=== Usages ===
v688 v689 v690 v691 v692 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v559 address: v677  <|@  <|@
f <@~|@floating>@ <|@
tid j354 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j349 
y: j350 
=== Succesors ===
=== Usages ===
j606 j592 j597 j600 j603 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j349 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j354 
y: j536 
=== Succesors ===
=== Usages ===
v593 v595 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j592 
y: j85 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j592 y: j85  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v429 #falseSuccessor: v430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LEA [v24|QWORD[.] + v26|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v48|QWORD, ~y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result v52|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B53" 
    successors "B40" "B53" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j586 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v433 
values: j85 j591 
=== Succesors ===
=== Usages ===
v692 j591 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v433 values: j85 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v432 
=== Succesors ===
next: v634 
=== Usages ===
j586 v436 v437 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v432 #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
result [v49|QWORD[.] + v53|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j586 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v692 
value: v635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v692 value: v635 stateAfter: - lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid j591 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j586 
y: j50 
=== Succesors ===
=== Usages ===
j580 j586 v595 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j586 y: j50  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j592 
y: j591 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j592 y: j591  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v595 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v595 #trueSuccessor: v436 #falseSuccessor: v438  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v53|QWORD * 2], input: v52|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v433 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v433 #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j580 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v441 
values: j85 j591 
=== Succesors ===
=== Usages ===
v691 j585 j574 v598 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v441 values: j85 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v442 
=== Succesors ===
next: v463 
=== Usages ===
j580 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v442 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid j597 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j354 
y: j542 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j542  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j597 
y: j580 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j597 y: j580  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v461 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v462 #falseSuccessor: v461  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
result [v49|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j580 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j580  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
result v57|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v691 
value: v639 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v691 value: v639 stateAfter: - lastLocationAccess: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j580 
y: j222 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j580 y: j222  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v55|QWORD * 2], input: v57|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j574 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v452 
values: j585 j580 
=== Succesors ===
=== Usages ===
v690 j579 j568 v601 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v452 values: j585 j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v451 v466 
=== Succesors ===
next: v469 
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v451 v466 #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid j600 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j354 
y: j546 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j600 
y: j574 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j600 y: j574  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v601 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v601 #trueSuccessor: v468 #falseSuccessor: v467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
result [v49|QWORD[.] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j574 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
result v61|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v690 
value: v638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v690 value: v638 stateAfter: - lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j574 
y: j518 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j574 y: j518  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
v631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v59|QWORD * 2], input: v61|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j568 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v455 
values: j579 j574 
=== Succesors ===
=== Usages ===
v689 j573 j562 v604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v455 values: j579 j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v472 
=== Succesors ===
next: v475 
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v472 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid j603 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j354 
y: j550 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j550  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j603 
y: j568 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j603 y: j568  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v474 #falseSuccessor: v473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v689 <|@
result [v49|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j568 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
result v65|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v689 
value: v637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v689 value: v637 stateAfter: - lastLocationAccess: - #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j568 
y: j496 
=== Succesors ===
=== Usages ===
j562 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j568 y: j496  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v63|QWORD * 2], input: v65|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j562 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v458 
values: j573 j568 
=== Succesors ===
=== Usages ===
v688 v607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v458 values: j573 j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v457 v478 
=== Succesors ===
next: v481 
=== Usages ===
j562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v457 v478 #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid j606 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j354 
y: j554 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j354 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j606 
y: j562 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j606 y: j562  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v607 
=== Succesors ===
trueSuccessor: v480 
falseSuccessor: v479 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v607 #trueSuccessor: v480 #falseSuccessor: v479  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v480 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
result [v49|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j561 
index: j562 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: j562  <|@  <|@
f <@~|@floating>@ <|@
tid i636 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v688 
value: i636 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v688 value: i636 stateAfter: - lastLocationAccess: - #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + v67|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v433 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B53 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B52" "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v444 v460 v484 
=== Succesors ===
next: a151 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v444 v460 v484 #next: a151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a151 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a261 
=== Succesors ===
next: j292 
=== Usages ===
a100 
=== Predecessor ===
v445 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a261 #next: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j307 
=== Usages ===
v666 v667 
=== Predecessor ===
a151 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j307  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
j307 v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j307 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
=== Succesors ===
next: j308 
=== Usages ===
j343 j313 v674 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v666 #next: j308  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j308 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
=== Succesors ===
next: v300 
=== Usages ===
v297 
=== Predecessor ===
j307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v667 #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid j343 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j307 
y: j334 
=== Succesors ===
=== Usages ===
v297 v309 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j307 y: j334  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j308 
y: j343 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j308 y: j343  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v298 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
j308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v298 #falseSuccessor: v299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576381446488877269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a303 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v179 i192 i11 
=== Succesors ===
next: j304 
=== Usages ===
j304 
=== Predecessor ===
v298 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v179 i192 i11 #next: j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j304 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a303 
=== Succesors ===
next: v314 
=== Usages ===
j313 
=== Predecessor ===
a303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a303 #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
j304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4606262010890191395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v666 
value: j343 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v666 value: j343 stateAfter: - lastLocationAccess: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result [v69|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j307 
index: - 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v674 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v674 #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j313 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v311 
values: j307 j304 
=== Succesors ===
=== Usages ===
v670 v669 a97 v675 v676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: j307 j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v312 v314 
=== Succesors ===
next: a97 
=== Usages ===
j313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v312 v314 #next: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j313 
=== Succesors ===
next: j323 
=== Usages ===
a103 
=== Predecessor ===
v311 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j313 #next: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
=== Succesors ===
next: v324 
=== Usages ===
v324 
=== Predecessor ===
a97 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v668 #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
result [v72|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
value: j323 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
j323 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v669 value: j323 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
result [v72|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
value: v339 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v670 value: v339 stateAfter: - lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
result [v72|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a100 <|@
result v75|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a151 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
value: a100 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v675 value: a100 stateAfter: - lastLocationAccess: - #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
result [v72|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j313 
index: - 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v676 value: i5 stateAfter: - lastLocationAccess: - #next: a103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a97 
=== Succesors ===
next: v104 
=== Usages ===
v39 
=== Predecessor ===
v333 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a97 #next: v104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a103 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a103 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a103 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE v72|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*]], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v72|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v75|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1855c93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 12], y: v75|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v368 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B59 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cf443fa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v1|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605526848040653670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v16|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND v17|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605453331755699897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v11|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v24|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v1|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V128_WORD = H [v28|QWORD[*] + v33|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v33|QWORD * 2], input: v35|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V64_WORD = H [v28|QWORD[*] + v37|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v37|QWORD * 2], input: v39|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V32_WORD = H [v28|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v41|QWORD * 2], input: v43|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSX [v28|QWORD[*] + v45|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v45|QWORD * 2], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B17" "B34" "B33" 
    successors "B36" "B54" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B52" "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4606262010890191395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE v72|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*]], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v72|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v75|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1855c93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 12], y: v75|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B35" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LEA [v24|QWORD[.] + v26|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v48|QWORD, ~y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v55|QWORD * 2], input: v57|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v59|QWORD * 2], input: v61|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v63|QWORD * 2], input: v65|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + v67|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B59 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B59" 
    successors "B22" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V256_WORD = H [v28|QWORD[*] + v30|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v30|QWORD * 2], input: v31|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v30|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B53 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B53" 
    successors "B40" "B53" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v53|QWORD * 2], input: v52|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591307108001393747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE v8|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v3|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*]], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v8|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591199201547944708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591787331827574889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576381446488877269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575858664018094887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4561727748314938017
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17171|0xffffffffffffbced]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14611|0xffffffffffffc6ed]] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #41         // java.lang.String
     3: dup           
     4: aload_0       
     5: getfield      #40         // java.lang.AbstractStringBuilder.value:char[]
     8: iconst_0      
     9: aload_0       
    10: getfield      #41         // java.lang.AbstractStringBuilder.count:int
    13: invokespecial #42         // java.lang.String.<init>:(char[], int, int)void
    16: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cf443fa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" "B14" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605526848040653670
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rdx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605453331755699897
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  154  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  160  <|@ instruction MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  224  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  226  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  228  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  264  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  276  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  278  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  300  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  302  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  304  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  324  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  326  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B17" "B34" "B33" 
    successors "B36" "B54" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  356  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B52" "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4606262010890191395
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  538  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1855c93 encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B35" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B17 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  368  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  416  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  420  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  440  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  444  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  464  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B59 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B59" 
    successors "B22" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  248  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  250  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  382  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599797976997386964
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B53 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B53" 
    successors "B40" "B53" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  388  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  390  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591307108001393747
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   68  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   84  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591199201547944708
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591787331827574889
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  190  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [stack:12, stack:16]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576381446488877269
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  516  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  518  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  520  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction r11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575858664018094887
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4561727748314938017
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   56  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-14611|0xffffffffffffc6ed] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #41         // java.lang.String
     3: dup           
     4: aload_0       
     5: getfield      #40         // java.lang.AbstractStringBuilder.value:char[]
     8: iconst_0      
     9: aload_0       
    10: getfield      #41         // java.lang.AbstractStringBuilder.count:int
    13: invokespecial #42         // java.lang.String.<init>:(char[], int, int)void
    16: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cf443fa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   16  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" "B10" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   94  <|@ instruction rax|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4606343695651251143
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  120  <|@ instruction CMP r10|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" "B13" 
    xhandlers
    flags 
    probability 4605526848040653670
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rdx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  128  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B15 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4605453331755699897
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  154  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  160  <|@ instruction MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" "B15" 
    successors "B35" "B18" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B35 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B21" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  224  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  226  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  228  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B18 -> B23 falseDestination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  264  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  276  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  278  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  280  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  300  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  302  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  304  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B26" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  312  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  324  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  326  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B35" "B34" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B16" "B34" "B32" 
    successors "B36" "B55" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  356  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B35" "B52" "B50" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  504  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4606262010890191395
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  538  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 4606343695651251142
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  554  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1855c93 encoding: base: 0 shift: 3 <|@ <|@
      nr  556  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  560  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr  368  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B44" "B43" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  416  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  420  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  440  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  444  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  464  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  468  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B55" "B52" 
    xhandlers
    flags 
    probability 4601840096023880646
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  476  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B55 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599797976997386964
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  248  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  250  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B23 falseDestination: B21 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4592832896769139654
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  382  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B39" 
    successors "B41" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601840096023880646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  388  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  390  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B41 falseDestination: B39 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591307108001393747
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   68  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4591374205853295048
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   82  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   84  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591787331827574889
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  190  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  194  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [stack:12, stack:16]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4576381446488877269
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  516  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  518  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  520  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction r11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4561727748314938017
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   50  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   56  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-14611|0xffffffffffffc6ed] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #41         // java.lang.String
     3: dup           
     4: aload_0       
     5: getfield      #40         // java.lang.AbstractStringBuilder.value:char[]
     8: iconst_0      
     9: aload_0       
    10: getfield      #41         // java.lang.AbstractStringBuilder.count:int
    13: invokespecial #42         // java.lang.String.<init>:(char[], int, int)void
    16: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee458b7510438504f4458b550c49bbaddeaddeaddeadde4183fa010f8c81020000468b04f50c000000418bc0412bc285c00f8c55030000498b4760498b77704181faffffff000f83b1020000418bd2d1e28d521783e2f84863d2488bca4803c8483bce0f879402000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489500c48c70001000000c74008addeadde448974240c4c896c2410458be8458bf2453bf5458bd6450f4fd54963f24883fe010f8c9e000000448b54240c488d50104a8d0cd5100000004c8d56f04d85d249c7c3000000000f8d730100004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d6483bd60f8f5c000000498b7760488d5618493b57700f87a8010000498957600f1886d800000049bbaddeaddeaddeadde488bd6498b8ba800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24204883c428850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8d9700000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe973feffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04514d8d52104c3bd67ef1e946ffffff4585d20f8cfb000000498b4760488d7018493b77700f87a5000000498977600f1880d8000000488bf0498b93a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24204883c428850500000000c5f877c3448974240c4c896c241048beaddeaddeaddeadde418bd2b900000000458bf2458be8e80000000090e985fdffff4c8be849bbaddeaddeaddeadde48beaddeaddeaddeaddeba02000000b9010000004d8bf3e80000000090488bf0498bc54d8bdee935feffff4c896c24104d8beb48beaddeaddeaddeaddeba02000000b901000000e800000000904d8bdde93cffffff41baedbcffff4589979c0200004d89a7a8020000e8000000009041baedc6ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cf443fa slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 63 14 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 63 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 73 16 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 77 18 BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B7  <||@
  Comment 83 block B7 null  <||@
  Comment 83 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 92 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 91 94 rax|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 97 96 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 99 98 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10  <||@
  Comment 105 block B10 null  <||@
  Comment 105 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 116 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 109 118 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 113 120 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 120 122 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15  <||@
  Comment 126 block B11 null  <||@
  Comment 126 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 126 rdx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 131 128 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 134 130 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 137 132 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 140 134 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 146 136 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 149 138 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B15 falseDestination: B11 -> B13  <||@
  Comment 155 block B13 null  <||@
  Comment 155 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 150 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 159 152 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 167 154 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 175 156 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 183 158 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 191 160 MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 195 162 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 202 164 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 209 166 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 209 168 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 214 170 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 219 172 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 222 174 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 225 176 JUMP ~[] destination: B13 -> B16  <||@
  Comment 225 block B16 null  <||@
  Comment 225 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 225 204 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 228 206 r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 235 208 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 238 210 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 242 212 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B35 falseDestination: B16 -> B18  <||@
  Comment 248 block B18 null  <||@
  Comment 248 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 220 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 253 222 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 257 224 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 265 226 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 269 228 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 272 234 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 279 230 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B18 -> B23 falseDestination: B18 -> B21  <||@
  Comment 285 block B23 null  <||@
  Comment 285 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 285 262 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 289 264 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 292 266 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 298 block B25 null  <||@
  Comment 298 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 274 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 304 276 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 310 278 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 314 280 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 317 282 JUMP ~[] destination: B25 -> B26  <||@
  Comment 317 block B26 null  <||@
  Comment 317 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 317 286 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 321 288 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 324 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 330 block B28 null  <||@
  Comment 330 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 298 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 336 300 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 342 302 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 346 304 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 349 306 JUMP ~[] destination: B28 -> B29  <||@
  Comment 349 block B29 null  <||@
  Comment 349 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 349 310 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 353 312 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 356 314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 362 block B31 null  <||@
  Comment 362 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 322 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 368 324 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 374 326 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 378 328 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 381 330 JUMP ~[] destination: B31 -> B32  <||@
  Comment 381 block B32 null  <||@
  Comment 381 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 381 334 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 387 336 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 390 338 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 396 block B34 null  <||@
  Comment 396 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 346 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 401 348 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 406 350 JUMP ~[] destination: B34 -> B35  <||@
  Comment 406 block B35 null  <||@
  Comment 406 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 354 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 409 356 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 412 358 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B55  <||@
  Comment 418 block B55 null  <||@
  Comment 418 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 500 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 422 502 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 426 504 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 430 506 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 436 block B57 null  <||@
  Comment 436 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 534 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 440 536 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 447 538 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 447 540 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 447 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 457 542 JUMP ~[] destination: B57 -> B58  <||@
  Comment 457 block B58 null  <||@
  Comment 457 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 457 546 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 460 548 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 467 550 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 470 552 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 470 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 477 554 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1855c93 encoding: base: 0 shift: 3  <||@
  Comment 481 556 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 484 558 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 488 560 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 491 562 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 500 12  <||@
  Comment 510 block B36 null  <||@
  Comment 510 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 510 362 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 515 364 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 518 366 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 522 368 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 525 370 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 531 block B37 null  <||@
  Comment 531 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 374 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 538 376 JUMP ~[] destination: B37 -> B41  <||@
  Comment 538 block B41 null  <||@
  Comment 538 400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 538 402 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 542 404 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 545 406 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 551 block B43 null  <||@
  Comment 551 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 551 414 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 555 416 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 561 418 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 565 420 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 568 422 JUMP ~[] destination: B43 -> B44  <||@
  Comment 568 block B44 null  <||@
  Comment 568 424 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 568 426 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 572 428 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 575 430 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 581 block B46 null  <||@
  Comment 581 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 438 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 585 440 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 591 442 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 595 444 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 598 446 JUMP ~[] destination: B46 -> B47  <||@
  Comment 598 block B47 null  <||@
  Comment 598 448 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 598 450 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 602 452 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 605 454 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 611 block B49 null  <||@
  Comment 611 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 462 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 615 464 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 621 466 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 625 468 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 628 470 JUMP ~[] destination: B49 -> B50  <||@
  Comment 628 block B50 null  <||@
  Comment 628 472 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 628 474 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 631 476 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 634 478 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B55 falseDestination: B50 -> B52  <||@
  Comment 640 block B52 null  <||@
  Comment 640 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 486 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 645 488 JUMP ~[] destination: B52 -> B55  <||@
  Comment 650 block B21 loop 0 depth 1 header:368|LoopBegin  <||@
  Comment 650 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 246 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 662 248 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 668 250 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 672 252 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 675 254 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B23 falseDestination: B21 -> B21  <||@
  Comment 682 block B38 null  <||@
  Comment 682 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 380 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 686 382 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 693 384 JUMP ~[] destination: B38 -> B39  <||@
  Comment 693 block B39 loop 1 depth 1 header:433|LoopBegin  <||@
  Comment 693 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 704 388 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 710 390 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 714 392 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 717 394 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B41 falseDestination: B39 -> B39  <||@
  Comment 724 block B1 null  <||@
  Comment 724 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 22 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 727 24 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 733 block B3 null  <||@
  Comment 733 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 733 34 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 737 36 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 741 38 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 745 40 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 751 block B5 null  <||@
  Comment 751 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 751 64 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 755 66 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 762 68 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 762 70 JUMP ~[] destination: B5 -> B6  <||@
  Comment 762 block B6 null  <||@
  Comment 762 72 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 762 74 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 765 76 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 772 78 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 775 80 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 775 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 782 82 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 782 {NarrowOop[char[0]{}]}  <||@
  Comment 789 84 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 793 86 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 796 88 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 805 12  <||@
  Comment 815 block B15 null  <||@
  Comment 815 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 180 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 820 182 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 825 188 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 825 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 835 190 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 838 192 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 843 194 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 846 196 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 849 198 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 849 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 854 [stack:12, stack:16]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 855 200 JUMP ~[] destination: B15 -> B16  <||@
  Comment 860 block B56 null  <||@
  Comment 860 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 510 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 863 512 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 863 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 873 514 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 873 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 883 516 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 888 518 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 893 520 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 896 522 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 896 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 901 [r13:0, stack:16]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 902 524 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 905 526 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 908 528 r11|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 911 530 JUMP ~[] destination: B56 -> B58  <||@
  Comment 916 block B4 null  <||@
  Comment 916 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 44 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 921 46 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 924 48 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 924 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 934 50 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 939 52 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 944 54 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 944 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 949 [stack:16]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 950 56 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 950 58 r11|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 953 60 JUMP ~[] destination: B4 -> B6  <||@
  Comment 958 block B8 null  <||@
  Comment 958 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 958 102 r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced]  <||@
  Comment 964 104 JUMP ~[] destination: B8 -> B9  <||@
  Comment 964 block B9 null  <||@
  Comment 964 106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 964 108 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 971 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 978 112 DEOPT info [bci:0]  <||@
  Comment 978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 983 [r13:0]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 984 block B2 null  <||@
  Comment 984 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 28 r10|DWORD = MOVE input: int[-14611|0xffffffffffffc6ed]  <||@
  Comment 990 30 JUMP ~[] destination: B2 -> B9  <||@
  Comment 992 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 992 4  <||@
  Comment 998 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 998 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2961[java.lang.StringBuilder.toString()]"
  method "HotSpotCompilation-2961[java.lang.StringBuilder.toString()]"
  date 1526687581807
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119879160 448b560849c1e203493bc20f85efbc18ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee458b7510438504f4458b550c49bbd01600c0070000004183fa010f8c81020000468b04f50c000000418bc0412bc285c00f8c55030000498b4760498b77704181faffffff000f83b1020000418bd2d1e28d521783e2f84863d2488bca4803c8483bce0f879402000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489500c48c70001000000c74008410000f8448974240c4c896c2410458be8458bf2453bf5458bd6450f4fd54963f24883fe010f8c9e000000448b54240c488d50104a8d0cd5100000004c8d56f04d85d249c7c3000000000f8d730100004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d6483bd60f8f5c000000498b7760488d5618493b57700f87a8010000498957600f1886d800000049bbd01600c007000000488bd6498b8ba800000048890ec74608da0200f848c1e80389460c44896610488bc2488b6c24204883c4288505ac2c66f0c5f877c3488d4c7010482bd6488d72f04885f60f8d9700000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe973feffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04514d8d52104c3bd67ef1e946ffffff4585d20f8cfb000000498b4760488d7018493b77700f87a5000000498977600f1880d8000000488bf0498b93a8000000488910c74008da0200f8c7400c35da01d844896010488bc6488b6c24204883c42885057b2b66f0c5f877c3448974240c4c896c241048be080200c007000000418bd2b900000000458bf2458be8e8eaad8eff90e985fdffff4c8be849bbd01600c00700000048be680b00c007000000ba02000000b9010000004d8bf3e8bbad8eff90488bf0498bc54d8bdee935feffff4c896c24104d8beb48be680b00c007000000ba02000000b901000000e88bad8eff904d8bdde93cffffff41baedbcffff4589979c0200004d89a7a8020000e8c7d018ff9041baedc6ffffebe4e85b6258ff90e8b5cf18ff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cf443fa slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 63 14 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 63 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 73 16 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 77 18 BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B7  <||@
  Comment 83 block B7 null  <||@
  Comment 83 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 92 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 91 94 rax|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 97 96 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 99 98 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B10  <||@
  Comment 105 block B10 null  <||@
  Comment 105 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 116 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 109 118 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 113 120 CMP r10|DWORD y: 16777215 size: DWORD  <||@
  Comment 120 122 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15  <||@
  Comment 126 block B11 null  <||@
  Comment 126 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 126 rdx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 131 128 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 134 130 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 137 132 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 140 134 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 146 136 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 149 138 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B15 falseDestination: B11 -> B13  <||@
  Comment 155 block B13 null  <||@
  Comment 155 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 150 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 159 152 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 167 154 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 175 156 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 183 158 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 191 160 MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 195 162 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 202 164 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 209 166 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 209 168 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 214 170 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 219 172 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 222 174 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 225 176 JUMP ~[] destination: B13 -> B16  <||@
  Comment 225 block B16 null  <||@
  Comment 225 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 225 204 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 228 206 r10|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 235 208 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 238 210 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 242 212 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B16 -> B35 falseDestination: B16 -> B18  <||@
  Comment 248 block B18 null  <||@
  Comment 248 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 220 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 253 222 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 257 224 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 265 226 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 269 228 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 272 234 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 279 230 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B18 -> B23 falseDestination: B18 -> B21  <||@
  Comment 285 block B23 null  <||@
  Comment 285 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 285 262 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 289 264 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 292 266 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 298 block B25 null  <||@
  Comment 298 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 274 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 304 276 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 310 278 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 314 280 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 317 282 JUMP ~[] destination: B25 -> B26  <||@
  Comment 317 block B26 null  <||@
  Comment 317 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 317 286 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 321 288 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 324 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 330 block B28 null  <||@
  Comment 330 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 298 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 336 300 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 342 302 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 346 304 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 349 306 JUMP ~[] destination: B28 -> B29  <||@
  Comment 349 block B29 null  <||@
  Comment 349 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 349 310 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 353 312 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 356 314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 362 block B31 null  <||@
  Comment 362 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 322 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 368 324 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 374 326 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 378 328 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 381 330 JUMP ~[] destination: B31 -> B32  <||@
  Comment 381 block B32 null  <||@
  Comment 381 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 381 334 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 387 336 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 390 338 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 396 block B34 null  <||@
  Comment 396 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 346 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 401 348 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 406 350 JUMP ~[] destination: B34 -> B35  <||@
  Comment 406 block B35 null  <||@
  Comment 406 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 406 354 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 409 356 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 412 358 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B55  <||@
  Comment 418 block B55 null  <||@
  Comment 418 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 500 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 422 502 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 426 504 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 430 506 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 436 block B57 null  <||@
  Comment 436 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 534 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 440 536 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 447 538 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 447 540 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 447 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 457 542 JUMP ~[] destination: B57 -> B58  <||@
  Comment 457 block B58 null  <||@
  Comment 457 544 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 457 546 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 460 548 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 467 550 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 470 552 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 470 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 477 554 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1855c93 encoding: base: 0 shift: 3  <||@
  Comment 481 556 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 484 558 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 488 560 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 491 562 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 500 12  <||@
  Comment 510 block B36 null  <||@
  Comment 510 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 510 362 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 515 364 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 518 366 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 522 368 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 525 370 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 531 block B37 null  <||@
  Comment 531 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 374 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 538 376 JUMP ~[] destination: B37 -> B41  <||@
  Comment 538 block B41 null  <||@
  Comment 538 400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 538 402 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 542 404 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 545 406 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 551 block B43 null  <||@
  Comment 551 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 551 414 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 555 416 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 561 418 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 565 420 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 568 422 JUMP ~[] destination: B43 -> B44  <||@
  Comment 568 block B44 null  <||@
  Comment 568 424 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 568 426 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 572 428 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 575 430 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 581 block B46 null  <||@
  Comment 581 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 438 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 585 440 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 591 442 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 595 444 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 598 446 JUMP ~[] destination: B46 -> B47  <||@
  Comment 598 block B47 null  <||@
  Comment 598 448 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 598 450 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 602 452 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 605 454 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 611 block B49 null  <||@
  Comment 611 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 462 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 615 464 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 621 466 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 625 468 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 628 470 JUMP ~[] destination: B49 -> B50  <||@
  Comment 628 block B50 null  <||@
  Comment 628 472 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 628 474 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 631 476 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 634 478 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B55 falseDestination: B50 -> B52  <||@
  Comment 640 block B52 null  <||@
  Comment 640 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 486 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 645 488 JUMP ~[] destination: B52 -> B55  <||@
  Comment 650 block B21 loop 0 depth 1 header:368|LoopBegin  <||@
  Comment 650 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 656 246 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 662 248 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 668 250 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 672 252 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 675 254 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B23 falseDestination: B21 -> B21  <||@
  Comment 682 block B38 null  <||@
  Comment 682 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 380 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 686 382 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 693 384 JUMP ~[] destination: B38 -> B39  <||@
  Comment 693 block B39 loop 1 depth 1 header:433|LoopBegin  <||@
  Comment 693 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 704 388 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 710 390 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 714 392 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 717 394 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B39 -> B41 falseDestination: B39 -> B39  <||@
  Comment 724 block B1 null  <||@
  Comment 724 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 22 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 727 24 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 733 block B3 null  <||@
  Comment 733 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 733 34 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 737 36 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 741 38 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 745 40 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 751 block B5 null  <||@
  Comment 751 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 751 64 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 755 66 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 762 68 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 762 70 JUMP ~[] destination: B5 -> B6  <||@
  Comment 762 block B6 null  <||@
  Comment 762 72 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 762 74 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 765 76 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 772 78 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 775 80 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 775 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 782 82 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 782 {NarrowOop[char[0]{}]}  <||@
  Comment 789 84 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 793 86 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 796 88 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 805 12  <||@
  Comment 815 block B15 null  <||@
  Comment 815 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 180 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 820 182 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 825 188 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 825 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 835 190 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 838 192 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 843 194 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 846 196 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 849 198 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 849 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 854 [stack:12, stack:16]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 855 200 JUMP ~[] destination: B15 -> B16  <||@
  Comment 860 block B56 null  <||@
  Comment 860 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 510 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 863 512 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 863 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 873 514 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 873 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 883 516 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 888 518 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 893 520 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 896 522 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 896 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 901 [r13:0, stack:16]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 902 524 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 905 526 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 908 528 r11|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 911 530 JUMP ~[] destination: B56 -> B58  <||@
  Comment 916 block B4 null  <||@
  Comment 916 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 44 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 921 46 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 924 48 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 924 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 934 50 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 939 52 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 944 54 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 944 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 949 [stack:16]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 950 56 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 950 58 r11|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 953 60 JUMP ~[] destination: B4 -> B6  <||@
  Comment 958 block B8 null  <||@
  Comment 958 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 958 102 r10|DWORD = MOVE input: int[-17171|0xffffffffffffbced]  <||@
  Comment 964 104 JUMP ~[] destination: B8 -> B9  <||@
  Comment 964 block B9 null  <||@
  Comment 964 106 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 964 108 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 971 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 978 112 DEOPT info [bci:0]  <||@
  Comment 978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 983 [r13:0]at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 984 block B2 null  <||@
  Comment 984 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 28 r10|DWORD = MOVE input: int[-14611|0xffffffffffffc6ed]  <||@
  Comment 990 30 JUMP ~[] destination: B2 -> B9  <||@
  Comment 992 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 992 4  <||@
  Comment 998 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 998 5  <||@
  HexCodeFile>>> <|@
end_nmethod
