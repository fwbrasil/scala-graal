begin_compilation
  name " HotSpotCompilation-1447[java.lang.StringBuilder.append(char)]"
  method "HotSpotCompilation-1447[java.lang.StringBuilder.append(char)]"
  date 1526687595056
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a583 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a583  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v71 v592 v7 v591 j281 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a583 v101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
=== Succesors ===
next: i584 
=== Usages ===
a81 v596 v593 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 #next: i584  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 65535] ⇈000000000000ffff
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i96 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 202
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v203 a241 i584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a583 
=== Succesors ===
=== Usages ===
i584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v593 
=== Succesors ===
next: i585 
=== Usages ===
i25 i47 i177 v89 v155 
=== Predecessor ===
a583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v593 #next: i585  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i585 v87 v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i585 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
=== Succesors ===
next: v30 
=== Usages ===
i10 v595 v103 v89 v594 
=== Predecessor ===
i584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 5]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v60 v27 i47 i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 6]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i585 
y: i9 
=== Succesors ===
=== Usages ===
v87 i25 i50 i113 v102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i585 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i10 
y: i584 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i584  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i9 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v97 v110 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9517788020361619
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
i585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v28 #falseSuccessor: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i585 
y: i584 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i585 y: i584  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v121 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
v97 
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: i10 stateAfter: - lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a583 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a583  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a81 
index: i585 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a81 index: i585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v121 
address: v594 
value: i96 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v121 address: v594 value: i96 stateAfter: - lastLocationAccess: - #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:203) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23067
stableDimension: 0
stamp: i32 [-23067] ⇊00000000ffffa5e5 ⇈00000000ffffa5e5
stampKind: i32
value: int[-23067|0xffffffffffffa5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i584 
y: i9 
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i584 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i47 
y: i48 
=== Succesors ===
=== Usages ===
i50 i113 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i47 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i49 
y: i10 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i49 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a241 v51 v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i26 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v51 
trueValue: i10 
falseValue: i49 
=== Succesors ===
=== Usages ===
v103 j292 v60 i63 v226 v155 i177 a241 v268 i217 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: i10 falseValue: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i9 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i113 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v127 #falseSuccessor: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25107
stableDimension: 0
stamp: i32 [-25107] ⇊00000000ffff9ded ⇈00000000ffff9ded
stampKind: i32
value: int[-25107|0xffffffffffff9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i62 
y: i113 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i62 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i26 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v131 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25363
stableDimension: 0
stamp: i32 [-25363] ⇊00000000ffff9ced ⇈00000000ffff9ced
stampKind: i32
value: int[-25363|0xffffffffffff9ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B56" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i585 
y: i113 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i585 y: i113  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v133 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j220 
=== Usages ===
v110 
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j265 
=== Usages ===
v598 v599 
=== Predecessor ===
v133 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j265  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j265 v267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
=== Succesors ===
next: j266 
=== Usages ===
j224 v600 v601 a240 v606 v602 v603 v604 v605 
=== Predecessor ===
j220 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v598 #next: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
=== Succesors ===
next: v229 
=== Usages ===
v230 
=== Predecessor ===
j265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v599 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i225 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i113 y: i225  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 v303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
j266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v228 #falseSuccessor: v227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4586415287348215872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i113 
y: i9 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i113 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i217 
y: i248 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i217 y: i248  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i249 
y: i218 
=== Succesors ===
=== Usages ===
j223 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i249 y: i218  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
j224 v602 v603 v604 v605 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j224 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i64
=== Inputs ===
x: j223 
y: j265 
=== Succesors ===
=== Usages ===
v230 v267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j223 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j266 
y: j224 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j266 y: j224  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v235 #falseSuccessor: v234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4556641340524100410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4586352742685091658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: j224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: j224 stateAfter: - lastLocationAccess: - #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v602 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v602 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v603 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v603 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v604 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v604 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v605 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v605 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j265 
index: - 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
value: i113 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 value: i113 stateAfter: - lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j265 
index: - 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
value: j216 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v601 value: j216 stateAfter: - lastLocationAccess: - #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j265 
index: - 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
value: v291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v606 value: v291 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j265 
=== Succesors ===
next: v242 
=== Usages ===
a245 
=== Predecessor ===
v239 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j265 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
a240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4572209547764724223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4572709905069717939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v231 v233 
=== Succesors ===
next: a241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v231 v233 #next: a241  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a241 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v215 i113 i26 
=== Succesors ===
next: v244 
=== Usages ===
a245 
=== Predecessor ===
v232 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v215 i113 i26 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
a241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v243 
values: a240 a241 
=== Succesors ===
=== Usages ===
v608 a183 v597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v243 values: a240 a241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v242 v244 
=== Succesors ===
next: v433 
=== Usages ===
a245 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v242 v244 #next: v433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v306 
=== Usages ===
j434 j436 
=== Predecessor ===
v243 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i584 
y: i113 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i584 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v155 
trueValue: i584 
falseValue: i113 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v155 trueValue: i584 falseValue: i113  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i177 
=== Succesors ===
=== Usages ===
j498 v608 j297 v303 v430 j480 j486 j490 j494 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j216 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j293 y: j216  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j498 j549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j453 j516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j494 j546 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j462 j522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j490 j543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j528 j470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j486 j540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j534 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j480 j535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j523 v536 j463 j471 v481 j529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a245 
index: - 
=== Succesors ===
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a245 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v433 
address: v597 
=== Succesors ===
=== Usages ===
v609 v611 v613 v615 v617 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v433 address: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a583 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a583  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v433 
address: v596 
=== Succesors ===
=== Usages ===
v610 v612 v614 v616 v618 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v433 address: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j293 
y: j479 
=== Succesors ===
=== Usages ===
v481 v483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j479  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j480 
y: j252 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j480 y: j252  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v307 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B55" 
    successors "B21" "B55" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v311 
values: j252 j478 
=== Succesors ===
=== Usages ===
v618 j478 v617 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: j252 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v310 
=== Succesors ===
next: v586 
=== Usages ===
v586 v315 v316 j471 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v310 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j471 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v311 
address: v618 
=== Succesors ===
next: v567 
=== Usages ===
v567 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v311 address: v618 #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j471 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
value: v586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v617 value: v586 stateAfter: - lastLocationAccess: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j471 
y: j78 
=== Succesors ===
=== Usages ===
j463 j471 v483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j471 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j480 
y: j478 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j480 y: j478  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v317 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v315 #falseSuccessor: v317  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v311 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v311 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v320 
values: j252 j478 
=== Succesors ===
=== Usages ===
v616 j470 j454 v487 v615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v320 values: j252 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v319 v321 
=== Succesors ===
next: v343 
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v319 v321 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j293 
y: j485 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j485  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j463 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j463  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v342 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
v587 
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j463 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v341 
address: v616 
=== Succesors ===
next: v565 
=== Usages ===
v565 
=== Predecessor ===
v341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v341 address: v616 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j463 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
value: v587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v615 value: v587 stateAfter: - lastLocationAccess: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j463 
y: j271 
=== Succesors ===
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j463 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j454 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v331 
values: j470 j463 
=== Succesors ===
=== Usages ===
v614 j462 j446 v491 v613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v331 values: j470 j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v330 v346 
=== Succesors ===
next: v349 
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v330 v346 #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j293 
y: j489 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j489  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j490 
y: j454 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j490 y: j454  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v348 #falseSuccessor: v347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
v588 
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j454 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v347 
address: v614 
=== Succesors ===
next: v563 
=== Usages ===
v563 
=== Predecessor ===
v347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v347 address: v614 #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j454 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
value: v588 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v613 value: v588 stateAfter: - lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j454 
y: j461 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j454 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v335 
values: j462 j454 
=== Succesors ===
=== Usages ===
v612 j453 j437 v495 v611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: j462 j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v352 
=== Succesors ===
next: v355 
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v352 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j293 
y: j493 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j446 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j494 y: j446  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v354 #falseSuccessor: v353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
v589 
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j446 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v353 
address: v612 
=== Succesors ===
next: v561 
=== Usages ===
v561 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v353 address: v612 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j446 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
value: v589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 value: v589 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j446 
y: j439 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j446 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v338 
values: j453 j446 
=== Succesors ===
=== Usages ===
v610 v499 v609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: j453 j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v358 
=== Succesors ===
next: v361 
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v358 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j293 
y: j497 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j498 
y: j437 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j498 y: j437  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v360 #falseSuccessor: v359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i590 
=== Usages ===
i590 
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i590  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j437 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v359 
address: v610 
=== Succesors ===
next: v559 
=== Usages ===
v559 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v359 address: v610 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j437 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
value: i590 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
i590 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 value: i590 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B16" "B33" "B32" 
    successors "B35" "B53" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v340 v364 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v340 v364 #next: v502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v371 
=== Usages ===
j504 
=== Predecessor ===
v324 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i113 
=== Succesors ===
=== Usages ===
j297 v430 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i113  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j292 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j293 y: j292  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v370 #falseSuccessor: v369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a245 
index: j293 
=== Succesors ===
=== Usages ===
j504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a245 index: j293  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v502 
address: v608 
=== Succesors ===
=== Usages ===
v619 v620 v621 v622 v623 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v502 address: v608  <|@  <|@
f <@~|@floating>@ <|@
tid j297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j292 
y: j293 
=== Succesors ===
=== Usages ===
j549 j535 j540 j543 j546 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j292 y: j293  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j297 
y: j479 
=== Succesors ===
=== Usages ===
v536 v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j479  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j535 
y: j252 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j535 y: j252  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B52" 
    successors "B39" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v376 
values: j252 j534 
=== Succesors ===
=== Usages ===
v623 j534 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v376 values: j252 j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v375 
=== Succesors ===
next: v577 
=== Usages ===
j529 v379 v380 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v375 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j529 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
value: v578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 value: v578 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j529 
y: j78 
=== Succesors ===
=== Usages ===
j523 j529 v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j529 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j535 
y: j534 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j535 y: j534  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v379 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v376 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v376 #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v384 
values: j252 j534 
=== Succesors ===
=== Usages ===
v622 j528 j517 v541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v384 values: j252 j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v385 
=== Succesors ===
next: v406 
=== Usages ===
j523 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v385 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j297 
y: j485 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j485  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j540 
y: j523 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j540 y: j523  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j523 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j523  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
value: v582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v622 value: v582 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j523 
y: j271 
=== Succesors ===
=== Usages ===
j517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j517 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v395 
values: j528 j523 
=== Succesors ===
=== Usages ===
v621 j522 j511 v544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: j528 j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v409 
=== Succesors ===
next: v412 
=== Usages ===
j517 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v409 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j297 
y: j489 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j489  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j543 
y: j517 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j543 y: j517  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v411 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j517 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j517  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
value: v581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v621 value: v581 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j517 
y: j461 
=== Succesors ===
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j517 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v398 
values: j522 j517 
=== Succesors ===
=== Usages ===
v620 j516 j505 v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: j522 j517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v415 
=== Succesors ===
next: v418 
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v415 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j297 
y: j493 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j546 
y: j511 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j546 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v417 #falseSuccessor: v416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j511 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
value: v580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v620 value: v580 stateAfter: - lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j511 
y: j439 
=== Succesors ===
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v401 
values: j516 j511 
=== Succesors ===
=== Usages ===
v619 v550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: j516 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v400 v421 
=== Succesors ===
next: v424 
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v400 v421 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j297 
y: j497 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j505 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j549 y: j505  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v550 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v550 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j505 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j505  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
value: i579 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 value: i579 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v376 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B54" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v403 v427 
=== Succesors ===
next: a183 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v403 v427 #next: a183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a245 
=== Succesors ===
next: v101 
=== Usages ===
v595 a100 
=== Predecessor ===
v388 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a245 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a100 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a183 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
value: a100 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j281 
=== Usages ===
=== Predecessor ===
a183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 value: a100 stateAfter: - lastLocationAccess: - #next: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v287 
=== Usages ===
j283 
=== Predecessor ===
v101 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j281 
y: i282 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j281 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j283 
index: j286 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j283 index: j286  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
value: i288 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
j281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 value: i288 stateAfter: - lastLocationAccess: - #next: v102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: i10 stateAfter: - lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a183 
index: i585 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a183 index: i585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v133 
address: v595 
value: i96 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v133 address: v595 value: i96 stateAfter: - lastLocationAccess: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:203) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v311 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26651
stableDimension: 0
stamp: i32 [-26651] ⇊00000000ffff97e5 ⇈00000000ffff97e5
stampKind: i32
value: int[-26651|0xffffffffffff97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" "B7" "B56" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-26651 - -21259] ⇊00000000ffff84e5 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v197 
values: i205 i207 i209 i211 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i205 i207 i209 i211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v204 v206 v208 v210 
=== Succesors ===
next: v203 
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v204 v206 v208 v210 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i201 
speculation: a200 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i201 speculation: a200  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a583 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a583  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v71 v592 v7 v591 j281 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a583 v101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a583 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
=== Succesors ===
next: i584 
=== Usages ===
a81 v596 v593 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 #next: i584  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32 [0 - 65535] ⇈000000000000ffff
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i96 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 202
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v203 a241 i584 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a583 
=== Succesors ===
=== Usages ===
i584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i584 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v593 
=== Succesors ===
next: i585 
=== Usages ===
i25 i47 i177 v89 v155 
=== Predecessor ===
a583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v593 #next: i585  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i585 v87 v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i585 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
=== Succesors ===
next: v30 
=== Usages ===
i10 v595 v103 v89 v594 
=== Predecessor ===
i584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 5]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v60 v27 i47 i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 6]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i585 
y: i9 
=== Succesors ===
=== Usages ===
v87 i25 i50 i113 v102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i585 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i10 
y: i584 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i584  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i9 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v97 v110 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9517788020361619
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
i585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v28 #falseSuccessor: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@21b74fc7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9517788020361619 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i585 
y: i584 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i585 y: i584  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v121 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
v97 
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: i10 stateAfter: - lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a583 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a583  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v7|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a81 
index: i585 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a81 index: i585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v121 
address: v594 
value: i96 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v121 address: v594 value: i96 stateAfter: - lastLocationAccess: - #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:203) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v4|DWORD * 2 + 16], y: v1|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result int[-23067|0xffffffffffffa5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23067
stableDimension: 0
stamp: i32 [-23067] ⇊00000000ffffa5e5 ⇈00000000ffffa5e5
stampKind: i32
value: int[-23067|0xffffffffffffa5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23067|0xffffffffffffa5e5]] destination: B3 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i584 
y: i9 
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i584 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i47 
y: i48 
=== Succesors ===
=== Usages ===
i50 i113 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i47 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i49 
y: i10 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i49 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a241 v51 v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i26 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v51 
trueValue: i10 
falseValue: i49 
=== Succesors ===
=== Usages ===
v103 j292 v60 i63 v226 v155 i177 a241 v268 i217 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v51 trueValue: i10 falseValue: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i9 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i113 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v127 #falseSuccessor: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v9|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v5|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result int[-25107|0xffffffffffff9ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25107
stableDimension: 0
stamp: i32 [-25107] ⇊00000000ffff9ded ⇈00000000ffff9ded
stampKind: i32
value: int[-25107|0xffffffffffff9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25107|0xffffffffffff9ded]] destination: B5 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32
=== Inputs ===
x: i62 
y: i113 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i62 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i26 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v131 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v12|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid i209 <|@
result int[-25363|0xffffffffffff9ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25363
stableDimension: 0
stamp: i32 [-25363] ⇊00000000ffff9ced ⇈00000000ffff9ced
stampKind: i32
value: int[-25363|0xffffffffffff9ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25363|0xffffffffffff9ced]] destination: B7 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B56" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i585 
y: i113 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i585 y: i113  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v133 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j220 
=== Usages ===
v110 
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j220 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j265 
=== Usages ===
v598 v599 
=== Predecessor ===
v133 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j265  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j265 v267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j265 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
=== Succesors ===
next: j266 
=== Usages ===
j224 v600 v601 a240 v606 v602 v603 v604 v605 
=== Predecessor ===
j220 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v598 #next: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j266 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
=== Succesors ===
next: v229 
=== Usages ===
v230 
=== Predecessor ===
j265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v599 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i225 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i113 y: i225  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 v303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
j266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v228 #falseSuccessor: v227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4586415287348215872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i113 
y: i9 
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i113 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i249 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i217 
y: i248 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i217 y: i248  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i249 
y: i218 
=== Succesors ===
=== Usages ===
j223 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i249 y: i218  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
j224 v602 v603 v604 v605 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j224 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i64
=== Inputs ===
x: j223 
y: j265 
=== Succesors ===
=== Usages ===
v230 v267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j223 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j266 
y: j224 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j266 y: j224  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v235 #falseSuccessor: v234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v16|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND v17|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4556641340524100410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4586352742685091658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: j224 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: j224 stateAfter: - lastLocationAccess: - #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v19|QWORD + v14|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v602 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v602 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [v19|QWORD + v14|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v603 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v603 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v19|QWORD + v14|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v604 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v604 #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [v19|QWORD + v14|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j223 
index: j265 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j223 index: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
address: v605 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v605 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v14|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j265 
index: - 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
value: i113 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 value: i113 stateAfter: - lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j265 
index: - 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
value: j216 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v601 value: j216 stateAfter: - lastLocationAccess: - #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result [v14|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j265 
index: - 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
value: v291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v606 value: v291 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j265 
=== Succesors ===
next: v242 
=== Usages ===
a245 
=== Predecessor ===
v239 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j265 #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
a240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4572209547764724223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4572709905069717939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v231 v233 
=== Succesors ===
next: a241 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v231 v233 #next: a241  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a241 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v215 i113 i26 
=== Succesors ===
next: v244 
=== Usages ===
a245 
=== Predecessor ===
v232 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v215 i113 i26 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
a241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a245 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v243 
values: a240 a241 
=== Succesors ===
=== Usages ===
v608 a183 v597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v243 values: a240 a241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v242 v244 
=== Succesors ===
next: v433 
=== Usages ===
a245 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v242 v244 #next: v433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v306 
=== Usages ===
j434 j436 
=== Predecessor ===
v243 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i584 
y: i113 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i584 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v155 
trueValue: i584 
falseValue: i113 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v155 trueValue: i584 falseValue: i113  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i177 
=== Succesors ===
=== Usages ===
j498 v608 j297 v303 v430 j480 j486 j490 j494 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j216 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j293 y: j216  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j498 j549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j453 j516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j494 j546 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j462 j522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j490 j543 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j528 j470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j486 j540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j534 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j480 j535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j523 v536 j463 j471 v481 j529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = CMOVE (falseValue: v11|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v24|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a245 
index: - 
=== Succesors ===
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a245 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v433 
address: v597 
=== Succesors ===
=== Usages ===
v609 v611 v613 v615 v617 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v433 address: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a583 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a583  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v28|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v433 
address: v596 
=== Succesors ===
=== Usages ===
v610 v612 v614 v616 v618 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v433 address: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j293 
y: j479 
=== Succesors ===
=== Usages ===
v481 v483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j479  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j480 
y: j252 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j480 y: j252  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v307 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v24|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B55" 
    successors "B21" "B55" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j471 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v311 
values: j252 j478 
=== Succesors ===
=== Usages ===
v618 j478 v617 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v311 values: j252 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v310 
=== Succesors ===
next: v586 
=== Usages ===
v586 v315 v316 j471 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v310 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result [v28|QWORD[*] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j471 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
result v31|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v311 
address: v618 
=== Succesors ===
next: v567 
=== Usages ===
v567 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v311 address: v618 #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
result [v27|QWORD[.] + v30|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j471 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
value: v586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v617 value: v586 stateAfter: - lastLocationAccess: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j471 
y: j78 
=== Succesors ===
=== Usages ===
j463 j471 v483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j471 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j480 
y: j478 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j480 y: j478  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v317 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v315 #falseSuccessor: v317  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V256_WORD = H [v28|QWORD[*] + v30|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v30|QWORD * 2], input: v31|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v30|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v311 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v311 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j463 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v320 
values: j252 j478 
=== Succesors ===
=== Usages ===
v616 j470 j454 v487 v615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v320 values: j252 j478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v319 v321 
=== Succesors ===
next: v343 
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v319 v321 #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j293 
y: j485 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j485  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j463 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j463  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v342 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
v587 
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
result [v28|QWORD[*] + v33|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j463 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
result v35|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v341 
address: v616 
=== Succesors ===
next: v565 
=== Usages ===
v565 
=== Predecessor ===
v341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v341 address: v616 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
result [v27|QWORD[.] + v33|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j463 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
value: v587 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v615 value: v587 stateAfter: - lastLocationAccess: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j463 
y: j271 
=== Succesors ===
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j463 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V128_WORD = H [v28|QWORD[*] + v33|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v33|QWORD * 2], input: v35|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j454 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v331 
values: j470 j463 
=== Succesors ===
=== Usages ===
v614 j462 j446 v491 v613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v331 values: j470 j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v330 v346 
=== Succesors ===
next: v349 
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v330 v346 #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j293 
y: j489 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j489  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j490 
y: j454 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j490 y: j454  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v348 #falseSuccessor: v347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
v588 
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result [v28|QWORD[*] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j454 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
result v39|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v347 
address: v614 
=== Succesors ===
next: v563 
=== Usages ===
v563 
=== Predecessor ===
v347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v347 address: v614 #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result [v27|QWORD[.] + v37|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j454 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
value: v588 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v613 value: v588 stateAfter: - lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j454 
y: j461 
=== Succesors ===
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j454 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V64_WORD = H [v28|QWORD[*] + v37|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v37|QWORD * 2], input: v39|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j446 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v335 
values: j462 j454 
=== Succesors ===
=== Usages ===
v612 j453 j437 v495 v611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: j462 j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v352 
=== Succesors ===
next: v355 
=== Usages ===
j446 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v352 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j293 
y: j493 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j446 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j494 y: j446  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v354 #falseSuccessor: v353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
v589 
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [v28|QWORD[*] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j446 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
result v43|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v353 
address: v612 
=== Succesors ===
next: v561 
=== Usages ===
v561 
=== Predecessor ===
v353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v353 address: v612 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
result [v27|QWORD[.] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j446 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
value: v589 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 value: v589 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j446 
y: j439 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j446 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V32_WORD = H [v28|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v41|QWORD * 2], input: v43|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j437 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v338 
values: j453 j446 
=== Succesors ===
=== Usages ===
v610 v499 v609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: j453 j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v358 
=== Succesors ===
next: v361 
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v358 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j293 
y: j497 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j293 y: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j498 
y: j437 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j498 y: j437  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v359 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v360 #falseSuccessor: v359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i590 
=== Usages ===
i590 
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i590  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result [v28|QWORD[*] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j434 
index: j437 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j434 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i590 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v359 
address: v610 
=== Succesors ===
next: v559 
=== Usages ===
v559 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v359 address: v610 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result [v27|QWORD[.] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j436 
index: j437 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
value: i590 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
i590 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 value: i590 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSX [v28|QWORD[*] + v45|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v45|QWORD * 2], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B16" "B33" "B32" 
    successors "B35" "B53" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v323 v340 v364 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v323 v340 v364 #next: v502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v371 
=== Usages ===
j504 
=== Predecessor ===
v324 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i113 
=== Succesors ===
=== Usages ===
j297 v430 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i113  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j292 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j293 y: j292  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v369 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v370 #falseSuccessor: v369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result [v24|QWORD[.] + v26|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a245 
index: j293 
=== Succesors ===
=== Usages ===
j504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a245 index: j293  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v502 
address: v608 
=== Succesors ===
=== Usages ===
v619 v620 v621 v622 v623 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v502 address: v608  <|@  <|@
f <@~|@floating>@ <|@
tid j297 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j292 
y: j293 
=== Succesors ===
=== Usages ===
j549 j535 j540 j543 j546 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j292 y: j293  <|@  <|@
f <@~|@floating>@ <|@
tid j535 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j297 
y: j479 
=== Succesors ===
=== Usages ===
v536 v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j479  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j535 
y: j252 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j535 y: j252  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LEA [v24|QWORD[.] + v26|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v48|QWORD, ~y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result v52|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B52" 
    successors "B39" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j529 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v376 
values: j252 j534 
=== Succesors ===
=== Usages ===
v623 j534 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v376 values: j252 j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v375 
=== Succesors ===
next: v577 
=== Usages ===
j529 v379 v380 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v375 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [v49|QWORD[.] + v53|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j529 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
value: v578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 value: v578 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j529 
y: j78 
=== Succesors ===
=== Usages ===
j523 j529 v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j529 y: j78  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j535 
y: j534 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j535 y: j534  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v379 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v53|QWORD * 2], input: v52|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v376 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v376 #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j523 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v384 
values: j252 j534 
=== Succesors ===
=== Usages ===
v622 j528 j517 v541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v384 values: j252 j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v385 
=== Succesors ===
next: v406 
=== Usages ===
j523 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v385 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j297 
y: j485 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j485  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j540 
y: j523 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j540 y: j523  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [v49|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j523 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j523  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result v57|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
value: v582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v622 value: v582 stateAfter: - lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j523 
y: j271 
=== Succesors ===
=== Usages ===
j517 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j523 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v55|QWORD * 2], input: v57|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j517 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v395 
values: j528 j523 
=== Succesors ===
=== Usages ===
v621 j522 j511 v544 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: j528 j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v394 v409 
=== Succesors ===
next: v412 
=== Usages ===
j517 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v394 v409 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j297 
y: j489 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j489  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j543 
y: j517 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j543 y: j517  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v411 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [v49|QWORD[.] + v59|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j517 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j517  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result v61|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
value: v581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v621 value: v581 stateAfter: - lastLocationAccess: - #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid j522 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j517 
y: j461 
=== Succesors ===
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j517 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v59|QWORD * 2], input: v61|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j511 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v398 
values: j522 j517 
=== Succesors ===
=== Usages ===
v620 j516 j505 v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v398 values: j522 j517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v415 
=== Succesors ===
next: v418 
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v415 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j297 
y: j493 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j546 
y: j511 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j546 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v417 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v417 #falseSuccessor: v416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result [v49|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j511 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result v65|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
value: v580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v620 value: v580 stateAfter: - lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j516 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j511 
y: j439 
=== Succesors ===
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v63|QWORD * 2], input: v65|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j505 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v401 
values: j516 j511 
=== Succesors ===
=== Usages ===
v619 v550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: j516 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v400 v421 
=== Succesors ===
next: v424 
=== Usages ===
j505 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v400 v421 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j297 
y: j497 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j297 y: j497  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j549 
y: j505 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j549 y: j505  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v550 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v550 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result [v49|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j504 
index: j505 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j504 index: j505  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
value: i579 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 value: i579 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + v67|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v376 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B52 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B54" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v387 v403 v427 
=== Succesors ===
next: a183 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v387 v403 v427 #next: a183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a183 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a245 
=== Succesors ===
next: v101 
=== Usages ===
v595 a100 
=== Predecessor ===
v388 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a245 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a100 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a183 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a183  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
value: a100 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j281 
=== Usages ===
=== Predecessor ===
a183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 value: a100 stateAfter: - lastLocationAccess: - #next: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v287 
=== Usages ===
j283 
=== Predecessor ===
v101 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j283 <|@
result v70|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j281 
y: i282 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j281 y: i282  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result [v70|QWORD[*] + v71|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j283 
index: j286 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j283 index: j286  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
value: i288 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
j281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 value: i288 stateAfter: - lastLocationAccess: - #next: v102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 value: i10 stateAfter: - lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [v24|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a183 
index: i585 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a183 index: i585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v133 
address: v595 
value: i96 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v133 address: v595 value: i96 stateAfter: - lastLocationAccess: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:203) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|QWORD[*] + v71|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v4|DWORD * 2 + 16], y: v1|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v311 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B55 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid i211 <|@
result int[-26651|0xffffffffffff97e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26651
stableDimension: 0
stamp: i32 [-26651] ⇊00000000ffff97e5 ⇈00000000ffff97e5
stampKind: i32
value: int[-26651|0xffffffffffff97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26651|0xffffffffffff97e5]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" "B7" "B56" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i201 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-26651 - -21259] ⇊00000000ffff84e5 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v197 
values: i205 i207 i209 i211 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i205 i207 i209 i211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v204 v206 v208 v210 
=== Succesors ===
next: v203 
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v204 v206 v208 v210 #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i201 
speculation: a200 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i201 speculation: a200  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@21b74fc7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9517788020361619 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v4|DWORD * 2 + 16], y: v1|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v9|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v5|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v12|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B56" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4586415287348215872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v16|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND v17|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4586352742685091658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = CMOVE (falseValue: v11|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v24|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V128_WORD = H [v28|QWORD[*] + v33|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v33|QWORD * 2], input: v35|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v26|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V64_WORD = H [v28|QWORD[*] + v37|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v37|QWORD * 2], input: v39|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v26|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V32_WORD = H [v28|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v41|QWORD * 2], input: v43|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v26|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSX [v28|QWORD[*] + v45|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v45|QWORD * 2], y: v47|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B16" "B33" "B32" 
    successors "B35" "B53" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v48|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B54" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v70|QWORD[*] + v71|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + v4|DWORD * 2 + 16], y: v1|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LEA [v24|QWORD[.] + v26|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v48|QWORD, ~y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v50|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v51|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v50|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v55|QWORD * 2], input: v57|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v50|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v59|QWORD * 2], input: v61|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v50|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v63|QWORD * 2], input: v65|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = DEC v50|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + v67|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B52 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B52" 
    successors "B39" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v49|QWORD[.] + v53|QWORD * 2], input: v52|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|QWORD] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B55 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B55" 
    successors "B21" "B55" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V256_WORD = H [v28|QWORD[*] + v30|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v30|QWORD * 2], input: v31|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v30|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4572209547764724223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4572709905069717939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4556641340524100410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25363|0xffffffffffff9ced]] destination: B7 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" "B7" "B56" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23067|0xffffffffffffa5e5]] destination: B3 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26651|0xffffffffffff97e5]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25107|0xffffffffffff9ded]] destination: B5 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #14         // java.lang.AbstractStringBuilder.append:(char)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@21b74fc7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9517788020361619 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 2 + 16], y: r14|DWORD) size: WORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   64  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   82  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B56" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4586415287348215872
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rbx|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr  120  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4586352742685091658
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  154  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  156  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  222  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  276  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  290  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  292  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  314  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  316  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  324  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  338  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  340  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  342  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B16" "B33" "B32" 
    successors "B35" "B53" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B54" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction r8|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  542  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  544  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  546  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [rax|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr  552  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B34" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B16 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  382  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  430  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  432  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  442  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  454  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  456  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  458  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  478  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  480  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  482  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  490  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  510  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction r8|DWORD = MOVE stack:32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  396  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B52 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B52" 
    successors "B39" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  402  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  404  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580869276668775136
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B55 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B55" 
    successors "B21" "B55" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  262  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction r8|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4572209547764724223
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4572709905069717939
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  200  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  208  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [stack:0, stack:12]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4556641340524100410
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: int[-25363|0xffffffffffff9ced] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B7 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" "B7" "B56" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: r10|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[-23067|0xffffffffffffa5e5] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B3 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: int[-26651|0xffffffffffff97e5] <|@ <|@
      nr  564  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r11|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B5 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #14         // java.lang.AbstractStringBuilder.append:(char)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@21b74fc7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   18  <|@ instruction rax|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9517788020361619 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4606748080861654808
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [r10|QWORD[.] + r8|DWORD * 2 + 16], y: r14|DWORD) size: WORD <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr   58  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   64  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   82  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B56" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B14" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  110  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" "B12" 
    xhandlers
    flags 
    probability 4586415287348215872
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rbx|DWORD = SHL rsi|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr  120  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr  122  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B14 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4586352742685091658
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  154  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  156  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B34" "B17" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  218  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  222  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  224  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B34 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B20" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B22 falseDestination: B17 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B25" "B24" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  276  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  290  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  292  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B22" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  314  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  316  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B25" 
    successors "B31" "B30" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  324  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  338  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  340  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  342  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" 
    successors "B34" "B33" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B15" "B33" "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" "B51" "B49" 
    successors 
    xhandlers
    flags 
    probability 4587110228049596032
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction r8|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3 <|@ <|@
      nr  540  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  542  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  544  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  546  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  548  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [rax|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr  552  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  382  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B43" "B42" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  430  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  432  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  434  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B40" 
    successors "B46" "B45" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  442  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  454  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  456  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  458  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B48" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  478  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  480  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  482  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B46" 
    successors "B54" "B51" 
    xhandlers
    flags 
    probability 4582606628422225536
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  490  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B54 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4580869276668775136
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573599429167484544
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  396  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B40" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  402  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  404  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B40 falseDestination: B38 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B20" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582606628422225536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  260  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  262  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B9" "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4572709905069717939
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  200  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  208  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [stack:0, stack:12]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r11|DWORD = MOVE input: int[-25363|0xffffffffffff9ced] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B7 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" "B7" "B56" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0]
locals: r10|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|DWORD = MOVE input: int[-23067|0xffffffffffffa5e5] <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B3 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: int[-26651|0xffffffffffff97e5] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r11|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B5 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #14         // java.lang.AbstractStringBuilder.append:(char)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5510468b1cd50c000000458b450c458bc841ffc1418bc1412bc383f8010f8d2d000000453bd80f862503000045894d0c49c1e203664789744210498bc5488b6c24204883c428850500000000c5f877c3418bf3d1e68d76028bd6412bd185d2410f4cf183fe010f8cf5020000baf7ffff7f2bd685d20f8cb6020000413bf00f86d5020000498b5760498b4f7081feffffff000f835a0200008bded1e38d5b1783e3f84863db488bfb4803fa483bf90f873e02000049897f600f188413c00000000f188413000100000f188413400100000f1884138001000089720c48c70201000000c74208addeadde488bc244894c24144489442410448954240c44897424084c892c24448bf6458beb453bf5418bf6410f4ff54c63d64983fa010f8c9e000000448b5c240c4c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8d920100004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63de4d3bda0f8f53000000448b4c2414448b4424108b4c24084c8b14244c8bd849c1eb0345895a104d8bea49c1ed0949bb00c02408010000004788641d0045894a0c6642894c4010498bc2488b6c24204883c428850500000000c5f877c34e8d4450104d2bda4d8d53f04d85d20f8d7700000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f2bffffff6647892448e921ffffffc5f9efc049c7c100000000666690c4817e7f04484d8d49104d3bca7ef1e96effffff660f1f440000660f1f440000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe954feffff44894c24144489442410448954240c44897424084c892c2448baaddeaddeaddeadde8bde488bf28bd3b900000000458beb448bf3e80000000090e9d9fdffff41bbed9cffff418bce4d8bd545899f9c0200004d89a7a8020000e8000000009041bbe5a5ffffebde41bbe597ffffebd641bbed9dffffebcee80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@21b74fc7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 70 16 r9|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 76 18 rax|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 82 20 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 85 22 BRANCH trueDestinationProbability: 0.9517788020361619 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 91 block B1 null  <||@
  Comment 91 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 26 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 94 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 100 block B2 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 104 34 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3  <||@
  Comment 108 36 MOV (x: [r10|QWORD[.] + r8|DWORD * 2 + 16], y: r14|DWORD) size: WORD  <||@
  Comment 114 38 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 117 40 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 126 12  <||@
  Comment 136 block B4 null  <||@
  Comment 136 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 54 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 141 56 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 144 58 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 149 60 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 151 62 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 155 64 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 158 66 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 164 block B6 null  <||@
  Comment 164 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 80 rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 169 82 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 171 84 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 173 86 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 179 block B8 null  <||@
  Comment 179 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 100 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 182 102 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B56  <||@
  Comment 188 block B9 null  <||@
  Comment 188 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 106 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 192 108 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 196 110 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 202 112 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14  <||@
  Comment 208 block B10 null  <||@
  Comment 208 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 116 rbx|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 212 118 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 215 120 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 218 122 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 221 124 rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 227 126 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 230 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B14 falseDestination: B10 -> B12  <||@
  Comment 236 block B12 null  <||@
  Comment 236 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 146 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 240 148 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 248 150 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 256 152 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 264 154 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 272 156 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 275 158 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 282 160 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 282 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 289 162 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 289 164 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 292 166 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 297 168 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 302 170 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 307 172 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 312 174 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 316 176 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 319 178 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 322 180 JUMP ~[] destination: B12 -> B15  <||@
  Comment 322 block B15 null  <||@
  Comment 322 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 322 218 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 325 220 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 332 222 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 335 224 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 339 226 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B34 falseDestination: B15 -> B17  <||@
  Comment 345 block B17 null  <||@
  Comment 345 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 234 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 350 236 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 354 238 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 362 240 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 366 242 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 369 248 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 376 244 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B22 falseDestination: B17 -> B20  <||@
  Comment 382 block B22 null  <||@
  Comment 382 274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 382 276 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 386 278 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 389 280 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 395 block B24 null  <||@
  Comment 395 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 288 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 401 290 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 407 292 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 411 294 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 414 296 JUMP ~[] destination: B24 -> B25  <||@
  Comment 414 block B25 null  <||@
  Comment 414 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 414 300 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 418 302 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 421 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 427 block B27 null  <||@
  Comment 427 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 312 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 433 314 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 439 316 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 443 318 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 446 320 JUMP ~[] destination: B27 -> B28  <||@
  Comment 446 block B28 null  <||@
  Comment 446 322 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 446 324 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 450 326 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 453 328 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 459 block B30 null  <||@
  Comment 459 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 336 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 465 338 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 471 340 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 475 342 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 478 344 JUMP ~[] destination: B30 -> B31  <||@
  Comment 478 block B31 null  <||@
  Comment 478 346 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 478 348 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 484 350 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 487 352 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 493 block B33 null  <||@
  Comment 493 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 360 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 498 362 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 503 364 JUMP ~[] destination: B33 -> B34  <||@
  Comment 503 block B34 null  <||@
  Comment 503 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 368 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 506 370 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 509 372 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B54  <||@
  Comment 515 block B54 null  <||@
  Comment 515 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 526 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 520 528 r8|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 525 530 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 529 532 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 533 538 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3  <||@
  Comment 540 540 MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 544 542 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 551 544 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 561 546 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 566 548 MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 570 550 MOV (x: [rax|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 576 552 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 579 554 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 588 12  <||@
  Comment 598 block B35 null  <||@
  Comment 598 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 376 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 603 378 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 606 380 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 610 382 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 613 384 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 619 block B36 null  <||@
  Comment 619 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 388 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 626 390 JUMP ~[] destination: B36 -> B40  <||@
  Comment 626 block B40 null  <||@
  Comment 626 414 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 626 416 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 630 418 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 633 420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42  <||@
  Comment 639 block B42 null  <||@
  Comment 639 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 639 428 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 643 430 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 649 432 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 653 434 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 656 436 JUMP ~[] destination: B42 -> B43  <||@
  Comment 656 block B43 null  <||@
  Comment 656 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 656 440 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 660 442 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 663 444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 669 block B45 null  <||@
  Comment 669 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 452 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 673 454 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 679 456 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 683 458 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 686 460 JUMP ~[] destination: B45 -> B46  <||@
  Comment 686 block B46 null  <||@
  Comment 686 462 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 686 464 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 690 466 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 693 468 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 699 block B48 null  <||@
  Comment 699 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 699 476 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 703 478 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 709 480 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 713 482 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 716 484 JUMP ~[] destination: B48 -> B49  <||@
  Comment 716 block B49 null  <||@
  Comment 716 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 716 488 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 719 490 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 722 492 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B54 falseDestination: B49 -> B51  <||@
  Comment 728 block B51 null  <||@
  Comment 728 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 508 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 733 518 JUMP ~[] destination: B51 -> B54  <||@
  Comment 738 block B37 null  <||@
  Comment 738 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 394 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 742 396 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 749 398 JUMP ~[] destination: B37 -> B38  <||@
  Comment 749 block B38 loop 1 depth 1 header:376|LoopBegin  <||@
  Comment 749 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 402 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 758 404 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 762 406 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 765 408 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B40 falseDestination: B38 -> B38  <||@
  Comment 772 block B20 loop 0 depth 1 header:311|LoopBegin  <||@
  Comment 772 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 784 260 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 790 262 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 796 264 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 800 266 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 803 268 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20  <||@
  Comment 810 block B14 null  <||@
  Comment 810 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 184 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 815 186 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 820 188 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 825 190 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 830 192 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 834 198 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 834 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 844 200 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 846 202 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 849 204 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 851 206 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 856 208 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 859 210 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 862 212 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 862 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 867 [stack:0, stack:12]at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 868 214 JUMP ~[] destination: B14 -> B15  <||@
  Comment 873 block B7 null  <||@
  Comment 873 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 90 r11|DWORD = MOVE input: int[-25363|0xffffffffffff9ced]  <||@
  Comment 879 96 JUMP ~[] destination: B7 -> B57  <||@
  Comment 879 block B57 null  <||@
  Comment 879 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 879 72 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 882 74 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 885 572 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 892 574 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 899 576 DEOPT info [bci:0]  <||@
  Comment 899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 904 [r10:0]at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r10|QWORD[.]  |rcx|DWORD   <||@
  Comment 905 block B3 null  <||@
  Comment 905 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 44 r11|DWORD = MOVE input: int[-23067|0xffffffffffffa5e5]  <||@
  Comment 911 50 JUMP ~[] destination: B3 -> B57  <||@
  Comment 913 block B56 null  <||@
  Comment 913 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 562 r11|DWORD = MOVE input: int[-26651|0xffffffffffff97e5]  <||@
  Comment 919 568 JUMP ~[] destination: B56 -> B57  <||@
  Comment 921 block B5 null  <||@
  Comment 921 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 70 r11|DWORD = MOVE input: int[-25107|0xffffffffffff9ded]  <||@
  Comment 927 76 JUMP ~[] destination: B5 -> B57  <||@
  Comment 929 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 929 4  <||@
  Comment 935 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 935 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1447[java.lang.StringBuilder.append(char)]"
  method "HotSpotCompilation-1447[java.lang.StringBuilder.append(char)]"
  date 1526687595337
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1199aafe0 448b560849c1e203493bc20f856f9e05ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5510468b1cd50c000000458b450c458bc841ffc1418bc1412bc383f8010f8d2d000000453bd80f862503000045894d0c49c1e203664789744210498bc5488b6c24204883c4288505a20f53f0c5f877c3418bf3d1e68d76028bd6412bd185d2410f4cf183fe010f8cf5020000baf7ffff7f2bd685d20f8cb6020000413bf00f86d5020000498b5760498b4f7081feffffff000f835a0200008bded1e38d5b1783e3f84863db488bfb4803fa483bf90f873e02000049897f600f188413c00000000f188413000100000f188413400100000f1884138001000089720c48c70201000000c74208410000f8488bc244894c24144489442410448954240c44897424084c892c24448bf6458beb453bf5418bf6410f4ff54c63d64983fa010f8c9e000000448b5c240c4c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8d920100004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63de4d3bda0f8f53000000448b4c2414448b4424108b4c24084c8b14244c8bd849c1eb0345895a104d8bea49c1ed0949bb00c02408010000004788641d0045894a0c6642894c4010498bc2488b6c24204883c4288505d40d53f0c5f877c34e8d4450104d2bda4d8d53f04d85d20f8d7700000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f2bffffff6647892448e921ffffffc5f9efc049c7c100000000666690c4817e7f04484d8d49104d3bca7ef1e96effffff660f1f440000660f1f440000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe954feffff44894c24144489442410448954240c44897424084c892c2448ba080200c0070000008bde488bf28bd3b900000000458beb448bf3e85d8f7bff90e9d9fdffff41bbed9cffff418bce4d8bd545899f9c0200004d89a7a8020000e896b205ff9041bbe5a5ffffebde41bbe597ffffebd641bbed9dffffebcee81a4445ff90e874b105ff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@21b74fc7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 70 16 r9|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 76 18 rax|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 82 20 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 85 22 BRANCH trueDestinationProbability: 0.9517788020361619 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 91 block B1 null  <||@
  Comment 91 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 26 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 94 28 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 100 block B2 null  <||@
  Comment 100 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 32 MOV (x: [r13|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 104 34 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3  <||@
  Comment 108 36 MOV (x: [r10|QWORD[.] + r8|DWORD * 2 + 16], y: r14|DWORD) size: WORD  <||@
  Comment 114 38 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 117 40 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 126 12  <||@
  Comment 136 block B4 null  <||@
  Comment 136 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 54 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 141 56 rsi|DWORD = LEA [rsi|DWORD + 2] size: DWORD  <||@
  Comment 144 58 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 149 60 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 151 62 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 155 64 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 158 66 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 164 block B6 null  <||@
  Comment 164 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 80 rdx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 169 82 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 171 84 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 173 86 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 179 block B8 null  <||@
  Comment 179 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 100 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 182 102 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B56  <||@
  Comment 188 block B9 null  <||@
  Comment 188 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 106 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 192 108 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 196 110 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 202 112 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B14  <||@
  Comment 208 block B10 null  <||@
  Comment 208 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 116 rbx|DWORD = SHL rsi|DWORD size: DWORD  <||@
  Comment 212 118 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 215 120 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 218 122 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 221 124 rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 227 126 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 230 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B14 falseDestination: B10 -> B12  <||@
  Comment 236 block B12 null  <||@
  Comment 236 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 146 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 240 148 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 248 150 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 256 152 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 264 154 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 272 156 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 275 158 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 282 160 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 282 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 289 162 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 289 164 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 292 166 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 297 168 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 302 170 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 307 172 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 312 174 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 316 176 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 319 178 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 322 180 JUMP ~[] destination: B12 -> B15  <||@
  Comment 322 block B15 null  <||@
  Comment 322 216 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 322 218 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 325 220 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 332 222 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 335 224 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 339 226 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B15 -> B34 falseDestination: B15 -> B17  <||@
  Comment 345 block B17 null  <||@
  Comment 345 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 234 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 350 236 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 354 238 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 362 240 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 366 242 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 369 248 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 376 244 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B17 -> B22 falseDestination: B17 -> B20  <||@
  Comment 382 block B22 null  <||@
  Comment 382 274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 382 276 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 386 278 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 389 280 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 395 block B24 null  <||@
  Comment 395 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 288 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 401 290 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 407 292 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 411 294 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 414 296 JUMP ~[] destination: B24 -> B25  <||@
  Comment 414 block B25 null  <||@
  Comment 414 298 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 414 300 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 418 302 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 421 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 427 block B27 null  <||@
  Comment 427 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 312 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 433 314 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 439 316 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 443 318 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 446 320 JUMP ~[] destination: B27 -> B28  <||@
  Comment 446 block B28 null  <||@
  Comment 446 322 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 446 324 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 450 326 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 453 328 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B31 falseDestination: B28 -> B30  <||@
  Comment 459 block B30 null  <||@
  Comment 459 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 336 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 465 338 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 471 340 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 475 342 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 478 344 JUMP ~[] destination: B30 -> B31  <||@
  Comment 478 block B31 null  <||@
  Comment 478 346 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 478 348 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 484 350 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 487 352 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 493 block B33 null  <||@
  Comment 493 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 360 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 498 362 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 503 364 JUMP ~[] destination: B33 -> B34  <||@
  Comment 503 block B34 null  <||@
  Comment 503 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 368 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 506 370 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 509 372 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B54  <||@
  Comment 515 block B54 null  <||@
  Comment 515 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 526 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 520 528 r8|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 525 530 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 529 532 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 533 538 r11|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@62068ede encoding: base: 0 shift: 3  <||@
  Comment 540 540 MOV (x: [r10|QWORD[.] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 544 542 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 551 544 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 561 546 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 566 548 MOV (x: [r10|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 570 550 MOV (x: [rax|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 576 552 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 579 554 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 588 12  <||@
  Comment 598 block B35 null  <||@
  Comment 598 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 598 376 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 603 378 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 606 380 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 610 382 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 613 384 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 619 block B36 null  <||@
  Comment 619 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 388 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 626 390 JUMP ~[] destination: B36 -> B40  <||@
  Comment 626 block B40 null  <||@
  Comment 626 414 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 626 416 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 630 418 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 633 420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42  <||@
  Comment 639 block B42 null  <||@
  Comment 639 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 639 428 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 643 430 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 649 432 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 653 434 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 656 436 JUMP ~[] destination: B42 -> B43  <||@
  Comment 656 block B43 null  <||@
  Comment 656 438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 656 440 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 660 442 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 663 444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 669 block B45 null  <||@
  Comment 669 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 452 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 673 454 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 679 456 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 683 458 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 686 460 JUMP ~[] destination: B45 -> B46  <||@
  Comment 686 block B46 null  <||@
  Comment 686 462 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 686 464 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 690 466 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 693 468 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 699 block B48 null  <||@
  Comment 699 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 699 476 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 703 478 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 709 480 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 713 482 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 716 484 JUMP ~[] destination: B48 -> B49  <||@
  Comment 716 block B49 null  <||@
  Comment 716 486 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 716 488 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 719 490 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 722 492 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B54 falseDestination: B49 -> B51  <||@
  Comment 728 block B51 null  <||@
  Comment 728 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 728 508 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 733 518 JUMP ~[] destination: B51 -> B54  <||@
  Comment 738 block B37 null  <||@
  Comment 738 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 738 394 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 742 396 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 749 398 JUMP ~[] destination: B37 -> B38  <||@
  Comment 749 block B38 loop 1 depth 1 header:376|LoopBegin  <||@
  Comment 749 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 402 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 758 404 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 762 406 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 765 408 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B40 falseDestination: B38 -> B38  <||@
  Comment 772 block B20 loop 0 depth 1 header:311|LoopBegin  <||@
  Comment 772 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 784 260 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 790 262 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 796 264 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 800 266 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 803 268 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B22 falseDestination: B20 -> B20  <||@
  Comment 810 block B14 null  <||@
  Comment 810 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 184 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 815 186 stack:32|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 820 188 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 825 190 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 830 192 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 834 198 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 834 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 844 200 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 846 202 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 849 204 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 851 206 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 856 208 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 859 210 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 862 212 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 862 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 867 [stack:0, stack:12]at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 868 214 JUMP ~[] destination: B14 -> B15  <||@
  Comment 873 block B7 null  <||@
  Comment 873 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 873 90 r11|DWORD = MOVE input: int[-25363|0xffffffffffff9ced]  <||@
  Comment 879 96 JUMP ~[] destination: B7 -> B57  <||@
  Comment 879 block B57 null  <||@
  Comment 879 570 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 879 72 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 882 74 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 885 572 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 892 574 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 899 576 DEOPT info [bci:0]  <||@
  Comment 899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 904 [r10:0]at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r10|QWORD[.]  |rcx|DWORD   <||@
  Comment 905 block B3 null  <||@
  Comment 905 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 44 r11|DWORD = MOVE input: int[-23067|0xffffffffffffa5e5]  <||@
  Comment 911 50 JUMP ~[] destination: B3 -> B57  <||@
  Comment 913 block B56 null  <||@
  Comment 913 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 562 r11|DWORD = MOVE input: int[-26651|0xffffffffffff97e5]  <||@
  Comment 919 568 JUMP ~[] destination: B56 -> B57  <||@
  Comment 921 block B5 null  <||@
  Comment 921 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 70 r11|DWORD = MOVE input: int[-25107|0xffffffffffff9ded]  <||@
  Comment 927 76 JUMP ~[] destination: B5 -> B57  <||@
  Comment 929 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 929 4  <||@
  Comment 935 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 935 5  <||@
  HexCodeFile>>> <|@
end_nmethod
