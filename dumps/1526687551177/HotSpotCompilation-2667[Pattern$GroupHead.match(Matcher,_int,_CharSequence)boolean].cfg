begin_compilation
  name " HotSpotCompilation-2667[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2667[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  date 1526687582063
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a2478 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$GroupHead;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2559 ?62 ?12 v2562 ?2248 ?23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2609 ?87 ?12 v1503 ?2253 v2608 ?2248 ?23 ?190 ?62 ?641 v1494 ?46 v2558 v2565 v2589 v2607 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1147 ?12 v1503 i54 v39 v199 v2568 ?46 ?87 v195 v1184 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?12 v1503 v1494 v2566 ?641 ?46 ?87 v2616 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4658
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - - 
=== Succesors ===
=== Usages ===
v2263 a2478 i2479 v2482 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2478 a2555 a2522 a2541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2558 
=== Succesors ===
next: i2479 
=== Usages ===
a1120 v2560 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2558 #next: i2479  <|@  <|@
f <@~|@floating>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
i2479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2560 
=== Succesors ===
next: i2480 
=== Usages ===
v1140 
=== Predecessor ===
a2478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2560 #next: i2480  <|@  <|@
f <@~|@floating>@ <|@
tid v2559 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2480 i2557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2559 
=== Succesors ===
next: v1642 
=== Usages ===
v1140 v2561 
=== Predecessor ===
i2479 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2559 #next: v1642  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2480 
y: i2479 
=== Succesors ===
=== Usages ===
v1642 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2480 y: i2479  <|@  <|@
f <@~|@floating>@ <|@
tid a2260 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2263 v2379 v2275 v2357 v2323 v2347 v2331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1140 
=== Succesors ===
trueSuccessor: v1639 
falseSuccessor: v1641 
=== Usages ===
=== Predecessor ===
i2480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1140 #trueSuccessor: v1639 #falseSuccessor: v1641  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2481 
=== Usages ===
i2483 v1147 
=== Predecessor ===
v1642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2481  <|@  <|@
f <@~|@floating>@ <|@
tid v2562 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2562 
=== Succesors ===
next: v2482 
=== Usages ===
a1150 v2615 v2569 v2584 v2585 
=== Predecessor ===
v1639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2562 #next: v2482  <|@  <|@
f <@~|@floating>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
v2482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2615 
=== Succesors ===
next: i2483 
=== Usages ===
v2613 v2451 
=== Predecessor ===
a2481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2615 #next: i2483  <|@  <|@
f <@~|@floating>@ <|@
tid a1120 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2478 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1120 
index: i2480 
=== Succesors ===
=== Usages ===
v1147 i2483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1120 index: i2480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1639 
address: v2561 
=== Succesors ===
next: v1147 
=== Usages ===
?12 ?2248 v1167 ?62 ?23 
=== Predecessor ===
v2482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1639 address: v2561 #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1639 
address: v2561 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
i2483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1639 address: v2561 value: i3 stateAfter: - lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2451 v2456 v2458 v2460 v2462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2482 
y: v2450 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2482 y: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid a1150 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2481 
=== Succesors ===
=== Usages ===
?859 v1503 ?46 ?308 ?762 ?87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2481  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7493788324863577
=== Inputs ===
condition: v2451 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2451 #trueSuccessor: v29 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2484 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2484  <|@  <|@
f <@~|@floating>@ <|@
tid v2565 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2565 
=== Succesors ===
next: v1650 
=== Usages ===
v39 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2565 #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2484 
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2484  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i2483 - 
=== Succesors ===
=== Usages ===
v2275 v2485 i2487 v2490 v2494 v2498 v2502 v2506 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i2483 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v1647 
falseSuccessor: v1649 
=== Usages ===
=== Predecessor ===
i2484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v1647 #falseSuccessor: v1649  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B131" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2485 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2616 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2616 
=== Succesors ===
next: v1658 
=== Usages ===
v2453 
=== Predecessor ===
v1647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2616 #next: v1658  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2485 
y: v2452 
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2485 y: v2452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2453 
=== Succesors ===
trueSuccessor: v1655 
falseSuccessor: v1657 
=== Usages ===
=== Predecessor ===
v2485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2453 #trueSuccessor: v1655 #falseSuccessor: v1657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 ?859 v195 v77 v672 v169 v191 v298 ?591 v371 ?322 v436 ?908 ?464 v563 ?46 ?190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i47 
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v1661 
falseSuccessor: v1659 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v1661 #falseSuccessor: v1659  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2278 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2278  <|@  <|@
f <@~|@floating>@ <|@
tid i2279 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300307
stableDimension: 0
stamp: i32 [-300307] â‡Š00000000fffb6aed â‡ˆ00000000fffb6aed
stampKind: i32
value: int[-300307|0xfffffffffffb6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B130" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2486 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2486  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a2486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2566 
=== Succesors ===
next: i2487 
=== Usages ===
a1176 v2567 
=== Predecessor ===
v1659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2566 #next: i2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
i2487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2567 
=== Succesors ===
next: v1670 
=== Usages ===
v199 v1184 
=== Predecessor ===
a2486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2567 #next: v1670  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2487 
=== Succesors ===
=== Usages ===
v1670 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1667 
falseSuccessor: v1669 
=== Usages ===
=== Predecessor ===
i2487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1667 #falseSuccessor: v1669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B129" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1674 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1674  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2487 
=== Succesors ===
=== Usages ===
v1674 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i2487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1184 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1673 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1184 #trueSuccessor: v1671 #falseSuccessor: v1673  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B128" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2488 
=== Usages ===
i2488 
=== Predecessor ===
v1674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2488  <|@  <|@
f <@~|@floating>@ <|@
tid a1176 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2486 
=== Succesors ===
=== Usages ===
v2568 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2486  <|@  <|@
f <@~|@floating>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1176 
index: i3 
=== Succesors ===
=== Usages ===
i2488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1176 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1671 
address: v2568 
=== Succesors ===
next: v1678 
=== Usages ===
i1192 j1515 v1628 v1630 j2476 v2477 
=== Predecessor ===
v1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1671 address: v2568 #next: v1678  <|@  <|@
f <@~|@floating>@ <|@
tid i1627 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2488 
y: i1627 
=== Succesors ===
=== Usages ===
v1678 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2488 y: i1627  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1628 
=== Succesors ===
trueSuccessor: v1675 
falseSuccessor: v1677 
=== Usages ===
=== Predecessor ===
i2488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1628 #trueSuccessor: v1675 #falseSuccessor: v1677  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2489 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2489  <|@  <|@
f <@~|@floating>@ <|@
tid v2569 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
a2489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2569 
=== Succesors ===
next: v2490 
=== Usages ===
?322 v2617 v2570 v2571 ?381 v2638 
=== Predecessor ===
v1675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2569 #next: v2490  <|@  <|@
f <@~|@floating>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
v2490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2617 
=== Succesors ===
next: v148 
=== Usages ===
v2456 v2455 
=== Predecessor ===
a2489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2617 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2455 v2457 v2459 v2461 v2463 v2464 v2470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2490 
y: v2454 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2490 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
i2491 a2493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2483 - 
=== Succesors ===
=== Usages ===
?194 ?46 ?87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2483 -  <|@  <|@
f <@~|@floating>@ <|@
tid i1192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2488 
=== Succesors ===
=== Usages ===
v1380 ?762 v491 v487 ?308 ?859 v234 ?46 ?87 ?2249 v238 ?573 ?381 v614 v351 ?322 ?464 v455 v347 v390 v451 ?446 v1265 v386 ?908 v618 v1258 ?591 v582 v1285 v1244 v578 v1251 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2488  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: a1150 a2 i3 a4 i1192 
=== Succesors ===
=== Usages ===
?308 ?859 ?762 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1150 a2 i3 a4 i1192  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: - - - - - 
=== Succesors ===
=== Usages ===
?2253 ?641 ?190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
a2520 a2539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2472 v2474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i680 i54 i137 i184 i25 i137 v247 i765 i765 i765 i765 i765 i765 i765 i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i3 
y: i60 
=== Succesors ===
=== Usages ===
v1494 v1493 v1366 v1457 ?641 v1468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2526 a2545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2468 v2473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1629 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1630 v2477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2466 v2469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2455 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2455 #trueSuccessor: v141 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600422177167317063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2491 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2570 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2570 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2491 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2491  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
i2491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575238452998694257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2492 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2492  <|@  <|@
f <@~|@floating>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
i2492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2571 
=== Succesors ===
next: v1686 
=== Usages ===
v238 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2571 #next: v1686  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2492 
y: i1192 
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2492 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v1685 
falseSuccessor: v1683 
=== Usages ===
=== Predecessor ===
i2492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v1685 #falseSuccessor: v1683  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2294 
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2294  <|@  <|@
f <@~|@floating>@ <|@
tid i2295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -307987
stableDimension: 0
stamp: i32 [-307987] â‡Š00000000fffb4ced â‡ˆ00000000fffb4ced
stampKind: i32
value: int[-307987|0xfffffffffffb4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B101" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B127" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1690 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2490 
y: v2450 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2490 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2456 
=== Succesors ===
trueSuccessor: v1687 
falseSuccessor: v1689 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2456 #trueSuccessor: v1687 #falseSuccessor: v1689  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2493 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2570 
=== Succesors ===
next: v2494 
=== Usages ===
?908 v2618 v2572 v2573 ?446 v2637 
=== Predecessor ===
v1687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2570 #next: v2494  <|@  <|@
f <@~|@floating>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
v2494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2618 
=== Succesors ===
next: v335 
=== Usages ===
v2458 v2457 
=== Predecessor ===
a2493 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2618 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2494 
y: v2454 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2494 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
i2495 a2497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1150 i1192 
=== Succesors ===
=== Usages ===
?381 ?322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1150 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2457 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v2494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2457 #trueSuccessor: v328 #falseSuccessor: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595917824668068765
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2495 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2572 
=== Succesors ===
next: v389 
=== Usages ===
v386 
=== Predecessor ===
v328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2572 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2495 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2495  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
i2495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4570733895526242420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2496 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2496  <|@  <|@
f <@~|@floating>@ <|@
tid v2573 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
i2496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2573 
=== Succesors ===
next: v1698 
=== Usages ===
v390 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2573 #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2496 
y: i1192 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2496 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v1697 
falseSuccessor: v1695 
=== Usages ===
=== Predecessor ===
i2496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v1697 #falseSuccessor: v1695  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2300 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2300  <|@  <|@
f <@~|@floating>@ <|@
tid i2301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310547
stableDimension: 0
stamp: i32 [-310547] â‡Š00000000fffb42ed â‡ˆ00000000fffb42ed
stampKind: i32
value: int[-310547|0xfffffffffffb42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B101" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B126" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1702 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1702  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2494 
y: v2450 
=== Succesors ===
=== Usages ===
v1702 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2494 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2458 
=== Succesors ===
trueSuccessor: v1699 
falseSuccessor: v1701 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2458 #trueSuccessor: v1699 #falseSuccessor: v1701  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2497 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2572 
=== Succesors ===
next: v2498 
=== Usages ===
?464 v2619 v2574 v2575 ?573 v2636 
=== Predecessor ===
v1699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2572 #next: v2498  <|@  <|@
f <@~|@floating>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
v2498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2619 
=== Succesors ===
next: v412 
=== Usages ===
v2460 v2459 
=== Predecessor ===
a2497 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2619 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2498 
y: v2454 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2498 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2574 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
i2499 a2501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?308 
values: a2489 i1192 
=== Succesors ===
=== Usages ===
?446 ?2252 ?908 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2489 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2459 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
v2498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2459 #trueSuccessor: v405 #falseSuccessor: v411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591413472252786285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2499 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2574 
=== Succesors ===
next: v454 
=== Usages ===
v451 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2574 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2499 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2499  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
i2499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4566229338160616523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2500 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2500  <|@  <|@
f <@~|@floating>@ <|@
tid v2575 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2575 
=== Succesors ===
next: v1710 
=== Usages ===
v455 
=== Predecessor ===
v453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2575 #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2500 
y: i1192 
=== Succesors ===
=== Usages ===
v1710 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2500 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v1709 
falseSuccessor: v1707 
=== Usages ===
=== Predecessor ===
i2500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v1709 #falseSuccessor: v1707  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2306 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2306  <|@  <|@
f <@~|@floating>@ <|@
tid i2307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313107
stableDimension: 0
stamp: i32 [-313107] â‡Š00000000fffb38ed â‡ˆ00000000fffb38ed
stampKind: i32
value: int[-313107|0xfffffffffffb38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B101" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B125" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1714 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1714  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2498 
y: v2450 
=== Succesors ===
=== Usages ===
v1714 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2498 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2460 
=== Succesors ===
trueSuccessor: v1711 
falseSuccessor: v1713 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2460 #trueSuccessor: v1711 #falseSuccessor: v1713  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2501 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2574 
=== Succesors ===
next: v2502 
=== Usages ===
?591 v2620 v2576 v2577 ?2249 v2635 
=== Predecessor ===
v1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2574 #next: v2502  <|@  <|@
f <@~|@floating>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2620 
=== Succesors ===
next: v477 
=== Usages ===
v2462 v2461 
=== Predecessor ===
a2501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2620 #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2502 
y: v2454 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2502 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2576 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
i2503 a2505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: a2493 i1192 
=== Succesors ===
=== Usages ===
?573 ?2251 ?464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2493 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2461 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v2502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2461 #trueSuccessor: v470 #falseSuccessor: v476  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586909119921460260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2503 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2576 
=== Succesors ===
next: v490 
=== Usages ===
v487 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2576 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2503 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2503  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v488 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i2503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v488 #falseSuccessor: v489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4561724780901804654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2504 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2504  <|@  <|@
f <@~|@floating>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
i2504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2577 
=== Succesors ===
next: v1722 
=== Usages ===
v491 
=== Predecessor ===
v489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2577 #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2504 
y: i1192 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2504 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v1721 
falseSuccessor: v1719 
=== Usages ===
=== Predecessor ===
i2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v1721 #falseSuccessor: v1719  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2312 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid i2313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315667
stableDimension: 0
stamp: i32 [-315667] â‡Š00000000fffb2eed â‡ˆ00000000fffb2eed
stampKind: i32
value: int[-315667|0xfffffffffffb2eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B101" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B124" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2502 
y: v2450 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2502 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2462 
=== Succesors ===
trueSuccessor: v1723 
falseSuccessor: v1725 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2462 #trueSuccessor: v1723 #falseSuccessor: v1725  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2505 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2505 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2576 
=== Succesors ===
next: v2506 
=== Usages ===
a1237 v2621 v2578 v2579 
=== Predecessor ===
v1723 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2576 #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2505 
=== Succesors ===
=== Usages ===
v2506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2621 
=== Succesors ===
next: v604 
=== Usages ===
v2463 
=== Predecessor ===
a2505 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2621 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2506 
y: v2454 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2506 y: v2454  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: a2497 i1192 
=== Succesors ===
=== Usages ===
?2250 ?2249 ?591 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2497 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2463 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v2506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2463 #trueSuccessor: v597 #falseSuccessor: v603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582404767674081325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2507 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2507  <|@  <|@
f <@~|@floating>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2505 
=== Succesors ===
=== Usages ===
i2507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2578 
=== Succesors ===
next: v617 
=== Usages ===
v614 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2578 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2507 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2507  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v614 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i2507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v614 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557220223749794897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2508 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2508  <|@  <|@
f <@~|@floating>@ <|@
tid v2579 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2505 
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2579 
=== Succesors ===
next: v1734 
=== Usages ===
v618 
=== Predecessor ===
v616 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2579 #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2508 
y: i1192 
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2508 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v1733 
falseSuccessor: v1731 
=== Usages ===
=== Predecessor ===
i2508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v1733 #falseSuccessor: v1731  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2316 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2316  <|@  <|@
f <@~|@floating>@ <|@
tid i2317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -318227
stableDimension: 0
stamp: i32 [-318227] â‡Š00000000fffb24ed â‡ˆ00000000fffb24ed
stampKind: i32
value: int[-318227|0xfffffffffffb24ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v1731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B68" 
    xhandlers
    flags 
    probability 4582403262769777919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i561 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i561  <|@  <|@
f <@~|@floating>@ <|@
tid a1237 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2505 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2505  <|@  <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@613dc514
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1237 i1192 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1237 i1192  <|@  <|@
tid ?2249 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: a2501 i1192 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2501 i1192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i561 <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1244 
stateDuring: ?2249 
=== Succesors ===
next: v566 
=== Usages ===
v563 
=== Predecessor ===
v603 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1244 stateDuring: ?2249 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i561 
y: i47 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i561 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v565 
=== Usages ===
=== Predecessor ===
i561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v564 #falseSuccessor: v565  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4552798983856413865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B67" 
    xhandlers
    flags 
    probability 4559598263284264275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v924 v925 
=== Succesors ===
next: a2509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v924 v925 #next: a2509  <|@  <|@
f <@~|@floating>@ <|@
tid v2635 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
a2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2635 
=== Succesors ===
next: v2630 
=== Usages ===
a1247 v2630 
=== Predecessor ===
v923 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2635 #next: v2630  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?573 
values: a2501 i1192 i47 
=== Succesors ===
=== Usages ===
v2630 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2501 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?591 
object: a2509 
=== Succesors ===
next: i569 
=== Usages ===
=== Predecessor ===
a2509 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?591 object: a2509 #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid a1247 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2509 
=== Succesors ===
=== Usages ===
v1251 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2509  <|@  <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2bf2aeb5
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1247 i1192 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1247 i1192  <|@  <|@
tid ?2250 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: - - 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1251 
stateDuring: ?2250 
=== Succesors ===
next: v439 
=== Usages ===
v436 
=== Predecessor ===
v2630 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1251 stateDuring: ?2250 #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i569 
y: i47 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i569 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v437 #falseSuccessor: v438  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4529912261451577748
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B66" 
    xhandlers
    flags 
    probability 4561789610867207777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v892 
=== Succesors ===
next: a2510 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v892 #next: a2510  <|@  <|@
f <@~|@floating>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
a2510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2636 
=== Succesors ===
next: v2631 
=== Usages ===
a1254 v2631 
=== Predecessor ===
v890 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2636 #next: v2631  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?446 
values: a2497 i1192 i47 
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2497 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?464 
object: a2510 
=== Succesors ===
next: i442 
=== Usages ===
=== Predecessor ===
a2510 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?464 object: a2510 #next: i442  <|@  <|@
f <@~|@floating>@ <|@
tid a1254 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2510 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2510  <|@  <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7c30de92
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1254 i1192 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1254 i1192  <|@  <|@
tid ?2251 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: - - 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1258 
stateDuring: ?2251 
=== Succesors ===
next: v374 
=== Usages ===
v371 
=== Predecessor ===
v2631 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1258 stateDuring: ?2251 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i442 
y: i47 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i442 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
i442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4531674407468225965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B65" 
    xhandlers
    flags 
    probability 4566272750519685878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v909 
=== Succesors ===
next: a2511 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v909 #next: a2511  <|@  <|@
f <@~|@floating>@ <|@
tid v2637 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
a2511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2637 
=== Succesors ===
next: v2632 
=== Usages ===
a1261 v2632 
=== Predecessor ===
v906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2637 #next: v2632  <|@  <|@
tid ?908 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?381 
values: a2493 i1192 i47 
=== Succesors ===
=== Usages ===
v2632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2493 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?908 
object: a2511 
=== Succesors ===
next: i377 
=== Usages ===
=== Predecessor ===
a2511 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?908 object: a2511 #next: i377  <|@  <|@
f <@~|@floating>@ <|@
tid a1261 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2511 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2511  <|@  <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@55321700
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1261 i1192 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1261 i1192  <|@  <|@
tid ?2252 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: - - 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1265 
stateDuring: ?2252 
=== Succesors ===
next: v301 
=== Usages ===
v298 
=== Predecessor ===
v2632 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1265 stateDuring: ?2252 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i47 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4536164864144700316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4570777205206007899
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v876 
=== Succesors ===
next: a2512 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v876 #next: a2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2638 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
a2512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2638 
=== Succesors ===
next: v2513 
=== Usages ===
v2622 v2581 v2580 
=== Predecessor ===
v874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2638 #next: v2513  <|@  <|@
tid ?322 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?308 
values: a2489 i1192 i47 
=== Succesors ===
=== Usages ===
v2331 v2513 i2517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2489 i1192 i47  <|@  <|@
f <@~|@floating>@ <|@
tid v2622 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2512 
=== Succesors ===
=== Usages ===
v2513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2622 
=== Succesors ===
next: v520 
=== Usages ===
v2466 v2464 
=== Predecessor ===
a2512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2622 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2513 
y: v2454 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2513 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2512 
=== Succesors ===
=== Usages ===
i2514 a2516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2512  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2464 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v2513 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2464 #trueSuccessor: v513 #falseSuccessor: v519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2514 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2580 
=== Succesors ===
next: v581 
=== Usages ===
v578 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2580 #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2514 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2514  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
i2514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B71" 
    xhandlers
    flags 
    probability 4540615103374966341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2515 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2515  <|@  <|@
f <@~|@floating>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2512 
=== Succesors ===
=== Usages ===
i2515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2581 
=== Succesors ===
next: v1754 
=== Usages ===
v582 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2581 #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2515 
y: i1192 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2515 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v1753 
falseSuccessor: v1751 
=== Usages ===
=== Predecessor ===
i2515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v1753 #falseSuccessor: v1751  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid i2335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326163
stableDimension: 0
stamp: i32 [-326163] â‡Š00000000fffb05ed â‡ˆ00000000fffb05ed
stampKind: i32
value: int[-326163|0xfffffffffffb05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B63" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2513 
y: v2465 
=== Succesors ===
=== Usages ===
v1758 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2513 y: v2465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2466 
=== Succesors ===
trueSuccessor: v1755 
falseSuccessor: v1757 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2466 #trueSuccessor: v1755 #falseSuccessor: v1757  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1762 
=== Usages ===
=== Predecessor ===
v1758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2488 
y: i1629 
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2488 y: i1629  <|@  <|@
f <@*|@fixed>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2477 
=== Succesors ===
trueSuccessor: v1759 
falseSuccessor: v1761 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2477 #trueSuccessor: v1759 #falseSuccessor: v1761  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2516 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2580 
=== Succesors ===
next: i2517 
=== Usages ===
v2583 v2582 
=== Predecessor ===
v1759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2580 #next: i2517  <|@  <|@
f <@~|@floating>@ <|@
tid v2582 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
i2517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2582 
=== Succesors ===
next: v1770 
=== Usages ===
v1285 
=== Predecessor ===
a2516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2582 #next: v1770  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2517 
=== Succesors ===
=== Usages ===
v1770 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1192 y: i2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v1770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1285 
=== Succesors ===
trueSuccessor: v1767 
falseSuccessor: v1769 
=== Usages ===
=== Predecessor ===
i2517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1285 #trueSuccessor: v1767 #falseSuccessor: v1769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2518 
=== Usages ===
i2518 
=== Predecessor ===
v1770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2518  <|@  <|@
f <@~|@floating>@ <|@
tid j1515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2488 
=== Succesors ===
=== Usages ===
v2583 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2488  <|@  <|@
f <@~|@floating>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1515 
index: a2516 
=== Succesors ===
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1515 index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1767 
address: v2583 
=== Succesors ===
next: v626 
=== Usages ===
i1516 
=== Predecessor ===
v1767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1767 address: v2583 #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid i1516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2518 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2518  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
i2518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v1770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid i2341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -329243
stableDimension: 0
stamp: i32 [-329243] â‡Š00000000fffaf9e5 â‡ˆ00000000fffaf9e5
stampKind: i32
value: int[-329243|0xfffffffffffaf9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2338 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2338  <|@  <|@
f <@~|@floating>@ <|@
tid i2339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326675
stableDimension: 0
stamp: i32 [-326675] â‡Š00000000fffb03ed â‡ˆ00000000fffb03ed
stampKind: i32
value: int[-326675|0xfffffffffffb03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2336 
=== Usages ===
=== Predecessor ===
v1758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2336  <|@  <|@
f <@~|@floating>@ <|@
tid i2337 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326451
stableDimension: 0
stamp: i32 [-326451] â‡Š00000000fffb04cd â‡ˆ00000000fffb04cd
stampKind: i32
value: int[-326451|0xfffffffffffb04cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1757 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B55" "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2329 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-329243 - -324875] â‡Š00000000fffa00c5 â‡ˆ00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2326 
values: i2335 i2337 i2339 i2341 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2326 values: i2335 i2337 i2339 i2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2334 v2336 v2338 v2340 
=== Succesors ===
next: v2331 
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2334 v2336 v2338 v2340 #next: v2331  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?322 
actionAndReason: i2329 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2326 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?322 actionAndReason: i2329 speculation: a2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566186131160154920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B101" 
    xhandlers
    flags 
    probability 4561702786149069066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1064  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559533433318861152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582335552146031174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B68" "B42" 
    successors "B70" "B100" 
    xhandlers
    flags 
    probability 4587076404307842276
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v134 
values: i1516 i60 i60 
=== Succesors ===
=== Usages ===
i765 v77 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v134 values: i1516 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v626 v1011 v1046 
=== Succesors ===
next: v80 
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v626 v1011 v1046 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i47 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4557520402031344378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B11" "B53" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v858 v860 v972 
=== Succesors ===
next: a2519 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v858 v860 v972 #next: a2519  <|@  <|@
f <@~|@floating>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
a2519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2584 
=== Succesors ===
next: v2633 
=== Usages ===
v2624 v2633 v2595 v2598 
=== Predecessor ===
v857 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2584 #next: v2633  <|@  <|@
tid ?859 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1150 i1192 i47 
=== Succesors ===
=== Usages ===
v2379 v2633 v2521 i2523 i2527 v2634 i2532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1150 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2519 
=== Succesors ===
next: a2520 
=== Usages ===
=== Predecessor ===
a2519 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2519 #next: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2585 
=== Succesors ===
next: v2521 
=== Usages ===
a1300 v2623 v2586 v2590 v2594 
=== Predecessor ===
v2633 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2585 #next: v2521  <|@  <|@
f <@~|@floating>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
v2521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2623 
=== Succesors ===
next: v1782 
=== Usages ===
v2468 
=== Predecessor ===
a2520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2623 #next: v1782  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2521 
y: v2467 
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2521 y: v2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2468 
=== Succesors ===
trueSuccessor: v1779 
falseSuccessor: v1781 
=== Usages ===
=== Predecessor ===
v2521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2468 #trueSuccessor: v1779 #falseSuccessor: v1781  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2522 
=== Usages ===
=== Predecessor ===
v1782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2558 
=== Succesors ===
next: i2523 
=== Usages ===
a1304 v2587 
=== Predecessor ===
v1779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2558 #next: i2523  <|@  <|@
f <@~|@floating>@ <|@
tid v2587 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2522 
=== Succesors ===
=== Usages ===
i2523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2587 
=== Succesors ===
next: i2524 
=== Usages ===
v1312 
=== Predecessor ===
a2522 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2587 #next: i2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
i2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2586 
=== Succesors ===
next: v1790 
=== Usages ===
v2588 v1312 
=== Predecessor ===
i2523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2586 #next: v1790  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2524 
y: i2523 
=== Succesors ===
=== Usages ===
v1790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2524 y: i2523  <|@  <|@
f <@*|@fixed>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1312 
=== Succesors ===
trueSuccessor: v1787 
falseSuccessor: v1789 
=== Usages ===
=== Predecessor ===
i2524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1312 #trueSuccessor: v1787 #falseSuccessor: v1789  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2525 
=== Usages ===
i2525 
=== Predecessor ===
v1790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2525  <|@  <|@
f <@~|@floating>@ <|@
tid a1304 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2522 
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2522  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1304 
index: i2524 
=== Succesors ===
=== Usages ===
i2525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1304 index: i2524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1787 
address: v2588 
=== Succesors ===
next: v1794 
=== Usages ===
v169 v1357 i2255 
=== Predecessor ===
v1787 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1787 address: v2588 #next: v1794  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2525 
y: i47 
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2525 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v1793 
falseSuccessor: v1791 
=== Usages ===
=== Predecessor ===
i2525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v1793 #falseSuccessor: v1791  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2386 
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2386  <|@  <|@
f <@~|@floating>@ <|@
tid i2387 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337939
stableDimension: 0
stamp: i32 [-337939] â‡Š00000000fffad7ed â‡ˆ00000000fffad7ed
stampKind: i32
value: int[-337939|0xfffffffffffad7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B96" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2526 
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2589 
=== Succesors ===
next: i2527 
=== Usages ===
a1324 v2591 
=== Predecessor ===
v1791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2589 #next: i2527  <|@  <|@
f <@~|@floating>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2526 
=== Succesors ===
=== Usages ===
i2527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2591 
=== Succesors ===
next: i2528 
=== Usages ===
v1359 v1350 
=== Predecessor ===
a2526 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2591 #next: i2528  <|@  <|@
f <@~|@floating>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
i2528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2590 
=== Succesors ===
next: v1802 
=== Usages ===
v1350 i184 v2592 
=== Predecessor ===
i2527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2590 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2528 
y: i2527 
=== Succesors ===
=== Usages ===
v1802 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2528 y: i2527  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1350 
=== Succesors ===
trueSuccessor: v1799 
falseSuccessor: v1801 
=== Usages ===
=== Predecessor ===
i2528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1350 #trueSuccessor: v1799 #falseSuccessor: v1801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B95" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1806 
=== Usages ===
i2537 v1357 
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2528 
y: i60 
=== Succesors ===
=== Usages ===
v2593 v1359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2528 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i2527 
=== Succesors ===
=== Usages ===
v1806 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i184 y: i2527  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1359 
=== Succesors ===
trueSuccessor: v1803 
falseSuccessor: v1805 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1359 #trueSuccessor: v1803 #falseSuccessor: v1805  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2529 
=== Usages ===
i2536 v1366 
=== Predecessor ===
v1806 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2529  <|@  <|@
f <@~|@floating>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
a2529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2594 
=== Succesors ===
next: v2634 
=== Usages ===
a1369 v2634 v2625 
=== Predecessor ===
v1803 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2594 #next: v2634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2529 
=== Succesors ===
next: v2530 
=== Usages ===
=== Predecessor ===
a2529 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2529 #next: v2530  <|@  <|@
f <@~|@floating>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
v2530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2624 
=== Succesors ===
next: v164 
=== Usages ===
v2470 v2469 
=== Predecessor ===
v2634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2624 #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2530 
y: v2465 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2530 y: v2465  <|@  <|@
f <@~|@floating>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
a2531 i2534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2469 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
v2530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2469 #trueSuccessor: v157 #falseSuccessor: v163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2531 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2595 
=== Succesors ===
next: i2532 
=== Usages ===
v2597 v2596 
=== Predecessor ===
v157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2595 #next: i2532  <|@  <|@
f <@~|@floating>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2531 
=== Succesors ===
=== Usages ===
i2532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2596 
=== Succesors ===
next: v1818 
=== Usages ===
v1380 
=== Predecessor ===
a2531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2596 #next: v1818  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2532 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1192 y: i2532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1380 
=== Succesors ===
trueSuccessor: v1815 
falseSuccessor: v1817 
=== Usages ===
=== Predecessor ===
i2532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1380 #trueSuccessor: v1815 #falseSuccessor: v1817  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1822 
=== Usages ===
i2533 
=== Predecessor ===
v1818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2488 
y: i1629 
=== Succesors ===
=== Usages ===
v1822 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2488 y: i1629  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1630 
=== Succesors ===
trueSuccessor: v1819 
falseSuccessor: v1821 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1630 #trueSuccessor: v1819 #falseSuccessor: v1821  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2533 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2533  <|@  <|@
f <@~|@floating>@ <|@
tid j2476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2488 
=== Succesors ===
=== Usages ===
v2597 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2488  <|@  <|@
f <@~|@floating>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j2476 
index: a2531 
=== Succesors ===
=== Usages ===
i2533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2476 index: a2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1815 
address: v2597 
=== Succesors ===
next: v1838 
=== Usages ===
i1525 
=== Predecessor ===
v1819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1815 address: v2597 #next: v1838  <|@  <|@
f <@~|@floating>@ <|@
tid i1525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2533 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2533  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1525 
y: i47 
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1525 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v1837 
falseSuccessor: v1835 
=== Usages ===
=== Predecessor ===
i2533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v1837 #falseSuccessor: v1835  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1836  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?62 
values: a1150 a2 i3 a4 i1192 i47 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1150 a2 i3 a4 i1192 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1297
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1837 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2629 
=== Usages ===
=== Predecessor ===
v1838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2629  <|@  <|@
f <@*|@fixed>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
v1835 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2408 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2408  <|@  <|@
f <@~|@floating>@ <|@
tid i2409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -350995
stableDimension: 0
stamp: i32 [-350995] â‡Š00000000fffaa4ed â‡ˆ00000000fffaa4ed
stampKind: i32
value: int[-350995|0xfffffffffffaa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2406 
=== Usages ===
=== Predecessor ===
v1818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid i2407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -353563
stableDimension: 0
stamp: i32 [-353563] â‡Š00000000fffa9ae5 â‡ˆ00000000fffa9ae5
stampKind: i32
value: int[-353563|0xfffffffffffa9ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B86" "B94" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2530 
y: v2454 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2530 y: v2454  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2470 
=== Succesors ===
trueSuccessor: v1823 
falseSuccessor: v1825 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2470 #trueSuccessor: v1823 #falseSuccessor: v1825  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2534 
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2595 
=== Succesors ===
next: v1830 
=== Usages ===
v347 
=== Predecessor ===
v1823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2595 #next: v1830  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2534 
=== Succesors ===
=== Usages ===
v1830 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2534  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1829 
falseSuccessor: v1827 
=== Usages ===
=== Predecessor ===
i2534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1829 #falseSuccessor: v1827  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2400 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2400  <|@  <|@
f <@~|@floating>@ <|@
tid i2401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355859
stableDimension: 0
stamp: i32 [-355859] â‡Š00000000fffa91ed â‡ˆ00000000fffa91ed
stampKind: i32
value: int[-355859|0xfffffffffffa91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2535 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2598 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
i2535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2598 
=== Succesors ===
next: v1834 
=== Usages ===
v351 
=== Predecessor ===
v1827 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2598 #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2535 
y: i1192 
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2535 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v1833 
falseSuccessor: v1831 
=== Usages ===
=== Predecessor ===
i2535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v1833 #falseSuccessor: v1831  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@~|@floating>@ <|@
tid i2405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -356115
stableDimension: 0
stamp: i32 [-356115] â‡Š00000000fffa90ed â‡ˆ00000000fffa90ed
stampKind: i32
value: int[-356115|0xfffffffffffa90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
v1831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B82" "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2629 v89 
=== Succesors ===
next: i2536 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2629 v89 #next: i2536  <|@  <|@
f <@~|@floating>@ <|@
tid a1324 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2526 
=== Succesors ===
=== Usages ===
v2592 a652 v2593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2526  <|@  <|@
f <@~|@floating>@ <|@
tid v2593 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1324 
index: i184 
=== Succesors ===
=== Usages ===
v1366 i2536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1324 index: i184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1803 
address: v2593 
=== Succesors ===
next: i2537 
=== Usages ===
i658 i656 
=== Predecessor ===
v2628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1803 address: v2593 #next: i2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2592 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1324 
index: i2528 
=== Succesors ===
=== Usages ===
v1357 i2537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1324 index: i2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1799 
address: v2592 
=== Succesors ===
next: v1357 
=== Usages ===
i655 i653 
=== Predecessor ===
i2536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1799 address: v2592 #next: v1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1799 
address: v2592 
value: i2525 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
i2537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1799 address: v2592 value: i2525 stateAfter: - lastLocationAccess: - #next: v1366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1803 
address: v2593 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2538 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1803 address: v2593 value: i54 stateAfter: - lastLocationAccess: - #next: v2538  <|@  <|@
f <@~|@floating>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2529 
=== Succesors ===
=== Usages ===
v2538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2625 
=== Succesors ===
next: v232 
=== Usages ===
v2472 
=== Predecessor ===
v1366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2625 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2538 
y: v2471 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2538 y: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid a1300 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2520 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7882672499463655
=== Inputs ===
condition: v2472 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2472 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 4573891535647145046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B116" 
    xhandlers
    flags 
    probability 4565423258108577047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid a1369 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2529 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2529  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid i2403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354611
stableDimension: 0
stamp: i32 [-354611] â‡Š00000000fffa96cd â‡ˆ00000000fffa96cd
stampKind: i32
value: int[-354611|0xfffffffffffa96cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v1806 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@~|@floating>@ <|@
tid i2397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -348187
stableDimension: 0
stamp: i32 [-348187] â‡Š00000000fffaafe5 â‡ˆ00000000fffaafe5
stampKind: i32
value: int[-348187|0xfffffffffffaafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2394 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2394  <|@  <|@
f <@~|@floating>@ <|@
tid i2395 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -345883
stableDimension: 0
stamp: i32 [-345883] â‡Š00000000fffab8e5 â‡ˆ00000000fffab8e5
stampKind: i32
value: int[-345883|0xfffffffffffab8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2388 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2388  <|@  <|@
f <@~|@floating>@ <|@
tid i2389 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336155
stableDimension: 0
stamp: i32 [-336155] â‡Š00000000fffadee5 â‡ˆ00000000fffadee5
stampKind: i32
value: int[-336155|0xfffffffffffadee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v1782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@~|@floating>@ <|@
tid i2385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333363
stableDimension: 0
stamp: i32 [-333363] â‡Š00000000fffae9cd â‡ˆ00000000fffae9cd
stampKind: i32
value: int[-333363|0xfffffffffffae9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B74" "B97" "B96" "B95" "B87" "B94" "B89" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2377 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-356115 - -331787] â‡Š00000000fffa80c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2374 
values: i2385 i2387 i2389 i2395 i2397 i2401 i2403 i2405 i2407 i2409 
=== Succesors ===
=== Usages ===
v2379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2374 values: i2385 i2387 i2389 i2395 i2397 i2401 i2403 i2405 i2407 i2409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2384 v2386 v2388 v2394 v2396 v2400 v2402 v2404 v2406 v2408 
=== Succesors ===
next: v2379 
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2384 v2386 v2388 v2394 v2396 v2400 v2402 v2404 v2406 v2408 #next: v2379  <|@  <|@
f <@*|@fixed>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
actionAndReason: i2377 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2374 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?859 actionAndReason: i2377 speculation: a2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B101" 
    xhandlers
    flags 
    probability 4587006991976692718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B65" "B14" "B21" "B56" "B28" "B66" "B35" "B67" 
    successors "B102" "B122" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v760 
values: i137 i60 i60 i60 i60 i60 i60 i60 i60 
=== Succesors ===
=== Usages ===
?762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: i137 i60 i60 i60 i60 i60 i60 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 v787 v804 v955 v1029 v1064 v1082 v1100 
=== Succesors ===
next: a2539 
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 v787 v804 v955 v1029 v1064 v1082 v1100 #next: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2585 
=== Succesors ===
next: v2540 
=== Usages ===
a1393 v2626 v2599 v2602 v2606 
=== Predecessor ===
v760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2585 #next: v2540  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1150 i1192 i765 
=== Succesors ===
=== Usages ===
v2357 v2540 i2542 i2546 v2549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1150 i1192 i765  <|@  <|@
f <@~|@floating>@ <|@
tid v2626 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
v2540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2626 
=== Succesors ===
next: v1846 
=== Usages ===
v2473 
=== Predecessor ===
a2539 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2626 #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2540 
y: v2467 
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2540 y: v2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2473 
=== Succesors ===
trueSuccessor: v1843 
falseSuccessor: v1845 
=== Usages ===
=== Predecessor ===
v2540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2473 #trueSuccessor: v1843 #falseSuccessor: v1845  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B121" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2541 
=== Usages ===
=== Predecessor ===
v1846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2558 
=== Succesors ===
next: i2542 
=== Usages ===
a1397 v2600 
=== Predecessor ===
v1843 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2558 #next: i2542  <|@  <|@
f <@~|@floating>@ <|@
tid v2600 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2541 
=== Succesors ===
=== Usages ===
i2542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2600 
=== Succesors ===
next: i2543 
=== Usages ===
v1405 
=== Predecessor ===
a2541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2600 #next: i2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2599 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
i2543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2599 
=== Succesors ===
next: v1854 
=== Usages ===
v2601 v1405 
=== Predecessor ===
i2542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2599 #next: v1854  <|@  <|@
f <@~|@floating>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2543 
y: i2542 
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2543 y: i2542  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1405 
=== Succesors ===
trueSuccessor: v1851 
falseSuccessor: v1853 
=== Usages ===
=== Predecessor ===
i2543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1405 #trueSuccessor: v1851 #falseSuccessor: v1853  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2544 
=== Usages ===
i2544 
=== Predecessor ===
v1854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2544  <|@  <|@
f <@~|@floating>@ <|@
tid a1397 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2541 
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2541  <|@  <|@
f <@~|@floating>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1397 
index: i2543 
=== Succesors ===
=== Usages ===
i2544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1397 index: i2543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1851 
address: v2601 
=== Succesors ===
next: v1858 
=== Usages ===
v672 v1448 i2255 
=== Predecessor ===
v1851 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1851 address: v2601 #next: v1858  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2544 
y: i47 
=== Succesors ===
=== Usages ===
v1858 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2544 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v1857 
falseSuccessor: v1855 
=== Usages ===
=== Predecessor ===
i2544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v1857 #falseSuccessor: v1855  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2362 
=== Usages ===
=== Predecessor ===
v1858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2362  <|@  <|@
f <@~|@floating>@ <|@
tid i2363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -361747
stableDimension: 0
stamp: i32 [-361747] â‡Š00000000fffa7aed â‡ˆ00000000fffa7aed
stampKind: i32
value: int[-361747|0xfffffffffffa7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B120" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2545 
=== Usages ===
=== Predecessor ===
v1858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2589 
=== Succesors ===
next: i2546 
=== Usages ===
a1415 v2603 
=== Predecessor ===
v1855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2589 #next: i2546  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2545 
=== Succesors ===
=== Usages ===
i2546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2603 
=== Succesors ===
next: i2547 
=== Usages ===
v1450 v1441 
=== Predecessor ===
a2545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2603 #next: i2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
i2547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2602 
=== Succesors ===
next: v1866 
=== Usages ===
v1441 v2604 i680 
=== Predecessor ===
i2546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2602 #next: v1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2547 
y: i2546 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2547 y: i2546  <|@  <|@
f <@*|@fixed>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1441 
=== Succesors ===
trueSuccessor: v1863 
falseSuccessor: v1865 
=== Usages ===
=== Predecessor ===
i2547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1441 #trueSuccessor: v1863 #falseSuccessor: v1865  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B119" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1870 
=== Usages ===
i2551 v1448 
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1870  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2547 
y: i60 
=== Succesors ===
=== Usages ===
v1450 v2605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2547 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i2546 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i680 y: i2546  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1450 
=== Succesors ===
trueSuccessor: v1867 
falseSuccessor: v1869 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1450 #trueSuccessor: v1867 #falseSuccessor: v1869  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B115" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2548 
=== Usages ===
i2550 v1457 
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2548  <|@  <|@
f <@~|@floating>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
a2548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2606 
=== Succesors ===
next: v2549 
=== Usages ===
a1460 v2627 
=== Predecessor ===
v1867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2606 #next: v2549  <|@  <|@
f <@~|@floating>@ <|@
tid v2627 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2548 
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2549 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2627 
=== Succesors ===
next: i2550 
=== Usages ===
v2474 
=== Predecessor ===
a2548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2627 #next: i2550  <|@  <|@
f <@~|@floating>@ <|@
tid a1415 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2545 
=== Succesors ===
=== Usages ===
v2604 a652 v2605 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2545  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1415 
index: i680 
=== Succesors ===
=== Usages ===
v1457 i2550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1415 index: i680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1867 
address: v2605 
=== Succesors ===
next: i2551 
=== Usages ===
i656 i658 
=== Predecessor ===
v2549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1867 address: v2605 #next: i2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1415 
index: i2547 
=== Succesors ===
=== Usages ===
v1448 i2551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1415 index: i2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1863 
address: v2604 
=== Succesors ===
next: v1448 
=== Usages ===
i653 i655 
=== Predecessor ===
i2550 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1863 address: v2604 #next: v1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1863 
address: v2604 
value: i2544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
i2551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1863 address: v2604 value: i2544 stateAfter: - lastLocationAccess: - #next: v1457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1867 
address: v2605 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1867 address: v2605 value: i54 stateAfter: - lastLocationAccess: - #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2549 
y: v2471 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2549 y: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid a1393 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2539 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2539  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7882672499463655
=== Inputs ===
condition: v2474 
=== Succesors ===
trueSuccessor: v684 
falseSuccessor: v689 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2474 #trueSuccessor: v684 #falseSuccessor: v689  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4603439295021643013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B92" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a648 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1300 a1393 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1300 a1393  <|@  <|@
f <@~|@floating>@ <|@
tid i2255 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2525 i2544 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2525 i2544  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1324 a1415 
=== Succesors ===
=== Usages ===
v2612 v2611 v2610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1324 a1415  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2537 i2551 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2537 i2551  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2536 i2550 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2536 i2550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v640 v642 
=== Succesors ===
next: i2552 
=== Usages ===
a648 i2255 a652 i655 i658 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v640 v642 #next: i2552  <|@  <|@
f <@~|@floating>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2607 
=== Succesors ===
next: v1878 
=== Usages ===
v247 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2607 #next: v1878  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2552 
y: i60 
=== Succesors ===
=== Usages ===
v1878 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2552 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1877 
falseSuccessor: v1875 
=== Usages ===
=== Predecessor ===
i2552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1877 #falseSuccessor: v1875  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2343 
=== Usages ===
=== Predecessor ===
v1878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2343  <|@  <|@
f <@~|@floating>@ <|@
tid i2344 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -375059
stableDimension: 0
stamp: i32 [-375059] â‡Š00000000fffa46ed â‡ˆ00000000fffa46ed
stampKind: i32
value: int[-375059|0xfffffffffffa46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2342 
=== Predecessor ===
v1877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B114" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2553 
=== Usages ===
=== Predecessor ===
v1878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2553  <|@  <|@
f <@~|@floating>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
i2553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2610 
=== Succesors ===
next: v1886 
=== Usages ===
v1626 
=== Predecessor ===
v1875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2610 #next: v1886  <|@  <|@
f <@~|@floating>@ <|@
tid i1134 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2553 
y: i1134 
=== Succesors ===
=== Usages ===
v1886 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2553 y: i1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1626 
=== Succesors ===
trueSuccessor: v1885 
falseSuccessor: v1883 
=== Usages ===
=== Predecessor ===
i2553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1626 #trueSuccessor: v1885 #falseSuccessor: v1883  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2350 
=== Usages ===
=== Predecessor ===
v1886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2350  <|@  <|@
f <@~|@floating>@ <|@
tid i2351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392475
stableDimension: 0
stamp: i32 [-392475] â‡Š00000000fffa02e5 â‡ˆ00000000fffa02e5
stampKind: i32
value: int[-392475|0xfffffffffffa02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2342 
=== Predecessor ===
v1885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" "B112" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2345 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-392475 - -375059] â‡Š00000000fffa02e5 â‡ˆ00000000fffa46ed
valueDescription: i32
=== Inputs ===
merge: v2342 
values: i2344 i2351 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2342 values: i2344 i2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2343 v2350 
=== Succesors ===
next: v2347 
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2343 v2350 #next: v2347  <|@  <|@
tid ?641 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a648 a2 i54 a4 i2255 i655 i658 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a648 a2 i54 a4 i2255 i655 i658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?641 
actionAndReason: i2345 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2342 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?641 actionAndReason: i2345 speculation: a2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1468 
=== Usages ===
v1484 v1493 
=== Predecessor ===
v1886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1468  <|@  <|@
f <@~|@floating>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2608 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2554 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2608 value: i54 stateAfter: - lastLocationAccess: - #next: i2554  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2609 
=== Succesors ===
next: v1484 
=== Usages ===
v1484 
=== Predecessor ===
v1468 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2609 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1883 
address: v2611 
value: i2554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
i2554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1883 address: v2611 value: i2554 stateAfter: - lastLocationAccess: - #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1883 
address: v2612 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1883 address: v2612 value: i54 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B116" 
    xhandlers
    flags 
    probability 4594823854284282252
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid a1460 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2548 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2548  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B93" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a647 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1300 a1393 
=== Succesors ===
=== Usages ===
?190 ?2253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1300 a1393  <|@  <|@
f <@~|@floating>@ <|@
tid a659 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1369 a1460 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1369 a1460  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2537 i2551 
=== Succesors ===
=== Usages ===
?190 ?2253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2537 i2551  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2536 i2550 
=== Succesors ===
=== Usages ===
?190 ?2253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2536 i2550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v644 v646 
=== Succesors ===
next: i189 
=== Usages ===
a647 a659 i653 i656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v644 v646 #next: i189  <|@  <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5aa86dd7
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a659 a2 i54 a4 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a659 a2 i54 a4  <|@  <|@
tid ?2253 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1494 
stateDuring: ?2253 
=== Succesors ===
next: v1890 
=== Usages ===
v191 
=== Predecessor ===
v643 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1494 stateDuring: ?2253 #next: v1890  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i47 
=== Succesors ===
=== Usages ===
v1890 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i189 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v1889 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
i189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v1889 #falseSuccessor: v1887  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1888 
=== Usages ===
=== Predecessor ===
v1890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1888  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 i47 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1495
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B135" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v1890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2372  <|@  <|@
f <@~|@floating>@ <|@
tid i2373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -371483
stableDimension: 0
stamp: i32 [-371483] â‡Š00000000fffa54e5 â‡ˆ00000000fffa54e5
stampKind: i32
value: int[-371483|0xfffffffffffa54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1869 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2370 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2370  <|@  <|@
f <@~|@floating>@ <|@
tid i2371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -369179
stableDimension: 0
stamp: i32 [-369179] â‡Š00000000fffa5de5 â‡ˆ00000000fffa5de5
stampKind: i32
value: int[-369179|0xfffffffffffa5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2364 
=== Usages ===
=== Predecessor ===
v1854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2364  <|@  <|@
f <@~|@floating>@ <|@
tid i2365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359963
stableDimension: 0
stamp: i32 [-359963] â‡Š00000000fffa81e5 â‡ˆ00000000fffa81e5
stampKind: i32
value: int[-359963|0xfffffffffffa81e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v1846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2360  <|@  <|@
f <@~|@floating>@ <|@
tid i2361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357171
stableDimension: 0
stamp: i32 [-357171] â‡Š00000000fffa8ccd â‡ˆ00000000fffa8ccd
stampKind: i32
value: int[-357171|0xfffffffffffa8ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B104" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2355 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-374027 - -356875] â‡Š00000000fffa00c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2352 
values: i2361 i2363 i2365 i2371 i2373 
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2352 values: i2361 i2363 i2365 i2371 i2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2360 v2362 v2364 v2370 v2372 
=== Succesors ===
next: v2357 
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2360 v2362 v2364 v2370 v2372 #next: v2357  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?762 
actionAndReason: i2355 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?762 actionAndReason: i2355 speculation: a2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2314 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2314  <|@  <|@
f <@~|@floating>@ <|@
tid i2315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315955
stableDimension: 0
stamp: i32 [-315955] â‡Š00000000fffb2dcd â‡ˆ00000000fffb2dcd
stampKind: i32
value: int[-315955|0xfffffffffffb2dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2308 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2308  <|@  <|@
f <@~|@floating>@ <|@
tid i2309 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313395
stableDimension: 0
stamp: i32 [-313395] â‡Š00000000fffb37cd â‡ˆ00000000fffb37cd
stampKind: i32
value: int[-313395|0xfffffffffffb37cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2302 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2302  <|@  <|@
f <@~|@floating>@ <|@
tid i2303 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310835
stableDimension: 0
stamp: i32 [-310835] â‡Š00000000fffb41cd â‡ˆ00000000fffb41cd
stampKind: i32
value: int[-310835|0xfffffffffffb41cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2296 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2296  <|@  <|@
f <@~|@floating>@ <|@
tid i2297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308275
stableDimension: 0
stamp: i32 [-308275] â‡Š00000000fffb4bcd â‡ˆ00000000fffb4bcd
stampKind: i32
value: int[-308275|0xfffffffffffb4bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2290 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2290  <|@  <|@
f <@~|@floating>@ <|@
tid i2291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305427
stableDimension: 0
stamp: i32 [-305427] â‡Š00000000fffb56ed â‡ˆ00000000fffb56ed
stampKind: i32
value: int[-305427|0xfffffffffffb56ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid i2289 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303387
stableDimension: 0
stamp: i32 [-303387] â‡Š00000000fffb5ee5 â‡ˆ00000000fffb5ee5
stampKind: i32
value: int[-303387|0xfffffffffffb5ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2286 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2286  <|@  <|@
f <@~|@floating>@ <|@
tid i2287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302611
stableDimension: 0
stamp: i32 [-302611] â‡Š00000000fffb61ed â‡ˆ00000000fffb61ed
stampKind: i32
value: int[-302611|0xfffffffffffb61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1669 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2280 
=== Usages ===
=== Predecessor ===
v1658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2280  <|@  <|@
f <@~|@floating>@ <|@
tid i2281 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300083
stableDimension: 0
stamp: i32 [-300083] â‡Š00000000fffb6bcd â‡ˆ00000000fffb6bcd
stampKind: i32
value: int[-300083|0xfffffffffffb6bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2276 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2276  <|@  <|@
f <@~|@floating>@ <|@
tid i2277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299539
stableDimension: 0
stamp: i32 [-299539] â‡Š00000000fffb6ded â‡ˆ00000000fffb6ded
stampKind: i32
value: int[-299539|0xfffffffffffb6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B5" "B131" "B130" "B129" "B128" "B13" "B127" "B20" "B126" "B27" "B125" "B34" "B124" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2273 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-318227 - -299539] â‡Š00000000fffb00c5 â‡ˆ00000000fffb7ffd
valueDescription: i32
=== Inputs ===
merge: v2270 
values: i2277 i2279 i2281 i2287 i2289 i2291 i2295 i2297 i2301 i2303 i2307 i2309 i2313 i2315 i2317 
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2270 values: i2277 i2279 i2281 i2287 i2289 i2291 i2295 i2297 i2301 i2303 i2307 i2309 i2313 i2315 i2317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2276 v2278 v2280 v2286 v2288 v2290 v2294 v2296 v2300 v2302 v2306 v2308 v2312 v2314 v2316 
=== Succesors ===
next: v2275 
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2276 v2278 v2280 v2286 v2288 v2290 v2294 v2296 v2300 v2302 v2306 v2308 v2312 v2314 v2316 #next: v2275  <|@  <|@
f <@*|@fixed>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i2273 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2270 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i2273 speculation: a2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B135" 
    xhandlers
    flags 
    probability 4598186409504408312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v2613 <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2482 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2613 
=== Succesors ===
next: j1502 
=== Usages ===
v2614 v1503 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2613 #next: j1502  <|@  <|@
f <@~|@floating>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v1499 
index: - 
=== Succesors ===
=== Usages ===
j1502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1499 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2614 
=== Succesors ===
next: i15 
=== Usages ===
v1503 
=== Predecessor ===
v1499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2614 #next: i15  <|@  <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6411f731
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j1502 
metaspaceMethod: v1499 
arguments: a1150 a2 i3 a4 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j1502 metaspaceMethod: v1499 arguments: a1150 a2 i3 a4  <|@  <|@
tid ?2248 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2483 - 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2483 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1503 
stateDuring: ?2248 
=== Succesors ===
next: v24 
=== Usages ===
i25 
=== Predecessor ===
j1502 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1503 stateDuring: ?2248 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
i15 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B118" "B114" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v22 
values: i15 i60 i60 
=== Succesors ===
=== Usages ===
?23 v21 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: i15 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v30 v703 
=== Succesors ===
next: a2555 
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v30 v703 #next: a2555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2558 
=== Succesors ===
next: i2556 
=== Usages ===
a1153 v2563 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2558 #next: i2556  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2483 - i25 
=== Succesors ===
=== Usages ===
v2323 i2556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2483 - i25  <|@  <|@
f <@~|@floating>@ <|@
tid v2563 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2555 
=== Succesors ===
=== Usages ===
i2556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v2563 
=== Succesors ===
next: i2557 
=== Usages ===
v1160 
=== Predecessor ===
a2555 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v2563 #next: i2557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2559 
=== Succesors ===
next: v1898 
=== Usages ===
v2564 v1160 
=== Predecessor ===
i2556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2559 #next: v1898  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2557 
y: i2556 
=== Succesors ===
=== Usages ===
v1898 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2557 y: i2556  <|@  <|@
f <@*|@fixed>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1160 
=== Succesors ===
trueSuccessor: v1895 
falseSuccessor: v1897 
=== Usages ===
=== Predecessor ===
i2557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1160 #trueSuccessor: v1895 #falseSuccessor: v1897  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
v1167 
=== Predecessor ===
v1898 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid a1153 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2555 
=== Succesors ===
=== Usages ===
v2564 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1153 
index: i2557 
=== Succesors ===
=== Usages ===
v1167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1153 index: i2557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1895 
address: v2564 
value: i2483 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1895 address: v2564 value: i2483 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 46]
stamp: void
=== Inputs ===
result: i25 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i25 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2323 
=== Usages ===
=== Predecessor ===
v1898 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2323  <|@  <|@
f <@~|@floating>@ <|@
tid i2325 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297243
stableDimension: 0
stamp: i32 [-297243] â‡Š00000000fffb76e5 â‡ˆ00000000fffb76e5
stampKind: i32
value: int[-297243|0xfffffffffffb76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i2325 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i2325 speculation: a2260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2263 
=== Usages ===
=== Predecessor ===
v1642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid i2269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292123
stableDimension: 0
stamp: i32 [-292123] â‡Š00000000fffb8ae5 â‡ˆ00000000fffb8ae5
stampKind: i32
value: int[-292123|0xfffffffffffb8ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i2269 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i2269 speculation: a2260  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a2478 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$GroupHead;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2559 ?62 ?12 v2562 ?2248 ?23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2609 ?87 ?12 v1503 ?2253 v2608 ?2248 ?23 ?190 ?62 ?641 v1494 ?46 v2558 v2565 v2589 v2607 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1147 ?12 v1503 i54 v39 v199 v2568 ?46 ?87 v195 v1184 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?12 v1503 v1494 v2566 ?641 ?46 ?87 v2616 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4658
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - - 
=== Succesors ===
=== Usages ===
v2263 a2478 i2479 v2482 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2478 a2555 a2522 a2541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2478 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2558 
=== Succesors ===
next: i2479 
=== Usages ===
a1120 v2560 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2558 #next: i2479  <|@  <|@
f <@~|@floating>@ <|@
tid v2560 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2478 
=== Succesors ===
=== Usages ===
i2479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2479 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2560 
=== Succesors ===
next: i2480 
=== Usages ===
v1140 
=== Predecessor ===
a2478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2560 #next: i2480  <|@  <|@
f <@~|@floating>@ <|@
tid v2559 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2480 i2557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2480 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2559 
=== Succesors ===
next: v1642 
=== Usages ===
v1140 v2561 
=== Predecessor ===
i2479 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2559 #next: v1642  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2480 
y: i2479 
=== Succesors ===
=== Usages ===
v1642 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2480 y: i2479  <|@  <|@
f <@~|@floating>@ <|@
tid a2260 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2263 v2379 v2275 v2357 v2323 v2347 v2331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1140 
=== Succesors ===
trueSuccessor: v1639 
falseSuccessor: v1641 
=== Usages ===
=== Predecessor ===
i2480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1140 #trueSuccessor: v1639 #falseSuccessor: v1641  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e2f616f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2481 
=== Usages ===
i2483 v1147 
=== Predecessor ===
v1642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2481  <|@  <|@
f <@~|@floating>@ <|@
tid v2562 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2481 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2562 
=== Succesors ===
next: v2482 
=== Usages ===
a1150 v2615 v2569 v2584 v2585 
=== Predecessor ===
v1639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2562 #next: v2482  <|@  <|@
f <@~|@floating>@ <|@
tid v2615 <|@
result [v7|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
v2482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2482 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2615 
=== Succesors ===
next: i2483 
=== Usages ===
v2613 v2451 
=== Predecessor ===
a2481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2615 #next: i2483  <|@  <|@
f <@~|@floating>@ <|@
tid a1120 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2478 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2478  <|@  <|@
f <@~|@floating>@ <|@
tid v2561 <|@
result [v9|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1120 
index: i2480 
=== Succesors ===
=== Usages ===
v1147 i2483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1120 index: i2480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2483 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1639 
address: v2561 
=== Succesors ===
next: v1147 
=== Usages ===
?12 ?2248 v1167 ?62 ?23 
=== Predecessor ===
v2482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1639 address: v2561 #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1639 
address: v2561 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
i2483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1639 address: v2561 value: i3 stateAfter: - lastLocationAccess: - #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2451 v2456 v2458 v2460 v2462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2482 
y: v2450 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2482 y: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid a1150 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2481 
=== Succesors ===
=== Usages ===
?859 v1503 ?46 ?308 ?762 ?87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2481  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7493788324863577
=== Inputs ===
condition: v2451 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2451 #trueSuccessor: v29 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v9|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[.] + v6|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7493788324863577 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2484 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2484  <|@  <|@
f <@~|@floating>@ <|@
tid v2565 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2484 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2565 
=== Succesors ===
next: v1650 
=== Usages ===
v39 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2565 #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2484 
=== Succesors ===
=== Usages ===
v1650 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2484  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i2483 - 
=== Succesors ===
=== Usages ===
v2275 v2485 i2487 v2490 v2494 v2498 v2502 v2506 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i2483 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v1647 
falseSuccessor: v1649 
=== Usages ===
=== Predecessor ===
i2484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v1647 #falseSuccessor: v1649  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B131" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2485 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2616 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2485 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2616 
=== Succesors ===
next: v1658 
=== Usages ===
v2453 
=== Predecessor ===
v1647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2616 #next: v1658  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2453 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2485 
y: v2452 
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2485 y: v2452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1658 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2453 
=== Succesors ===
trueSuccessor: v1655 
falseSuccessor: v1657 
=== Usages ===
=== Predecessor ===
v2485 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2453 #trueSuccessor: v1655 #falseSuccessor: v1657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v48 ?859 v195 v77 v672 v169 v191 v298 ?591 v371 ?322 v436 ?908 ?464 v563 ?46 ?190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i47 
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v1661 
falseSuccessor: v1659 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v1661 #falseSuccessor: v1659  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2278 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2278  <|@  <|@
f <@~|@floating>@ <|@
tid i2279 <|@
result int[-300307|0xfffffffffffb6aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300307
stableDimension: 0
stamp: i32 [-300307] â‡Š00000000fffb6aed â‡ˆ00000000fffb6aed
stampKind: i32
value: int[-300307|0xfffffffffffb6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300307|0xfffffffffffb6aed]] destination: B5 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B130" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2486 
=== Usages ===
=== Predecessor ===
v1662 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2486  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a2486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2486 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2566 
=== Succesors ===
next: i2487 
=== Usages ===
a1176 v2567 
=== Predecessor ===
v1659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2566 #next: i2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2567 <|@
result [v13|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2486 
=== Succesors ===
=== Usages ===
i2487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2487 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2567 
=== Succesors ===
next: v1670 
=== Usages ===
v199 v1184 
=== Predecessor ===
a2486 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2567 #next: v1670  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2487 
=== Succesors ===
=== Usages ===
v1670 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1667 
falseSuccessor: v1669 
=== Usages ===
=== Predecessor ===
i2487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1667 #falseSuccessor: v1669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B129" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1674 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1674  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2487 
=== Succesors ===
=== Usages ===
v1674 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i2487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1184 
=== Succesors ===
trueSuccessor: v1671 
falseSuccessor: v1673 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1184 #trueSuccessor: v1671 #falseSuccessor: v1673  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B128" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2488 
=== Usages ===
i2488 
=== Predecessor ===
v1674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2488  <|@  <|@
f <@~|@floating>@ <|@
tid a1176 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2486 
=== Succesors ===
=== Usages ===
v2568 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2486  <|@  <|@
f <@~|@floating>@ <|@
tid v2568 <|@
result [v15|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1176 
index: i3 
=== Succesors ===
=== Usages ===
i2488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1176 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2488 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1671 
address: v2568 
=== Succesors ===
next: v1678 
=== Usages ===
i1192 j1515 v1628 v1630 j2476 v2477 
=== Predecessor ===
v1671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1671 address: v2568 #next: v1678  <|@  <|@
f <@~|@floating>@ <|@
tid i1627 <|@
result short[-10240|0xffffffffffffd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2488 
y: i1627 
=== Succesors ===
=== Usages ===
v1678 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2488 y: i1627  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1628 
=== Succesors ===
trueSuccessor: v1675 
falseSuccessor: v1677 
=== Usages ===
=== Predecessor ===
i2488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1628 #trueSuccessor: v1675 #falseSuccessor: v1677  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2489 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2489  <|@  <|@
f <@~|@floating>@ <|@
tid v2569 <|@
result [v7|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
a2489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2489 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2569 
=== Succesors ===
next: v2490 
=== Usages ===
?322 v2617 v2570 v2571 ?381 v2638 
=== Predecessor ===
v1675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2569 #next: v2490  <|@  <|@
f <@~|@floating>@ <|@
tid v2617 <|@
result [v17|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
v2490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2490 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2617 
=== Succesors ===
next: v148 
=== Usages ===
v2456 v2455 
=== Predecessor ===
a2489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2617 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2455 v2457 v2459 v2461 v2463 v2464 v2470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2490 
y: v2454 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2490 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2570 <|@
result [v17|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
i2491 a2493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2483 - 
=== Succesors ===
=== Usages ===
?194 ?46 ?87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2483 -  <|@  <|@
f <@~|@floating>@ <|@
tid i1192 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2488 
=== Succesors ===
=== Usages ===
v1380 ?762 v491 v487 ?308 ?859 v234 ?46 ?87 ?2249 v238 ?573 ?381 v614 v351 ?322 ?464 v455 v347 v390 v451 ?446 v1265 v386 ?908 v618 v1258 ?591 v582 v1285 v1244 v578 v1251 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2488  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: a1150 a2 i3 a4 i1192 
=== Succesors ===
=== Usages ===
?308 ?859 ?762 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1150 a2 i3 a4 i1192  <|@  <|@
tid ?194 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?62 
values: - - - - - 
=== Succesors ===
=== Usages ===
?2253 ?641 ?190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
a2520 a2539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2472 v2474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i680 i54 i137 i184 i25 i137 v247 i765 i765 i765 i765 i765 i765 i765 i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i3 
y: i60 
=== Succesors ===
=== Usages ===
v1494 v1493 v1366 v1457 ?641 v1468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2526 a2545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2468 v2473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1629 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1630 v2477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2466 v2469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2455 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v2490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2455 #trueSuccessor: v141 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600422177167317063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2491 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2491 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2570 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2570 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2491 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2491  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
i2491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575238452998694257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@*|@fixed>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2492 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2492  <|@  <|@
f <@~|@floating>@ <|@
tid v2571 <|@
result [v17|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
i2492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2492 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2571 
=== Succesors ===
next: v1686 
=== Usages ===
v238 
=== Predecessor ===
v236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2571 #next: v1686  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2492 
y: i1192 
=== Succesors ===
=== Usages ===
v1686 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2492 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1686 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v1685 
falseSuccessor: v1683 
=== Usages ===
=== Predecessor ===
i2492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v1685 #falseSuccessor: v1683  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2294 
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2294  <|@  <|@
f <@~|@floating>@ <|@
tid i2295 <|@
result int[-307987|0xfffffffffffb4ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -307987
stableDimension: 0
stamp: i32 [-307987] â‡Š00000000fffb4ced â‡ˆ00000000fffb4ced
stampKind: i32
value: int[-307987|0xfffffffffffb4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-307987|0xfffffffffffb4ced]] destination: B13 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B101" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v1686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@*|@fixed>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B14 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B127" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1690 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1690  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2490 
y: v2450 
=== Succesors ===
=== Usages ===
v1690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2490 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2456 
=== Succesors ===
trueSuccessor: v1687 
falseSuccessor: v1689 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2456 #trueSuccessor: v1687 #falseSuccessor: v1689  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2493 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2493 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2570 
=== Succesors ===
next: v2494 
=== Usages ===
?908 v2618 v2572 v2573 ?446 v2637 
=== Predecessor ===
v1687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2570 #next: v2494  <|@  <|@
f <@~|@floating>@ <|@
tid v2618 <|@
result [v21|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
v2494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2494 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2618 
=== Succesors ===
next: v335 
=== Usages ===
v2458 v2457 
=== Predecessor ===
a2493 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2618 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2494 
y: v2454 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2494 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
result [v21|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
i2495 a2497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1150 i1192 
=== Succesors ===
=== Usages ===
?381 ?322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1150 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2457 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v2494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2457 #trueSuccessor: v328 #falseSuccessor: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v17|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595917824668068765
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2495 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2495 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2572 
=== Succesors ===
next: v389 
=== Usages ===
v386 
=== Predecessor ===
v328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2572 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v386 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2495 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2495  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v386 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
i2495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v386 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4570733895526242420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v876 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2496 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2496  <|@  <|@
f <@~|@floating>@ <|@
tid v2573 <|@
result [v21|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
i2496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2496 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2573 
=== Succesors ===
next: v1698 
=== Usages ===
v390 
=== Predecessor ===
v388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2573 #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2496 
y: i1192 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2496 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v1697 
falseSuccessor: v1695 
=== Usages ===
=== Predecessor ===
i2496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v1697 #falseSuccessor: v1695  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2300 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2300  <|@  <|@
f <@~|@floating>@ <|@
tid i2301 <|@
result int[-310547|0xfffffffffffb42ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310547
stableDimension: 0
stamp: i32 [-310547] â‡Š00000000fffb42ed â‡ˆ00000000fffb42ed
stampKind: i32
value: int[-310547|0xfffffffffffb42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310547|0xfffffffffffb42ed]] destination: B20 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B101" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B21 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B126" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1702 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1702  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2494 
y: v2450 
=== Succesors ===
=== Usages ===
v1702 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2494 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2458 
=== Succesors ===
trueSuccessor: v1699 
falseSuccessor: v1701 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2458 #trueSuccessor: v1699 #falseSuccessor: v1701  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2497 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2497 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2572 
=== Succesors ===
next: v2498 
=== Usages ===
?464 v2619 v2574 v2575 ?573 v2636 
=== Predecessor ===
v1699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2572 #next: v2498  <|@  <|@
f <@~|@floating>@ <|@
tid v2619 <|@
result [v23|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
v2498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2498 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2619 
=== Succesors ===
next: v412 
=== Usages ===
v2460 v2459 
=== Predecessor ===
a2497 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2619 #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2498 
y: v2454 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2498 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2574 <|@
result [v23|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
i2499 a2501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
tid ?381 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?308 
values: a2489 i1192 
=== Succesors ===
=== Usages ===
?446 ?2252 ?908 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2489 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2459 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
v2498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2459 #trueSuccessor: v405 #falseSuccessor: v411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591413472252786285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2499 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2499  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2499 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2574 
=== Succesors ===
next: v454 
=== Usages ===
v451 
=== Predecessor ===
v405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2574 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2499 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2499  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
i2499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4566229338160616523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v909  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2500 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2500  <|@  <|@
f <@~|@floating>@ <|@
tid v2575 <|@
result [v23|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
i2500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2500 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2575 
=== Succesors ===
next: v1710 
=== Usages ===
v455 
=== Predecessor ===
v453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2575 #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2500 
y: i1192 
=== Succesors ===
=== Usages ===
v1710 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2500 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1710 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v1709 
falseSuccessor: v1707 
=== Usages ===
=== Predecessor ===
i2500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v1709 #falseSuccessor: v1707  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2306 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2306  <|@  <|@
f <@~|@floating>@ <|@
tid i2307 <|@
result int[-313107|0xfffffffffffb38ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313107
stableDimension: 0
stamp: i32 [-313107] â‡Š00000000fffb38ed â‡ˆ00000000fffb38ed
stampKind: i32
value: int[-313107|0xfffffffffffb38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313107|0xfffffffffffb38ed]] destination: B27 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B101" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B28 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B125" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1714 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1714  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2498 
y: v2450 
=== Succesors ===
=== Usages ===
v1714 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2498 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2460 
=== Succesors ===
trueSuccessor: v1711 
falseSuccessor: v1713 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2460 #trueSuccessor: v1711 #falseSuccessor: v1713  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2501 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2501 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2574 
=== Succesors ===
next: v2502 
=== Usages ===
?591 v2620 v2576 v2577 ?2249 v2635 
=== Predecessor ===
v1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2574 #next: v2502  <|@  <|@
f <@~|@floating>@ <|@
tid v2620 <|@
result [v25|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
v2502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2502 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2620 
=== Succesors ===
next: v477 
=== Usages ===
v2462 v2461 
=== Predecessor ===
a2501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2620 #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2502 
y: v2454 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2502 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2576 <|@
result [v25|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
i2503 a2505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
tid ?446 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: a2493 i1192 
=== Succesors ===
=== Usages ===
?573 ?2251 ?464 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2493 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2461 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v2502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2461 #trueSuccessor: v470 #falseSuccessor: v476  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v23|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586909119921460260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2503 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2503 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2576 
=== Succesors ===
next: v490 
=== Usages ===
v487 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2576 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2503 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2503  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v488 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i2503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v488 #falseSuccessor: v489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4561724780901804654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2504 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2504  <|@  <|@
f <@~|@floating>@ <|@
tid v2577 <|@
result [v25|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
i2504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2504 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2577 
=== Succesors ===
next: v1722 
=== Usages ===
v491 
=== Predecessor ===
v489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2577 #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2504 
y: i1192 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2504 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v1721 
falseSuccessor: v1719 
=== Usages ===
=== Predecessor ===
i2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v1721 #falseSuccessor: v1719  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2312 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid i2313 <|@
result int[-315667|0xfffffffffffb2eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315667
stableDimension: 0
stamp: i32 [-315667] â‡Š00000000fffb2eed â‡ˆ00000000fffb2eed
stampKind: i32
value: int[-315667|0xfffffffffffb2eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315667|0xfffffffffffb2eed]] destination: B34 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B101" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B35 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B124" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2502 
y: v2450 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2502 y: v2450  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2462 
=== Succesors ===
trueSuccessor: v1723 
falseSuccessor: v1725 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2462 #trueSuccessor: v1723 #falseSuccessor: v1725  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2505 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2505 <|@
result v27|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2576 
=== Succesors ===
next: v2506 
=== Usages ===
a1237 v2621 v2578 v2579 
=== Predecessor ===
v1723 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2576 #next: v2506  <|@  <|@
f <@~|@floating>@ <|@
tid v2621 <|@
result [v27|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2505 
=== Succesors ===
=== Usages ===
v2506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2506 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v2621 
=== Succesors ===
next: v604 
=== Usages ===
v2463 
=== Predecessor ===
a2505 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v2621 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2506 
y: v2454 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2506 y: v2454  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: a2497 i1192 
=== Succesors ===
=== Usages ===
?2250 ?2249 ?591 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2497 i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2463 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v2506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2463 #trueSuccessor: v597 #falseSuccessor: v603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v25|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582404767674081325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2507 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2507  <|@  <|@
f <@~|@floating>@ <|@
tid v2578 <|@
result [v27|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2505 
=== Succesors ===
=== Usages ===
i2507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2507 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2578 
=== Succesors ===
next: v617 
=== Usages ===
v614 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2578 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2507 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2507  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v614 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i2507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v614 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557220223749794897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2508 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2508  <|@  <|@
f <@~|@floating>@ <|@
tid v2579 <|@
result [v27|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2505 
=== Succesors ===
=== Usages ===
i2508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2508 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2579 
=== Succesors ===
next: v1734 
=== Usages ===
v618 
=== Predecessor ===
v616 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2579 #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2508 
y: i1192 
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2508 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v1733 
falseSuccessor: v1731 
=== Usages ===
=== Predecessor ===
i2508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v1733 #falseSuccessor: v1731  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2316 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2316  <|@  <|@
f <@~|@floating>@ <|@
tid i2317 <|@
result int[-318227|0xfffffffffffb24ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -318227
stableDimension: 0
stamp: i32 [-318227] â‡Š00000000fffb24ed â‡ˆ00000000fffb24ed
stampKind: i32
value: int[-318227|0xfffffffffffb24ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-318227|0xfffffffffffb24ed]] destination: B41 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v1731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B42 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B68" 
    xhandlers
    flags 
    probability 4582403262769777919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i561 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i561  <|@  <|@
f <@~|@floating>@ <|@
tid a1237 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2505 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2505  <|@  <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@613dc514
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1237 i1192 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1237 i1192  <|@  <|@
tid ?2249 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: a2501 i1192 
=== Succesors ===
=== Usages ===
i561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2501 i1192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i561 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1244 
stateDuring: ?2249 
=== Succesors ===
next: v566 
=== Usages ===
v563 
=== Predecessor ===
v603 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1244 stateDuring: ?2249 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i561 
y: i47 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i561 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v565 
=== Usages ===
=== Predecessor ===
i561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v564 #falseSuccessor: v565  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4552798983856413865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B67" 
    xhandlers
    flags 
    probability 4559598263284264275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v924 v925 
=== Succesors ===
next: a2509 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v924 v925 #next: a2509  <|@  <|@
f <@~|@floating>@ <|@
tid v2635 <|@
result [v25|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2501 
=== Succesors ===
=== Usages ===
a2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2509 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2635 
=== Succesors ===
next: v2630 
=== Usages ===
a1247 v2630 
=== Predecessor ===
v923 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2635 #next: v2630  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?573 
values: a2501 i1192 i47 
=== Succesors ===
=== Usages ===
v2630 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: a2501 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?591 
object: a2509 
=== Succesors ===
next: i569 
=== Usages ===
=== Predecessor ===
a2509 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?591 object: a2509 #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid a1247 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2509 
=== Succesors ===
=== Usages ===
v1251 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2509  <|@  <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2bf2aeb5
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1247 i1192 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1247 i1192  <|@  <|@
tid ?2250 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?573 
values: - - 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?573 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1251 
stateDuring: ?2250 
=== Succesors ===
next: v439 
=== Usages ===
v436 
=== Predecessor ===
v2630 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1251 stateDuring: ?2250 #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i569 
y: i47 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i569 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v438 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v437 #falseSuccessor: v438  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v25|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4529912261451577748
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B66" 
    xhandlers
    flags 
    probability 4561789610867207777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v892 
=== Succesors ===
next: a2510 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v892 #next: a2510  <|@  <|@
f <@~|@floating>@ <|@
tid v2636 <|@
result [v23|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2497 
=== Succesors ===
=== Usages ===
a2510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2510 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2636 
=== Succesors ===
next: v2631 
=== Usages ===
a1254 v2631 
=== Predecessor ===
v890 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2636 #next: v2631  <|@  <|@
tid ?464 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?446 
values: a2497 i1192 i47 
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: a2497 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?464 
object: a2510 
=== Succesors ===
next: i442 
=== Usages ===
=== Predecessor ===
a2510 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?464 object: a2510 #next: i442  <|@  <|@
f <@~|@floating>@ <|@
tid a1254 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2510 
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2510  <|@  <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7c30de92
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1254 i1192 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1254 i1192  <|@  <|@
tid ?2251 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?446 
values: - - 
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?446 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i442 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1258 
stateDuring: ?2251 
=== Succesors ===
next: v374 
=== Usages ===
v371 
=== Predecessor ===
v2631 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1258 stateDuring: ?2251 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i442 
y: i47 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i442 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v373 
=== Usages ===
=== Predecessor ===
i442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v372 #falseSuccessor: v373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v23|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4531674407468225965
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
v372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B65" 
    xhandlers
    flags 
    probability 4566272750519685878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v907 v909 
=== Succesors ===
next: a2511 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v907 v909 #next: a2511  <|@  <|@
f <@~|@floating>@ <|@
tid v2637 <|@
result [v21|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2493 
=== Succesors ===
=== Usages ===
a2511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2511 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2637 
=== Succesors ===
next: v2632 
=== Usages ===
a1261 v2632 
=== Predecessor ===
v906 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2637 #next: v2632  <|@  <|@
tid ?908 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?381 
values: a2493 i1192 i47 
=== Succesors ===
=== Usages ===
v2632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: a2493 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?908 
object: a2511 
=== Succesors ===
next: i377 
=== Usages ===
=== Predecessor ===
a2511 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?908 object: a2511 #next: i377  <|@  <|@
f <@~|@floating>@ <|@
tid a1261 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2511 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2511  <|@  <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@55321700
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1261 i1192 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1261 i1192  <|@  <|@
tid ?2252 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?381 
values: - - 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?381 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i377 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1265 
stateDuring: ?2252 
=== Succesors ===
next: v301 
=== Usages ===
v298 
=== Predecessor ===
v2632 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1265 stateDuring: ?2252 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i377 
y: i47 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i377 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
i377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v21|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4536164864144700316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4570777205206007899
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v876 
=== Succesors ===
next: a2512 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v876 #next: a2512  <|@  <|@
f <@~|@floating>@ <|@
tid v2638 <|@
result [v17|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2489 
=== Succesors ===
=== Usages ===
a2512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2512 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2638 
=== Succesors ===
next: v2513 
=== Usages ===
v2622 v2581 v2580 
=== Predecessor ===
v874 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2638 #next: v2513  <|@  <|@
tid ?322 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?308 
values: a2489 i1192 i47 
=== Succesors ===
=== Usages ===
v2331 v2513 i2517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?308 values: a2489 i1192 i47  <|@  <|@
f <@~|@floating>@ <|@
tid v2622 <|@
result [v40|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2512 
=== Succesors ===
=== Usages ===
v2513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2513 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2622 
=== Succesors ===
next: v520 
=== Usages ===
v2466 v2464 
=== Predecessor ===
a2512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2622 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2513 
y: v2454 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2513 y: v2454  <|@  <|@
f <@~|@floating>@ <|@
tid v2580 <|@
result [v40|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2512 
=== Succesors ===
=== Usages ===
i2514 a2516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2512  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2464 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v2513 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2464 #trueSuccessor: v513 #falseSuccessor: v519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2514 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2514 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2580 
=== Succesors ===
next: v581 
=== Usages ===
v578 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2580 #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2514 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2514  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
i2514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B71" 
    xhandlers
    flags 
    probability 4540615103374966341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@*|@fixed>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2515 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2515  <|@  <|@
f <@~|@floating>@ <|@
tid v2581 <|@
result [v40|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2512 
=== Succesors ===
=== Usages ===
i2515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2515 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2581 
=== Succesors ===
next: v1754 
=== Usages ===
v582 
=== Predecessor ===
v580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2581 #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2515 
y: i1192 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2515 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v1753 
falseSuccessor: v1751 
=== Usages ===
=== Predecessor ===
i2515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v1753 #falseSuccessor: v1751  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid i2335 <|@
result int[-326163|0xfffffffffffb05ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326163
stableDimension: 0
stamp: i32 [-326163] â‡Š00000000fffb05ed â‡ˆ00000000fffb05ed
stampKind: i32
value: int[-326163|0xfffffffffffb05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1753 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326163|0xfffffffffffb05ed]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v955  <|@  <|@
f <@*|@fixed>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v1751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B63" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1758  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2513 
y: v2465 
=== Succesors ===
=== Usages ===
v1758 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2513 y: v2465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2466 
=== Succesors ===
trueSuccessor: v1755 
falseSuccessor: v1757 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2466 #trueSuccessor: v1755 #falseSuccessor: v1757  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1762 
=== Usages ===
=== Predecessor ===
v1758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2488 
y: i1629 
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2488 y: i1629  <|@  <|@
f <@*|@fixed>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2477 
=== Succesors ===
trueSuccessor: v1759 
falseSuccessor: v1761 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2477 #trueSuccessor: v1759 #falseSuccessor: v1761  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2516 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2516 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2580 
=== Succesors ===
next: i2517 
=== Usages ===
v2583 v2582 
=== Predecessor ===
v1759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2580 #next: i2517  <|@  <|@
f <@~|@floating>@ <|@
tid v2582 <|@
result [v42|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2516 
=== Succesors ===
=== Usages ===
i2517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2517 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?322 
guard: - 
address: v2582 
=== Succesors ===
next: v1770 
=== Usages ===
v1285 
=== Predecessor ===
a2516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?322 guard: - address: v2582 #next: v1770  <|@  <|@
f <@~|@floating>@ <|@
tid v1285 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2517 
=== Succesors ===
=== Usages ===
v1770 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1192 y: i2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v1770 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1285 
=== Succesors ===
trueSuccessor: v1767 
falseSuccessor: v1769 
=== Usages ===
=== Predecessor ===
i2517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1285 #trueSuccessor: v1767 #falseSuccessor: v1769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v40|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v42|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2518 
=== Usages ===
i2518 
=== Predecessor ===
v1770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2518  <|@  <|@
f <@~|@floating>@ <|@
tid j1515 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2488 
=== Succesors ===
=== Usages ===
v2583 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2488  <|@  <|@
f <@~|@floating>@ <|@
tid v2583 <|@
result [v43|QWORD + v42|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1515 
index: a2516 
=== Succesors ===
=== Usages ===
i2518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1515 index: a2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2518 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1767 
address: v2583 
=== Succesors ===
next: v626 
=== Usages ===
i1516 
=== Predecessor ===
v1767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1767 address: v2583 #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid i1516 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2518 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2518  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
i2518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v43|QWORD + v42|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v1770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid i2341 <|@
result int[-329243|0xfffffffffffaf9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -329243
stableDimension: 0
stamp: i32 [-329243] â‡Š00000000fffaf9e5 â‡ˆ00000000fffaf9e5
stampKind: i32
value: int[-329243|0xfffffffffffaf9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-329243|0xfffffffffffaf9e5]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2338 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2338  <|@  <|@
f <@~|@floating>@ <|@
tid i2339 <|@
result int[-326675|0xfffffffffffb03ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326675
stableDimension: 0
stamp: i32 [-326675] â‡Š00000000fffb03ed â‡ˆ00000000fffb03ed
stampKind: i32
value: int[-326675|0xfffffffffffb03ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326675|0xfffffffffffb03ed]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2336 
=== Usages ===
=== Predecessor ===
v1758 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2336  <|@  <|@
f <@~|@floating>@ <|@
tid i2337 <|@
result int[-326451|0xfffffffffffb04cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -326451
stableDimension: 0
stamp: i32 [-326451] â‡Š00000000fffb04cd â‡ˆ00000000fffb04cd
stampKind: i32
value: int[-326451|0xfffffffffffb04cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
v1757 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326451|0xfffffffffffb04cd]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B55" "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2329 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-329243 - -324875] â‡Š00000000fffa00c5 â‡ˆ00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2326 
values: i2335 i2337 i2339 i2341 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2326 values: i2335 i2337 i2339 i2341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2334 v2336 v2338 v2340 
=== Succesors ===
next: v2331 
=== Usages ===
i2329 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2334 v2336 v2338 v2340 #next: v2331  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?322 
actionAndReason: i2329 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2326 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?322 actionAndReason: i2329 speculation: a2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566186131160154920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v763  <|@  <|@
f <@*|@fixed>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B65 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B101" 
    xhandlers
    flags 
    probability 4561702786149069066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1064 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1064  <|@  <|@
f <@*|@fixed>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B66 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559533433318861152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B67 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582335552146031174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B68" "B42" 
    successors "B70" "B100" 
    xhandlers
    flags 
    probability 4587076404307842276
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i137 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v134 
values: i1516 i60 i60 
=== Succesors ===
=== Usages ===
i765 v77 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v134 values: i1516 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v626 v1011 v1046 
=== Succesors ===
next: v80 
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v626 v1011 v1046 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i47 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4557520402031344378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B11" "B53" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v858 v860 v972 
=== Succesors ===
next: a2519 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v858 v860 v972 #next: a2519  <|@  <|@
f <@~|@floating>@ <|@
tid v2584 <|@
result [v7|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2481 
=== Succesors ===
=== Usages ===
a2519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2519 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2584 
=== Succesors ===
next: v2633 
=== Usages ===
v2624 v2633 v2595 v2598 
=== Predecessor ===
v857 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2584 #next: v2633  <|@  <|@
tid ?859 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1150 i1192 i47 
=== Succesors ===
=== Usages ===
v2379 v2633 v2521 i2523 i2527 v2634 i2532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1150 i1192 i47  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2519 
=== Succesors ===
next: a2520 
=== Usages ===
=== Predecessor ===
a2519 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2519 #next: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2520 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2585 
=== Succesors ===
next: v2521 
=== Usages ===
a1300 v2623 v2586 v2590 v2594 
=== Predecessor ===
v2633 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2585 #next: v2521  <|@  <|@
f <@~|@floating>@ <|@
tid v2623 <|@
result [v48|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
v2521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2521 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2623 
=== Succesors ===
next: v1782 
=== Usages ===
v2468 
=== Predecessor ===
a2520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2623 #next: v1782  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2521 
y: v2467 
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2521 y: v2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1782 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2468 
=== Succesors ===
trueSuccessor: v1779 
falseSuccessor: v1781 
=== Usages ===
=== Predecessor ===
v2521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2468 #trueSuccessor: v1779 #falseSuccessor: v1781  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v7|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v47|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v48|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2522 
=== Usages ===
=== Predecessor ===
v1782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2522 <|@
result v49|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2558 
=== Succesors ===
next: i2523 
=== Usages ===
a1304 v2587 
=== Predecessor ===
v1779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2558 #next: i2523  <|@  <|@
f <@~|@floating>@ <|@
tid v2587 <|@
result [v49|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2522 
=== Succesors ===
=== Usages ===
i2523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2523 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2587 
=== Succesors ===
next: i2524 
=== Usages ===
v1312 
=== Predecessor ===
a2522 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2587 #next: i2524  <|@  <|@
f <@~|@floating>@ <|@
tid v2586 <|@
result [v48|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
i2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2524 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2586 
=== Succesors ===
next: v1790 
=== Usages ===
v2588 v1312 
=== Predecessor ===
i2523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2586 #next: v1790  <|@  <|@
f <@~|@floating>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2524 
y: i2523 
=== Succesors ===
=== Usages ===
v1790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2524 y: i2523  <|@  <|@
f <@*|@fixed>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1312 
=== Succesors ===
trueSuccessor: v1787 
falseSuccessor: v1789 
=== Usages ===
=== Predecessor ===
i2524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1312 #trueSuccessor: v1787 #falseSuccessor: v1789  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v50|DWORD = MOV [v49|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v48|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2525 
=== Usages ===
i2525 
=== Predecessor ===
v1790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2525  <|@  <|@
f <@~|@floating>@ <|@
tid a1304 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2522 
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2522  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
result [v52|QWORD[.] + v51|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1304 
index: i2524 
=== Succesors ===
=== Usages ===
i2525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1304 index: i2524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2525 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1787 
address: v2588 
=== Succesors ===
next: v1794 
=== Usages ===
v169 v1357 i2255 
=== Predecessor ===
v1787 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1787 address: v2588 #next: v1794  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2525 
y: i47 
=== Succesors ===
=== Usages ===
v1794 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2525 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v1793 
falseSuccessor: v1791 
=== Usages ===
=== Predecessor ===
i2525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v1793 #falseSuccessor: v1791  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2386 
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2386  <|@  <|@
f <@~|@floating>@ <|@
tid i2387 <|@
result int[-337939|0xfffffffffffad7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337939
stableDimension: 0
stamp: i32 [-337939] â‡Š00000000fffad7ed â‡ˆ00000000fffad7ed
stampKind: i32
value: int[-337939|0xfffffffffffad7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337939|0xfffffffffffad7ed]] destination: B74 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B96" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2526 
=== Usages ===
=== Predecessor ===
v1794 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2526 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2589 
=== Succesors ===
next: i2527 
=== Usages ===
a1324 v2591 
=== Predecessor ===
v1791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2589 #next: i2527  <|@  <|@
f <@~|@floating>@ <|@
tid v2591 <|@
result [v54|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2526 
=== Succesors ===
=== Usages ===
i2527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2527 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2591 
=== Succesors ===
next: i2528 
=== Usages ===
v1359 v1350 
=== Predecessor ===
a2526 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2591 #next: i2528  <|@  <|@
f <@~|@floating>@ <|@
tid v2590 <|@
result [v48|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
i2528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2528 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2590 
=== Succesors ===
next: v1802 
=== Usages ===
v1350 i184 v2592 
=== Predecessor ===
i2527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2590 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2528 
y: i2527 
=== Succesors ===
=== Usages ===
v1802 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2528 y: i2527  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1350 
=== Succesors ===
trueSuccessor: v1799 
falseSuccessor: v1801 
=== Usages ===
=== Predecessor ===
i2528 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1350 #trueSuccessor: v1799 #falseSuccessor: v1801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v55|DWORD = MOV [v54|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v48|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B95" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1806 
=== Usages ===
i2537 v1357 
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2528 
y: i60 
=== Succesors ===
=== Usages ===
v2593 v1359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2528 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i184 
y: i2527 
=== Succesors ===
=== Usages ===
v1806 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i184 y: i2527  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1359 
=== Succesors ===
trueSuccessor: v1803 
falseSuccessor: v1805 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1359 #trueSuccessor: v1803 #falseSuccessor: v1805  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2529 
=== Usages ===
i2536 v1366 
=== Predecessor ===
v1806 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2529  <|@  <|@
f <@~|@floating>@ <|@
tid v2594 <|@
result [v48|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2520 
=== Succesors ===
=== Usages ===
a2529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2529 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2594 
=== Succesors ===
next: v2634 
=== Usages ===
a1369 v2634 v2625 
=== Predecessor ===
v1803 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2594 #next: v2634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
object: a2529 
=== Succesors ===
next: v2530 
=== Usages ===
=== Predecessor ===
a2529 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?859 object: a2529 #next: v2530  <|@  <|@
f <@~|@floating>@ <|@
tid v2624 <|@
result [v47|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
v2530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2530 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2624 
=== Succesors ===
next: v164 
=== Usages ===
v2470 v2469 
=== Predecessor ===
v2634 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2624 #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2530 
y: v2465 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2530 y: v2465  <|@  <|@
f <@~|@floating>@ <|@
tid v2595 <|@
result [v47|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
a2531 i2534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2469 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
v2530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2469 #trueSuccessor: v157 #falseSuccessor: v163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v48|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v58|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v47|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v59|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2531 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2531 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2595 
=== Succesors ===
next: i2532 
=== Usages ===
v2597 v2596 
=== Predecessor ===
v157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2595 #next: i2532  <|@  <|@
f <@~|@floating>@ <|@
tid v2596 <|@
result [v60|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2531 
=== Succesors ===
=== Usages ===
i2532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2532 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?859 
guard: - 
address: v2596 
=== Succesors ===
next: v1818 
=== Usages ===
v1380 
=== Predecessor ===
a2531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?859 guard: - address: v2596 #next: v1818  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2532 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1192 y: i2532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1818 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1380 
=== Succesors ===
trueSuccessor: v1815 
falseSuccessor: v1817 
=== Usages ===
=== Predecessor ===
i2532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1380 #trueSuccessor: v1815 #falseSuccessor: v1817  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v60|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1822 
=== Usages ===
i2533 
=== Predecessor ===
v1818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2488 
y: i1629 
=== Succesors ===
=== Usages ===
v1822 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2488 y: i1629  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1630 
=== Succesors ===
trueSuccessor: v1819 
falseSuccessor: v1821 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1630 #trueSuccessor: v1819 #falseSuccessor: v1821  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2533 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2533  <|@  <|@
f <@~|@floating>@ <|@
tid j2476 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2488 
=== Succesors ===
=== Usages ===
v2597 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2488  <|@  <|@
f <@~|@floating>@ <|@
tid v2597 <|@
result [v61|QWORD + v60|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j2476 
index: a2531 
=== Succesors ===
=== Usages ===
i2533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2476 index: a2531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2533 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1815 
address: v2597 
=== Succesors ===
next: v1838 
=== Usages ===
i1525 
=== Predecessor ===
v1819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1815 address: v2597 #next: v1838  <|@  <|@
f <@~|@floating>@ <|@
tid i1525 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2533 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2533  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1525 
y: i47 
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1525 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v1837 
falseSuccessor: v1835 
=== Usages ===
=== Predecessor ===
i2533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v1837 #falseSuccessor: v1835  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVZXB [v61|QWORD + v60|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1836  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?62 
values: a1150 a2 i3 a4 i1192 i47 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?62 values: a1150 a2 i3 a4 i1192 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1297
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1837 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -332051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2629 
=== Usages ===
=== Predecessor ===
v1838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2629  <|@  <|@
f <@*|@fixed>@ <|@
tid v2629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
v1835 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2408 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2408  <|@  <|@
f <@~|@floating>@ <|@
tid i2409 <|@
result int[-350995|0xfffffffffffaa4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -350995
stableDimension: 0
stamp: i32 [-350995] â‡Š00000000fffaa4ed â‡ˆ00000000fffaa4ed
stampKind: i32
value: int[-350995|0xfffffffffffaa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-350995|0xfffffffffffaa4ed]] destination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2406 
=== Usages ===
=== Predecessor ===
v1818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid i2407 <|@
result int[-353563|0xfffffffffffa9ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -353563
stableDimension: 0
stamp: i32 [-353563] â‡Š00000000fffa9ae5 â‡ˆ00000000fffa9ae5
stampKind: i32
value: int[-353563|0xfffffffffffa9ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-353563|0xfffffffffffa9ae5]] destination: B84 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B86" "B94" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2530 
y: v2454 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2530 y: v2454  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2470 
=== Succesors ===
trueSuccessor: v1823 
falseSuccessor: v1825 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2470 #trueSuccessor: v1823 #falseSuccessor: v1825  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v59|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2534 
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2534 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2595 
=== Succesors ===
next: v1830 
=== Usages ===
v347 
=== Predecessor ===
v1823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2595 #next: v1830  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1192 
y: i2534 
=== Succesors ===
=== Usages ===
v1830 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1192 y: i2534  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1829 
falseSuccessor: v1827 
=== Usages ===
=== Predecessor ===
i2534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1829 #falseSuccessor: v1827  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v47|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2400 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2400  <|@  <|@
f <@~|@floating>@ <|@
tid i2401 <|@
result int[-355859|0xfffffffffffa91ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -355859
stableDimension: 0
stamp: i32 [-355859] â‡Š00000000fffa91ed â‡ˆ00000000fffa91ed
stampKind: i32
value: int[-355859|0xfffffffffffa91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1829 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355859|0xfffffffffffa91ed]] destination: B87 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2535 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2535  <|@  <|@
f <@~|@floating>@ <|@
tid v2598 <|@
result [v47|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2519 
=== Succesors ===
=== Usages ===
i2535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2535 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2598 
=== Succesors ===
next: v1834 
=== Usages ===
v351 
=== Predecessor ===
v1827 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2598 #next: v1834  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2535 
y: i1192 
=== Succesors ===
=== Usages ===
v1834 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2535 y: i1192  <|@  <|@
f <@*|@fixed>@ <|@
tid v1834 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v1833 
falseSuccessor: v1831 
=== Usages ===
=== Predecessor ===
i2535 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v1833 #falseSuccessor: v1831  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v47|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@~|@floating>@ <|@
tid i2405 <|@
result int[-356115|0xfffffffffffa90ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -356115
stableDimension: 0
stamp: i32 [-356115] â‡Š00000000fffa90ed â‡ˆ00000000fffa90ed
stampKind: i32
value: int[-356115|0xfffffffffffa90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-356115|0xfffffffffffa90ed]] destination: B89 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v1834 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2628 
=== Predecessor ===
v1831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B82" "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2629 v89 
=== Succesors ===
next: i2536 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2629 v89 #next: i2536  <|@  <|@
f <@~|@floating>@ <|@
tid a1324 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2526 
=== Succesors ===
=== Usages ===
v2592 a652 v2593 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2526  <|@  <|@
f <@~|@floating>@ <|@
tid v2593 <|@
result [v63|QWORD[.] + v57|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1324 
index: i184 
=== Succesors ===
=== Usages ===
v1366 i2536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1324 index: i184  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2536 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1803 
address: v2593 
=== Succesors ===
next: i2537 
=== Usages ===
i658 i656 
=== Predecessor ===
v2628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1803 address: v2593 #next: i2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2592 <|@
result [v63|QWORD[.] + v56|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1324 
index: i2528 
=== Succesors ===
=== Usages ===
v1357 i2537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1324 index: i2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2537 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1799 
address: v2592 
=== Succesors ===
next: v1357 
=== Usages ===
i655 i653 
=== Predecessor ===
i2536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1799 address: v2592 #next: v1357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1799 
address: v2592 
value: i2525 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
i2537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1799 address: v2592 value: i2525 stateAfter: - lastLocationAccess: - #next: v1366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1803 
address: v2593 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2538 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1803 address: v2593 value: i54 stateAfter: - lastLocationAccess: - #next: v2538  <|@  <|@
f <@~|@floating>@ <|@
tid v2625 <|@
result [v58|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2529 
=== Succesors ===
=== Usages ===
v2538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2538 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2625 
=== Succesors ===
next: v232 
=== Usages ===
v2472 
=== Predecessor ===
v1366 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2625 #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v2472 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2538 
y: v2471 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2538 y: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid a1300 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2520 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7882672499463655
=== Inputs ===
condition: v2472 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v2538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2472 #trueSuccessor: v225 #falseSuccessor: v231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v63|QWORD[.] + v56|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v56|DWORD * 4 + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v57|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v58|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 4573891535647145046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v53|DWORD, v63|QWORD[.], v65|DWORD, v64|DWORD] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B116" 
    xhandlers
    flags 
    probability 4565423258108577047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid a1369 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2529 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2529  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v67|QWORD[.], v65|DWORD, v64|DWORD] destination: B93 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid i2403 <|@
result int[-354611|0xfffffffffffa96cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354611
stableDimension: 0
stamp: i32 [-354611] â‡Š00000000fffa96cd â‡ˆ00000000fffa96cd
stampKind: i32
value: int[-354611|0xfffffffffffa96cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354611|0xfffffffffffa96cd]] destination: B94 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2396 
=== Usages ===
=== Predecessor ===
v1806 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2396  <|@  <|@
f <@~|@floating>@ <|@
tid i2397 <|@
result int[-348187|0xfffffffffffaafe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -348187
stableDimension: 0
stamp: i32 [-348187] â‡Š00000000fffaafe5 â‡ˆ00000000fffaafe5
stampKind: i32
value: int[-348187|0xfffffffffffaafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-348187|0xfffffffffffaafe5]] destination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2394 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2394  <|@  <|@
f <@~|@floating>@ <|@
tid i2395 <|@
result int[-345883|0xfffffffffffab8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -345883
stableDimension: 0
stamp: i32 [-345883] â‡Š00000000fffab8e5 â‡ˆ00000000fffab8e5
stampKind: i32
value: int[-345883|0xfffffffffffab8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1801 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-345883|0xfffffffffffab8e5]] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2388 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2388  <|@  <|@
f <@~|@floating>@ <|@
tid i2389 <|@
result int[-336155|0xfffffffffffadee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336155
stableDimension: 0
stamp: i32 [-336155] â‡Š00000000fffadee5 â‡ˆ00000000fffadee5
stampKind: i32
value: int[-336155|0xfffffffffffadee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336155|0xfffffffffffadee5]] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v1782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@~|@floating>@ <|@
tid i2385 <|@
result int[-333363|0xfffffffffffae9cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333363
stableDimension: 0
stamp: i32 [-333363] â‡Š00000000fffae9cd â‡ˆ00000000fffae9cd
stampKind: i32
value: int[-333363|0xfffffffffffae9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2374 
=== Predecessor ===
v1781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333363|0xfffffffffffae9cd]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B74" "B97" "B96" "B95" "B87" "B94" "B89" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2377 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-356115 - -331787] â‡Š00000000fffa80c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2374 
values: i2385 i2387 i2389 i2395 i2397 i2401 i2403 i2405 i2407 i2409 
=== Succesors ===
=== Usages ===
v2379 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2374 values: i2385 i2387 i2389 i2395 i2397 i2401 i2403 i2405 i2407 i2409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2384 v2386 v2388 v2394 v2396 v2400 v2402 v2404 v2406 v2408 
=== Succesors ===
next: v2379 
=== Usages ===
i2377 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2384 v2386 v2388 v2394 v2396 v2400 v2402 v2404 v2406 v2408 #next: v2379  <|@  <|@
f <@*|@fixed>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?859 
actionAndReason: i2377 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2374 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?859 actionAndReason: i2377 speculation: a2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B101" 
    xhandlers
    flags 
    probability 4587006991976692718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v79 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B65" "B14" "B21" "B56" "B28" "B66" "B35" "B67" 
    successors "B102" "B122" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i765 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v760 
values: i137 i60 i60 i60 i60 i60 i60 i60 i60 
=== Succesors ===
=== Usages ===
?762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: i137 i60 i60 i60 i60 i60 i60 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v763 v787 v804 v955 v1029 v1064 v1082 v1100 
=== Succesors ===
next: a2539 
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v763 v787 v804 v955 v1029 v1064 v1082 v1100 #next: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2539 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2585 
=== Succesors ===
next: v2540 
=== Usages ===
a1393 v2626 v2599 v2602 v2606 
=== Predecessor ===
v760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2585 #next: v2540  <|@  <|@
tid ?762 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?87 
values: a1150 i1192 i765 
=== Succesors ===
=== Usages ===
v2357 v2540 i2542 i2546 v2549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1150 i1192 i765  <|@  <|@
f <@~|@floating>@ <|@
tid v2626 <|@
result [v70|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
v2540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2540 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2626 
=== Succesors ===
next: v1846 
=== Usages ===
v2473 
=== Predecessor ===
a2539 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2626 #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid v2473 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2540 
y: v2467 
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2540 y: v2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v1846 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2473 
=== Succesors ===
trueSuccessor: v1843 
falseSuccessor: v1845 
=== Usages ===
=== Predecessor ===
v2540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2473 #trueSuccessor: v1843 #falseSuccessor: v1845  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v70|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B121" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2541 
=== Usages ===
=== Predecessor ===
v1846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2541 <|@
result v71|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2558 
=== Succesors ===
next: i2542 
=== Usages ===
a1397 v2600 
=== Predecessor ===
v1843 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2558 #next: i2542  <|@  <|@
f <@~|@floating>@ <|@
tid v2600 <|@
result [v71|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2541 
=== Succesors ===
=== Usages ===
i2542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2542 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2600 
=== Succesors ===
next: i2543 
=== Usages ===
v1405 
=== Predecessor ===
a2541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2600 #next: i2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2599 <|@
result [v70|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
i2543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2543 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2599 
=== Succesors ===
next: v1854 
=== Usages ===
v2601 v1405 
=== Predecessor ===
i2542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2599 #next: v1854  <|@  <|@
f <@~|@floating>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2543 
y: i2542 
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2543 y: i2542  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1405 
=== Succesors ===
trueSuccessor: v1851 
falseSuccessor: v1853 
=== Usages ===
=== Predecessor ===
i2543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1405 #trueSuccessor: v1851 #falseSuccessor: v1853  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v72|DWORD = MOV [v71|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2544 
=== Usages ===
i2544 
=== Predecessor ===
v1854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2544  <|@  <|@
f <@~|@floating>@ <|@
tid a1397 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2541 
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2541  <|@  <|@
f <@~|@floating>@ <|@
tid v2601 <|@
result [v74|QWORD[.] + v73|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1397 
index: i2543 
=== Succesors ===
=== Usages ===
i2544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1397 index: i2543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2544 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1851 
address: v2601 
=== Succesors ===
next: v1858 
=== Usages ===
v672 v1448 i2255 
=== Predecessor ===
v1851 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1851 address: v2601 #next: v1858  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2544 
y: i47 
=== Succesors ===
=== Usages ===
v1858 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2544 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v672 
=== Succesors ===
trueSuccessor: v1857 
falseSuccessor: v1855 
=== Usages ===
=== Predecessor ===
i2544 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v672 #trueSuccessor: v1857 #falseSuccessor: v1855  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + v73|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2362 
=== Usages ===
=== Predecessor ===
v1858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2362  <|@  <|@
f <@~|@floating>@ <|@
tid i2363 <|@
result int[-361747|0xfffffffffffa7aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -361747
stableDimension: 0
stamp: i32 [-361747] â‡Š00000000fffa7aed â‡ˆ00000000fffa7aed
stampKind: i32
value: int[-361747|0xfffffffffffa7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-361747|0xfffffffffffa7aed]] destination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B120" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2545 
=== Usages ===
=== Predecessor ===
v1858 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2545 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2589 
=== Succesors ===
next: i2546 
=== Usages ===
a1415 v2603 
=== Predecessor ===
v1855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2589 #next: i2546  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
result [v76|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2545 
=== Succesors ===
=== Usages ===
i2546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2546 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2603 
=== Succesors ===
next: i2547 
=== Usages ===
v1450 v1441 
=== Predecessor ===
a2545 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2603 #next: i2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
result [v70|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
i2547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2547 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2602 
=== Succesors ===
next: v1866 
=== Usages ===
v1441 v2604 i680 
=== Predecessor ===
i2546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2602 #next: v1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2547 
y: i2546 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2547 y: i2546  <|@  <|@
f <@*|@fixed>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1441 
=== Succesors ===
trueSuccessor: v1863 
falseSuccessor: v1865 
=== Usages ===
=== Predecessor ===
i2547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1441 #trueSuccessor: v1863 #falseSuccessor: v1865  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B119" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1870 
=== Usages ===
i2551 v1448 
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1870  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32
=== Inputs ===
x: i2547 
y: i60 
=== Succesors ===
=== Usages ===
v1450 v2605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2547 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i2546 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i680 y: i2546  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1450 
=== Succesors ===
trueSuccessor: v1867 
falseSuccessor: v1869 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1450 #trueSuccessor: v1867 #falseSuccessor: v1869  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B115" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2548 
=== Usages ===
i2550 v1457 
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2548  <|@  <|@
f <@~|@floating>@ <|@
tid v2606 <|@
result [v70|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2539 
=== Succesors ===
=== Usages ===
a2548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2548 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2606 
=== Succesors ===
next: v2549 
=== Usages ===
a1460 v2627 
=== Predecessor ===
v1867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2606 #next: v2549  <|@  <|@
f <@~|@floating>@ <|@
tid v2627 <|@
result [v80|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2548 
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2549 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?762 
guard: - 
address: v2627 
=== Succesors ===
next: i2550 
=== Usages ===
v2474 
=== Predecessor ===
a2548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?762 guard: - address: v2627 #next: i2550  <|@  <|@
f <@~|@floating>@ <|@
tid a1415 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2545 
=== Succesors ===
=== Usages ===
v2604 a652 v2605 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2545  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
result [v82|QWORD[.] + v79|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1415 
index: i680 
=== Succesors ===
=== Usages ===
v1457 i2550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1415 index: i680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2550 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1867 
address: v2605 
=== Succesors ===
next: i2551 
=== Usages ===
i656 i658 
=== Predecessor ===
v2549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1867 address: v2605 #next: i2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
result [v82|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1415 
index: i2547 
=== Succesors ===
=== Usages ===
v1448 i2551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1415 index: i2547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2551 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1863 
address: v2604 
=== Succesors ===
next: v1448 
=== Usages ===
i653 i655 
=== Predecessor ===
i2550 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1863 address: v2604 #next: v1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1863 
address: v2604 
value: i2544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
i2551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1863 address: v2604 value: i2544 stateAfter: - lastLocationAccess: - #next: v1457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1867 
address: v2605 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1867 address: v2605 value: i54 stateAfter: - lastLocationAccess: - #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2549 
y: v2471 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2549 y: v2471  <|@  <|@
f <@~|@floating>@ <|@
tid a1393 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2539 
=== Succesors ===
=== Usages ===
a647 a648 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2539  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.7882672499463655
=== Inputs ===
condition: v2474 
=== Succesors ===
trueSuccessor: v684 
falseSuccessor: v689 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2474 #trueSuccessor: v684 #falseSuccessor: v689  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v70|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v81|DWORD = MOV [v80|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v82|QWORD[.] + v79|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v82|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v78|DWORD * 4 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v79|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4603439295021643013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v642 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v642  <|@  <|@
f <@*|@fixed>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
v684 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v75|DWORD, v82|QWORD[.], v84|DWORD, v83|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B92" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a648 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1300 a1393 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1300 a1393  <|@  <|@
f <@~|@floating>@ <|@
tid i2255 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2525 i2544 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2525 i2544  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v639 
values: a1324 a1415 
=== Succesors ===
=== Usages ===
v2612 v2611 v2610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: a1324 a1415  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2537 i2551 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2537 i2551  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v639 
values: i2536 i2550 
=== Succesors ===
=== Usages ===
?641 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v639 values: i2536 i2550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v640 v642 
=== Succesors ===
next: i2552 
=== Usages ===
a648 i2255 a652 i655 i658 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v640 v642 #next: i2552  <|@  <|@
f <@~|@floating>@ <|@
tid v2607 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2552 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2607 
=== Succesors ===
next: v1878 
=== Usages ===
v247 
=== Predecessor ===
v639 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2607 #next: v1878  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2552 
y: i60 
=== Succesors ===
=== Usages ===
v1878 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2552 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v1878 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v1877 
falseSuccessor: v1875 
=== Usages ===
=== Predecessor ===
i2552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v1877 #falseSuccessor: v1875  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD[.], v87|DWORD, v88|QWORD[.], v89|DWORD, v90|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2343 
=== Usages ===
=== Predecessor ===
v1878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2343  <|@  <|@
f <@~|@floating>@ <|@
tid i2344 <|@
result int[-375059|0xfffffffffffa46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -375059
stableDimension: 0
stamp: i32 [-375059] â‡Š00000000fffa46ed â‡ˆ00000000fffa46ed
stampKind: i32
value: int[-375059|0xfffffffffffa46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2342 
=== Predecessor ===
v1877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-375059|0xfffffffffffa46ed]] destination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B114" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2553 
=== Usages ===
=== Predecessor ===
v1878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2553  <|@  <|@
f <@~|@floating>@ <|@
tid v2610 <|@
result [v88|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
i2553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2553 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2610 
=== Succesors ===
next: v1886 
=== Usages ===
v1626 
=== Predecessor ===
v1875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2610 #next: v1886  <|@  <|@
f <@~|@floating>@ <|@
tid i1134 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1626 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2553 
y: i1134 
=== Succesors ===
=== Usages ===
v1886 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2553 y: i1134  <|@  <|@
f <@*|@fixed>@ <|@
tid v1886 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1626 
=== Succesors ===
trueSuccessor: v1885 
falseSuccessor: v1883 
=== Usages ===
=== Predecessor ===
i2553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1626 #trueSuccessor: v1885 #falseSuccessor: v1883  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v88|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B111 -> B112 falseDestination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2350 
=== Usages ===
=== Predecessor ===
v1886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2350  <|@  <|@
f <@~|@floating>@ <|@
tid i2351 <|@
result int[-392475|0xfffffffffffa02e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -392475
stableDimension: 0
stamp: i32 [-392475] â‡Š00000000fffa02e5 â‡ˆ00000000fffa02e5
stampKind: i32
value: int[-392475|0xfffffffffffa02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2342 
=== Predecessor ===
v1885 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392475|0xfffffffffffa02e5]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" "B112" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2345 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-392475 - -375059] â‡Š00000000fffa02e5 â‡ˆ00000000fffa46ed
valueDescription: i32
=== Inputs ===
merge: v2342 
values: i2344 i2351 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2342 values: i2344 i2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2343 v2350 
=== Succesors ===
next: v2347 
=== Usages ===
i2345 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2343 v2350 #next: v2347  <|@  <|@
tid ?641 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a648 a2 i54 a4 i2255 i655 i658 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a648 a2 i54 a4 i2255 i655 i658  <|@  <|@
f <@*|@fixed>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?641 
actionAndReason: i2345 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2342 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?641 actionAndReason: i2345 speculation: a2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v86|QWORD[.] v1|QWORD[.] v20|DWORD v3|QWORD[.] v87|DWORD v89|DWORD v90|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1468 
=== Usages ===
v1484 v1493 
=== Predecessor ===
v1886 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1468  <|@  <|@
f <@~|@floating>@ <|@
tid v2608 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2608 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2554 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2608 value: i54 stateAfter: - lastLocationAccess: - #next: i2554  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2554 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2609 
=== Succesors ===
next: v1484 
=== Usages ===
v1484 
=== Predecessor ===
v1468 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2609 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v2611 <|@
result [v88|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1883 
address: v2611 
value: i2554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
i2554 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1883 address: v2611 value: i2554 stateAfter: - lastLocationAccess: - #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v2612 <|@
result [v88|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a652 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a652 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1883 
address: v2612 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1883 address: v2612 value: i54 stateAfter: - lastLocationAccess: - #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1493 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 20], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B114 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B116" 
    xhandlers
    flags 
    probability 4594823854284282252
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid a1460 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2548 
=== Succesors ===
=== Usages ===
a659 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2548  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v93|QWORD[.], v84|DWORD, v83|DWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B93" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a647 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1300 a1393 
=== Succesors ===
=== Usages ===
?190 ?2253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1300 a1393  <|@  <|@
f <@~|@floating>@ <|@
tid a659 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v643 
values: a1369 a1460 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: a1369 a1460  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2537 i2551 
=== Succesors ===
=== Usages ===
?190 ?2253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2537 i2551  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v643 
values: i2536 i2550 
=== Succesors ===
=== Usages ===
?190 ?2253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v643 values: i2536 i2550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v644 v646 
=== Succesors ===
next: i189 
=== Usages ===
a647 a659 i653 i656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v644 v646 #next: i189  <|@  <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5aa86dd7
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a659 a2 i54 a4 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a659 a2 i54 a4  <|@  <|@
tid ?2253 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i189 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1494 
stateDuring: ?2253 
=== Succesors ===
next: v1890 
=== Usages ===
v191 
=== Predecessor ===
v643 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1494 stateDuring: ?2253 #next: v1890  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i47 
=== Succesors ===
=== Usages ===
v1890 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i189 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v1889 
falseSuccessor: v1887 
=== Usages ===
=== Predecessor ===
i189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v1889 #falseSuccessor: v1887  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD[.], v95|QWORD[.], v96|DWORD, v97|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:70, 37, 28] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1888 
=== Usages ===
=== Predecessor ===
v1890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1888  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?194 
values: a647 a2 - - - i653 i656 i47 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?194 values: a647 a2 - - - i653 i656 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1495
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1889 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -382739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B135" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v1890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v1887 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B118 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2372  <|@  <|@
f <@~|@floating>@ <|@
tid i2373 <|@
result int[-371483|0xfffffffffffa54e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -371483
stableDimension: 0
stamp: i32 [-371483] â‡Š00000000fffa54e5 â‡ˆ00000000fffa54e5
stampKind: i32
value: int[-371483|0xfffffffffffa54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1869 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-371483|0xfffffffffffa54e5]] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2370 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2370  <|@  <|@
f <@~|@floating>@ <|@
tid i2371 <|@
result int[-369179|0xfffffffffffa5de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -369179
stableDimension: 0
stamp: i32 [-369179] â‡Š00000000fffa5de5 â‡ˆ00000000fffa5de5
stampKind: i32
value: int[-369179|0xfffffffffffa5de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-369179|0xfffffffffffa5de5]] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2364 
=== Usages ===
=== Predecessor ===
v1854 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2364  <|@  <|@
f <@~|@floating>@ <|@
tid i2365 <|@
result int[-359963|0xfffffffffffa81e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -359963
stableDimension: 0
stamp: i32 [-359963] â‡Š00000000fffa81e5 â‡ˆ00000000fffa81e5
stampKind: i32
value: int[-359963|0xfffffffffffa81e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359963|0xfffffffffffa81e5]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v1846 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2360  <|@  <|@
f <@~|@floating>@ <|@
tid i2361 <|@
result int[-357171|0xfffffffffffa8ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -357171
stableDimension: 0
stamp: i32 [-357171] â‡Š00000000fffa8ccd â‡ˆ00000000fffa8ccd
stampKind: i32
value: int[-357171|0xfffffffffffa8ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v1845 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357171|0xfffffffffffa8ccd]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B104" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2355 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-374027 - -356875] â‡Š00000000fffa00c5 â‡ˆ00000000fffafffd
valueDescription: i32
=== Inputs ===
merge: v2352 
values: i2361 i2363 i2365 i2371 i2373 
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2352 values: i2361 i2363 i2365 i2371 i2373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2360 v2362 v2364 v2370 v2372 
=== Succesors ===
next: v2357 
=== Usages ===
i2355 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2360 v2362 v2364 v2370 v2372 #next: v2357  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?762 
actionAndReason: i2355 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?762 actionAndReason: i2355 speculation: a2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2314 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2314  <|@  <|@
f <@~|@floating>@ <|@
tid i2315 <|@
result int[-315955|0xfffffffffffb2dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315955
stableDimension: 0
stamp: i32 [-315955] â‡Š00000000fffb2dcd â‡ˆ00000000fffb2dcd
stampKind: i32
value: int[-315955|0xfffffffffffb2dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315955|0xfffffffffffb2dcd]] destination: B124 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2308 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2308  <|@  <|@
f <@~|@floating>@ <|@
tid i2309 <|@
result int[-313395|0xfffffffffffb37cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -313395
stableDimension: 0
stamp: i32 [-313395] â‡Š00000000fffb37cd â‡ˆ00000000fffb37cd
stampKind: i32
value: int[-313395|0xfffffffffffb37cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313395|0xfffffffffffb37cd]] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2302 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2302  <|@  <|@
f <@~|@floating>@ <|@
tid i2303 <|@
result int[-310835|0xfffffffffffb41cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310835
stableDimension: 0
stamp: i32 [-310835] â‡Š00000000fffb41cd â‡ˆ00000000fffb41cd
stampKind: i32
value: int[-310835|0xfffffffffffb41cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310835|0xfffffffffffb41cd]] destination: B126 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2296 
=== Usages ===
=== Predecessor ===
v1690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2296  <|@  <|@
f <@~|@floating>@ <|@
tid i2297 <|@
result int[-308275|0xfffffffffffb4bcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308275
stableDimension: 0
stamp: i32 [-308275] â‡Š00000000fffb4bcd â‡ˆ00000000fffb4bcd
stampKind: i32
value: int[-308275|0xfffffffffffb4bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308275|0xfffffffffffb4bcd]] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2290 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2290  <|@  <|@
f <@~|@floating>@ <|@
tid i2291 <|@
result int[-305427|0xfffffffffffb56ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305427
stableDimension: 0
stamp: i32 [-305427] â‡Š00000000fffb56ed â‡ˆ00000000fffb56ed
stampKind: i32
value: int[-305427|0xfffffffffffb56ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305427|0xfffffffffffb56ed]] destination: B128 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid i2289 <|@
result int[-303387|0xfffffffffffb5ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303387
stableDimension: 0
stamp: i32 [-303387] â‡Š00000000fffb5ee5 â‡ˆ00000000fffb5ee5
stampKind: i32
value: int[-303387|0xfffffffffffb5ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303387|0xfffffffffffb5ee5]] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2286 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2286  <|@  <|@
f <@~|@floating>@ <|@
tid i2287 <|@
result int[-302611|0xfffffffffffb61ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302611
stableDimension: 0
stamp: i32 [-302611] â‡Š00000000fffb61ed â‡ˆ00000000fffb61ed
stampKind: i32
value: int[-302611|0xfffffffffffb61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1669 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302611|0xfffffffffffb61ed]] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2280 
=== Usages ===
=== Predecessor ===
v1658 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2280  <|@  <|@
f <@~|@floating>@ <|@
tid i2281 <|@
result int[-300083|0xfffffffffffb6bcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300083
stableDimension: 0
stamp: i32 [-300083] â‡Š00000000fffb6bcd â‡ˆ00000000fffb6bcd
stampKind: i32
value: int[-300083|0xfffffffffffb6bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300083|0xfffffffffffb6bcd]] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2276 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2276  <|@  <|@
f <@~|@floating>@ <|@
tid i2277 <|@
result int[-299539|0xfffffffffffb6ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299539
stableDimension: 0
stamp: i32 [-299539] â‡Š00000000fffb6ded â‡ˆ00000000fffb6ded
stampKind: i32
value: int[-299539|0xfffffffffffb6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v1649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299539|0xfffffffffffb6ded]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B5" "B131" "B130" "B129" "B128" "B13" "B127" "B20" "B126" "B27" "B125" "B34" "B124" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2273 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-318227 - -299539] â‡Š00000000fffb00c5 â‡ˆ00000000fffb7ffd
valueDescription: i32
=== Inputs ===
merge: v2270 
values: i2277 i2279 i2281 i2287 i2289 i2291 i2295 i2297 i2301 i2303 i2307 i2309 i2313 i2315 i2317 
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2270 values: i2277 i2279 i2281 i2287 i2289 i2291 i2295 i2297 i2301 i2303 i2307 i2309 i2313 i2315 i2317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2276 v2278 v2280 v2286 v2288 v2290 v2294 v2296 v2300 v2302 v2306 v2308 v2312 v2314 v2316 
=== Succesors ===
next: v2275 
=== Usages ===
i2273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2276 v2278 v2280 v2286 v2288 v2290 v2294 v2296 v2300 v2302 v2306 v2308 v2312 v2314 v2316 #next: v2275  <|@  <|@
f <@*|@fixed>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i2273 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2270 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i2273 speculation: a2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B135" 
    xhandlers
    flags 
    probability 4598186409504408312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v2613 <|@
result [v8|DWORD * 8 + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2482 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1499 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2613 
=== Succesors ===
next: j1502 
=== Usages ===
v2614 v1503 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2613 #next: j1502  <|@  <|@
f <@~|@floating>@ <|@
tid v2614 <|@
result [v101|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v1499 
index: - 
=== Succesors ===
=== Usages ===
j1502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v1499 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1502 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2614 
=== Succesors ===
next: i15 
=== Usages ===
v1503 
=== Predecessor ===
v1499 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2614 #next: i15  <|@  <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6411f731
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j1502 
metaspaceMethod: v1499 
arguments: a1150 a2 i3 a4 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j1502 metaspaceMethod: v1499 arguments: a1150 a2 i3 a4  <|@  <|@
tid ?2248 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2483 - 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2483 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i15 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
polymorphic: true
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1503 
stateDuring: ?2248 
=== Succesors ===
next: v24 
=== Usages ===
i25 
=== Predecessor ===
j1502 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1503 stateDuring: ?2248 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
i15 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v8|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v101|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B118" "B114" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i25 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v22 
values: i15 i60 i60 
=== Succesors ===
=== Usages ===
?23 v21 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: i15 i60 i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v30 v703 
=== Succesors ===
next: a2555 
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v30 v703 #next: a2555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2555 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2558 
=== Succesors ===
next: i2556 
=== Usages ===
a1153 v2563 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2558 #next: i2556  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i2483 - i25 
=== Succesors ===
=== Usages ===
v2323 i2556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i2483 - i25  <|@  <|@
f <@~|@floating>@ <|@
tid v2563 <|@
result [v105|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2555 
=== Succesors ===
=== Usages ===
i2556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2556 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?23 
guard: - 
address: v2563 
=== Succesors ===
next: i2557 
=== Usages ===
v1160 
=== Predecessor ===
a2555 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?23 guard: - address: v2563 #next: i2557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2557 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2559 
=== Succesors ===
next: v1898 
=== Usages ===
v2564 v1160 
=== Predecessor ===
i2556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2559 #next: v1898  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2557 
y: i2556 
=== Succesors ===
=== Usages ===
v1898 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2557 y: i2556  <|@  <|@
f <@*|@fixed>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1160 
=== Succesors ===
trueSuccessor: v1895 
falseSuccessor: v1897 
=== Usages ===
=== Predecessor ===
i2557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1160 #trueSuccessor: v1895 #falseSuccessor: v1897  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v104|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1167 
=== Usages ===
v1167 
=== Predecessor ===
v1898 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid a1153 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2555 
=== Succesors ===
=== Usages ===
v2564 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2564 <|@
result [v108|QWORD[.] + v107|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1153 
index: i2557 
=== Succesors ===
=== Usages ===
v1167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1153 index: i2557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1895 
address: v2564 
value: i2483 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1895 address: v2564 value: i2483 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 46]
stamp: void
=== Inputs ===
result: i25 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i25 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD[.] + v107|DWORD * 4 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2323 
=== Usages ===
=== Predecessor ===
v1898 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2323  <|@  <|@
f <@~|@floating>@ <|@
tid i2325 <|@
result int[-297243|0xfffffffffffb76e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297243
stableDimension: 0
stamp: i32 [-297243] â‡Š00000000fffb76e5 â‡ˆ00000000fffb76e5
stampKind: i32
value: int[-297243|0xfffffffffffb76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?23 
actionAndReason: i2325 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?23 actionAndReason: i2325 speculation: a2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -297243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v104|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2263 
=== Usages ===
=== Predecessor ===
v1642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid i2269 <|@
result int[-292123|0xfffffffffffb8ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292123
stableDimension: 0
stamp: i32 [-292123] â‡Š00000000fffb8ae5 â‡ˆ00000000fffb8ae5
stampKind: i32
value: int[-292123|0xfffffffffffb8ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i2269 
speculation: a2260 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i2269 speculation: a2260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e2f616f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v9|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[.] + v6|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7493788324863577 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B131" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B130" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B129" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B128" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600422177167317063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v17|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B101" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B14 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B65" "B14" "B21" "B56" "B28" "B66" "B35" "B67" 
    successors "B102" "B122" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v70|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B121" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v72|DWORD = MOV [v71|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + v73|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B120" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B119" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B115" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v70|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v81|DWORD = MOV [v80|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v82|QWORD[.] + v79|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v82|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v78|DWORD * 4 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v79|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4603439295021643013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v75|DWORD, v82|QWORD[.], v84|DWORD, v83|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B92" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD[.], v87|DWORD, v88|QWORD[.], v89|DWORD, v90|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B114" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v88|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B111 -> B112 falseDestination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 20], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B114 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B118" "B114" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v104|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v108|QWORD[.] + v107|DWORD * 4 + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B127" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v17|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v22|DWORD = MOV [v21|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595917824668068765
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v21|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B101" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B21 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B135" 
    xhandlers
    flags 
    probability 4598186409504408312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v8|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v101|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B126" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v22|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v21|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591413472252786285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v23|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B101" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B28 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B116" 
    xhandlers
    flags 
    probability 4594823854284282252
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v93|QWORD[.], v84|DWORD, v83|DWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B93" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD[.], v95|QWORD[.], v96|DWORD, v97|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:70, 37, 28] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B135" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B118 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B125" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v23|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586909119921460260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v25|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B101" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B35 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B124" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v25|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582404767674081325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v27|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B42 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B68" "B42" 
    successors "B70" "B100" 
    xhandlers
    flags 
    probability 4587076404307842276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B101" 
    xhandlers
    flags 
    probability 4587006991976692718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B68" 
    xhandlers
    flags 
    probability 4582403262769777919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v27|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582335552146031174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575238452998694257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B11" "B53" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v7|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v47|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP [v48|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v50|DWORD = MOV [v49|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOV [v48|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV [v52|QWORD[.] + v51|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B96" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v55|DWORD = MOV [v54|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v48|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B95" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v48|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v58|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v47|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v59|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B86" "B94" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v59|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v47|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v47|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B82" "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + v57|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v63|QWORD[.] + v56|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v56|DWORD * 4 + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v57|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v58|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 4573891535647145046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v53|DWORD, v63|QWORD[.], v65|DWORD, v64|DWORD] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v47|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v60|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOVZXB [v61|QWORD + v60|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4570733895526242420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4570777205206007899
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B63" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v40|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction CMP (x: v19|DWORD, y: [v42|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVZX v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVZXB [v43|QWORD + v42|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|DWORD] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|DWORD, y: [v40|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4566229338160616523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B65" 
    xhandlers
    flags 
    probability 4566272750519685878
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v21|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566186131160154920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B65 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B116" 
    xhandlers
    flags 
    probability 4565423258108577047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v67|QWORD[.], v65|DWORD, v64|DWORD] destination: B93 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4561724780901804654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B66" 
    xhandlers
    flags 
    probability 4561789610867207777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v23|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v34|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B101" 
    xhandlers
    flags 
    probability 4561702786149069066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B66 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4557520402031344378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557220223749794897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B67" 
    xhandlers
    flags 
    probability 4559598263284264275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v25|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v25|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v23|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559533433318861152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B67 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4552798983856413865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B71" 
    xhandlers
    flags 
    probability 4540615103374966341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4536164864144700316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4531674407468225965
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4529912261451577748
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-318227|0xfffffffffffb24ed]] destination: B41 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B5" "B131" "B130" "B129" "B128" "B13" "B127" "B20" "B126" "B27" "B125" "B34" "B124" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-371483|0xfffffffffffa54e5]] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B104" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308275|0xfffffffffffb4bcd]] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -382739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-353563|0xfffffffffffa9ae5]] destination: B84 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B74" "B97" "B96" "B95" "B87" "B94" "B89" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-356115|0xfffffffffffa90ed]] destination: B89 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-329243|0xfffffffffffaf9e5]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B55" "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v17|DWORD[.] v19|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v11|QWORD[.] v19|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354611|0xfffffffffffa96cd]] destination: B94 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-375059|0xfffffffffffa46ed]] destination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" "B112" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v86|QWORD[.] v1|QWORD[.] v20|DWORD v3|QWORD[.] v87|DWORD v89|DWORD v90|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-348187|0xfffffffffffaafe5]] destination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-345883|0xfffffffffffab8e5]] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337939|0xfffffffffffad7ed]] destination: B74 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336155|0xfffffffffffadee5]] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-369179|0xfffffffffffa5de5]] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333363|0xfffffffffffae9cd]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-361747|0xfffffffffffa7aed]] destination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315955|0xfffffffffffb2dcd]] destination: B124 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -332051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v11|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-359963|0xfffffffffffa81e5]] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313395|0xfffffffffffb37cd]] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-357171|0xfffffffffffa8ccd]] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-350995|0xfffffffffffaa4ed]] destination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326451|0xfffffffffffb04cd]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-307987|0xfffffffffffb4ced]] destination: B13 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300307|0xfffffffffffb6aed]] destination: B5 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326163|0xfffffffffffb05ed]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-392475|0xfffffffffffa02e5]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303387|0xfffffffffffb5ee5]] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300083|0xfffffffffffb6bcd]] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315667|0xfffffffffffb2eed]] destination: B34 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302611|0xfffffffffffb61ed]] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310547|0xfffffffffffb42ed]] destination: B20 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-313107|0xfffffffffffb38ed]] destination: B27 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-355859|0xfffffffffffa91ed]] destination: B87 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299539|0xfffffffffffb6ded]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305427|0xfffffffffffb56ed]] destination: B128 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310835|0xfffffffffffb41cd]] destination: B126 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-326675|0xfffffffffffb03ed]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -297243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v104|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - v10|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #2          // java.util.regex.Matcher.locals:int[]
     4: aload_0       
     5: getfield      #1          // localIndex:int
     8: iaload        
     9: istore        4
    11: aload_1       
    12: getfield      #2          // java.util.regex.Matcher.locals:int[]
    15: aload_0       
    16: getfield      #1          // localIndex:int
    19: iload_2       
    20: iastore       
    21: aload_0       
    22: getfield      #3          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    25: aload_1       
    26: iload_2       
    27: aload_3       
    28: invokevirtual #4          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    31: istore        5
    33: aload_1       
    34: getfield      #2          // java.util.regex.Matcher.locals:int[]
    37: aload_0       
    38: getfield      #1          // localIndex:int
    41: iload         4
    43: iastore       
    44: iload         5
    46: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e2f616f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.7493788324863577 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B131" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B130" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   74  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B129" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B128" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction CMP rbx|DWORD y: -10240 size: WORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVZX rbx|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600422177167317063
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B101" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B65" "B14" "B21" "B56" "B28" "B66" "B35" "B67" 
    successors "B102" "B122" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1020  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B121" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1030  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1032  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1034  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1044  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B120" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1064  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1066  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B119" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B115" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1084  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1086  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1090  <|@ instruction rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 1100  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4603439295021643013
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B92" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction CMP [r10|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B114" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr 1126  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B111 -> B112 falseDestination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1150  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1152  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1156  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1158  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction JUMP ~[] destination: B114 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B118" "B114" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1420  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr 1422  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1424  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1430  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1432  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B127" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  184  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595917824668068765
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B101" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B21 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B135" 
    xhandlers
    flags 
    probability 4598186409504408312
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 1400  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28] <|@ <|@
      nr 1410  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B126" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  264  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591413472252786285
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B101" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B116" 
    xhandlers
    flags 
    probability 4594823854284282252
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1164  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B93" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1184  <|@ st <@st|@reference-map: [stack:0, stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:112|QWORD[.] stack:32|QWORD[.] - - - stack:92|DWORD stack:48|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:70, 37, 28] <|@ <|@
      nr 1186  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1188  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B135" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1212  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1214  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B118 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B125" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  332  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586909119921460260
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B101" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B35 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B124" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  398  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582404767674081325
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  444  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B42 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B68" "B42" 
    successors "B70" "B100" 
    xhandlers
    flags 
    probability 4587076404307842276
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  706  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B101" 
    xhandlers
    flags 
    probability 4587006991976692718
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B68" 
    xhandlers
    flags 
    probability 4582403262769777919
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  468  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  472  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582335552146031174
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575238452998694257
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" "B11" "B53" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  720  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  722  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  736  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  748  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B96" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B95" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  788  <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  790  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B86" "B94" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  862  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  886  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B82" "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  910  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 4573891535647145046
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rdi|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  816  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  836  <|@ instruction JUMP ~[] destination: B82 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4570733895526242420
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4570777205206007899
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  564  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B63" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rdx|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4566229338160616523
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B65" 
    xhandlers
    flags 
    probability 4566272750519685878
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr  540  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566186131160154920
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  678  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B65 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B116" 
    xhandlers
    flags 
    probability 4565423258108577047
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B93 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4561724780901804654
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B66" 
    xhandlers
    flags 
    probability 4561789610867207777
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  512  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr  516  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B101" 
    xhandlers
    flags 
    probability 4561702786149069066
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  686  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B66 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4557520402031344378
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  712  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557220223749794897
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B67" 
    xhandlers
    flags 
    probability 4559598263284264275
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  494  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559533433318861152
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B67 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4552798983856413865
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B71" 
    xhandlers
    flags 
    probability 4540615103374966341
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B53 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4536164864144700316
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4531674407468225965
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4529912261451577748
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE input: int[-318227|0xfffffffffffb24ed] <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B41 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B5" "B131" "B130" "B129" "B128" "B13" "B127" "B20" "B126" "B27" "B125" "B34" "B124" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1388  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r8|QWORD[.] r10|QWORD[.] rcx|DWORD rbx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r11|DWORD = MOVE input: int[-371483|0xfffffffffffa54e5] <|@ <|@
      nr 1224  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B104" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-308275|0xfffffffffffb4bcd] <|@ <|@
      nr 1316  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1318  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction JUMP ~[] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction MOV [r15|QWORD + 668] y: -382739 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: rbx|QWORD[.] r10|QWORD[.] - - - r11|DWORD rcx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r11|DWORD = MOVE input: int[-353563|0xfffffffffffa9ae5] <|@ <|@
      nr  852  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B84 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B74" "B97" "B96" "B95" "B87" "B94" "B89" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r11|DWORD = MOVE input: int[-356115|0xfffffffffffa90ed] <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B89 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r11|DWORD = MOVE input: int[-329243|0xfffffffffffaf9e5] <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B55" "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  668  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rcx|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rcx|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r11|DWORD = MOVE input: int[-354611|0xfffffffffffa96cd] <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B94 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: int[-375059|0xfffffffffffa46ed] <|@ <|@
      nr 1116  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction JUMP ~[] destination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" "B112" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rdx|QWORD[.] r10|QWORD[.] r13|DWORD stack:72|QWORD[.] rcx|DWORD rax|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction r11|DWORD = MOVE input: int[-348187|0xfffffffffffaafe5] <|@ <|@
      nr  964  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE input: int[-345883|0xfffffffffffab8e5] <|@ <|@
      nr  974  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction r11|DWORD = MOVE input: int[-337939|0xfffffffffffad7ed] <|@ <|@
      nr  756  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B74 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r11|DWORD = MOVE input: int[-336155|0xfffffffffffadee5] <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction r11|DWORD = MOVE input: int[-369179|0xfffffffffffa5de5] <|@ <|@
      nr 1234  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r11|DWORD = MOVE input: int[-333363|0xfffffffffffae9cd] <|@ <|@
      nr  994  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = MOVE input: int[-361747|0xfffffffffffa7aed] <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: int[-315955|0xfffffffffffb2dcd] <|@ <|@
      nr 1274  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B124 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction MOV [r15|QWORD + 668] y: -332051 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction r11|DWORD = MOVE input: int[-359963|0xfffffffffffa81e5] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction r11|DWORD = MOVE input: int[-313395|0xfffffffffffb37cd] <|@ <|@
      nr 1288  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~[] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction r11|DWORD = MOVE input: int[-357171|0xfffffffffffa8ccd] <|@ <|@
      nr 1254  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1256  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1258  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction r11|DWORD = MOVE input: int[-350995|0xfffffffffffaa4ed] <|@ <|@
      nr  842  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r11|DWORD = MOVE input: int[-326451|0xfffffffffffb04cd] <|@ <|@
      nr  658  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced] <|@ <|@
      nr  146  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-300307|0xfffffffffffb6aed] <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction r11|DWORD = MOVE input: int[-326163|0xfffffffffffb05ed] <|@ <|@
      nr  588  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction r11|DWORD = MOVE input: int[-392475|0xfffffffffffa02e5] <|@ <|@
      nr 1132  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1458  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: r8|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = MOVE input: int[-303387|0xfffffffffffb5ee5] <|@ <|@
      nr 1340  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~[] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r11|DWORD = MOVE input: int[-300083|0xfffffffffffb6bcd] <|@ <|@
      nr 1364  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r11|DWORD = MOVE input: int[-315667|0xfffffffffffb2eed] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B34 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction r11|DWORD = MOVE input: int[-302611|0xfffffffffffb61ed] <|@ <|@
      nr 1352  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction JUMP ~[] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r11|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r11|DWORD = MOVE input: int[-313107|0xfffffffffffb38ed] <|@ <|@
      nr  296  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B27 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed] <|@ <|@
      nr  876  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B87 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: int[-299539|0xfffffffffffb6ded] <|@ <|@
      nr 1376  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ instruction r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed] <|@ <|@
      nr 1328  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction JUMP ~[] destination: B128 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction r11|DWORD = MOVE input: int[-310835|0xfffffffffffb41cd] <|@ <|@
      nr 1302  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1304  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~[] destination: B126 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed] <|@ <|@
      nr  646  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV [r15|QWORD + 668] y: -297243 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #2          // java.util.regex.Matcher.locals:int[]
     4: aload_0       
     5: getfield      #1          // localIndex:int
     8: iaload        
     9: istore        4
    11: aload_1       
    12: getfield      #2          // java.util.regex.Matcher.locals:int[]
    15: aload_0       
    16: getfield      #1          // localIndex:int
    19: iload_2       
    20: iastore       
    21: aload_0       
    22: getfield      #3          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    25: aload_1       
    26: iload_2       
    27: aload_3       
    28: invokevirtual #4          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    31: istore        5
    33: aload_1       
    34: getfield      #2          // java.util.regex.Matcher.locals:int[]
    37: aload_0       
    38: getfield      #1          // localIndex:int
    41: iload         4
    43: iastore       
    44: iload         5
    46: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B138" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e2f616f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.7493788324863577 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B131" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21] <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B130" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   74  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B129" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B128" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction CMP rbx|DWORD y: -10240 size: WORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    probability 4604925024006766212
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVZX rbx|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4600422177167317063
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  118  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B101" 
    xhandlers
    flags 
    probability 4600287982935363761
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B14 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B69" "B65" "B14" "B21" "B56" "B28" "B66" "B35" "B67" 
    successors "B102" "B122" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1020  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr 1022  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B121" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1030  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1032  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1034  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1044  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B120" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1060  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1064  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1066  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" "B119" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1074  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1076  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B115" 
    xhandlers
    flags 
    probability 4604853253520079720
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1080  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1084  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr 1086  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1090  <|@ instruction rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 1100  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B107 -> B109 falseDestination: B107 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B92" "B107" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction CMP [r10|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B114" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr 1126  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B111 -> B112 falseDestination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4603495869345810686
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1150  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1152  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1154  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1156  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1160  <|@ instruction JUMP ~[] destination: B114 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B118" "B114" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1412  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1420  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31] <|@ <|@
      nr 1422  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1424  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" "B127" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B22" 
    xhandlers
    flags 
    probability 4600420671591474369
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  184  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4595917824668068765
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B101" 
    xhandlers
    flags 
    probability 4595783645402444859
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B21 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B135" 
    xhandlers
    flags 
    probability 4598186409504408312
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 1400  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28] <|@ <|@
      nr 1410  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" "B126" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B29" 
    xhandlers
    flags 
    probability 4595916319260138981
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  264  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591413472252786285
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B101" 
    xhandlers
    flags 
    probability 4591279307951822620
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B116" 
    xhandlers
    flags 
    probability 4594823854284282252
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1164  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr 1166  <|@ instruction stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1168  <|@ instruction stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1170  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B93" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1184  <|@ st <@st|@reference-map: [stack:0, stack:24, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:112|QWORD[.] stack:32|QWORD[.] - - - stack:92|DWORD stack:48|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:70, 37, 28] <|@ <|@
      nr 1186  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1188  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B135" 
    xhandlers
    flags 
    probability 4594884638934357526
    begin_IR
      LIR
      nr 1210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1212  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1214  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction JUMP ~[] destination: B118 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B125" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B36" 
    xhandlers
    flags 
    probability 4591411967012750685
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  332  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4586909119921460260
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B101" 
    xhandlers
    flags 
    probability 4586774970583487866
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B35 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" "B124" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B43" 
    xhandlers
    flags 
    probability 4586907614849300118
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [rsi:0, r8:0, r10:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:88|QWORD[.] stack:32|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21] <|@ <|@
      nr  398  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582404767674081325
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  424  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582270633297431420
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  444  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B42 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B68" "B42" 
    successors "B71" "B101" 
    xhandlers
    flags 
    probability 4587076404307842276
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  706  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B69 -> B71 falseDestination: B69 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B68" 
    xhandlers
    flags 
    probability 4582403262769777919
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  468  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  472  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 4582335552146031174
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B71" 
    xhandlers
    flags 
    probability 4575238452998694257
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B11 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" "B11" "B52" 
    successors "B72" "B98" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  720  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  722  <|@ instruction rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28] <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B97" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  734  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  736  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  738  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  748  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B96" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B95" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B85" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  786  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28] <|@ <|@
      nr  788  <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  790  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B86" "B94" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  862  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  886  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B80" "B88" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4575746932928988878
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  910  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  914  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 4573891535647145046
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~[] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B84" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  800  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28] <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B83" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B91" 
    xhandlers
    flags 
    probability 4571243333301618382
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rdi|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  816  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B51" 
    xhandlers
    flags 
    probability 4570733895526242420
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B18" 
    successors "B52" "B57" 
    xhandlers
    flags 
    probability 4570777205206007899
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  564  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" "B63" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction CMP stack:48|DWORD y: 256 size: WORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [rsi:0, rdi:0, r10:0, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] r10|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28] <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rdx|QWORD = MOVZX stack:48|DWORD size: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B71" "B54" 
    xhandlers
    flags 
    probability 4566273605578637403
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B52 -> B71 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566102034371985001
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" 
    xhandlers
    flags 
    probability 4566229338160616523
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B25 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B25" 
    successors "B50" "B65" 
    xhandlers
    flags 
    probability 4566272750519685878
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28] <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18, 28] <|@ <|@
      nr  540  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B101" 
    xhandlers
    flags 
    probability 4566186131160154920
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  678  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B65 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B116" 
    xhandlers
    flags 
    probability 4565423258108577047
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ instruction r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B93 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4561724780901804654
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B32" 
    successors "B48" "B66" 
    xhandlers
    flags 
    probability 4561789610867207777
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28] <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  512  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18, 28] <|@ <|@
      nr  516  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B101" 
    xhandlers
    flags 
    probability 4561702786149069066
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  686  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B66 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557220223749794897
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B39" 
    successors "B46" "B67" 
    xhandlers
    flags 
    probability 4559598263284264275
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:96|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:92|DWORD[.] stack:40|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] stack:32|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - stack:60|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18, 28] <|@ <|@
      nr  494  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B101" 
    xhandlers
    flags 
    probability 4559533433318861152
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  694  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B67 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4552798983856413865
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4536164864144700316
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" 
    xhandlers
    flags 
    probability 4531674407468225965
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4529912261451577748
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r11|DWORD = MOVE input: int[-318227|0xfffffffffffb24ed] <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B41 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B5" "B131" "B130" "B129" "B128" "B13" "B127" "B20" "B126" "B27" "B125" "B34" "B124" "B41" 
    successors 
    xhandlers
    flags 
    probability 2372834053670830080
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1388  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r8|QWORD[.] r10|QWORD[.] rcx|DWORD rbx|QWORD[.] r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction r11|DWORD = MOVE input: int[-371483|0xfffffffffffa54e5] <|@ <|@
      nr 1224  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B104" "B121" "B120" "B119" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction r11|DWORD = MOVE input: int[-308275|0xfffffffffffb4bcd] <|@ <|@
      nr 1316  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1318  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1322  <|@ instruction JUMP ~[] destination: B127 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1192  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1200  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction MOV [r15|QWORD + 668] y: -382739 size: DWORD <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1208  <|@ st <@st|@reference-map: [rbx:0, r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: rbx|QWORD[.] r10|QWORD[.] - - - r11|DWORD rcx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r11|DWORD = MOVE input: int[-353563|0xfffffffffffa9ae5] <|@ <|@
      nr  852  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B84 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" "B74" "B97" "B96" "B95" "B87" "B94" "B89" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  998  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r11|DWORD = MOVE input: int[-356115|0xfffffffffffa90ed] <|@ <|@
      nr  892  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B89 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r11|DWORD = MOVE input: int[-329243|0xfffffffffffaf9e5] <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B55" "B63" "B62" "B61" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [rcx:0, rdi:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rdi|DWORD[.] rbp|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rcx|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rcx|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r11|DWORD = MOVE input: int[-354611|0xfffffffffffa96cd] <|@ <|@
      nr  954  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B94 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction r11|DWORD = MOVE input: int[-375059|0xfffffffffffa46ed] <|@ <|@
      nr 1120  <|@ instruction JUMP ~[] destination: B110 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B110" "B112" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1118  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rdx|QWORD[.] r10|QWORD[.] r13|DWORD stack:72|QWORD[.] rcx|DWORD rax|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction r11|DWORD = MOVE input: int[-348187|0xfffffffffffaafe5] <|@ <|@
      nr  964  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE input: int[-345883|0xfffffffffffab8e5] <|@ <|@
      nr  974  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B96 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction r11|DWORD = MOVE input: int[-337939|0xfffffffffffad7ed] <|@ <|@
      nr  756  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B74 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r11|DWORD = MOVE input: int[-336155|0xfffffffffffadee5] <|@ <|@
      nr  984  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction r11|DWORD = MOVE input: int[-369179|0xfffffffffffa5de5] <|@ <|@
      nr 1234  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r11|DWORD = MOVE input: int[-333363|0xfffffffffffae9cd] <|@ <|@
      nr  994  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = MOVE input: int[-361747|0xfffffffffffa7aed] <|@ <|@
      nr 1052  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction JUMP ~[] destination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: int[-315955|0xfffffffffffb2dcd] <|@ <|@
      nr 1274  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1280  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction JUMP ~[] destination: B124 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction MOV [r15|QWORD + 668] y: -332051 size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: stack:56|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] stack:40|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:21, 28] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction r11|DWORD = MOVE input: int[-359963|0xfffffffffffa81e5] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction r11|DWORD = MOVE input: int[-313395|0xfffffffffffb37cd] <|@ <|@
      nr 1288  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1290  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction JUMP ~[] destination: B125 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction r11|DWORD = MOVE input: int[-357171|0xfffffffffffa8ccd] <|@ <|@
      nr 1254  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1256  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction r11|DWORD = MOVE input: int[-350995|0xfffffffffffaa4ed] <|@ <|@
      nr  842  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B83 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r11|DWORD = MOVE input: int[-326451|0xfffffffffffb04cd] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced] <|@ <|@
      nr  146  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B13 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVE input: int[-300307|0xfffffffffffb6aed] <|@ <|@
      nr   60  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction r11|DWORD = MOVE input: int[-326163|0xfffffffffffb05ed] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1130  <|@ instruction r11|DWORD = MOVE input: int[-392475|0xfffffffffffa02e5] <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1458  <|@ instruction MOV [r15|QWORD + 668] y: -292123 size: DWORD <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:40]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0]
locals: r8|QWORD[.] r10|QWORD[.] stack:76|DWORD stack:72|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = MOVE input: int[-303387|0xfffffffffffb5ee5] <|@ <|@
      nr 1340  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1344  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~[] destination: B129 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r11|DWORD = MOVE input: int[-300083|0xfffffffffffb6bcd] <|@ <|@
      nr 1364  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r11|DWORD = MOVE input: int[-315667|0xfffffffffffb2eed] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B34 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction r11|DWORD = MOVE input: int[-302611|0xfffffffffffb61ed] <|@ <|@
      nr 1352  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1354  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1358  <|@ instruction JUMP ~[] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r11|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r11|DWORD = MOVE input: int[-313107|0xfffffffffffb38ed] <|@ <|@
      nr  296  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B27 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed] <|@ <|@
      nr  876  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction JUMP ~[] destination: B87 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: int[-299539|0xfffffffffffb6ded] <|@ <|@
      nr 1376  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ instruction r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed] <|@ <|@
      nr 1328  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction JUMP ~[] destination: B128 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction r11|DWORD = MOVE input: int[-310835|0xfffffffffffb41cd] <|@ <|@
      nr 1304  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~[] destination: B126 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1442  <|@ instruction MOV [r15|QWORD + 668] y: -297243 size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r8|QWORD[.] r10|QWORD[.] - - r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:31] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #2          // java.util.regex.Matcher.locals:int[]
     4: aload_0       
     5: getfield      #1          // localIndex:int
     8: iaload        
     9: istore        4
    11: aload_1       
    12: getfield      #2          // java.util.regex.Matcher.locals:int[]
    15: aload_0       
    16: getfield      #1          // localIndex:int
    19: iload_2       
    20: iastore       
    21: aload_0       
    22: getfield      #3          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    25: aload_1       
    26: iload_2       
    27: aload_3       
    28: invokevirtual #4          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    31: istore        5
    33: aload_1       
    34: getfield      #2          // java.util.regex.Matcher.locals:int[]
    37: aload_0       
    38: getfield      #1          // localIndex:int
    41: iload         4
    43: iastore       
    44: iload         5
    46: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048895424508b5a3c8b04dd0c000000448b5610413bc20f86010a0000448b5e0c428b04dd0800000048c1e303468b4c931042894c9310458bd349c1e20381f8addeadde0f853f0200008b5a103bd90f8e8a0a000041817808addeadde0f85f609000085c90f8c89090000418b580c8b04dd0c0000003bc10f8e0c0a00003bc10f86bf09000048c1e3030fbf5c4b106681fb00d80f83590a000044895c244c428b3cdd100000008b04fd080000000fb7eb896c2448448be941ffc544896c244481f8addeadde0f85550100003b2cfd100000000f8c940300003b2cfd140000000f8ffa0800004c8954243844894c24344c89442428894c24244889742418be01000000428b14dd0c000000813cd508000000addeadde0f85940800004c8b542450418b4a3c448b04cd0c000000448b1cd510000000453bc30f864508000048c1e103428b4c991085c90f8ce5070000458b4234468b1cc50c000000448b0cd514000000453bd90f86a3070000418bd9ffc3443bdb0f8661060000448b6c2444448b1cd50c000000428b3cdd0800000049c1e003418b749810438b44881043894c881045896c981048c1e20381ffaddeadde0f856601000041837a18010f84e90600004183780c020f824608000045896a20418b721c4189701045896814b8010000004c8b442418458b5a3c468b0cdd0c000000418b4810443bc9448b4c24340f862509000049c1e30345894c8b10488b6c24604883c468850500000000c5f877c381f8addeadde0f85d2050000897c24148b04fd10000000448b34c5080000004181feaddeadde0f85650000003b2cc5100000000f8c710300003b2cc5140000000f8f370800004c8954243844894c24344c89442428894c24244889742418be01000000e97afeffff44894c24344889742418488b1cc5e0010000488b4340498bf24c8bd2ffd0904c8b542450e930ffffff44894c243448897424184181feaddeadde0f853e08000089442410448b0cc510000000428b34cd0800000081feaddeadde0f857c000000423b2ccd100000000f8c6d030000423b2ccd140000000f8fad070000be010000004c895424384c89442428894c2424e9e6fdffff49c1e303897424408944241448891424498bf3498bd2418bcd4c8b44242848b8ffffffffffffffff666690e8000000009085c00f84ba040000b8010000004c8b542450e97dfeffff81feaddeadde0f852206000044894c240c468b34cd10000000428b34f50800000081feaddeadde0f8534000000423b2cf5100000000f8c32030000423b2cf5140000000f8fbf060000be010000004c895424384c89442428894c2424e93dfdffff81feaddeadde0f8572050000428b34f5100000008b14f50800000081faaddeadde0f85430000003b2cf5100000000f8c2b0300003b2cf5140000000f8fa8030000be01000000895c24404c895424384c89442428894c242485f6448b5c244c0f85d8fcffffe9590000004489742408895c24404c895424384c89442428894c242448c1e6038bd548b8ffffffffffffffff90e8000000009085c00f840f030000be01000000ebb1895c24404c8954243844894c24344c89442428894c24244889742418428b34dd14000000418504f4428b14dd0c000000813cd508000000addeadde0f85710400004c8b542450458b5a3c468b04dd0c000000448b0cd510000000453bc10f862f04000049c1e303478b5c8b104585db0f8c0d040000458b4234468b0cc50c0000008b0cd514000000443bc90f86e10300008bd9ffc3443bcb0f86c4030000448b0cd50c000000438504cc8b3cf50800000081ffaddeadde0f846900000081ffaddeadde0f85680300008b6c24483b2cf5100000000f8c880500003b2cf5140000000f8f14030000448b6c244449c1e003418b7c9810418b74881045895c881045896c981048c1e20342813ccd08000000addeadde0f852e0100008bc6418bcb8bf7e924fcffff8b6c24488b34f5100000003b2cf50c0000000f839902000066817c244000010f830d0400000fb77c24400fb674f71085f6758ee996030000895c24404c8954243844894c24344c89442428894c24244c8bd248897424188b34fd140000008b14f50800000081faaddeadde0f843c00000081faaddeadde0f85c503000066817c244000010f83020500008b34f5100000003b2cf50c0000000f83440200000fb75424400fb674f210e9defdffff3b2cf5100000000f8c3cfeffff3b2cf5140000000f8fae030000be01000000e99ffaffff895c24404c895424384c89442428894c24248b34c514000000418504f448c1e6038bd548b8ffffffffffffffff0f1f8000000000e8000000009085c00f84d6000000be01000000448b5c244ce94efaffff49c1e103897c2440897424144d8bd9488914244c8b542450e95bfcffff895c24404c895424384c89442428894c2424428b34cd14000000418504f448c1e6038b54244848b8ffffffffffffffff660f1f440000e8000000009085c00f8482000000be01000000448b5c244ce9def9ffff895c24404c895424384c89442428894c2424428b34f514000000418504f448c1e6038b54244848b8ffffffffffffffff666690e8000000009085c00f843f000000be01000000448b5c244ce98ef9ffff448b742408ebbb448b6c24448b6c24488b7c2414448b5c244c4c8b542450e952feffff8b4424108b6c2448e9d1feffff448b4c240ce935ffffff41bbed24fbff448b4c2434498bd84c8b5424504c8b44241845899f9c0200004d89a7a8020000e8000000009041bbe554faff448b4c24344c8b44241845899f9c0200004d89a7a8020000e8000000009041bbcd4bfbff498bd84c8bd24c8bc6ebb78b4c2440448b5c2414488b1c24448b4c24344c8b5424504c8b44241841c7879c020000ed28faff4d89a7a8020000e8000000009041bbe59afaff448b4c24344c8b44241845899f9c0200004d89a7a8020000e8000000009041bbed90faff448b4c2434ebda41bbe5f9faff488b4c2438448b4c24344c8b44241845899f9c0200004d89a7a8020000e8000000009041bbcd96faff448b4c2434eba441bbed46faff448b4c24344c8b44241845899f9c0200004d89a7a8020000e8000000009041bbe5affaff448b4c2434e970ffffff41bbe5b8faff448b4c2434e960ffffff41bbedd7faff448b4c2434e950ffffff41bbe5defaff448b4c2434e940ffffff41bbe55dfaff448b4c2434e9c7feffff41bbcde9faff448b4c24344c8b542450e91bffffff41bbed7afaff448b4c2434e9a2feffff41bbcd2dfbff448b4c2434498bd84c8b5424504c8b442418e966feffff448b4c24344c8b44241841c7879c020000edeefaff4d89a7a8020000e8000000009041bbe581faff448b4c2434e953feffff41bbcd37fbff448b4c2434498bd84c8b5424504c8b442418e917feffff41bbcd8cfaff448b4c24344c8b542450e921feffff41bbeda4faff448b4c2434e97afeffff41bbcd04fbffe99bfeffff41bbed4cfbff498bd84c8bd24c8bc6e9d3fdffff41bbed6afbff498bd84c8bd24c8bc6e9bffdffff41bbed05fbffe968feffff41bbe502faffe993feffff4c89442428894c24244c8bd24c8bc641c7879c020000e58afbff4d89a7a8020000e8000000009041bbe55efbff498bd84c8bd24c8bc6e96efdffff41bbcd6bfbff498bd84c8bd24c8bc6e95afdffff41bbed2efbff448b4c2434498bd84c8b5424504c8b442418e93dfdffff41bbed61fbff498bd84c8bd24c8bc6e929fdffff41bbed42fbff498bd84c8bd24c8bc6e915fdffff41bbed38fbff448b4c2434498bd84c8b5424504c8b442418e9f8fcffff41bbed91faff448b4c2434e970fdffff41bbed6dfbff498bd84c8bd24c8bc6e9d4fcffff41bbed56fbff498bd84c8bd24c8bc6e9c0fcffff41bbcd41fbff498bd84c8b5424504c8b442418e9a8fcffff41bbed03fbffe951fdffff41c7879c020000e576fbff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e2f616f slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 56 [rdx:0, rbx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 67 14 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B138  <||@
  Comment 76 block B1 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 22 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 80 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 24 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 92 26 r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 28 MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 102 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 109 32 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 109 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 115 34 BRANCH trueDestinationProbability: 0.7493788324863577 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B134  <||@
  Comment 121 block B2 null  <||@
  Comment 121 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 38 rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 124 40 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 126 42 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B132  <||@
  Comment 132 block B3 null  <||@
  Comment 132 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 46 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21]  <||@
  Comment 132 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 132 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 140 48 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B131  <||@
  Comment 146 block B4 null  <||@
  Comment 146 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 52 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 148 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 154 block B6 null  <||@
  Comment 154 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 70 rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 158 72 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 158 [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 158 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 165 74 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 167 76 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B130  <||@
  Comment 173 block B7 null  <||@
  Comment 173 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 80 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 82 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B129  <||@
  Comment 181 block B8 null  <||@
  Comment 181 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 86 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 185 88 rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 190 90 CMP rbx|DWORD y: -10240 size: WORD  <||@
  Comment 195 92 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B128  <||@
  Comment 201 block B9 null  <||@
  Comment 201 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 96 stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 206 98 rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 214 100 rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 214 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 214 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 221 102 rbp|DWORD = MOVZX rbx|DWORD size: DWORD  <||@
  Comment 224 104 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 228 106 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 234 108 stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 239 110 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 239 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 245 112 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 251 block B10 null  <||@
  Comment 251 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 116 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 258 118 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 264 block B12 null  <||@
  Comment 264 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 138 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 271 140 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 277 block B14 null  <||@
  Comment 277 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 156 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 282 158 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 287 160 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 292 162 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 296 164 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 301 166 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 306 168 JUMP ~[] destination: B14 -> B101  <||@
  Comment 306 block B101 null  <||@
  Comment 306 1016 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 306 1018 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 314 1020 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 314 [rdx:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 314 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 314 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 325 1022 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B122  <||@
  Comment 331 block B102 null  <||@
  Comment 331 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 331 1026 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 336 1028 rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 340 1030 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 340 [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 340 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 348 1032 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 356 1034 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 359 1036 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B121  <||@
  Comment 365 block B103 null  <||@
  Comment 365 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 1040 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 369 1042 rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 374 1044 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 376 1046 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 382 block B105 null  <||@
  Comment 382 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 1060 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 386 1062 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 386 [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 386 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 394 1064 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 402 1066 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 405 1068 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B120  <||@
  Comment 411 block B106 null  <||@
  Comment 411 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 1072 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 416 1074 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 419 1076 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B119  <||@
  Comment 425 block B107 null  <||@
  Comment 425 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 1080 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 430 1082 r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 438 1084 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 438 [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 438 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 446 1086 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 450 1088 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 455 1090 rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 460 1092 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 465 1094 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 470 1096 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 474 1098 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 474 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 480 1100 BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B107 -> B109 falseDestination: B107 -> B115  <||@
  Comment 486 block B109 null  <||@
  Comment 486 1106 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 486 1108 CMP [r10|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 491 1110 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 497 block B111 null  <||@
  Comment 497 1122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 1124 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 502 1126 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B111 -> B112 falseDestination: B111 -> B114  <||@
  Comment 508 block B114 null  <||@
  Comment 508 1146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 1148 MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD  <||@
  Comment 512 1150 rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1152 MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 520 1154 MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD  <||@
  Comment 524 1156 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 529 1160 JUMP ~[] destination: B114 -> B135  <||@
  Comment 529 block B135 null  <||@
  Comment 529 1416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 529 1412 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 534 1418 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 538 1420 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31]  <||@
  Comment 538 [r8:0, r10:0, r11:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |                |    <||@
  Comment 538 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 1422 rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 550 1424 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 553 1430 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 558 1426 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B135 -> B136 falseDestination: B135 -> B137  <||@
  Comment 564 block B136 null  <||@
  Comment 564 1428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 1432 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 568 1434 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 573 1436 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 582 12  <||@
  Comment 592 block B15 null  <||@
  Comment 592 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 592 172 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 592 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 598 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B127  <||@
  Comment 604 block B16 null  <||@
  Comment 604 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 178 stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 608 180 rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 615 182 r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 615 [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 615 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 623 184 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 623 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 630 186 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22  <||@
  Comment 636 block B17 null  <||@
  Comment 636 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 190 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 643 192 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 649 block B19 null  <||@
  Comment 649 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 214 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 656 216 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 662 block B21 null  <||@
  Comment 662 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 232 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 667 234 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 672 236 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 677 238 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 681 240 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 686 242 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 691 244 JUMP ~[] destination: B21 -> B101  <||@
  Comment 696 block B134 null  <||@
  Comment 696 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 1394 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 701 1396 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 706 1398 rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD  <||@
  Comment 714 1400 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 718 1402 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 721 1404 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 724 1408 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28]  <||@
  Comment 724 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 724 10  <||@
  Comment 726 [stack:24, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 727 1410 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 732 1414 JUMP ~[] destination: B134 -> B135  <||@
  Comment 737 block B22 null  <||@
  Comment 737 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 248 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 742 250 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 747 252 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 747 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 754 254 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B126  <||@
  Comment 760 block B23 null  <||@
  Comment 760 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 258 stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 764 260 r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 772 262 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 772 [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 772 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 780 264 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 780 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 786 266 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29  <||@
  Comment 792 block B24 null  <||@
  Comment 792 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 270 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 800 272 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 806 block B26 null  <||@
  Comment 806 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 288 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 814 290 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 820 block B28 null  <||@
  Comment 820 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 308 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 825 310 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 830 312 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 835 314 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 839 316 JUMP ~[] destination: B28 -> B101  <||@
  Comment 844 block B115 null  <||@
  Comment 844 1162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 1164 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 848 1166 stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 852 1168 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 856 1170 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 860 1172 JUMP ~[] destination: B115 -> B116  <||@
  Comment 860 block B116 null  <||@
  Comment 860 1174 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 860 1176 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 863 1178 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 866 1180 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 869 1182 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 874 1184 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:70, 37, 28]  <||@
  Comment 874 7  <||@
  Comment 887 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 892 [stack:0, stack:24, stack:80]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                   |1                  |2  |3  |4  |5               |6              
     locals:  |stack:112|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:92|DWORD  |stack:48|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 893 1186 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 895 1188 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118  <||@
  Comment 901 block B118 null  <||@
  Comment 901 1210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 1212 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 906 1214 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 911 1218 JUMP ~[] destination: B118 -> B135  <||@
  Comment 916 block B29 null  <||@
  Comment 916 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 320 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 916 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 922 322 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B125  <||@
  Comment 928 block B30 null  <||@
  Comment 928 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 326 stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 933 328 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 941 330 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 941 [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 941 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 949 332 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 949 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 955 334 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36  <||@
  Comment 961 block B31 null  <||@
  Comment 961 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 338 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 969 340 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 975 block B33 null  <||@
  Comment 975 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 356 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 983 358 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 989 block B35 null  <||@
  Comment 989 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 989 376 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 994 378 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 999 380 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 382 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1008 384 JUMP ~[] destination: B35 -> B101  <||@
  Comment 1013 block B36 null  <||@
  Comment 1013 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 388 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1013 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1019 390 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B124  <||@
  Comment 1025 block B37 null  <||@
  Comment 1025 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 394 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1033 396 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 1033 [rsi:0, r8:0, r10:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 1033 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1040 398 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1040 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1046 400 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43  <||@
  Comment 1052 block B38 null  <||@
  Comment 1052 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 404 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1059 406 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1065 block B40 null  <||@
  Comment 1065 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1065 422 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1072 424 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1078 block B42 null  <||@
  Comment 1078 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 442 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1083 444 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1087 446 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1092 448 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 450 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1101 452 JUMP ~[] destination: B42 -> B69  <||@
  Comment 1101 block B69 null  <||@
  Comment 1101 704 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1101 706 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1103 712 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1108 708 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B69 -> B71 falseDestination: B69 -> B101  <||@
  Comment 1119 block B43 null  <||@
  Comment 1119 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1119 456 stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1124 458 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1128 460 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1133 462 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 464 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1142 466 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1146 468 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1148 470 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1148 7  <||@
  Comment 1159 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1164 [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1165 472 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1167 474 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B68  <||@
  Comment 1173 block B68 null  <||@
  Comment 1173 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 700 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1178 702 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1180 block B11 null  <||@
  Comment 1180 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 122 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1184 124 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 126 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1194 128 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1199 130 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1203 132 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 134 JUMP ~[] destination: B11 -> B71  <||@
  Comment 1208 block B71 null  <||@
  Comment 1208 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1208 718 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1216 720 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1216 [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1216 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1220 722 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1228 724 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 1228 [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1228 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1239 726 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B98  <||@
  Comment 1245 block B72 null  <||@
  Comment 1245 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1245 730 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 732 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 1254 734 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1254 [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1254 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1262 736 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1270 738 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1273 740 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B97  <||@
  Comment 1279 block B73 null  <||@
  Comment 1279 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 744 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1283 746 r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1288 748 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1291 750 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 1297 block B75 null  <||@
  Comment 1297 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1297 764 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1301 766 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1301 [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1301 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1309 768 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1316 770 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1319 772 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B96  <||@
  Comment 1325 block B76 null  <||@
  Comment 1325 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1325 776 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1329 778 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1332 780 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B95  <||@
  Comment 1338 block B77 null  <||@
  Comment 1338 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 784 r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1346 786 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1346 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1350 788 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1357 790 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1357 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1363 792 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B85  <||@
  Comment 1369 block B85 null  <||@
  Comment 1369 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1369 860 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1369 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1375 862 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B94  <||@
  Comment 1381 block B86 null  <||@
  Comment 1381 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1381 866 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1385 868 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1392 870 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 1398 block B88 null  <||@
  Comment 1398 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1398 884 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1405 886 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B91  <||@
  Comment 1411 block B91 null  <||@
  Comment 1411 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1411 834 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1416 906 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1420 908 rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1425 910 rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1430 912 MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1435 914 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1440 916 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1444 918 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1444 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1456 920 BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1462 block B92 null  <||@
  Comment 1462 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1462 924 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1464 926 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1467 928 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1469 930 JUMP ~[] destination: B92 -> B109  <||@
  Comment 1474 block B78 null  <||@
  Comment 1474 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1474 796 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1478 798 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1485 800 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1485 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1485 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1492 802 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B84  <||@
  Comment 1498 block B79 null  <||@
  Comment 1498 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 806 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1505 808 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B83  <||@
  Comment 1511 block B80 null  <||@
  Comment 1511 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 812 rdi|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1516 814 rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1521 816 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1523 818 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B91  <||@
  Comment 1530 block B18 null  <||@
  Comment 1530 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 196 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1534 198 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 200 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1544 202 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 204 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1553 206 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 208 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 210 JUMP ~[] destination: B18 -> B51  <||@
  Comment 1561 block B51 null  <||@
  Comment 1561 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1561 560 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1568 562 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1568 [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1568 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1575 564 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1575 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1581 566 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57  <||@
  Comment 1587 block B57 null  <||@
  Comment 1587 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1587 604 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1587 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1593 606 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63  <||@
  Comment 1599 block B58 null  <||@
  Comment 1599 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 610 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1606 612 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 1612 block B59 null  <||@
  Comment 1612 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1612 616 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1619 618 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1619 [rsi:0, rdi:0, r10:0, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1619 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1626 620 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 1632 block B60 null  <||@
  Comment 1632 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1632 624 rdx|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1637 626 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1642 628 JUMP ~[] destination: B60 -> B69  <||@
  Comment 1647 block B52 null  <||@
  Comment 1647 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 570 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1654 572 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B52 -> B71 falseDestination: B52 -> B54  <||@
  Comment 1660 block B54 null  <||@
  Comment 1660 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 580 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1667 582 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 1673 block B56 null  <||@
  Comment 1673 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1673 598 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1678 600 JUMP ~[] destination: B56 -> B101  <||@
  Comment 1683 block B25 null  <||@
  Comment 1683 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 276 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1687 278 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1692 280 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1697 282 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1701 284 JUMP ~[] destination: B25 -> B49  <||@
  Comment 1701 block B49 null  <||@
  Comment 1701 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1701 530 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1708 532 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28]  <||@
  Comment 1708 [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rax|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:92|DWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1708 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1712 534 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1716 536 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1718 538 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18, 28]  <||@
  Comment 1718 7  <||@
  Comment 1735 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1740 [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1741 540 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1743 542 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B65  <||@
  Comment 1749 block B65 null  <||@
  Comment 1749 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1749 676 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1754 678 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1759 680 JUMP ~[] destination: B65 -> B101  <||@
  Comment 1764 block B93 null  <||@
  Comment 1764 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1764 934 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1768 936 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1772 938 stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1776 940 r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 942 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 946 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 948 JUMP ~[] destination: B93 -> B116  <||@
  Comment 1793 block B32 null  <||@
  Comment 1793 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1793 344 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1797 346 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1802 348 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1807 350 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1811 352 JUMP ~[] destination: B32 -> B47  <||@
  Comment 1811 block B47 null  <||@
  Comment 1811 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 506 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1819 508 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28]  <||@
  Comment 1819 [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1819 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1823 510 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1827 512 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1831 514 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18, 28]  <||@
  Comment 1831 7  <||@
  Comment 1847 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1852 [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1853 516 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1855 518 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66  <||@
  Comment 1861 block B66 null  <||@
  Comment 1861 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 684 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1866 686 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1871 688 JUMP ~[] destination: B66 -> B101  <||@
  Comment 1876 block B39 null  <||@
  Comment 1876 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1876 410 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1880 412 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1885 414 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1890 416 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1894 418 JUMP ~[] destination: B39 -> B45  <||@
  Comment 1894 block B45 null  <||@
  Comment 1894 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 484 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1902 486 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1902 [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1902 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1906 488 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1910 490 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1914 492 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1914 7  <||@
  Comment 1927 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1932 [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1933 494 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1935 496 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B67  <||@
  Comment 1941 block B67 null  <||@
  Comment 1941 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 692 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1946 694 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1951 696 JUMP ~[] destination: B67 -> B101  <||@
  Comment 1956 block B44 null  <||@
  Comment 1956 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 478 r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD  <||@
  Comment 1961 480 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1963 block B50 null  <||@
  Comment 1963 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1963 546 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1968 548 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1972 550 rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1976 552 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1981 554 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1986 556 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1991 block B48 null  <||@
  Comment 1991 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 522 rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 1995 524 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1999 526 JUMP ~[] destination: B48 -> B49  <||@
  Comment 2004 block B46 null  <||@
  Comment 2004 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2004 500 r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 2009 502 JUMP ~[] destination: B46 -> B47  <||@
  Comment 2014 block B41 null  <||@
  Comment 2014 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2014 428 r11|DWORD = MOVE input: int[-318227|0xfffffffffffb24ed]  <||@
  Comment 2020 430 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2025 432 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2028 434 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2033 436 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 438 JUMP ~[] destination: B41 -> B133  <||@
  Comment 2038 block B133 null  <||@
  Comment 2038 1384 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2038 1386 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2045 1388 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2052 1390 DEOPT info [bci:21]  <||@
  Comment 2052 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2057 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3             |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |rbx|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 2058 block B119 null  <||@
  Comment 2058 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2058 1222 r11|DWORD = MOVE input: int[-371483|0xfffffffffffa54e5]  <||@
  Comment 2064 1224 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2069 1228 JUMP ~[] destination: B119 -> B123  <||@
  Comment 2069 block B123 null  <||@
  Comment 2069 1262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2069 1258 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2074 1264 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2081 1266 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2088 1268 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2093 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2094 block B127 null  <||@
  Comment 2094 1312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2094 1314 r11|DWORD = MOVE input: int[-308275|0xfffffffffffb4bcd]  <||@
  Comment 2100 1316 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2103 1318 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2106 1320 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2109 1322 JUMP ~[] destination: B127 -> B133  <||@
  Comment 2111 block B117 null  <||@
  Comment 2111 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2111 1192 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2115 1194 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2120 1196 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2124 1198 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2129 1200 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 1202 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1204 MOV [r15|QWORD + 668] y: -382739 size: DWORD  <||@
  Comment 2150 1206 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2157 1208 DEOPT info [bci:73, 37, 28]  <||@
  Comment 2157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2162 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r11|DWORD  |rcx|DWORD 
     stack:   |int[0|0x0]    |              |   |   |   |           |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2163 block B84 null  <||@
  Comment 2163 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 850 r11|DWORD = MOVE input: int[-353563|0xfffffffffffa9ae5]  <||@
  Comment 2169 852 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2174 856 JUMP ~[] destination: B84 -> B99  <||@
  Comment 2174 block B99 null  <||@
  Comment 2174 1002 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2174 998 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2179 1004 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2186 1006 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2193 1008 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2193 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2198 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2199 block B89 null  <||@
  Comment 2199 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2199 890 r11|DWORD = MOVE input: int[-356115|0xfffffffffffa90ed]  <||@
  Comment 2205 892 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2210 896 JUMP ~[] destination: B89 -> B99  <||@
  Comment 2212 block B61 null  <||@
  Comment 2212 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2212 632 r11|DWORD = MOVE input: int[-329243|0xfffffffffffaf9e5]  <||@
  Comment 2218 640 JUMP ~[] destination: B61 -> B64  <||@
  Comment 2218 block B64 null  <||@
  Comment 2218 666 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2218 588 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 590 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2228 592 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2233 668 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2240 670 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2247 672 DEOPT info [bci:8, 5, 18, 28]  <||@
  Comment 2247 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2252 [rcx:0, rdi:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rcx|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2253 block B94 null  <||@
  Comment 2253 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2253 952 r11|DWORD = MOVE input: int[-354611|0xfffffffffffa96cd]  <||@
  Comment 2259 954 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2264 958 JUMP ~[] destination: B94 -> B99  <||@
  Comment 2266 block B110 null  <||@
  Comment 2266 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 1114 r11|DWORD = MOVE input: int[-375059|0xfffffffffffa46ed]  <||@
  Comment 2272 1120 JUMP ~[] destination: B110 -> B113  <||@
  Comment 2272 block B113 null  <||@
  Comment 2272 1138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2272 1116 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2277 1118 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2282 1140 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2289 1142 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2296 1144 DEOPT info [bci:63, 37, 28]  <||@
  Comment 2296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2301 [rdx:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r13|DWORD  |stack:72|QWORD[.]  |rcx|DWORD  |rax|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2302 block B95 null  <||@
  Comment 2302 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 962 r11|DWORD = MOVE input: int[-348187|0xfffffffffffaafe5]  <||@
  Comment 2308 964 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2313 968 JUMP ~[] destination: B95 -> B99  <||@
  Comment 2318 block B96 null  <||@
  Comment 2318 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2318 972 r11|DWORD = MOVE input: int[-345883|0xfffffffffffab8e5]  <||@
  Comment 2324 974 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2329 978 JUMP ~[] destination: B96 -> B99  <||@
  Comment 2334 block B74 null  <||@
  Comment 2334 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2334 754 r11|DWORD = MOVE input: int[-337939|0xfffffffffffad7ed]  <||@
  Comment 2340 756 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2345 760 JUMP ~[] destination: B74 -> B99  <||@
  Comment 2350 block B97 null  <||@
  Comment 2350 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2350 982 r11|DWORD = MOVE input: int[-336155|0xfffffffffffadee5]  <||@
  Comment 2356 984 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2361 988 JUMP ~[] destination: B97 -> B99  <||@
  Comment 2366 block B120 null  <||@
  Comment 2366 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 1232 r11|DWORD = MOVE input: int[-369179|0xfffffffffffa5de5]  <||@
  Comment 2372 1234 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2377 1238 JUMP ~[] destination: B120 -> B123  <||@
  Comment 2382 block B98 null  <||@
  Comment 2382 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2382 992 r11|DWORD = MOVE input: int[-333363|0xfffffffffffae9cd]  <||@
  Comment 2388 994 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2393 996 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2398 1000 JUMP ~[] destination: B98 -> B99  <||@
  Comment 2403 block B104 null  <||@
  Comment 2403 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2403 1050 r11|DWORD = MOVE input: int[-361747|0xfffffffffffa7aed]  <||@
  Comment 2409 1052 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2414 1056 JUMP ~[] destination: B104 -> B123  <||@
  Comment 2419 block B124 null  <||@
  Comment 2419 1270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2419 1272 r11|DWORD = MOVE input: int[-315955|0xfffffffffffb2dcd]  <||@
  Comment 2425 1274 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2430 1276 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2433 1278 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2438 1280 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2443 1282 JUMP ~[] destination: B124 -> B133  <||@
  Comment 2448 block B81 null  <||@
  Comment 2448 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2448 822 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2453 824 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 826 MOV [r15|QWORD + 668] y: -332051 size: DWORD  <||@
  Comment 2469 828 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2476 830 DEOPT info [bci:21, 28]  <||@
  Comment 2476 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2481 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2482 block B121 null  <||@
  Comment 2482 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2482 1242 r11|DWORD = MOVE input: int[-359963|0xfffffffffffa81e5]  <||@
  Comment 2488 1244 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2493 1248 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2498 block B125 null  <||@
  Comment 2498 1284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2498 1286 r11|DWORD = MOVE input: int[-313395|0xfffffffffffb37cd]  <||@
  Comment 2504 1288 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2509 1290 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2512 1292 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2517 1294 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2522 1296 JUMP ~[] destination: B125 -> B133  <||@
  Comment 2527 block B122 null  <||@
  Comment 2527 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2527 1252 r11|DWORD = MOVE input: int[-357171|0xfffffffffffa8ccd]  <||@
  Comment 2533 1254 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2538 1256 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2543 1260 JUMP ~[] destination: B122 -> B123  <||@
  Comment 2548 block B83 null  <||@
  Comment 2548 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2548 840 r11|DWORD = MOVE input: int[-350995|0xfffffffffffaa4ed]  <||@
  Comment 2554 842 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2559 846 JUMP ~[] destination: B83 -> B99  <||@
  Comment 2564 block B63 null  <||@
  Comment 2564 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2564 656 r11|DWORD = MOVE input: int[-326451|0xfffffffffffb04cd]  <||@
  Comment 2570 664 JUMP ~[] destination: B63 -> B64  <||@
  Comment 2575 block B13 null  <||@
  Comment 2575 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 144 r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced]  <||@
  Comment 2581 146 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2584 148 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2587 150 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2590 152 JUMP ~[] destination: B13 -> B133  <||@
  Comment 2595 block B5 null  <||@
  Comment 2595 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2595 58 r11|DWORD = MOVE input: int[-300307|0xfffffffffffb6aed]  <||@
  Comment 2601 60 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2604 62 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2607 64 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2610 66 JUMP ~[] destination: B5 -> B133  <||@
  Comment 2615 block B55 null  <||@
  Comment 2615 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2615 586 r11|DWORD = MOVE input: int[-326163|0xfffffffffffb05ed]  <||@
  Comment 2621 594 JUMP ~[] destination: B55 -> B64  <||@
  Comment 2626 block B112 null  <||@
  Comment 2626 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2626 1130 r11|DWORD = MOVE input: int[-392475|0xfffffffffffa02e5]  <||@
  Comment 2632 1136 JUMP ~[] destination: B112 -> B113  <||@
  Comment 2637 block B138 null  <||@
  Comment 2637 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2637 1450 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2642 1452 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2646 1454 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2649 1456 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2652 1458 MOV [r15|QWORD + 668] y: -292123 size: DWORD  <||@
  Comment 2663 1460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2670 1462 DEOPT info [bci:0]  <||@
  Comment 2670 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2675 [r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0            |1             |2               |3                  |4  |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2676 block B129 null  <||@
  Comment 2676 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2676 1338 r11|DWORD = MOVE input: int[-303387|0xfffffffffffb5ee5]  <||@
  Comment 2682 1340 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2685 1342 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2688 1344 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2691 1346 JUMP ~[] destination: B129 -> B133  <||@
  Comment 2696 block B131 null  <||@
  Comment 2696 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 1362 r11|DWORD = MOVE input: int[-300083|0xfffffffffffb6bcd]  <||@
  Comment 2702 1364 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2705 1366 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 1368 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2711 1370 JUMP ~[] destination: B131 -> B133  <||@
  Comment 2716 block B34 null  <||@
  Comment 2716 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 362 r11|DWORD = MOVE input: int[-315667|0xfffffffffffb2eed]  <||@
  Comment 2722 364 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2727 366 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2730 368 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2735 370 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2740 372 JUMP ~[] destination: B34 -> B133  <||@
  Comment 2745 block B130 null  <||@
  Comment 2745 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2745 1350 r11|DWORD = MOVE input: int[-302611|0xfffffffffffb61ed]  <||@
  Comment 2751 1352 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2754 1354 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2757 1356 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2760 1358 JUMP ~[] destination: B130 -> B133  <||@
  Comment 2765 block B20 null  <||@
  Comment 2765 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2765 220 r11|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed]  <||@
  Comment 2771 222 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2774 224 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2777 226 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2780 228 JUMP ~[] destination: B20 -> B133  <||@
  Comment 2785 block B27 null  <||@
  Comment 2785 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2785 294 r11|DWORD = MOVE input: int[-313107|0xfffffffffffb38ed]  <||@
  Comment 2791 296 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2796 298 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2799 300 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2804 302 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2809 304 JUMP ~[] destination: B27 -> B133  <||@
  Comment 2814 block B87 null  <||@
  Comment 2814 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2814 874 r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed]  <||@
  Comment 2820 876 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2825 880 JUMP ~[] destination: B87 -> B99  <||@
  Comment 2830 block B132 null  <||@
  Comment 2830 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2830 1374 r11|DWORD = MOVE input: int[-299539|0xfffffffffffb6ded]  <||@
  Comment 2836 1376 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2839 1378 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2842 1380 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2845 1382 JUMP ~[] destination: B132 -> B133  <||@
  Comment 2850 block B128 null  <||@
  Comment 2850 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2850 1326 r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed]  <||@
  Comment 2856 1328 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2859 1330 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2862 1332 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2865 1334 JUMP ~[] destination: B128 -> B133  <||@
  Comment 2870 block B126 null  <||@
  Comment 2870 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2870 1300 r11|DWORD = MOVE input: int[-310835|0xfffffffffffb41cd]  <||@
  Comment 2876 1304 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2879 1306 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2884 1308 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2889 1310 JUMP ~[] destination: B126 -> B133  <||@
  Comment 2894 block B62 null  <||@
  Comment 2894 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2894 644 r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed]  <||@
  Comment 2900 652 JUMP ~[] destination: B62 -> B64  <||@
  Comment 2905 block B137 null  <||@
  Comment 2905 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2905 1442 MOV [r15|QWORD + 668] y: -297243 size: DWORD  <||@
  Comment 2916 1444 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2923 1446 DEOPT info [bci:31]  <||@
  Comment 2923 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2928 [r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |          |    <||@
  Comment 2929 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2929 4  <||@
  Comment 2935 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2935 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2667[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2667[java.util.regex.Pattern$GroupHead.match(Matcher, int, CharSequence)]"
  date 1526687582823
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11989a1e0 448b560849c1e203493bc20f856fac16ff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048895424508b5a3c8b04dd0c000000448b5610413bc20f86010a0000448b5e0c428b04dd0800000048c1e303468b4c931042894c9310458bd349c1e20381f8ef3802f80f853f0200008b5a103bd90f8e8a0a000041817808da0200f80f85f609000085c90f8c89090000418b580c8b04dd0c0000003bc10f8e0c0a00003bc10f86bf09000048c1e3030fbf5c4b106681fb00d80f83590a000044895c244c428b3cdd100000008b04fd080000000fb7eb896c2448448be941ffc544896c244481f8aa3802f80f85550100003b2cfd100000000f8c940300003b2cfd140000000f8ffa0800004c8954243844894c24344c89442428894c24244889742418be01000000428b14dd0c000000813cd508000000593702f80f85940800004c8b542450418b4a3c448b04cd0c000000448b1cd510000000453bc30f864508000048c1e103428b4c991085c90f8ce5070000458b4234468b1cc50c000000448b0cd514000000453bd90f86a3070000418bd9ffc3443bdb0f8661060000448b6c2444448b1cd50c000000428b3cdd0800000049c1e003418b749810438b44881043894c881045896c981048c1e20381ff46f600f80f856601000041837a18010f84e90600004183780c020f824608000045896a20418b721c4189701045896814b8010000004c8b442418458b5a3c468b0cdd0c000000418b4810443bc9448b4c24340f862509000049c1e30345894c8b10488b6c24604883c4688505da1b64f0c5f877c381f8ef3802f80f85d2050000897c24148b04fd10000000448b34c5080000004181feaa3802f80f85650000003b2cc5100000000f8c710300003b2cc5140000000f8f370800004c8954243844894c24344c89442428894c24244889742418be01000000e97afeffff44894c24344889742418488b1cc5e0010000488b4340498bf24c8bd2ffd0904c8b542450e930ffffff44894c243448897424184181feef3802f80f853e08000089442410448b0cc510000000428b34cd0800000081feaa3802f80f857c000000423b2ccd100000000f8c6d030000423b2ccd140000000f8fad070000be010000004c895424384c89442428894c2424e9e6fdffff49c1e303897424408944241448891424498bf3498bd2418bcd4c8b44242848b8ffffffffffffffff666690e884ad16ff9085c00f84ba040000b8010000004c8b542450e97dfeffff81feef3802f80f852206000044894c240c468b34cd10000000428b34f50800000081feaa3802f80f8534000000423b2cf5100000000f8c32030000423b2cf5140000000f8fbf060000be010000004c895424384c89442428894c2424e93dfdffff81feef3802f80f8572050000428b34f5100000008b14f50800000081faaa3802f80f85430000003b2cf5100000000f8c2b0300003b2cf5140000000f8fa8030000be01000000895c24404c895424384c89442428894c242485f6448b5c244c0f85d8fcffffe9590000004489742408895c24404c895424384c89442428894c242448c1e6038bd548b8ffffffffffffffff90e874ac16ff9085c00f840f030000be01000000ebb1895c24404c8954243844894c24344c89442428894c24244889742418428b34dd14000000418504f4428b14dd0c000000813cd508000000593702f80f85710400004c8b542450458b5a3c468b04dd0c000000448b0cd510000000453bc10f862f04000049c1e303478b5c8b104585db0f8c0d040000458b4234468b0cc50c0000008b0cd514000000443bc90f86e10300008bd9ffc3443bcb0f86c4030000448b0cd50c000000438504cc8b3cf50800000081ff643802f80f846900000081ffaa3802f80f85680300008b6c24483b2cf5100000000f8c880500003b2cf5140000000f8f14030000448b6c244449c1e003418b7c9810418b74881045895c881045896c981048c1e20342813ccd0800000046f600f80f852e0100008bc6418bcb8bf7e924fcffff8b6c24488b34f5100000003b2cf50c0000000f839902000066817c244000010f830d0400000fb77c24400fb674f71085f6758ee996030000895c24404c8954243844894c24344c89442428894c24244c8bd248897424188b34fd140000008b14f50800000081faaa3802f80f843c00000081fa643802f80f85c503000066817c244000010f83020500008b34f5100000003b2cf50c0000000f83440200000fb75424400fb674f210e9defdffff3b2cf5100000000f8c3cfeffff3b2cf5140000000f8fae030000be01000000e99ffaffff895c24404c895424384c89442428894c24248b34c514000000418504f448c1e6038bd548b8ffffffffffffffff0f1f8000000000e834aa16ff9085c00f84d6000000be01000000448b5c244ce94efaffff49c1e103897c2440897424144d8bd9488914244c8b542450e95bfcffff895c24404c895424384c89442428894c2424428b34cd14000000418504f448c1e6038b54244848b8ffffffffffffffff660f1f440000e8c4a916ff9085c00f8482000000be01000000448b5c244ce9def9ffff895c24404c895424384c89442428894c2424428b34f514000000418504f448c1e6038b54244848b8ffffffffffffffff666690e874a916ff9085c00f843f000000be01000000448b5c244ce98ef9ffff448b742408ebbb448b6c24448b6c24488b7c2414448b5c244c4c8b542450e952feffff8b4424108b6c2448e9d1feffff448b4c240ce935ffffff41bbed24fbff448b4c2434498bd84c8b5424504c8b44241845899f9c0200004d89a7a8020000e815bc16ff9041bbe554faff448b4c24344c8b44241845899f9c0200004d89a7a8020000e8f1bb16ff9041bbcd4bfbff498bd84c8bd24c8bc6ebb78b4c2440448b5c2414488b1c24448b4c24344c8b5424504c8b44241841c7879c020000ed28faff4d89a7a8020000e8acbb16ff9041bbe59afaff448b4c24344c8b44241845899f9c0200004d89a7a8020000e888bb16ff9041bbed90faff448b4c2434ebda41bbe5f9faff488b4c2438448b4c24344c8b44241845899f9c0200004d89a7a8020000e852bb16ff9041bbcd96faff448b4c2434eba441bbed46faff448b4c24344c8b44241845899f9c0200004d89a7a8020000e821bb16ff9041bbe5affaff448b4c2434e970ffffff41bbe5b8faff448b4c2434e960ffffff41bbedd7faff448b4c2434e950ffffff41bbe5defaff448b4c2434e940ffffff41bbe55dfaff448b4c2434e9c7feffff41bbcde9faff448b4c24344c8b542450e91bffffff41bbed7afaff448b4c2434e9a2feffff41bbcd2dfbff448b4c2434498bd84c8b5424504c8b442418e966feffff448b4c24344c8b44241841c7879c020000edeefaff4d89a7a8020000e86dba16ff9041bbe581faff448b4c2434e953feffff41bbcd37fbff448b4c2434498bd84c8b5424504c8b442418e917feffff41bbcd8cfaff448b4c24344c8b542450e921feffff41bbeda4faff448b4c2434e97afeffff41bbcd04fbffe99bfeffff41bbed4cfbff498bd84c8bd24c8bc6e9d3fdffff41bbed6afbff498bd84c8bd24c8bc6e9bffdffff41bbed05fbffe968feffff41bbe502faffe993feffff4c89442428894c24244c8bd24c8bc641c7879c020000e58afbff4d89a7a8020000e8abb916ff9041bbe55efbff498bd84c8bd24c8bc6e96efdffff41bbcd6bfbff498bd84c8bd24c8bc6e95afdffff41bbed2efbff448b4c2434498bd84c8b5424504c8b442418e93dfdffff41bbed61fbff498bd84c8bd24c8bc6e929fdffff41bbed42fbff498bd84c8bd24c8bc6e915fdffff41bbed38fbff448b4c2434498bd84c8b5424504c8b442418e9f8fcffff41bbed91faff448b4c2434e970fdffff41bbed6dfbff498bd84c8bd24c8bc6e9d4fcffff41bbed56fbff498bd84c8bd24c8bc6e9c0fcffff41bbcd41fbff498bd84c8b5424504c8b442418e9a8fcffff41bbed03fbffe951fdffff41c7879c020000e576fbff4d89a7a8020000e8aeb816ff90e84a4a56ff90e8a4b716ff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1e2f616f slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 56 [rdx:0, rbx:0, rsi:0, r8:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 67 14 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B138  <||@
  Comment 76 block B1 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 r11|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 22 rax|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 80 [rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-  |-   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 24 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 92 26 r9|DWORD = MOV [rbx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 28 MOV (x: [rbx|QWORD[.] + r10|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 102 30 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 109 32 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 109 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 115 34 BRANCH trueDestinationProbability: 0.7493788324863577 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B134  <||@
  Comment 121 block B2 null  <||@
  Comment 121 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 38 rbx|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 124 40 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 126 42 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B132  <||@
  Comment 132 block B3 null  <||@
  Comment 132 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 46 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21]  <||@
  Comment 132 [rdx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 132 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 132 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 140 48 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B131  <||@
  Comment 146 block B4 null  <||@
  Comment 146 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 52 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 148 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 154 block B6 null  <||@
  Comment 154 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 70 rbx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 158 72 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 158 [rdx:0, rbx:0, rsi:0, r8:0, r10:0, r11:0, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 158 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 165 74 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 167 76 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B130  <||@
  Comment 173 block B7 null  <||@
  Comment 173 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 80 CMP (x: rax|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 175 82 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B129  <||@
  Comment 181 block B8 null  <||@
  Comment 181 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 86 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 185 88 rbx|DWORD = MOVSX [rbx|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 190 90 CMP rbx|DWORD y: -10240 size: WORD  <||@
  Comment 195 92 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B128  <||@
  Comment 201 block B9 null  <||@
  Comment 201 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 96 stack:36|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 206 98 rdi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 214 100 rax|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 214 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 214 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 221 102 rbp|DWORD = MOVZX rbx|DWORD size: DWORD  <||@
  Comment 224 104 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 228 106 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 234 108 stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 239 110 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 239 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 245 112 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 251 block B10 null  <||@
  Comment 251 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 116 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 258 118 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 264 block B12 null  <||@
  Comment 264 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 138 CMP (x: rbp|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 271 140 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 277 block B14 null  <||@
  Comment 277 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 156 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 282 158 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 287 160 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 292 162 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 296 164 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 301 166 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 306 168 JUMP ~[] destination: B14 -> B101  <||@
  Comment 306 block B101 null  <||@
  Comment 306 1016 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 306 1018 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 314 1020 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 314 [rdx:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 314 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 314 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 325 1022 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B122  <||@
  Comment 331 block B102 null  <||@
  Comment 331 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 331 1026 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 336 1028 rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 340 1030 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 340 [rcx:0, rdx:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 340 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 348 1032 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 356 1034 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 359 1036 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B121  <||@
  Comment 365 block B103 null  <||@
  Comment 365 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 1040 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 369 1042 rcx|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 374 1044 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 376 1046 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 382 block B105 null  <||@
  Comment 382 1058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 1060 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 386 1062 r11|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 386 [rdx:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 386 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 394 1064 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 402 1066 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 405 1068 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B105 -> B106 falseDestination: B105 -> B120  <||@
  Comment 411 block B106 null  <||@
  Comment 411 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 1072 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 416 1074 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 419 1076 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B106 -> B107 falseDestination: B106 -> B119  <||@
  Comment 425 block B107 null  <||@
  Comment 425 1078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 1080 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 430 1082 r11|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 438 1084 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 438 [rdx:0, r8:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 438 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 446 1086 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 450 1088 rsi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 455 1090 rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 460 1092 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 465 1094 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 470 1096 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 474 1098 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 474 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 480 1100 BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B107 -> B109 falseDestination: B107 -> B115  <||@
  Comment 486 block B109 null  <||@
  Comment 486 1106 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 486 1108 CMP [r10|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 491 1110 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 497 block B111 null  <||@
  Comment 497 1122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 1124 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 502 1126 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B111 -> B112 falseDestination: B111 -> B114  <||@
  Comment 508 block B114 null  <||@
  Comment 508 1146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 1148 MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD  <||@
  Comment 512 1150 rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1152 MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 520 1154 MOV (x: [r8|QWORD[.] + 20], y: r13|DWORD) size: DWORD  <||@
  Comment 524 1156 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 529 1160 JUMP ~[] destination: B114 -> B135  <||@
  Comment 529 block B135 null  <||@
  Comment 529 1416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 529 1412 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 534 1418 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 538 1420 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:31]  <||@
  Comment 538 [r8:0, r10:0, r11:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |                |    <||@
  Comment 538 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 546 1422 rcx|DWORD = MOV [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 550 1424 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 553 1430 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 558 1426 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B135 -> B136 falseDestination: B135 -> B137  <||@
  Comment 564 block B136 null  <||@
  Comment 564 1428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 564 1432 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 568 1434 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 573 1436 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 582 12  <||@
  Comment 592 block B15 null  <||@
  Comment 592 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 592 172 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 592 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 598 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B127  <||@
  Comment 604 block B16 null  <||@
  Comment 604 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 178 stack:92|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 608 180 rax|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 615 182 r14|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 615 [rax:0, rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:20, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 615 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 623 184 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 623 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 630 186 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B22  <||@
  Comment 636 block B17 null  <||@
  Comment 636 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 190 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 643 192 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 649 block B19 null  <||@
  Comment 649 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 214 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 656 216 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 662 block B21 null  <||@
  Comment 662 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 232 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 667 234 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 672 236 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 677 238 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 681 240 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 686 242 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 691 244 JUMP ~[] destination: B21 -> B101  <||@
  Comment 696 block B134 null  <||@
  Comment 696 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 1394 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 701 1396 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 706 1398 rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD  <||@
  Comment 714 1400 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 718 1402 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 721 1404 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 724 1408 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:28]  <||@
  Comment 724 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 724 10  <||@
  Comment 726 [stack:24, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 727 1410 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 732 1414 JUMP ~[] destination: B134 -> B135  <||@
  Comment 737 block B22 null  <||@
  Comment 737 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 737 248 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 742 250 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 747 252 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 747 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 754 254 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B126  <||@
  Comment 760 block B23 null  <||@
  Comment 760 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 258 stack:96|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 764 260 r9|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 772 262 rsi|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 772 [rax:0, r8:0, r9:0, r10:0, r11:0, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 772 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 780 264 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 780 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 786 266 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B29  <||@
  Comment 792 block B24 null  <||@
  Comment 792 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 270 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 800 272 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 806 block B26 null  <||@
  Comment 806 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 288 CMP (x: rbp|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 814 290 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 820 block B28 null  <||@
  Comment 820 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 308 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 825 310 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 830 312 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 835 314 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 839 316 JUMP ~[] destination: B28 -> B101  <||@
  Comment 844 block B115 null  <||@
  Comment 844 1162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 1164 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 848 1166 stack:48|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 852 1168 stack:92|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 856 1170 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 860 1172 JUMP ~[] destination: B115 -> B116  <||@
  Comment 860 block B116 null  <||@
  Comment 860 1174 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 860 1176 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 863 1178 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 866 1180 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 869 1182 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 874 1184 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:70, 37, 28]  <||@
  Comment 874 7  <||@
  Comment 887 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 892 [stack:0, stack:24, stack:80]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                   |1                  |2  |3  |4  |5               |6              
     locals:  |stack:112|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:92|DWORD  |stack:48|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 893 1186 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 895 1188 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118  <||@
  Comment 901 block B118 null  <||@
  Comment 901 1210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 1212 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 906 1214 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 911 1218 JUMP ~[] destination: B118 -> B135  <||@
  Comment 916 block B29 null  <||@
  Comment 916 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 320 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 916 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 922 322 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B125  <||@
  Comment 928 block B30 null  <||@
  Comment 928 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 928 326 stack:100|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 933 328 r14|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 941 330 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 941 [r8:0, r9:0, r10:0, r11:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 941 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 949 332 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 949 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 955 334 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B36  <||@
  Comment 961 block B31 null  <||@
  Comment 961 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 338 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 969 340 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 975 block B33 null  <||@
  Comment 975 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 356 CMP (x: rbp|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 983 358 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 989 block B35 null  <||@
  Comment 989 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 989 376 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 994 378 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 999 380 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1004 382 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1008 384 JUMP ~[] destination: B35 -> B101  <||@
  Comment 1013 block B36 null  <||@
  Comment 1013 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1013 388 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1013 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1019 390 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B124  <||@
  Comment 1025 block B37 null  <||@
  Comment 1025 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 394 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1033 396 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21]  <||@
  Comment 1033 [rsi:0, r8:0, r10:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:76, stack:80]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3            |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD  |-   <||@
  Comment 1033 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1040 398 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1040 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1046 400 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B43  <||@
  Comment 1052 block B38 null  <||@
  Comment 1052 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 404 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1059 406 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1065 block B40 null  <||@
  Comment 1065 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1065 422 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1072 424 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1078 block B42 null  <||@
  Comment 1078 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 442 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1083 444 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1087 446 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1092 448 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 450 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1101 452 JUMP ~[] destination: B42 -> B69  <||@
  Comment 1101 block B69 null  <||@
  Comment 1101 704 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1101 706 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1103 712 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1108 708 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B69 -> B71 falseDestination: B69 -> B101  <||@
  Comment 1119 block B43 null  <||@
  Comment 1119 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1119 456 stack:104|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1124 458 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1128 460 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1133 462 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 464 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1142 466 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1146 468 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1148 470 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1148 7  <||@
  Comment 1159 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1164 [stack:8, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1165 472 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1167 474 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B68  <||@
  Comment 1173 block B68 null  <||@
  Comment 1173 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 700 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1178 702 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1180 block B11 null  <||@
  Comment 1180 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1180 122 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1184 124 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 126 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1194 128 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1199 130 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1203 132 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1208 134 JUMP ~[] destination: B11 -> B71  <||@
  Comment 1208 block B71 null  <||@
  Comment 1208 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1208 718 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1216 720 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1216 [rsi:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1216 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1220 722 rdx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1228 724 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28]  <||@
  Comment 1228 [rdx:0, rsi:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1228 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1239 726 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B98  <||@
  Comment 1245 block B72 null  <||@
  Comment 1245 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1245 730 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 732 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 1254 734 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1254 [rdx:0, rsi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1254 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1262 736 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1270 738 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1273 740 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B97  <||@
  Comment 1279 block B73 null  <||@
  Comment 1279 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 744 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1283 746 r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1288 748 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1291 750 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 1297 block B75 null  <||@
  Comment 1297 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1297 764 r8|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1301 766 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1301 [rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1301 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1309 768 rcx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1316 770 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1319 772 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B75 -> B76 falseDestination: B75 -> B96  <||@
  Comment 1325 block B76 null  <||@
  Comment 1325 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1325 776 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1329 778 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1332 780 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B95  <||@
  Comment 1338 block B77 null  <||@
  Comment 1338 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 784 r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1346 786 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18, 28]  <||@
  Comment 1346 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1346 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1350 788 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1357 790 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1357 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1363 792 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B85  <||@
  Comment 1369 block B85 null  <||@
  Comment 1369 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1369 860 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1369 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1375 862 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B94  <||@
  Comment 1381 block B86 null  <||@
  Comment 1381 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1381 866 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1385 868 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1392 870 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 1398 block B88 null  <||@
  Comment 1398 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1398 884 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1405 886 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B91  <||@
  Comment 1411 block B91 null  <||@
  Comment 1411 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1411 834 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1416 906 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1420 908 rdi|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1425 910 rsi|DWORD = MOV [r8|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1430 912 MOV (x: [r8|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1435 914 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1440 916 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1444 918 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1444 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1456 920 BRANCH trueDestinationProbability: 0.7882672499463655 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1462 block B92 null  <||@
  Comment 1462 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1462 924 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1464 926 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1467 928 rsi|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1469 930 JUMP ~[] destination: B92 -> B109  <||@
  Comment 1474 block B78 null  <||@
  Comment 1474 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1474 796 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1478 798 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1485 800 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28]  <||@
  Comment 1485 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:24, stack:40, stack:56, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1485 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1492 802 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B84  <||@
  Comment 1498 block B79 null  <||@
  Comment 1498 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1498 806 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1505 808 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B79 -> B80 falseDestination: B79 -> B83  <||@
  Comment 1511 block B80 null  <||@
  Comment 1511 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 812 rdi|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1516 814 rsi|DWORD = MOVZXB [rdi|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1521 816 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1523 818 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B91  <||@
  Comment 1530 block B18 null  <||@
  Comment 1530 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 196 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1534 198 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 200 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1544 202 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1549 204 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1553 206 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1556 208 stack:88|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 210 JUMP ~[] destination: B18 -> B51  <||@
  Comment 1561 block B51 null  <||@
  Comment 1561 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1561 560 rsi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1568 562 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1568 [rsi:0, rdi:0, r10:0, r11:0, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1568 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1575 564 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1575 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1581 566 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B57  <||@
  Comment 1587 block B57 null  <||@
  Comment 1587 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1587 604 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1587 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1593 606 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B63  <||@
  Comment 1599 block B58 null  <||@
  Comment 1599 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 610 CMP stack:48|DWORD y: 256 size: WORD  <||@
  Comment 1606 612 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B58 -> B59 falseDestination: B58 -> B62  <||@
  Comment 1612 block B59 null  <||@
  Comment 1612 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1612 616 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1619 618 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28]  <||@
  Comment 1619 [rsi:0, rdi:0, r10:0, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1619 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1626 620 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 1632 block B60 null  <||@
  Comment 1632 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1632 624 rdx|QWORD = MOVZX stack:48|DWORD size: DWORD  <||@
  Comment 1637 626 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1642 628 JUMP ~[] destination: B60 -> B69  <||@
  Comment 1647 block B52 null  <||@
  Comment 1647 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 570 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1654 572 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B52 -> B71 falseDestination: B52 -> B54  <||@
  Comment 1660 block B54 null  <||@
  Comment 1660 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 580 CMP (x: rbp|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1667 582 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 1673 block B56 null  <||@
  Comment 1673 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1673 598 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1678 600 JUMP ~[] destination: B56 -> B101  <||@
  Comment 1683 block B25 null  <||@
  Comment 1683 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1683 276 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1687 278 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1692 280 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1697 282 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1701 284 JUMP ~[] destination: B25 -> B49  <||@
  Comment 1701 block B49 null  <||@
  Comment 1701 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1701 530 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1708 532 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28]  <||@
  Comment 1708 [rax:0, rsi:0, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rax|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:92|DWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1708 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1712 534 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1716 536 rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1718 538 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18, 28]  <||@
  Comment 1718 7  <||@
  Comment 1735 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1740 [stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1741 540 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1743 542 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B65  <||@
  Comment 1749 block B65 null  <||@
  Comment 1749 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1749 676 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1754 678 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1759 680 JUMP ~[] destination: B65 -> B101  <||@
  Comment 1764 block B93 null  <||@
  Comment 1764 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1764 934 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1768 936 stack:48|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1772 938 stack:92|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1776 940 r11|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1779 942 stack:112|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 946 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 948 JUMP ~[] destination: B93 -> B116  <||@
  Comment 1793 block B32 null  <||@
  Comment 1793 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1793 344 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1797 346 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1802 348 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1807 350 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1811 352 JUMP ~[] destination: B32 -> B47  <||@
  Comment 1811 block B47 null  <||@
  Comment 1811 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 506 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1819 508 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28]  <||@
  Comment 1819 [rsi:0, r9:0, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1819 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1823 510 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1827 512 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1831 514 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18, 28]  <||@
  Comment 1831 7  <||@
  Comment 1847 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1852 [stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1853 516 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1855 518 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66  <||@
  Comment 1861 block B66 null  <||@
  Comment 1861 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1861 684 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1866 686 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1871 688 JUMP ~[] destination: B66 -> B101  <||@
  Comment 1876 block B39 null  <||@
  Comment 1876 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1876 410 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1880 412 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1885 414 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1890 416 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1894 418 JUMP ~[] destination: B39 -> B45  <||@
  Comment 1894 block B45 null  <||@
  Comment 1894 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 484 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1902 486 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1902 [rsi:0, r14:0, stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1902 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1906 488 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b60ffbd encoding: base: 0 shift: 3  <||@
  Comment 1910 490 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1914 492 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18, 28]  <||@
  Comment 1914 7  <||@
  Comment 1927 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1932 [stack:12, stack:16, stack:20, stack:24, stack:40, stack:56, stack:76, stack:80]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:96|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:92|DWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |stack:32|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:60|DWORD  |-   <||@
  Comment 1933 494 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1935 496 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B67  <||@
  Comment 1941 block B67 null  <||@
  Comment 1941 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 692 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1946 694 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1951 696 JUMP ~[] destination: B67 -> B101  <||@
  Comment 1956 block B44 null  <||@
  Comment 1956 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1956 478 r14|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD  <||@
  Comment 1961 480 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1963 block B50 null  <||@
  Comment 1963 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1963 546 r13|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1968 548 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1972 550 rdi|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1976 552 r11|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1981 554 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1986 556 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1991 block B48 null  <||@
  Comment 1991 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 522 rax|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 1995 524 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1999 526 JUMP ~[] destination: B48 -> B49  <||@
  Comment 2004 block B46 null  <||@
  Comment 2004 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2004 500 r9|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 2009 502 JUMP ~[] destination: B46 -> B47  <||@
  Comment 2014 block B41 null  <||@
  Comment 2014 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2014 428 r11|DWORD = MOVE input: int[-318227|0xfffffffffffb24ed]  <||@
  Comment 2020 430 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2025 432 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2028 434 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2033 436 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 438 JUMP ~[] destination: B41 -> B133  <||@
  Comment 2038 block B133 null  <||@
  Comment 2038 1384 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2038 1386 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2045 1388 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2052 1390 DEOPT info [bci:21]  <||@
  Comment 2052 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2057 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3             |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |rbx|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 2058 block B119 null  <||@
  Comment 2058 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2058 1222 r11|DWORD = MOVE input: int[-371483|0xfffffffffffa54e5]  <||@
  Comment 2064 1224 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2069 1228 JUMP ~[] destination: B119 -> B123  <||@
  Comment 2069 block B123 null  <||@
  Comment 2069 1262 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2069 1258 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2074 1264 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2081 1266 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2088 1268 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2093 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2094 block B127 null  <||@
  Comment 2094 1312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2094 1314 r11|DWORD = MOVE input: int[-308275|0xfffffffffffb4bcd]  <||@
  Comment 2100 1316 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2103 1318 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2106 1320 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2109 1322 JUMP ~[] destination: B127 -> B133  <||@
  Comment 2111 block B117 null  <||@
  Comment 2111 1190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2111 1192 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2115 1194 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2120 1196 rbx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2124 1198 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2129 1200 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 1202 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1204 MOV [r15|QWORD + 668] y: -382739 size: DWORD  <||@
  Comment 2150 1206 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2157 1208 DEOPT info [bci:73, 37, 28]  <||@
  Comment 2157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2162 [rbx:0, r8:0, r10:0]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r11|DWORD  |rcx|DWORD 
     stack:   |int[0|0x0]    |              |   |   |   |           |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2163 block B84 null  <||@
  Comment 2163 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 850 r11|DWORD = MOVE input: int[-353563|0xfffffffffffa9ae5]  <||@
  Comment 2169 852 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2174 856 JUMP ~[] destination: B84 -> B99  <||@
  Comment 2174 block B99 null  <||@
  Comment 2174 1002 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2174 998 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2179 1004 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2186 1006 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2193 1008 DEOPT info [bci:8, 18, 28]  <||@
  Comment 2193 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2198 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:56|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2199 block B89 null  <||@
  Comment 2199 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2199 890 r11|DWORD = MOVE input: int[-356115|0xfffffffffffa90ed]  <||@
  Comment 2205 892 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2210 896 JUMP ~[] destination: B89 -> B99  <||@
  Comment 2212 block B61 null  <||@
  Comment 2212 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2212 632 r11|DWORD = MOVE input: int[-329243|0xfffffffffffaf9e5]  <||@
  Comment 2218 640 JUMP ~[] destination: B61 -> B64  <||@
  Comment 2218 block B64 null  <||@
  Comment 2218 666 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2218 588 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 590 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2228 592 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2233 668 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2240 670 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2247 672 DEOPT info [bci:8, 5, 18, 28]  <||@
  Comment 2247 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2252 [rcx:0, rdi:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdi|DWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rcx|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |rbp|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2253 block B94 null  <||@
  Comment 2253 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2253 952 r11|DWORD = MOVE input: int[-354611|0xfffffffffffa96cd]  <||@
  Comment 2259 954 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2264 958 JUMP ~[] destination: B94 -> B99  <||@
  Comment 2266 block B110 null  <||@
  Comment 2266 1112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 1114 r11|DWORD = MOVE input: int[-375059|0xfffffffffffa46ed]  <||@
  Comment 2272 1120 JUMP ~[] destination: B110 -> B113  <||@
  Comment 2272 block B113 null  <||@
  Comment 2272 1138 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2272 1116 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2277 1118 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2282 1140 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2289 1142 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2296 1144 DEOPT info [bci:63, 37, 28]  <||@
  Comment 2296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2301 [rdx:0, r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r13|DWORD  |stack:72|QWORD[.]  |rcx|DWORD  |rax|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2302 block B95 null  <||@
  Comment 2302 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 962 r11|DWORD = MOVE input: int[-348187|0xfffffffffffaafe5]  <||@
  Comment 2308 964 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2313 968 JUMP ~[] destination: B95 -> B99  <||@
  Comment 2318 block B96 null  <||@
  Comment 2318 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2318 972 r11|DWORD = MOVE input: int[-345883|0xfffffffffffab8e5]  <||@
  Comment 2324 974 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2329 978 JUMP ~[] destination: B96 -> B99  <||@
  Comment 2334 block B74 null  <||@
  Comment 2334 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2334 754 r11|DWORD = MOVE input: int[-337939|0xfffffffffffad7ed]  <||@
  Comment 2340 756 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2345 760 JUMP ~[] destination: B74 -> B99  <||@
  Comment 2350 block B97 null  <||@
  Comment 2350 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2350 982 r11|DWORD = MOVE input: int[-336155|0xfffffffffffadee5]  <||@
  Comment 2356 984 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2361 988 JUMP ~[] destination: B97 -> B99  <||@
  Comment 2366 block B120 null  <||@
  Comment 2366 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 1232 r11|DWORD = MOVE input: int[-369179|0xfffffffffffa5de5]  <||@
  Comment 2372 1234 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2377 1238 JUMP ~[] destination: B120 -> B123  <||@
  Comment 2382 block B98 null  <||@
  Comment 2382 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2382 992 r11|DWORD = MOVE input: int[-333363|0xfffffffffffae9cd]  <||@
  Comment 2388 994 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2393 996 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2398 1000 JUMP ~[] destination: B98 -> B99  <||@
  Comment 2403 block B104 null  <||@
  Comment 2403 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2403 1050 r11|DWORD = MOVE input: int[-361747|0xfffffffffffa7aed]  <||@
  Comment 2409 1052 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2414 1056 JUMP ~[] destination: B104 -> B123  <||@
  Comment 2419 block B124 null  <||@
  Comment 2419 1270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2419 1272 r11|DWORD = MOVE input: int[-315955|0xfffffffffffb2dcd]  <||@
  Comment 2425 1274 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2430 1276 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2433 1278 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2438 1280 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2443 1282 JUMP ~[] destination: B124 -> B133  <||@
  Comment 2448 block B81 null  <||@
  Comment 2448 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2448 822 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2453 824 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 826 MOV [r15|QWORD + 668] y: -332051 size: DWORD  <||@
  Comment 2469 828 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2476 830 DEOPT info [bci:21, 28]  <||@
  Comment 2476 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2481 [r8:0, r10:0, stack:40, stack:56]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:56|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |stack:40|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |-   <||@
  Comment 2482 block B121 null  <||@
  Comment 2482 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2482 1242 r11|DWORD = MOVE input: int[-359963|0xfffffffffffa81e5]  <||@
  Comment 2488 1244 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2493 1248 JUMP ~[] destination: B121 -> B123  <||@
  Comment 2498 block B125 null  <||@
  Comment 2498 1284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2498 1286 r11|DWORD = MOVE input: int[-313395|0xfffffffffffb37cd]  <||@
  Comment 2504 1288 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2509 1290 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2512 1292 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2517 1294 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2522 1296 JUMP ~[] destination: B125 -> B133  <||@
  Comment 2527 block B122 null  <||@
  Comment 2527 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2527 1252 r11|DWORD = MOVE input: int[-357171|0xfffffffffffa8ccd]  <||@
  Comment 2533 1254 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2538 1256 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2543 1260 JUMP ~[] destination: B122 -> B123  <||@
  Comment 2548 block B83 null  <||@
  Comment 2548 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2548 840 r11|DWORD = MOVE input: int[-350995|0xfffffffffffaa4ed]  <||@
  Comment 2554 842 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2559 846 JUMP ~[] destination: B83 -> B99  <||@
  Comment 2564 block B63 null  <||@
  Comment 2564 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2564 656 r11|DWORD = MOVE input: int[-326451|0xfffffffffffb04cd]  <||@
  Comment 2570 664 JUMP ~[] destination: B63 -> B64  <||@
  Comment 2575 block B13 null  <||@
  Comment 2575 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 144 r11|DWORD = MOVE input: int[-307987|0xfffffffffffb4ced]  <||@
  Comment 2581 146 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2584 148 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2587 150 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2590 152 JUMP ~[] destination: B13 -> B133  <||@
  Comment 2595 block B5 null  <||@
  Comment 2595 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2595 58 r11|DWORD = MOVE input: int[-300307|0xfffffffffffb6aed]  <||@
  Comment 2601 60 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2604 62 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2607 64 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2610 66 JUMP ~[] destination: B5 -> B133  <||@
  Comment 2615 block B55 null  <||@
  Comment 2615 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2615 586 r11|DWORD = MOVE input: int[-326163|0xfffffffffffb05ed]  <||@
  Comment 2621 594 JUMP ~[] destination: B55 -> B64  <||@
  Comment 2626 block B112 null  <||@
  Comment 2626 1128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2626 1130 r11|DWORD = MOVE input: int[-392475|0xfffffffffffa02e5]  <||@
  Comment 2632 1136 JUMP ~[] destination: B112 -> B113  <||@
  Comment 2637 block B138 null  <||@
  Comment 2637 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2637 1450 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2642 1452 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2646 1454 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2649 1456 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2652 1458 MOV [r15|QWORD + 668] y: -292123 size: DWORD  <||@
  Comment 2663 1460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2670 1462 DEOPT info [bci:0]  <||@
  Comment 2670 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2675 [r8:0, r10:0, stack:40]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 0, duringCall: false, rethrow: false]
              |0            |1             |2               |3                  |4  |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2676 block B129 null  <||@
  Comment 2676 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2676 1338 r11|DWORD = MOVE input: int[-303387|0xfffffffffffb5ee5]  <||@
  Comment 2682 1340 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2685 1342 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2688 1344 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2691 1346 JUMP ~[] destination: B129 -> B133  <||@
  Comment 2696 block B131 null  <||@
  Comment 2696 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 1362 r11|DWORD = MOVE input: int[-300083|0xfffffffffffb6bcd]  <||@
  Comment 2702 1364 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2705 1366 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 1368 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2711 1370 JUMP ~[] destination: B131 -> B133  <||@
  Comment 2716 block B34 null  <||@
  Comment 2716 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 362 r11|DWORD = MOVE input: int[-315667|0xfffffffffffb2eed]  <||@
  Comment 2722 364 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2727 366 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2730 368 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2735 370 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2740 372 JUMP ~[] destination: B34 -> B133  <||@
  Comment 2745 block B130 null  <||@
  Comment 2745 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2745 1350 r11|DWORD = MOVE input: int[-302611|0xfffffffffffb61ed]  <||@
  Comment 2751 1352 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2754 1354 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2757 1356 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2760 1358 JUMP ~[] destination: B130 -> B133  <||@
  Comment 2765 block B20 null  <||@
  Comment 2765 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2765 220 r11|DWORD = MOVE input: int[-310547|0xfffffffffffb42ed]  <||@
  Comment 2771 222 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2774 224 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2777 226 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2780 228 JUMP ~[] destination: B20 -> B133  <||@
  Comment 2785 block B27 null  <||@
  Comment 2785 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2785 294 r11|DWORD = MOVE input: int[-313107|0xfffffffffffb38ed]  <||@
  Comment 2791 296 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2796 298 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2799 300 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2804 302 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2809 304 JUMP ~[] destination: B27 -> B133  <||@
  Comment 2814 block B87 null  <||@
  Comment 2814 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2814 874 r11|DWORD = MOVE input: int[-355859|0xfffffffffffa91ed]  <||@
  Comment 2820 876 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2825 880 JUMP ~[] destination: B87 -> B99  <||@
  Comment 2830 block B132 null  <||@
  Comment 2830 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2830 1374 r11|DWORD = MOVE input: int[-299539|0xfffffffffffb6ded]  <||@
  Comment 2836 1376 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2839 1378 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2842 1380 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2845 1382 JUMP ~[] destination: B132 -> B133  <||@
  Comment 2850 block B128 null  <||@
  Comment 2850 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2850 1326 r11|DWORD = MOVE input: int[-305427|0xfffffffffffb56ed]  <||@
  Comment 2856 1328 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2859 1330 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2862 1332 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2865 1334 JUMP ~[] destination: B128 -> B133  <||@
  Comment 2870 block B126 null  <||@
  Comment 2870 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2870 1300 r11|DWORD = MOVE input: int[-310835|0xfffffffffffb41cd]  <||@
  Comment 2876 1304 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2879 1306 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2884 1308 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2889 1310 JUMP ~[] destination: B126 -> B133  <||@
  Comment 2894 block B62 null  <||@
  Comment 2894 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2894 644 r11|DWORD = MOVE input: int[-326675|0xfffffffffffb03ed]  <||@
  Comment 2900 652 JUMP ~[] destination: B62 -> B64  <||@
  Comment 2905 block B137 null  <||@
  Comment 2905 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2905 1442 MOV [r15|QWORD + 668] y: -297243 size: DWORD  <||@
  Comment 2916 1444 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2923 1446 DEOPT info [bci:31]  <||@
  Comment 2923 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2928 [r8:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4         |5 
     locals:  |r8|QWORD[.]  |r10|QWORD[.]  |-  |-  |r9|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |          |    <||@
  Comment 2929 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2929 4  <||@
  Comment 2935 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2935 5  <||@
  HexCodeFile>>> <|@
end_nmethod
