begin_compilation
  name " HotSpotCompilation-4810[java.util.HashMap.clear()]"
  method "HotSpotCompilation-4810[java.util.HashMap.clear()]"
  date 1526687555612
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i296 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i296  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 v300 v301 ?7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i296 v45 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
=== Succesors ===
next: v45 
=== Usages ===
i5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v300 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 v16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 6]
stamp: i32
=== Inputs ===
x: i296 
y: i4 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i296 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a297 
=== Usages ===
=== Predecessor ===
i296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v300 value: i5 stateAfter: - lastLocationAccess: - #next: a297  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 11]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v301 
=== Succesors ===
next: v13 
=== Usages ===
v304 v55 v303 
=== Predecessor ===
v45 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v301 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:863) [bci: 35]
stamp: void
=== Inputs ===
value: a297 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a297  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 16]
stamp: void
trueSuccessorProbability: 0.001459262261856506
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
a297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4564372482269164326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 49]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i298 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i298  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a297 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:863) [bci: 35]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
=== Succesors ===
next: v295 
=== Usages ===
i141 j85 v99 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v303 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v99 v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i298 
y: i15 
=== Succesors ===
=== Usages ===
v293 v135 v176 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i298 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i298 
=== Succesors ===
=== Usages ===
j89 v91 j270 j260 j266 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i298  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j89 j153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j85 
y: j88 
=== Succesors ===
=== Usages ===
v91 v273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j88  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j89 
y: j85 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j89 y: j85  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
i298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v291 #falseSuccessor: v294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B31" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v292 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v290 
=== Succesors ===
next: i299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v290 #next: i299  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i299 v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 20]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v302 
=== Succesors ===
next: v113 
=== Usages ===
v16 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v302 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i299 
y: i4 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i299 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v112 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13587
stableDimension: 0
stamp: i32 [-13587] ⇊00000000ffffcaed ⇈00000000ffffcaed
stampKind: i32
value: int[-13587|0xffffffffffffcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:862) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v302 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v302 value: i15 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v176 
=== Usages ===
j230 
=== Predecessor ===
v54 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a297 
=== Succesors ===
=== Usages ===
j230 j139 j137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a297  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v228 
address: v304 
=== Succesors ===
=== Usages ===
v305 v306 v307 v308 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v228 address: v304  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j260 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j85 
y: j259 
=== Succesors ===
=== Usages ===
v261 v263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 j246 j252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j260 
y: j231 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j260 y: j231  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v177 
falseSuccessor: v178 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v177 #falseSuccessor: v178  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B30" 
    successors "B14" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v181 
values: j231 j258 
=== Succesors ===
=== Usages ===
v308 j258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v181 values: j231 j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v180 
=== Succesors ===
next: v283 
=== Usages ===
j252 v185 v186 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v180 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j252 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v308 
value: v284 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v308 value: v284 stateAfter: - lastLocationAccess: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j252 
y: j257 
=== Succesors ===
=== Usages ===
j246 j252 v263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j252 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j260 
y: j258 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j260 y: j258  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v185 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v181 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v181 #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j246 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v190 
values: j231 j258 
=== Succesors ===
=== Usages ===
v307 j251 j239 v267 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v190 values: j231 j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v189 v191 
=== Succesors ===
next: v209 
=== Usages ===
j246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v189 v191 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j85 
y: j265 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j266 
y: j246 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j266 y: j246  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v207 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v208 #falseSuccessor: v207  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j246 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
value: v287 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v307 value: v287 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j246 
y: j234 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j234  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v201 
values: j251 j246 
=== Succesors ===
=== Usages ===
v306 j245 j232 v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v201 values: j251 j246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v212 
=== Succesors ===
next: v215 
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v212 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j85 
y: j269 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j270 
y: j239 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j270 y: j239  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v214 #falseSuccessor: v213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j239 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j239  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
value: v286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v306 value: v286 stateAfter: - lastLocationAccess: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid j244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j239 
y: j244 
=== Succesors ===
=== Usages ===
j232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j239 y: j244  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
v280 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j232 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v204 
values: j245 j239 
=== Succesors ===
=== Usages ===
v305 v273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v204 values: j245 j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v203 v218 
=== Succesors ===
next: v221 
=== Usages ===
j232 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v203 v218 #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j89 
y: j232 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j89 y: j232  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v220 #falseSuccessor: v219  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j232 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j232  <|@  <|@
f <@~|@floating>@ <|@
tid a285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v305 
value: a285 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v305 value: a285 stateAfter: - lastLocationAccess: - #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v206 v224 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v206 v224 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v133 #falseSuccessor: v134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j137 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j137 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v304 
=== Succesors ===
next: j139 
=== Usages ===
j138 
=== Predecessor ===
v134 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v304 #next: j139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j139 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v304 
=== Succesors ===
next: v150 
=== Usages ===
j145 
=== Predecessor ===
j137 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v304 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i298 
y: i140 
=== Succesors ===
=== Usages ===
i143 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i298 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i141 
y: i142 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i141 y: i142  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
j145 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i143  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j139 
y: j144 
=== Succesors ===
=== Usages ===
j146 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j139 y: j144  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j138 j146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j145 
y: i136 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j145 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j137 
y: i136 
=== Succesors ===
=== Usages ===
j147 j162 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j137 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j146 
y: j138 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j146 y: j138  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j149 v154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j147 
y: j148 
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j147 y: j148  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
j139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607169274934059942
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j152 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v151 
values: j149 j153 
=== Succesors ===
=== Usages ===
j153 v154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: j149 j153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v150 
=== Succesors ===
next: v157 
=== Usages ===
j152 v155 v160 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v150 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j152 
y: j148 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j152 y: j148  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v154 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v154 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v151 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v151 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j152 
y: j88 
=== Succesors ===
=== Usages ===
j152 j158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j152 y: j88  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [4431593472 - 36028801450557439] ⇈00ffffffffffffff
=== Inputs ===
x: j138 
y: j161 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j138 y: j161  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j153 
y: j162 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j153 y: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
kind: boolean
stamp: void
=== Inputs ===
address: j158 
value: i15 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j158 value: i15 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v181 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@704684769
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@704684769]
=== Inputs ===
=== Succesors ===
=== Usages ===
a126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16155
stableDimension: 0
stamp: i32 [-16155] ⇊00000000ffffc0e5 ⇈00000000ffffc0e5
stampKind: i32
value: int[-16155|0xffffffffffffc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B7" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16155 - -13587] ⇊00000000ffffc0e5 ⇈00000000ffffcaed
valueDescription: i32
=== Inputs ===
merge: v121 
values: i123 i129 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i123 i129  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v121 
values: a124 a130 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: a124 a130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v128 
=== Succesors ===
next: v127 
=== Usages ===
i125 a126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v128 #next: v127  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<HashMap.clear()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 7]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 861
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i125 
speculation: a126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i125 speculation: a126  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i296 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i296  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 v300 v301 ?7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i296 v45 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i296 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
=== Succesors ===
next: v45 
=== Usages ===
i5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v300 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 v16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 6]
stamp: i32
=== Inputs ===
x: i296 
y: i4 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i296 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a297 
=== Usages ===
=== Predecessor ===
i296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v300 value: i5 stateAfter: - lastLocationAccess: - #next: a297  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 11]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v301 
=== Succesors ===
next: v13 
=== Usages ===
v304 v55 v303 
=== Predecessor ===
v45 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v301 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:863) [bci: 35]
stamp: void
=== Inputs ===
value: a297 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a297  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 16]
stamp: void
trueSuccessorProbability: 0.001459262261856506
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
a297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d20ad slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001459262261856506 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4564372482269164326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:866) [bci: 49]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i298 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i298  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a297 
=== Succesors ===
=== Usages ===
i298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i298 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:863) [bci: 35]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
=== Succesors ===
next: v295 
=== Usages ===
i141 j85 v99 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v303 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v99 v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i298 
y: i15 
=== Succesors ===
=== Usages ===
v293 v135 v176 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i298 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i298 
=== Succesors ===
=== Usages ===
j89 v91 j270 j260 j266 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i298  <|@  <|@
f <@~|@floating>@ <|@
tid j88 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j89 j153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j85 
y: j88 
=== Succesors ===
=== Usages ===
v91 v273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j88  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j89 
y: j85 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j89 y: j85  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v291 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
i298 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v291 #falseSuccessor: v294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = DEC v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B31" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v292 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v289 v290 
=== Succesors ===
next: i299 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v289 v290 #next: i299  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i299 v54 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i299 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 20]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v302 
=== Succesors ===
next: v113 
=== Usages ===
v16 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v302 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i299 
y: i4 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i299 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
i299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v112 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result int[-13587|0xffffffffffffcaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13587
stableDimension: 0
stamp: i32 [-13587] ⇊00000000ffffcaed ⇈00000000ffffcaed
stampKind: i32
value: int[-13587|0xffffffffffffcaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13587|0xffffffffffffcaed], Object[null]] destination: B7 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:861) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:862) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v302 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v302 value: i15 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v176 
=== Usages ===
j230 
=== Predecessor ===
v54 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a297 
=== Succesors ===
=== Usages ===
j230 j139 j137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a297  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
result v7|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v228 
address: v304 
=== Succesors ===
=== Usages ===
v305 v306 v307 v308 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v228 address: v304  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j260 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j85 
y: j259 
=== Succesors ===
=== Usages ===
v261 v263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 j246 j252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j260 
y: j231 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j260 y: j231  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v177 
falseSuccessor: v178 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v177 #falseSuccessor: v178  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v5|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
result v9|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B30" 
    successors "B14" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j252 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v181 
values: j231 j258 
=== Succesors ===
=== Usages ===
v308 j258 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v181 values: j231 j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v180 
=== Succesors ===
next: v283 
=== Usages ===
j252 v185 v186 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v180 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
result [v7|QWORD[*] + v10|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j252 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v308 
value: v284 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v308 value: v284 stateAfter: - lastLocationAccess: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j252 
y: j257 
=== Succesors ===
=== Usages ===
j246 j252 v263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j252 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j260 
y: j258 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j260 y: j258  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v185 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v7|QWORD[*] + v10|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v181 
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v181 #next: v191  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j246 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v190 
values: j231 j258 
=== Succesors ===
=== Usages ===
v307 j251 j239 v267 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v190 values: j231 j258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v189 v191 
=== Succesors ===
next: v209 
=== Usages ===
j246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v189 v191 #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j85 
y: j265 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j265  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j266 
y: j246 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j266 y: j246  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v207 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v208 #falseSuccessor: v207  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA [v5|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
result [v7|QWORD[*] + v12|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j246 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
result v14|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
value: v287 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v307 value: v287 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j246 
y: j234 
=== Succesors ===
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j246 y: j234  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v7|QWORD[*] + v12|QWORD * 4], input: v14|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v12|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j239 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v201 
values: j251 j246 
=== Succesors ===
=== Usages ===
v306 j245 j232 v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v201 values: j251 j246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v212 
=== Succesors ===
next: v215 
=== Usages ===
j239 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v212 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j85 
y: j269 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j85 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j270 
y: j239 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j270 y: j239  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v214 #falseSuccessor: v213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v5|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
result [v7|QWORD[*] + v16|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j239 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j239  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
result v18|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
value: v286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v306 value: v286 stateAfter: - lastLocationAccess: - #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid j244 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j245 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j239 
y: j244 
=== Succesors ===
=== Usages ===
j232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j239 y: j244  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
v280 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v7|QWORD[*] + v16|QWORD * 4], input: v18|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j232 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v204 
values: j245 j239 
=== Succesors ===
=== Usages ===
v305 v273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v204 values: j245 j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v203 v218 
=== Succesors ===
next: v221 
=== Usages ===
j232 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v203 v218 #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j89 
y: j232 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j89 y: j232  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v220 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v220 #falseSuccessor: v219  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
result [v7|QWORD[*] + v20|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j230 
index: j232 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j230 index: j232  <|@  <|@
f <@~|@floating>@ <|@
tid a285 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: Object
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v305 
value: a285 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v305 value: a285 stateAfter: - lastLocationAccess: - #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[*] + v20|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v193 v206 v224 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v193 v206 v224 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v133 #falseSuccessor: v134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j137 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j137 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v304 
=== Succesors ===
next: j139 
=== Usages ===
j138 
=== Predecessor ===
v134 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v304 #next: j139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j139 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: v304 
=== Succesors ===
next: v150 
=== Usages ===
j145 
=== Predecessor ===
j137 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v304 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i298 
y: i140 
=== Succesors ===
=== Usages ===
i143 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i298 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i141 
y: i142 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i141 y: i142  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i143 
=== Succesors ===
=== Usages ===
j145 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i143  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j139 
y: j144 
=== Succesors ===
=== Usages ===
j146 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j139 y: j144  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j138 j146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
result v26|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j145 
y: i136 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j145 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j137 
y: i136 
=== Succesors ===
=== Usages ===
j147 j162 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j137 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j146 
y: j138 
=== Succesors ===
=== Usages ===
j149 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j146 y: j138  <|@  <|@
f <@~|@floating>@ <|@
tid j148 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j149 v154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j149 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j147 
y: j148 
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j147 y: j148  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
j139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHL v21|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = SHR v25|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = SHR v28|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = SUB (x: v26|QWORD[*], ~y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = INC v29|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[*]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607169274934059942
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j152 <|@
result v31|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v151 
values: j149 j153 
=== Succesors ===
=== Usages ===
j153 v154 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: j149 j153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v150 
=== Succesors ===
next: v157 
=== Usages ===
j152 v155 v160 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v150 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j152 
y: j148 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j152 y: j148  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v154 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v154 #trueSuccessor: v155 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v31|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v151 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v151 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid j153 <|@
result v32|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j152 
y: j88 
=== Succesors ===
=== Usages ===
j152 j158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j152 y: j88  <|@  <|@
f <@~|@floating>@ <|@
tid j161 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
result v34|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [4431593472 - 36028801450557439] ⇈00ffffffffffffff
=== Inputs ===
x: j138 
y: j161 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j138 y: j161  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
result v35|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j153 
y: j162 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j153 y: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
kind: boolean
stamp: void
=== Inputs ===
address: j158 
value: i15 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j158 value: i15 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = DEC v31|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = ADD (x: v27|QWORD[*], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v34|QWORD[*], y: v32|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v35|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[*]] destination: B29 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600417161459493564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v181 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B30 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:864) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@704684769
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@704684769]
=== Inputs ===
=== Succesors ===
=== Usages ===
a126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result int[-16155|0xffffffffffffc0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16155
stableDimension: 0
stamp: i32 [-16155] ⇊00000000ffffc0e5 ⇈00000000ffffc0e5
stampKind: i32
value: int[-16155|0xffffffffffffc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@704684769] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16155|0xffffffffffffc0e5], v36|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B7" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i125 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16155 - -13587] ⇊00000000ffffc0e5 ⇈00000000ffffcaed
valueDescription: i32
=== Inputs ===
merge: v121 
values: i123 i129 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i123 i129  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v121 
values: a124 a130 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: a124 a130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v128 
=== Succesors ===
next: v127 
=== Usages ===
i125 a126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v128 #next: v127  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<HashMap.clear()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap.clear(HashMap.java:860) [bci: 7]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 861
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i125 
speculation: a126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i125 speculation: a126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:861) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d20ad slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001459262261856506 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = DEC v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B31" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v5|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA [v5|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v7|QWORD[*] + v12|QWORD * 4], input: v14|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v12|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = LEA [v5|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v7|QWORD[*] + v16|QWORD * 4], input: v18|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[*] + v20|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHL v21|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v22|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = SHR v25|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = SHR v28|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = SUB (x: v26|QWORD[*], ~y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = INC v29|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[*]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = DEC v31|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = ADD (x: v27|QWORD[*], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v34|QWORD[*], y: v32|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v35|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[*]] destination: B29 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607169274934059942
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v31|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600417161459493564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B30 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B30" 
    successors "B14" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v7|QWORD[*] + v10|QWORD * 4], input: v9|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA [v10|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4564372482269164326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@704684769] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16155|0xffffffffffffc0e5], v36|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B7" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.clear(HashMap.java:861) [bci: 10]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13587|0xffffffffffffcaed], Object[null]] destination: B7 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #42         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #42         // modCount:int
    10: aload_0       
    11: getfield      #20         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #30         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #30         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d20ad slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   12  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.001459262261856506 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B31" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction CMP [rsi|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   56  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rbx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  114  <|@ instruction J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE rbx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r8|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  136  <|@ instruction J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  138  <|@ instruction r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE r8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [rcx|QWORD[*] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction r11|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr  182  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[*] = INC r8|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[*] = MOVE r8|QWORD[*] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  200  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  204  <|@ instruction r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  208  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B29 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607169274934059942
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B9 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600417161459493564
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B30 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B30" 
    successors "B14" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   86  <|@ instruction J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4564372482269164326
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@704684769] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5] // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B7" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:861) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed] // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B7 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #42         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #42         // modCount:int
    10: aload_0       
    11: getfield      #20         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #30         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #30         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d20ad slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   12  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.001459262261856506 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B31" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction CMP [rsi|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B24" "B10" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   56  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B24 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rbx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B18" "B17" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  114  <|@ instruction J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  116  <|@ instruction rbx|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE rbx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B21" "B20" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r8|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  136  <|@ instruction J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  138  <|@ instruction r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE r8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600417161459493564
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [rcx|QWORD[*] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B8" "B23" "B21" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4607169274934059942
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  172  <|@ instruction r11|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  174  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  178  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr  182  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[*] y: 9 size: QWORD <|@ <|@
      nr  186  <|@ instruction r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  188  <|@ instruction r8|QWORD[*] = INC r8|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[*] = MOVE r8|QWORD[*] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  200  <|@ instruction r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  204  <|@ instruction r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  208  <|@ instruction MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B29 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607169274934059942
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction CMP r11|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 4602665675306689446
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4593658476051948454
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B13" 
    successors "B15" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602665675306689446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   86  <|@ instruction J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr   90  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4564372482269164326
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@704684769] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5] // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B7" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  236  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap.clear(HashMap.java:861) [bci: 10]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed] // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B7 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #42         // modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #42         // modCount:int
    10: aload_0       
    11: getfield      #20         // table:java.util.HashMap$Node[]
    14: dup           
    15: astore_1      
    16: ifnull        49
    19: aload_0       
    20: getfield      #30         // size:int
    23: ifle          49
    26: aload_0       
    27: iconst_0      
    28: putfield      #30         // size:int
    31: iconst_0      
    32: istore_2      
    33: iload_2       
    34: aload_1       
    35: arraylength   
    36: if_icmpge     49
    39: aload_1       
    40: iload_2       
    41: aconst_null   
    42: aastore       
    43: iinc          
    46: goto          33
    49: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241041ba010000004403561844895618448b56244585d20f8458010000468b1cd50c000000458bc34d8bc849ffc94d3bc10f87090000004585db0f8548010000837e14010f8c65010000448966144585db0f84640000004a8d0cd510000000498d58f84885db0f8dde00000048c7c700000000498d58fc483bfb0f8f10000000c5f9efc0c5fa7f04b9488d5f04488bfb4d8d40fe493bf80f8f11000000c5f9efc0c4e1f97e04b94c8d4702498bf8493bf90f8f04000000448924b94585db0f846000000041ffcb41c1e3024d63db4e8d04d5100000004d03c349c1e8094e8d14d51000000049c1ea094d2bc249ffc04d8bd8e9210000006666660f1f84000000000049ffcb49b800c02408010000004d03c24d03c34588204983fb010f8c15000000ebde488b6c24104883c418850500000000c5f877c3488b6c24104883c418850500000000c5f877c3c5f9efc048c7c7000000000f1f8000000000660f1f440000c5fe7f04b9488d7f08483bfb7ef2e9fefeffff488b6c24104883c418850500000000c5f877c349baaddeaddeaddeadde4d8bda41bae5c0ffff4589979c0200004d899fa8020000e8000000009049bb000000000000000041baedcaffffebdae80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d20ad slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 54 10 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 58 12 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD  <||@
  Comment 62 14 r10|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 66 16 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 69 18 BRANCH trueDestinationProbability: 0.001459262261856506 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 75 block B2 null  <||@
  Comment 75 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 83 24 r8|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 86 26 r9|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 92 28 CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 95 30 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 101 block B4 null  <||@
  Comment 101 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 34 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 104 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B31  <||@
  Comment 110 block B6 null  <||@
  Comment 110 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 48 CMP [rsi|QWORD[.] + 20] y: 1 size: DWORD  <||@
  Comment 114 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 120 block B8 null  <||@
  Comment 120 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 120 54 MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 124 56 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 127 58 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B24 falseDestination: B8 -> B10  <||@
  Comment 133 block B10 null  <||@
  Comment 133 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 62 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 141 64 rbx|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 145 66 TEST (x: rbx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 148 68 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 154 block B11 null  <||@
  Comment 154 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 -1 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 161 72 JUMP ~[] destination: B11 -> B15  <||@
  Comment 161 block B15 null  <||@
  Comment 161 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 104 rbx|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 165 106 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 168 108 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 174 block B17 null  <||@
  Comment 174 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 112 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 178 114 J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 183 116 rbx|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 187 -1 rdi|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 190 118 JUMP ~[] destination: B17 -> B18  <||@
  Comment 190 block B18 null  <||@
  Comment 190 124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 190 126 r8|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 194 128 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 197 130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 203 block B20 null  <||@
  Comment 203 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 134 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 207 136 J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 213 138 r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 217 -1 rdi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 220 140 JUMP ~[] destination: B20 -> B21  <||@
  Comment 220 block B21 null  <||@
  Comment 220 146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 220 148 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 223 150 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 229 block B23 null  <||@
  Comment 229 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 154 MOV (x: [rcx|QWORD[*] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 233 156 JUMP ~[] destination: B23 -> B24  <||@
  Comment 233 block B24 null  <||@
  Comment 233 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 164 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 236 166 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 242 block B26 null  <||@
  Comment 242 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 170 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 245 172 r11|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 249 174 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 252 176 r8|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 260 178 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 263 180 r8|QWORD[*] = SHR r8|QWORD[*] y: 9 size: QWORD  <||@
  Comment 267 182 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 275 184 r10|QWORD[*] = SHR r10|QWORD[*] y: 9 size: QWORD  <||@
  Comment 279 186 r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r10|QWORD[*]) size: QWORD  <||@
  Comment 282 188 r8|QWORD[*] = INC r8|QWORD[*] size: QWORD  <||@
  Comment 285 -1 r11|QWORD[*] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 288 190 JUMP ~[] destination: B26 -> B27  <||@
  Comment 293 block B29 loop 1 depth 1 header:151|LoopBegin  <||@
  Comment 293 198 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 304 200 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 307 202 r8|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 317 204 r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 320 206 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 323 208 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 326 210 JUMP ~[] destination: B29 -> B27  <||@
  Comment 326 block B27 loop 1 depth 1 header:151|LoopBegin  <||@
  Comment 326 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 326 194 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 330 196 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 338 block B25 null  <||@
  Comment 338 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 214 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 347 12  <||@
  Comment 357 block B28 null  <||@
  Comment 357 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 218 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 366 12  <||@
  Comment 376 block B12 null  <||@
  Comment 376 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 80 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 380 -1 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 387 82 JUMP ~[] destination: B12 -> B13  <||@
  Comment 387 block B13 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 387 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 86 J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 405 88 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 409 90 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 412 92 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13  <||@
  Comment 419 block B1 null  <||@
  Comment 419 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 222 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 428 12  <||@
  Comment 438 block B31 null  <||@
  Comment 438 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 226 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@704684769]  <||@
  Comment 438 {Object[d.a@704684769]}  <||@
  Comment 448 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 451 -1 r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5]  <||@
  Comment 457 228 JUMP ~[] destination: B31 -> B32  <||@
  Comment 457 block B32 null  <||@
  Comment 457 234 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 457 236 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 464 238 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 471 240 DEOPT info [bci:10]  <||@
  Comment 471 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 476 [rsi:0]at java.util.HashMap.clear(HashMap.java:861) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 477 block B7 null  <||@
  Comment 477 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 -1 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 487 -1 r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed]  <||@
  Comment 493 232 JUMP ~[] destination: B7 -> B32  <||@
  Comment 495 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 495 4  <||@
  Comment 501 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 501 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4810[java.util.HashMap.clear()]"
  method "HotSpotCompilation-4810[java.util.HashMap.clear()]"
  date 1526687555760
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11937b260 448b560849c1e203493bc20f85ef9b68ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241041ba010000004403561844895618448b56244585d20f8458010000468b1cd50c000000458bc34d8bc849ffc94d3bc10f87090000004585db0f8548010000837e14010f8c65010000448966144585db0f84640000004a8d0cd510000000498d58f84885db0f8dde00000048c7c700000000498d58fc483bfb0f8f10000000c5f9efc0c5fa7f04b9488d5f04488bfb4d8d40fe493bf80f8f11000000c5f9efc0c4e1f97e04b94c8d4702498bf8493bf90f8f04000000448924b94585db0f846000000041ffcb41c1e3024d63db4e8d04d5100000004d03c349c1e8094e8d14d51000000049c1ea094d2bc249ffc04d8bd8e9210000006666660f1f84000000000049ffcb49b800c02408010000004d03c24d03c34588204983fb010f8c15000000ebde488b6c24104883c4188505450cb6f0c5f877c3488b6c24104883c4188505320cb6f0c5f877c3c5f9efc048c7c7000000000f1f8000000000660f1f440000c5fe7f04b9488d7f08483bfb7ef2e9fefeffff488b6c24104883c4188505f40bb6f0c5f877c349ba08a3056b070000004d8bda41bae5c0ffff4589979c0200004d899fa8020000e8c2b168ff9049bb000000000000000041baedcaffffebdae84c43a8ff90e8a6b068ff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d20ad slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 54 10 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 58 12 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD  <||@
  Comment 62 14 r10|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 66 16 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 69 18 BRANCH trueDestinationProbability: 0.001459262261856506 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 75 block B2 null  <||@
  Comment 75 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 83 24 r8|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 86 26 r9|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 92 28 CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 95 30 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 101 block B4 null  <||@
  Comment 101 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 34 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 104 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B31  <||@
  Comment 110 block B6 null  <||@
  Comment 110 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 48 CMP [rsi|QWORD[.] + 20] y: 1 size: DWORD  <||@
  Comment 114 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 120 block B8 null  <||@
  Comment 120 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 120 54 MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 124 56 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 127 58 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B8 -> B24 falseDestination: B8 -> B10  <||@
  Comment 133 block B10 null  <||@
  Comment 133 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 62 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 141 64 rbx|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 145 66 TEST (x: rbx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 148 68 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 154 block B11 null  <||@
  Comment 154 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 -1 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 161 72 JUMP ~[] destination: B11 -> B15  <||@
  Comment 161 block B15 null  <||@
  Comment 161 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 161 104 rbx|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 165 106 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 168 108 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 174 block B17 null  <||@
  Comment 174 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 112 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 178 114 J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 183 116 rbx|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 187 -1 rdi|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 190 118 JUMP ~[] destination: B17 -> B18  <||@
  Comment 190 block B18 null  <||@
  Comment 190 124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 190 126 r8|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 194 128 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 197 130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 203 block B20 null  <||@
  Comment 203 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 134 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 207 136 J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 213 138 r8|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 217 -1 rdi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 220 140 JUMP ~[] destination: B20 -> B21  <||@
  Comment 220 block B21 null  <||@
  Comment 220 146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 220 148 CMP (x: rdi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 223 150 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 229 block B23 null  <||@
  Comment 229 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 154 MOV (x: [rcx|QWORD[*] + rdi|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 233 156 JUMP ~[] destination: B23 -> B24  <||@
  Comment 233 block B24 null  <||@
  Comment 233 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 164 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 236 166 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26  <||@
  Comment 242 block B26 null  <||@
  Comment 242 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 170 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 245 172 r11|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 249 174 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 252 176 r8|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 260 178 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 263 180 r8|QWORD[*] = SHR r8|QWORD[*] y: 9 size: QWORD  <||@
  Comment 267 182 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 275 184 r10|QWORD[*] = SHR r10|QWORD[*] y: 9 size: QWORD  <||@
  Comment 279 186 r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r10|QWORD[*]) size: QWORD  <||@
  Comment 282 188 r8|QWORD[*] = INC r8|QWORD[*] size: QWORD  <||@
  Comment 285 -1 r11|QWORD[*] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 288 190 JUMP ~[] destination: B26 -> B27  <||@
  Comment 293 block B29 loop 1 depth 1 header:151|LoopBegin  <||@
  Comment 293 198 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 304 200 r11|QWORD[*] = DEC r11|QWORD[*] size: QWORD  <||@
  Comment 307 202 r8|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 317 204 r8|QWORD[*] = ADD (x: r10|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 320 206 r8|QWORD[*] = ADD (x: r8|QWORD[*], y: r11|QWORD[*]) size: QWORD  <||@
  Comment 323 208 MOVB (x: [r8|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 326 210 JUMP ~[] destination: B29 -> B27  <||@
  Comment 326 block B27 loop 1 depth 1 header:151|LoopBegin  <||@
  Comment 326 192 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 326 194 CMP r11|QWORD[*] y: 1 size: QWORD  <||@
  Comment 330 196 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 338 block B25 null  <||@
  Comment 338 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 338 214 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 347 12  <||@
  Comment 357 block B28 null  <||@
  Comment 357 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 218 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 366 12  <||@
  Comment 376 block B12 null  <||@
  Comment 376 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 80 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 380 -1 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 387 82 JUMP ~[] destination: B12 -> B13  <||@
  Comment 387 block B13 loop 0 depth 1 header:181|LoopBegin  <||@
  Comment 387 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 400 86 J (address: [rcx|QWORD[*] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 405 88 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 409 90 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 412 92 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13  <||@
  Comment 419 block B1 null  <||@
  Comment 419 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 222 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 428 12  <||@
  Comment 438 block B31 null  <||@
  Comment 438 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 438 226 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@704684769]  <||@
  Comment 438 {Object[d.a@704684769]}  <||@
  Comment 448 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 451 -1 r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5]  <||@
  Comment 457 228 JUMP ~[] destination: B31 -> B32  <||@
  Comment 457 block B32 null  <||@
  Comment 457 234 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 457 236 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 464 238 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 471 240 DEOPT info [bci:10]  <||@
  Comment 471 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 476 [rsi:0]at java.util.HashMap.clear(HashMap.java:861) [bci: 10, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 477 block B7 null  <||@
  Comment 477 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 -1 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 487 -1 r10|DWORD = MOVE input: int[-13587|0xffffffffffffcaed]  <||@
  Comment 493 232 JUMP ~[] destination: B7 -> B32  <||@
  Comment 495 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 495 4  <||@
  Comment 501 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 501 5  <||@
  HexCodeFile>>> <|@
end_nmethod
